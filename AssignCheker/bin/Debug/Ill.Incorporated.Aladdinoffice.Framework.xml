<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ill.Incorporated.Aladdinoffice.Framework</name>
    </assembly>
    <members>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.AlpahbetType">
            <summary>
            入力可能なアルファベットの種類を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.AlpahbetType.All">
            <summary>
            すべて入力可
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.AlpahbetType.Small">
            <summary>
            小文字のみ入力可
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.AlpahbetType.Large">
            <summary>
            大文字のみ入力可
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.AlphabetChar">
            <summary>
            項目属性で使用可能なアルファベットの種類を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.AlphabetChar.NotUse">
            <summary>
            使用不可
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.AlphabetChar.Small">
            <summary>
            小文字のみ使用可
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.AlphabetChar.Large">
            <summary>
            大文字のみ使用可
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.AlphabetChar.All">
            <summary>
            すべて使用可
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseDateType">
            <summary>
            日付の既定値の算出基準を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseDateType.Default">
            <summary>
            空白
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseDateType.Today">
            <summary>
            当日
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseDateType.MonthFirstDay">
            <summary>
            当月 月初
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseDateType.MonthLastDay">
            <summary>
            当月 月末
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseDateType.TermBeginningMonthFirstDay">
            <summary>
            期首月 月初(カレンダー)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseDateType.TermEndMonthLastDay">
            <summary>
            期末月 月末(カレンダー)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseDateType.TermFirstDay">
            <summary>
            期首 開始日
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseDateType.TermLastDay">
            <summary>
            期末 終了日
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType">
            <summary>
            年月の既定値の算出基準を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType.Default">
            <summary>
            空白
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType.Month">
            <summary>
            当月
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType.TermBeginningFirstMonth">
            <summary>
            期首月
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType.TermEndLastMonth">
            <summary>
            期末月
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType.TermMonth">
            <summary>
            当月(自社締基準)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType.TermFirstMonth">
            <summary>
            期首月(自社締基準)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType.TermLastMonth">
            <summary>
            期末月(自社締基準)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType.ControlMonth">
            <summary>
            当月(実績管理基準)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType.ControlFirstMonth">
            <summary>
            期首月(実績管理基準)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType.ControlLastMonth">
            <summary>
            期末月(実績管理基準)
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ConditionConnectType">
            <summary>
            条件接続子を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ConditionConnectType.NONE">
            <summary>
            なし
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ConditionConnectType.AND">
            <summary>
            AND
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ConditionConnectType.OR">
            <summary>
            OR
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DateFormat">
            <summary>
            日付の文字列フォーマットの種類を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DateFormat.Default">
            <summary>
            フォーマットなし
            </summary>
            <example>
            yyyyMMdd
            </example>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DateFormat.Slash">
            <summary>
            スラッシュ表示
            </summary>
            <example>
            yyyy/MM/dd
            </example>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DateFormat.Japan">
            <summary>
            日本語表示
            </summary>
            <example>
            yyyy年MM月dd日
            </example>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DecimalDisplayType">
            <summary>
            小数部分の表示方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DecimalDisplayType.Normal">
            <summary>
            通常
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DecimalDisplayType.ZeroSuppress">
            <summary>
            0削除
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DecimalDisplayTypeExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DecimalDisplayType"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DecimalDisplayTypeExtensions.ReplaceFormat(Ill.Incorporated.Aladdinoffice.Framework.Attributes.DecimalDisplayType,System.String)">
            <summary>
            対象の小数部分表示方法に従って、指定したフォーマット文字列を変換します。
            </summary>
            <param name="type">小数部分の表示方法</param>
            <param name="format">変換するフォーマット用文字列</param>
            <returns>変換されたフォーマット用文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DecimalDisplayTypeExtensions.ZeroSuppressEvaluator(System.Text.RegularExpressions.Match)">
            <summary>
            正規表現で一致した文字列に含まれる 0 を # に置換します。
            </summary>
            <param name="match">正規表現で一致した文字列</param>
            <returns>0 を # に置換した文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DecimalDisplayTypeExtensions.GetAligedLength(Ill.Incorporated.Aladdinoffice.Framework.Attributes.DecimalDisplayType,System.String,System.String)">
            <summary>
            対象の小数部分表示方法に従って、指定した文字列をフォーマットした際に小数点位置を調整するために必要な桁数を取得します。
            </summary>
            <param name="type">小数部分の表示方法</param>
            <param name="format">フォーマット用文字列</param>
            <param name="value">フォーマットする文字列</param>
            <returns>小数点位置を調整するために必要な桁数</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayLengthType">
            <summary>
            表示桁数の算出方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayLengthType.None">
            <summary>
            既定の算出方法に従う
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayLengthType.HeaderText">
            <summary>
            見出に従う
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayLengthType.DisplayData">
            <summary>
            表示データに従う
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayLengthType.DisplayDataWithHeaderText">
            <summary>
            表示データと見出を考慮する
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayLengthType.ItemAttributeLength">
            <summary>
            項目属性の長さに従う
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayLengthType.ItemAttributeLengthWithHeaderText">
            <summary>
            項目属性の長さと見出を考慮する
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayListType">
            <summary>
            区分値の表示方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayListType.Value">
            <summary>
            値のみ表示
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayListType.Name">
            <summary>
            名前のみ表示
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayListType.ValueAndName">
            <summary>
            値と名前を表示
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.FindAttribute">
            <summary>
            検索画面を指定するクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IFindAttribute">
            <summary>
            検索画面を指定、起動するためのインターフェースです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs">
            <summary>
            プログラム(画面)メインスレッドの起動引数を示すインターフェースです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs.FormCheck">
            <summary>
            起動対象のプログラム(画面)のFORMCHK文字列を取得します。
            </summary>
            <value>起動対象のプログラム(画面)のFORMCHK文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs.ExecName">
            <summary>
            起動対象のプログラム(画面)の実行ファイル名を取得します。<br />
            通常、拡張子は含みません。
            </summary>
            <value>起動対象のプログラム(画面)の実行ファイル名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs.Params">
            <summary>
            起動対象のプログラム(画面)の起動引数を取得します。
            </summary>
            <value>起動対象のプログラム(画面)の起動引数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs.Tag">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs.Params"/> とは別に受け渡す必要のある情報を取得、設定します。
            </summary>
            <value>受け渡す必要のある情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IFindAttribute.FindName">
            <summary>
            対象の検索画面名を取得します。
            </summary>
            <value>対象の検索画面名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IFindAttribute.MultiSelectPriority">
            <summary>
            対象の検索画面で、検索結果の複数取得を優先するかどうかを取得します。
            </summary>
            <value>検索結果の複数取得を優先する場合は true。優先しない場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IFindAttribute.CanIndividualFind">
            <summary>
            対象の検索画面で、個別検索が可能かどうかを取得します。
            </summary>
            <value>個別検索が可能な場合は true。不可能な場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.FindAttribute.FindName">
            <inheritdoc/>
            <summary>
            対象の検索画面名を取得、設定します。
            </summary>
            <remarks>
            検索画面ファイル.検索画面名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.FindAttribute.ExecName">
            <inheritdoc/>
            <summary>
            起動対象の画面の実行ファイル名を取得、設定します。<br />
            通常、拡張子は含みません。
            </summary>
            <remarks>
            検索画面ファイル.EXE名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.FindAttribute.Params">
            <inheritdoc/>
            <summary>
            起動対象の画面の起動引数を取得、設定します。
            </summary>
            <remarks>
            検索画面ファイル.引数1～3 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.FindAttribute.Tag">
            <inheritdoc/>
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.FindAttribute.Params"/> とは別に受け渡す必要のある情報を取得、設定します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.FindAttribute.MultiSelectPriority">
            <inheritdoc/>
            <summary>
            対象の検索画面で、検索結果の複数取得を優先するかどうかを取得、設定します。
            </summary>
            <remarks>
            検索画面ファイル.複数検索優先方法 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.FindAttribute.Ill#Incorporated#Aladdinoffice#Framework#Threading#Interfaces#ICreatingArgs#FormCheck">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.FindAttribute.CanIndividualFind">
            <inheritdoc/>
            <summary>
            対象の検索画面で、個別検索が可能かどうかを取得、設定します。
            </summary>
            <remarks>
            検索画面ファイル.個別検索利用区分 に相当します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.GetNameAttribute">
            <summary>
            マスタ名称の取得方法を指定するクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute">
            <summary>
            マスタ名称の取得方法を指定するためのインターフェースです。
            </summary>
            <remarks>
            通常は、<br/>
            ・<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute.TableName"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute.KeyName"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute.ColumnName"/> の組み合わせ<br/>
            または、<br/>
            ・<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute.StoredFunction"/><br/>
            を使用して取得します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute.GetDisplayedName">
            <summary>
            この名称取得方法の名前を取得します。
            </summary>
            <value>名称取得方法の名前</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute.NoSelectedError">
            <summary>
            名称取得できなかった際にエラーにしないかどうかを取得します。
            </summary>
            <value>名称取得できなかった際にエラーにしない場合は true。する場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute.TableName">
            <summary>
            名称の取得元テーブル名を取得します。
            </summary>
            <value>名称の取得元テーブル名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute.KeyName">
            <summary>
            名称を取得するためのキーとなる列名を取得します。
            </summary>
            <value>名称を取得するためのキーとなる列名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute.ColumnName">
            <summary>
            取得する名称の列名を取得します。
            </summary>
            <value>取得する名称の列名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute.WhereQuery">
            <summary>
            名称を取得する際のクエリのWHERE句に加える固定の条件文を取得します。
            </summary>
            <value>名称を取得する際のクエリのWHERE句に加える固定の条件文</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute.StoredFunction">
            <summary>
            名称を取得する際に使用するストアドファンクション名を取得します。
            </summary>
            <value>名称を取得する際に使用するストアドファンクション名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.GetNameAttribute.GetDisplayedName">
            <inheritdoc/>
            <summary>
            名称表示項目名を取得、設定します。
            </summary>
            <remarks>
            名称表示項目ファイル.名称表示項目名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.GetNameAttribute.NoSelectedError">
            <inheritdoc/>
            <summary>
            名称取得できなかった際にエラーにしないかどうかを取得、設定します。
            </summary>
            <remarks>
            名称表示項目ファイル.名称取得エラー区分 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.GetNameAttribute.TableName">
            <inheritdoc/>
            <summary>
            名称の取得元テーブル名を取得、設定します。
            </summary>
            <remarks>
            名称表示項目ファイル.テーブル名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.GetNameAttribute.KeyName">
            <inheritdoc/>
            <summary>
            名称を取得するためのキーとなる列名を取得、設定します。
            </summary>
            <remarks>
            名称表示項目ファイル.項目名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.GetNameAttribute.ColumnName">
            <inheritdoc/>
            <summary>
            取得する名称の列名を取得、設定します。
            </summary>
            <remarks>
            名称表示項目ファイル.名称項目名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.GetNameAttribute.WhereQuery">
            <inheritdoc/>
            <summary>
            名称を取得する際のクエリのWHERE句に加える固定の条件文を取得、設定します。
            </summary>
            <remarks>
            名称表示項目ファイル.固定条件 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.GetNameAttribute.StoredFunction">
            <inheritdoc/>
            <summary>
            名称を取得する際に使用するストアドファンクション名を取得、設定します。
            </summary>
            <remarks>
            名称表示項目ファイル.取得SF名 に相当します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute">
            <summary>
            項目属性を示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.CheckCharacter(System.Char)">
            <summary>
            この項目で指定した文字が使用可能かどうかを返します。
            </summary>
            <param name="value">入力文字</param>
            <returns>使用可能な場合は true。不可能な場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.CheckLength(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            入力後の文字列が、入力可能な最大桁数に収まっているかどうかを返します。
            </summary>
            <param name="old">現在入力されている文字列</param>
            <param name="start">選択されている開始位置</param>
            <param name="length">選択されている文字数</param>
            <param name="new">入力される文字列</param>
            <returns>最大桁数に収まっている場合は true。超過している場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Format(System.String)">
            <summary>
            指定した入力文字をフォーマットして返します。
            </summary>
            <param name="value">入力文字</param>
            <returns>フォーマットされた文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.CheckFormatted(System.String)">
            <summary>
            指定した文字列がこの項目の値として適切かどうかを検証します。
            </summary>
            <param name="text">検証する文字列(通常は、フォーマット後の文字列を指定します。)</param>
            <returns>不適切な場合はその内容を示すエラーの一覧。適切な場合は空。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.AlpahbetType">
            <summary>
            この項目で入力可能なアルファベットの種類を取得、設定します。
            </summary>
            <value>入力可能なアルファベットの種類</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Label">
            <summary>
            この項目のラベル文字列を取得、設定します。
            </summary>
            <value>ラベル文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Find">
            <summary>
            この項目の検索を行うための検索画面情報を取得、設定します。
            </summary>
            <value>検索画面情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Jump">
            <summary>
            この項目の値を引数として起動できるジャンプ先画面情報を取得、設定します。
            </summary>
            <value>ジャンプ先画面情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.ItemType">
            <summary>
            この項目の型区分を取得、設定します。
            </summary>
            <value>型区分</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.InputMode">
            <summary>
            この項目の入力方法の初期状態を取得、設定します。
            </summary>
            <value>入力方法の初期状態</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.DisplayName">
            <summary>
            この項目に対応するマスタ名称の取得方法を取得、設定します。
            </summary>
            <value>マスタ名称取得方法</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.List">
            <summary>
            この項目に対応する区分項目を取得、設定します。
            </summary>
            <value>区分項目</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.UseMinus">
            <summary>
            この項目でマイナス記号を使用できるかどうかを取得、設定します。
            </summary>
            <value>マイナス記号が使用可能な場合は true。不可能な場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.MaxLength">
            <summary>
            入力、及び、表示時の最大桁数(バイト数)を取得、設定します。
            </summary>
            <value>最大桁数(バイト数)</value>
            <remarks>
            半角1文字を1桁とし、マルチバイト文字1文字は2桁として計算します。<br />
            例えば、全角8文字の場合は16桁として計算されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.MultiLine">
            <summary>
            複数行入力を可能にするかどうかを取得、設定します。
            </summary>
            <value>複数行入力が可能な場合は true。不可能な場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Necessary">
            <summary>
            この項目の入力が必須かどうかを取得、設定します。
            </summary>
            <value>入力が必須な場合は true。任意の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Perless">
            <summary>
            この項目に対応するPerless属性を取得、設定します。
            </summary>
            <value>Perless属性</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.UseFuzzy">
            <summary>
            この項目で曖昧検索が有効かどうかを取得、設定します。
            </summary>
            <value>曖昧検索が有効な場合は true。無効な場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.DefaultValue">
            <summary>
            この項目の既定値を取得、設定します。
            </summary>
            <value>既定値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.UIConverter">
            <summary>
            UI側に表示する値とデータ(ロジック)側で保持する値の相互変換を行うための既定の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> を取得、設定します。
            </summary>
            <value>UI側の表示する値とデータ(ロジック)側で保持する値の相互変換を行うための <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Visible">
            <summary>
            この項目を既定で画面上に表示するかどうかを取得、設定します。
            </summary>
            <value>画面上に表示する場合は true。しない場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.WhereVisible">
            <summary>
            この項目を既定でカスタム抽出条件として使用可能かどうかを取得、設定します。
            </summary>
            <value>カスタム抽出条件として使用可能な場合は true。不可能な場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttributeExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttributeExtensions.IsDefaultConverter(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute)">
            <summary>
            対象の項目属性の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.UIConverter"/> にシステムで既定の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> が設定されているかどうかを返します。
            </summary>
            <param name="attr">項目属性</param>
            <returns>システムで既定の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> が設定されている場合は true。他の場合は false。</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IJumpAttribute">
            <summary>
            ジャンプ先画面を指定するためのインターフェースです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IJumpAttribute.JumpName">
            <summary>
            ジャンプ先画面名を取得します。
            </summary>
            <value>ジャンプ先画面名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IJumpAttribute.FormCheck">
            <summary>
            ジャンプ先画面のFORMCHK文字列を取得します。
            </summary>
            <value>ジャンプ先画面のFORMCHK文字列</value>
            <remarks>
            通常は <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.JumpType.Default"/> の場合に使用されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IJumpAttribute.Label">
            <summary>
            ジャンプ先画面を表すラベルを取得します。
            </summary>
            <value>ジャンプ先画面を表すラベル</value>
            <remarks>
            通常は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IJumpAttribute.CheckQuery"/> で指定したクエリで取得されますが、それとは別に明示的に指定する必要がある場合に使用されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IJumpAttribute.JumpType">
            <summary>
            ジャンプ方法を取得します。
            </summary>
            <value>ジャンプ方法</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IJumpAttribute.JumpArgs">
            <summary>
            ジャンプ先画面に渡す引数の名前を取得します。
            </summary>
            <value>ジャンプ先画面に渡す引数の名前</value>
            <remarks>
            基本的には、以下のようになります。<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.JumpType.Default"/> の場合、
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs.Params"/> の Key に使用されます。<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.JumpType.Perless"/> の場合、
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IPerlessAttribute.PerlessType"/> に対応します。<br/>
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IJumpAttribute.CheckQuery">
            <summary>
            ジャンプの可否等を確認するための確認用クエリ文字列を取得します。
            </summary>
            <value>ジャンプの可否等を確認するための確認用クエリ文字列</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListAttribute">
            <summary>
            区分項目を示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListAttribute.GetList">
            <summary>
            使用可能な区分値の一覧を取得します。
            </summary>
            <returns>使用可能な区分値の一覧</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListAttribute.ToFilter">
            <summary>
            入力文字がこの区分項目の値として適切かどうかを判定するためのフィルタ文字列を取得します。
            </summary>
            <returns>フィルタ文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListAttribute.ListName">
            <summary>
            この区分項目の名前を取得します。
            </summary>
            <value>名前</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListAttribute.ListType">
            <summary>
            区分値の入力方法を取得します。
            </summary>
            <value>区分値の入力方法</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListAttribute.InputType">
            <summary>
            入力できる区分値の種類を取得、設定します。
            </summary>
            <value>入力できる区分値の種類</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListAttribute.Query">
            <summary>
            コンボボックス用に要素を取得するためのクエリを取得します。
            </summary>
            <value>要素を取得するためのクエリ</value>
            <remarks>
            将来的な拡張のための予約項目です。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListValueAttribute">
            <summary>
            区分項目の区分値を示すインターフェースです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListValueAttribute.No">
            <summary>
            区分項目内での順番を示す番号を取得します。
            </summary>
            <value>区分項目内での順番を示す番号</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListValueAttribute.Label">
            <summary>
            対応する区分名(ラベル)を取得します。
            </summary>
            <value>区分名(ラベル)</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListValueAttribute.Tag">
            <summary>
            対応する付箋情報を取得します。
            </summary>
            <value>付箋情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListValueAttribute.DisplayValue">
            <summary>
            区分値の画面上での表示文字列を取得します。
            </summary>
            <value>表示文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListValueAttribute.Value">
            <summary>
            区分値を取得します。
            </summary>
            <value>区分値</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IPerlessAttribute">
            <summary>
            Perless属性を示すインターフェースです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IPerlessAttribute.PerlessType">
            <summary>
            Perless区分を取得します。
            </summary>
            <value>Perless区分</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IPerlessAttribute.PerlessName">
            <summary>
            Perless名を取得します。
            </summary>
            <value>Perless名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IPerlessAttribute.TableName">
            <summary>
            Perlessフォルダ名として使用する値を取得する元となるテーブル名を取得します。
            </summary>
            <value>Perlessフォルダ名として使用する値を取得する元となるテーブル名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IPerlessAttribute.ColumnName">
            <summary>
            Perlessフォルダ名として使用する値を取得するためのキーとなる列名を取得します。
            </summary>
            <value>Perlessフォルダ名として使用する値を取得するのキーとなる列名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IPerlessAttribute.NameColumn">
            <summary>
            Perlessフォルダ名として使用する値を取得するための列名を取得します。
            </summary>
            <value>Perlessフォルダ名として使用する値を取得するための列名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IPerlessAttribute.Folder">
            <summary>
            Perlessフォルダの作成先サブディレクトリパスを取得します。
            </summary>
            <value>Perlessフォルダの作成先サブディレクトリパス(相対パス)</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute">
            <summary>
            項目属性を示すクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.maxLength">
            <summary>
            入力、及び、表示時の最大桁数(バイト数)です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.filter">
            <summary>
            使用可能な文字を判定するためのフィルタ文字列です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Checker">
            <summary>
            入力文字のチェック用オブジェクトです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.CheckCharacter(System.Char)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.CheckLength(System.String,System.Int32,System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Format(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.CheckFormatted(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.GetCheckFormattedChar(System.String)">
            <summary>
            指定した文字列から、検証対象の文字を1つずつ取得して返します。
            </summary>
            <param name="text">検証する文字列(通常は、フォーマット後の文字列を指定します。)</param>
            <returns>検証対象の文字の一覧</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Clone">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.AlpahbetType">
            <inheritdoc/>
            <remarks>
            項目属性ファイル.英字使用区分 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Label">
            <inheritdoc/>
            <remarks>
            項目属性ファイル.項目名ラベルフォーマット に相当します。<br />
            項目名ファイルの値を使用してフォーマットした値を設定します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Find">
            <inheritdoc/>
            <remarks>
            項目属性ファイル.検索画面名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Jump">
            <inheritdoc/>
            <remarks>
            項目属性ファイル.ジャンプ画面名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.ItemType">
            <inheritdoc/>
            <remarks>
            項目属性ファイル.型区分 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.MaxLength">
            <inheritdoc/>
            <remarks>
            通常は、項目属性ファイル.画面項目桁数 に相当します。<br/>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Number"/>、及び、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Rate"/> については、
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DigitInteger"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DigitDecimal"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseComma"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseMinus"/> の設定に従って算出されます。<br/>
            以下の項目については、固定値になります。<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.JanCode"/><br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Date"/><br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Date99"/><br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.YearMonth"/><br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Time"/><br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Year"/><br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.PostCode"/><br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Tel"/><br/>
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.MultiLine">
            <inheritdoc/>
            <remarks>
            項目属性ファイル.改行使用区分 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Necessary">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DigitInteger">
            <summary>
            この項目の整数桁数を取得、設定します。
            </summary>
            <value>整数桁数</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.ItemType"/> が <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Number"/>、及び、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Rate"/> の場合に有効になります。<br/>
            項目属性ファイル.整数桁、もしくは、項目属性ファイル.整数桁項目名で指定されるシステム設定値 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DigitDecimal">
            <summary>
            この項目の小数桁数を取得、設定します。
            </summary>
            <value>小数桁数</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.ItemType"/> が <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Number"/>、及び、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Rate"/> の場合に有効になります。<br/>
            項目属性ファイル.小数桁、もしくは、項目属性ファイル.小数桁項目名で指定されるシステム設定値 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DecimalDisplayType">
            <summary>
            小数部分の表示方法を取得、設定します。
            </summary>
            <value>小数部分の表示方法</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.ItemType"/> が <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Number"/>、及び、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Rate"/> の場合に有効になります。<br/>
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseMinus">
            <inheritdoc/>
            <remarks>
            項目属性ファイル.マイナス使用区分 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Filter">
            <summary>
            この項目で使用可能な文字を判定するためのフィルタ文字列を正規表現として取得、設定します。
            </summary>
            <value>使用可能な文字を判定するためのフィルタ文字列(正規表現)</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.ItemType"/> が <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.String"/> の場合は、項目属性ファイル.指定記号 に相当します。<br/>
            それ以外は特定の文字列を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.InputMode">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseComma">
            <summary>
            この項目のでカンマ編集を行うかどうかを取得、設定します。
            </summary>
            <value>カンマ編集を行う場合は true。行わない場合は false。</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.ItemType"/> が <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Number"/>、及び、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Rate"/> の場合に有効になります。<br/>
            項目属性ファイル.カンマ編集区分 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DisplayName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.List">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Perless">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseFuzzy">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DefaultValue">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseSurrogate">
            <summary>
            サロゲートペア文字を使用可能かどうかを取得、設定します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UIConverter">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Visible">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.WhereVisible">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDefaultUIConverter">
            <summary>
            項目属性で使用する既定の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter">
            <summary>
            UI側に表示する値とデータ側で保持する値の相互変換を行うためのインターフェースです。
            </summary>
            <remarks>
            Convert = ロジック側 → UI側 への変換<br />
            ConvertBack = UI側 → ロジック側 への変換<br />
            を想定しています。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter.Convert(System.Object)">
            <summary>
            データ(ロジック)側で保持している値をUI側に表示する値へ変換します。
            </summary>
            <param name="value">変換元の値</param>
            <returns>変換後の値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter.ConvertBack(System.Object)">
            <summary>
            UI側に表示されている値をデータ(ロジック)側で保持する値へ逆変換します。
            </summary>
            <param name="value">逆変換元の値</param>
            <returns>逆変換後の値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDefaultUIConverter.Convert(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDefaultUIConverter.ConvertBack(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDefaultUIConverter.Attribute">
            <summary>
            変換を行う値に対応する項目属性を取得、設定します。
            </summary>
            <value>変換を行う値に対応する項目属性</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDictionary">
            <summary>
            項目属性情報を管理するクラスです。
            </summary>
            <remarks>
            key   : 項目属性名<br />
            value : 項目属性
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Base.SystemDictionary`2">
            <summary>
            システム設定値を保存するディクショナリの基底クラスです。
            </summary>
            <typeparam name="TKey">キーとなる型</typeparam>
            <typeparam name="TValue">値となる型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Base.SystemDictionary`2.BeforeLoading(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            システム設定情報を読み込む前の準備処理を行います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <remarks>
            ディクショナリをクリアして初期化します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Base.SystemDictionary`2.Load(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            現在保持しているシステム設定情報を破棄して、最新のシステム設定情報を読み込みます。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Base.SystemDictionary`2.LoadMain(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            システム設定情報を読み込みます。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDictionary.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDictionary"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDictionary.Find(System.String)">
            <summary>
            指定したソース名に対応する項目属性を検索します。
            </summary>
            <param name="source">ソース名</param>
            <returns>指定されたソース名に対応する項目属性が見つかった場合は項目属性。見つからなかった場合は null。</returns>
            <remarks>
            <paramref name="source"/> には以下のようなものが指定できます。<br />
            ・テーブル名.列名<br />
            ・[テーブル名].[列名]<br />
            ・列名<br />
            ・[列名]<br />
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDictionary.BeforeLoading(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDictionary.LoadMain(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDictionary.ContainsKey(System.String,System.String)">
            <summary>
            指定したテーブル名、及び、列名の項目属性が格納されているかどうかを判断します。
            </summary>
            <param name="table">テーブル名(空 を指定できます。)</param>
            <param name="name">列名</param>
            <returns>対応する項目属性が格納されている場合は true。格納されていない場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDictionary.CustomAttributes">
            <summary>
            項目属性変換ファイルに対応する項目属性の一覧を取得、設定します。
            </summary>
            <value>項目属性変換ファイルに対応する項目属性の一覧</value>
            <remarks>
            key   : テーブル名<br />
            value : key → 列名、value → 項目属性<br />
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDictionary.Item(System.String)">
            <summary>
            指定した名前の項目属性を取得します。
            </summary>
            <param name="name">項目属性名</param>
            <value>項目属性</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDictionary.Item(System.String,System.String)">
            <summary>
            指定したテーブル名、及び、列名の項目属性を取得します。
            </summary>
            <param name="table">テーブル名(空 を指定できます。)</param>
            <param name="name">列名</param>
            <returns>項目属性</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemInputMode">
            <summary>
            入力方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemInputMode.Disable">
            <summary>
            半角入力(IMEモードの切り替え不可)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemInputMode.Hiragana">
            <summary>
            ひらがな入力
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemInputMode.Katakana">
            <summary>
            半角カナ入力
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemInputMode.Off">
            <summary>
            半角入力(IMEモードの切り替え可)
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType">
            <summary>
            項目の型区分を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.String">
            <summary>
            文字列
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.NumCode">
            <summary>
            前ゼロ
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Number">
            <summary>
            数値
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.PostCode">
            <summary>
            郵便番号
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.JanCode">
            <summary>
            JANコード
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Date">
            <summary>
            日付
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.YearMonth">
            <summary>
            年月
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Tel">
            <summary>
            電話番号/FAX番号
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Binary">
            <summary>
            バイナリ
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Time">
            <summary>
            日時(年月日時分秒)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Rate">
            <summary>
            率
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Date99">
            <summary>
            99日許可日付
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.NumCode0">
            <summary>
            0許可前ゼロ
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemTypeExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemTypeExtensions.IsNumeric(Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType)">
            <summary>
            対象の型区分が数値項目用かどうかを返します。
            </summary>
            <param name="itemType">型区分</param>
            <returns>数値項目用の型区分の場合は true。他の場合は false。</returns>
            <remarks>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Number"/><br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Rate"/><br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemTypeExtensions.IsDate(Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType)">
            <summary>
            対象の型区分が日付項目用かどうかを返します。
            </summary>
            <param name="itemType">型区分</param>
            <returns>日付項目用の型区分の場合は true。他の場合は false。</returns>
            <remarks>
            ※ 年+月(+日+時刻) という複数の値で一つの項目を表すもの。<br/>
            <br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Date"/><br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Date99"/><br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.YearMonth"/><br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Time"/><br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemTypeExtensions.IsYMD(Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType)">
            <summary>
            対象の型区分が年月日項目用かどうかを返します。
            </summary>
            <param name="itemType">型区分</param>
            <returns>年月日項目用の型の場合は true。他の場合は false。</returns>
            <remarks>
            ※ 年+月+日(+時刻) という複数の値で一つの項目を表すもの。<br/>
            <br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Date"/><br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Date99"/><br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType.Time"/><br/>
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.JumpAttribute">
            <summary>
            ジャンプ先画面を指定するクラスです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.JumpAttribute.JumpName">
            <inheritdoc/>
            <summary>
            ジャンプ先画面名を取得、設定します。
            </summary>
            <remarks>
            ジャンプ画面ファイル.ジャンプ画面名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.JumpAttribute.FormCheck">
            <inheritdoc/>
            <summary>
            ジャンプ先画面のFORMCHK文字列を取得、設定します。
            </summary>
            <remarks>
            ジャンプ画面ファイル.FORMCHK に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.JumpAttribute.Label">
            <inheritdoc/>
            <summary>
            ジャンプ先画面を表すラベルを取得、設定します。
            </summary>
            <remarks>
            ジャンプ画面ファイル.項目名ラベルフォーマット に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.JumpAttribute.JumpType">
            <inheritdoc/>
            <summary>
            ジャンプ方法を取得、設定します。
            </summary>
            <remarks>
            ジャンプ画面ファイル.ジャンプ画面区分 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.JumpAttribute.JumpArgs">
            <inheritdoc/>
            <summary>
            ジャンプ先画面に渡す引数の名前を取得、設定します。
            </summary>
            <remarks>
            ジャンプ画面ファイル.画面間引数名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.JumpAttribute.CheckQuery">
            <inheritdoc/>
            <summary>
            ジャンプの可否等を確認するための確認用クエリ文字列を取得、設定します。
            </summary>
            <remarks>
            ジャンプ画面ファイル.確認SQL に相当します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.JumpType">
            <summary>
            ジャンプ方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.JumpType.Default">
            <summary>
            通常
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.JumpType.Perless">
            <summary>
            Perless
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.JumpType.Custom">
            <summary>
            カスタマイズ
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.JumpType.Url">
            <summary>
            URL指定
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.KanaChar">
            <summary>
            半角カナ文字の使用方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.KanaChar.NotUse">
            <summary>
            使用しない
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.KanaChar.ImeOn">
            <summary>
            既定のIMEモードがONの状態で使用
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.KanaChar.ImeOff">
            <summary>
            既定のIMEモードがOFFの状態で使用
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListAttribute">
            <summary>
            区分項目を示すクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListAttribute.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListAttribute.GetList">
            <inheritdoc/>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListAttribute.InputType"/> が <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListInputType.Full"/> の場合は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListAttribute.Values"/> と等価ですが、
            他の場合は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListAttribute.Values"/> から「すべて」の区分を除いた分になります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListAttribute.ToFilter">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListAttribute.Clone">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListAttribute.ListName">
            <inheritdoc/>
            <summary>
            この区分項目の名前を取得、設定します。
            </summary>
            <remarks>
            入力タイプファイル.入力タイプ名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListAttribute.ListType">
            <inheritdoc/>
            <summary>
            区分値の入力方法を取得、設定します。
            </summary>
            <remarks>
            入力タイプファイル.入力タイプ区分 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListAttribute.Values">
            <summary>
            区分値の一覧を取得、設定します。
            </summary>
            <value>区分値の一覧</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListAttribute.InputType"/> の設定に関わらず、すべての区分値を含みます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListAttribute.Query">
            <inheritdoc/>
            <summary>
            コンボボックス用に要素を取得するためのクエリを取得、設定します。
            </summary>
            <remarks>
            将来的な拡張のための予約項目です。
            入力タイプファイル.コンボボックスクエリ に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListAttribute.InputType">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListInputType">
            <summary>
            入力できる区分値の種類を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListInputType.Default">
            <summary>
            デフォルト
            </summary>
            <remarks>
            「すべて」など区分値がブランクのものは入力できません。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListInputType.Full">
            <summary>
            すべて
            </summary>
            <remarks>
            「すべて」の区分を使用します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListType">
            <summary>
            区分値の入力方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListType.List">
            <summary>
            区分
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListType.Tag">
            <summary>
            付箋
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListType.CheckBox">
            <summary>
            チェックボックス
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListType.Code">
            <summary>
            コード
            </summary>
            <remarks>
            将来的な拡張のための予約項目です。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListType.ComboBox">
            <summary>
            コンボボックス
            </summary>
            <remarks>
            将来的な拡張のための予約項目です。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListValueAttribute">
            <summary>
            区分項目の区分値を示すクラスです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListValueAttribute.No">
            <inheritdoc/>
            <summary>
            区分項目内での順番を示す番号を取得、設定します。
            </summary>
            <remarks>
            入力タイプ詳細ファイル.入力タイプNO に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListValueAttribute.Label">
            <inheritdoc/>
            <summary>
            対応する区分名を取得、設定します。
            </summary>
            <remarks>
            入力タイプ詳細ファイル.項目名ラベルフォーマット に相当します。<br />
            項目名ファイルの値を使用してフォーマットした値を設定します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListValueAttribute.Tag">
            <inheritdoc/>
            <summary>
            対応する付箋情報を取得、設定します。
            </summary>
            <remarks>
            入力タイプ詳細ファイル.付箋タイプ に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListValueAttribute.DisplayValue">
            <inheritdoc/>
            <summary>
            区分値の画面上での表示文字列を取得、設定します。
            </summary>
            <remarks>
            入力タイプ詳細ファイル.区分表示値 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListValueAttribute.Value">
            <inheritdoc/>
            <summary>
            区分値を取得、設定します。
            </summary>
            <remarks>
            入力タイプ詳細ファイル.区分設定値 に相当します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.MultiByteChar">
            <summary>
            全角文字の使用方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.MultiByteChar.NotUse">
            <summary>
            使用しない
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.MultiByteChar.ImeOn">
            <summary>
            既定のIMEモードがONの状態で使用
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.MultiByteChar.ImeOff">
            <summary>
            既定のIMEモードがOFFの状態で使用
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.PerlessAttribute">
            <summary>
            Perless属性を示すクラスです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.PerlessAttribute.PerlessType">
            <inheritdoc/>
            <summary>
            Perless区分を取得、設定します。
            </summary>
            <remarks>
            Perlessマスタ.Perless区分 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.PerlessAttribute.PerlessName">
            <inheritdoc/>
            <summary>
            Perless名を取得、設定します。
            </summary>
            <remarks>
            Perlessマスタ.Perless名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.PerlessAttribute.TableName">
            <inheritdoc/>
            <summary>
            Perlessフォルダ名として使用する値を取得する元となるテーブル名を取得、設定します。
            </summary>
            <remarks>
            Perlessマスタ.テーブル名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.PerlessAttribute.ColumnName">
            <inheritdoc/>
            <summary>
            Perlessフォルダ名として使用する値を取得するためのキーとなる列名を取得、設定します。
            </summary>
            <remarks>
            Perlessマスタ.項目名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.PerlessAttribute.NameColumn">
            <inheritdoc/>
            <summary>
            Perlessフォルダ名として使用する値を取得するための列名を取得、設定します。
            </summary>
            <remarks>
            Perlessマスタ.名称項目名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.PerlessAttribute.Folder">
            <inheritdoc/>
            <summary>
            Perlessフォルダの作成先サブディレクトリパスを取得、設定します。
            </summary>
            <remarks>
            Perlessマスタ.Perlessフォルダ に相当します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.RankSortDirection">
            <summary>
            順位方向を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.RankSortDirection.None">
            <summary>
            何もしない
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.RankSortDirection.Worst">
            <summary>
            ワースト
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.RankSortDirection.Best">
            <summary>
            ベスト
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.RateType">
            <summary>
            率の算出方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.RateType.None">
            <summary>
            何もしない
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.RateType.LeftFromRight">
            <summary>
            右を左で割る
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.RateType.RightFromLeft">
            <summary>
            左を右で割る
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute">
            <summary>
            項目属性変換ファイルに対応する項目属性を示すクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.label">
            <summary>
            この項目のラベル文字列です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.CheckCharacter(System.Char)">
            <inheritdoc/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.CheckCharacter(System.Char)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.Format(System.String)">
            <inheritdoc/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Format(System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.Clone">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.CheckLength(System.String,System.Int32,System.Int32,System.String)">
            <inheritdoc/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.CheckLength(System.String,System.Int32,System.Int32,System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.CheckFormatted(System.String)">
            <inheritdoc/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.CheckFormatted(System.String)"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.BaseAttribute">
            <summary>
            この項目属性の元となる項目属性を取得、設定します。
            </summary>
            <value>元となる項目属性</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.AlpahbetType">
            <inheritdoc/>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.AlpahbetType"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.Label">
            <inheritdoc/>
            <remarks>
            項目属性変換ファイル.項目名ラベルフォーマット に相当します。<br />
            項目名ファイルの値を使用してフォーマットした値を設定します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.IsCustomFind">
            <summary>
            元となる項目属性と異なる検索画面情報を使用するかどうかを取得、設定します。
            </summary>
            <value>元となる項目属性と異なる検索画面情報を使用する場合は true。しない場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.CustomFind">
            <summary>
            元となる項目属性とは別の検索画面情報を取得、設定します。
            </summary>
            <value>元となる項目属性とは別の検索画面情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.Find">
            <inheritdoc/>
            <remarks>
            項目属性変換ファイル.検索画面名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.IsCustomJump">
            <summary>
            元となる項目属性と異なるジャンプ先画面情報を使用するかどうかを取得、設定します。
            </summary>
            <value>元となる項目属性と異なるジャンプ先画面情報を使用する場合は true。しない場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.CustomJump">
            <summary>
            元となる項目属性とは別のジャンプ先画面情報を取得、設定します。
            </summary>
            <value>元となる項目属性とは別のジャンプ先画面情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.Jump">
            <inheritdoc/>
            <remarks>
            項目属性変換ファイル.ジャンプ画面名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.ItemType">
            <inheritdoc/>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.ItemType"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.InputMode">
            <inheritdoc/>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.InputMode"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.DisplayName">
            <inheritdoc/>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DisplayName"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.List">
            <inheritdoc/>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.List"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.UseMinus">
            <inheritdoc/>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseMinus"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.MaxLength">
            <inheritdoc/>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.MaxLength"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.MultiLine">
            <inheritdoc/>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.MultiLine"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.Necessary">
            <inheritdoc/>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Necessary"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.Perless">
            <inheritdoc/>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Perless"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.UseFuzzy">
            <inheritdoc/>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseFuzzy"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.DefaultValue">
            <inheritdoc/>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DefaultValue"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.UIConverter">
            <inheritdoc/>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UIConverter"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.CustomVisible">
            <summary>
            元となる項目属性とは別に、この項目属性自身を既定で画面上に表示するかどうかを取得、設定します。
            </summary>
            <remarks>
            項目属性変換ファイル.表示方法 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.Visible">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.whereVisible">
            <summary>
            元となる項目属性とは別に、この項目属性自身が既定でカスタム抽出条件として使用可能かどうかを取得、設定します。
            </summary>
            <remarks>
            項目属性変換ファイル.条件対象区分 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ReplaceItemAttribute.WhereVisible">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.SortDirectionType">
            <summary>
            並び替え方向を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.SortDirectionType.None">
            <summary>
            何もしない
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.SortDirectionType.Ascending">
            <summary>
            昇順
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.SortDirectionType.Descending">
            <summary>
            降順
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.SubtractionType">
            <summary>
            差分の算出方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.SubtractionType.None">
            <summary>
            何もしない
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.SubtractionType.LeftFromRight">
            <summary>
            右を左で引く
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.SubtractionType.RightFromLeft">
            <summary>
            左を右で引く
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.SymbolChar">
            <summary>
            記号文字の使用方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.SymbolChar.NotUse">
            <summary>
            使用しない
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.SymbolChar.All">
            <summary>
            全て使用
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.SymbolChar.Select">
            <summary>
            指定した記号のみ使用
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.TagAttribute">
            <summary>
            付箋の区分値を指定するクラスです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.TagAttribute.Color">
            <summary>
            付箋の色を取得、設定します。
            </summary>
            <value>付箋の色</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.TagAttribute.Name">
            <summary>
            付箋の名称を取得、設定します。
            </summary>
            <value>付箋の名称</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.TransitionType">
            <summary>
            推移表の展開方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.TransitionType.Day">
            <summary>
            日展開
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.TransitionType.Week">
            <summary>
            週展開
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.TransitionType.Month">
            <summary>
            月展開
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.TransitionType.Quarter">
            <summary>
            四半期展開
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute">
            <summary>
            カスタム抽出条件のブランク行指定用の項目属性クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.LABEL">
            <summary>
            デザイン時などに表示するためのラベル文字列を示す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute"/> クラスの新しインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute._instance">
            <summary>
            既定のインスタンスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.Clone">
            <inheritDoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Clone"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.Instance">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute"/> の既定のインスタンス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.DefaultValue">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DefaultValue"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.DigitDecimal">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DigitDecimal"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.DigitInteger">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DigitInteger"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.DisplayName">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DisplayName"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.Filter">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Filter"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.Find">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Find"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.InputMode">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.InputMode"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.ItemType">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.ItemType"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.Jump">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Jump"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.Label">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Label"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.List">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.List"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.MaxLength">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.MaxLength"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.MultiLine">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.MultiLine"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.Necessary">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Necessary"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.Perless">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Perless"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.UseComma">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseComma"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.UseFuzzy">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseFuzzy"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutBlankItemAttribute.UseMinus">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseMinus"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail">
            <summary>
            カスタム抽出条件の明細行クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase">
            <summary>
            明細データを管理するオブジェクトの基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject">
            <summary>
            UIとのバインディング用の値の設定、保持、及び、復元が可能なオブジェクトの基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject">
            <summary>
            UIとのバインディング元となれることを示すインターフェースです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject">
            <summary>
            バインディング元となれることを示すインターフェースです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenProperty">
            <summary>
            プロパティ名を指定して、プロパティの値の設定、及び、取得ができることを示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenProperty.ContainsProperty(System.String)">
            <summary>
            指定した名称のプロパティが存在するかどうかを返します。
            </summary>
            <param name="propName">プロパティ名</param>
            <returns>指定した名称のプロパティが存在する場合は true。存在しない場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenProperty.GetValue(System.String)">
            <summary>
            指定したプロパティ名の値を取得します。
            </summary>
            <param name="propName">プロパティ名</param>
            <returns>プロパティに設定されている値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenProperty.SetValue(System.Object,System.String)">
            <summary>
            指定したプロパティ名に値を設定します。
            </summary>
            <param name="value">プロパティに設定する値</param>
            <param name="propName">プロパティ名</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged">
            <summary>
            ロジックデータが変更されたときに通知することを示すインターフェースです。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged">
            <summary>
            ロジックデータの変更が行われたときに発生します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable">
            <summary>
            メンバーの値の編集と取消が可能であることを示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable.BeginEdit">
            <summary>
            メンバーの値の編集を開始します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable.Rollback">
            <summary>
            メンバーの値の編集を取り消して、以前の状態に戻します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable.Commit">
            <summary>
            メンバーの値の編集を確定させます。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable.IsSuspended">
            <summary>
            メンバーの値の編集中かどうかを取得します。
            </summary>
            <value>メンバーの値の編集中である場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject.Name">
            <summary>
            このインスタンスの識別名を取得、設定します。
            </summary>
            <value>インスタンスの識別名</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IValidationErrorHolder">
            <summary>
            データ変更イベント処理のエラー情報を保持していることを示すインターフェースです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged">
            <summary>
            データ変更イベント処理のエラー状態が変更されたときに通知することを示すインターフェースです。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged">
            <summary>
            データ変更イベント処理のエラー状態が変更されたときに発生します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IValidationErrorHolder.HasAnyError">
            <summary>
            エラー項目が1つでも存在するかどうかを返します。
            </summary>
            <returns>エラー項目が1つでも存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IValidationErrorHolder.GetErrors(System.String)">
            <summary>
            指定したプロパティのエラー情報一覧を取得します。
            </summary>
            <param name="name">プロパティ名</param>
            <returns>指定したプロパティのエラー情報一覧</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IValidationErrorHolder.Errors">
            <summary>
            データ変更イベントエラーの一覧を取得します。
            </summary>
            <value>データ変更イベントエラーの一覧</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IValidationWarningHolder">
            <summary>
            データ変更イベント処理の警告情報を保持していることを示すインターフェースです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged">
            <summary>
            データ変更イベント処理の警告状態が変更されたときに通知することを示すインターフェースです。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged.ValidationWarningChanged">
            <summary>
            データ変更イベント処理の警告状態が変更されたときに発生します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IValidationWarningHolder.HasAnyWarning">
            <summary>
            警告項目が1つでも存在するかどうかを返します。
            </summary>
            <returns>警告項目が1つでも存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IValidationWarningHolder.GetWarnings(System.String)">
            <summary>
            指定したプロパティの警告情報一覧を取得します。
            </summary>
            <param name="name">プロパティ名</param>
            <returns>指定したプロパティの警告情報一覧</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IValidationWarningHolder.Warnings">
            <summary>
            データ変更イベント警告の一覧を取得します。
            </summary>
            <value>データ変更イベント警告の一覧</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IOpenUIProperty">
            <summary>
            プロパティの名前を指定して、UI側からロジック側の値を取得、及び、設定できるよう公開するインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IOpenUIProperty.PopValue(System.String)">
            <summary>
            UI側からロジック側の指定したプロパティの値を取得します。
            </summary>
            <param name="propName">ロジック側プロパティ名</param>
            <returns>ロジック側プロパティ値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IOpenUIProperty.PushValue(System.Object,System.String)">
            <summary>
            UI側からロジック側の指定したプロパティに値を設定します。
            </summary>
            <param name="value">設定値</param>
            <param name="propName">ロジック側プロパティ名</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IResetable">
            <summary>
            保持しているメンバーの値を既定値に戻すことができることを示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IResetable.Reset">
            <summary>
            保持しているメンバーの値を既定値に戻します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IResetable.Resetting">
            <summary>
            保持しているメンバーの値を既定値に戻す直前に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IResetable.ResetCompleted">
            <summary>
            保持しているメンバーの値を既定値に戻し終わった後に発生します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISourceHolder">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject"/> を保持していることを示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISourceHolder.GetSource(System.String)">
            <summary>
            指定した名前のバインディングソースを取得します。
            </summary>
            <param name="sourceName">取得するバインディングソース名</param>
            <returns>バインディングソースオブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.Initialize">
            <summary>
            インスタンスの初期化を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.GetItemAttribute(System.String)">
            <summary>
            指定した公開プロパティに設定されている項目属性を取得します。
            </summary>
            <param name="propName">公開プロパティ名</param>
            <returns>項目属性</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.Sources">
            <summary>
            データの実体の参照元オブジェクト一覧を取得します。
            </summary>
            <value>参照元オブジェクトの一覧</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.SourcesInitialized">
            <summary>
            データの実体の参照元オブジェクト一覧の初期化が完了したときに発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.SourceResetting">
            <summary>
            データの実体の参照元オブジェクトへ既定値を設定する直前に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.SourceResetCompleted">
            <summary>
            データの実体の参照元オブジェクトへ既定値を設定した後に発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.SourceMapping">
            <summary>
            データの実体の参照元オブジェクト間に設定される、メンバーのマッピング情報を取得します。
            </summary>
            <value>参照元オブジェクト間に設定される、メンバーのマッピング情報</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.SourceMappingInitialized">
            <summary>
            データの実体の参照元オブジェクト間に設定される、メンバーのマッピング情報の初期化が完了したときに発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.OpenProperties">
            <summary>
            UI側への公開プロパティ一覧を取得します。
            </summary>
            <value>公開プロパティ一覧</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.OpenPropertiesInitialized">
            <summary>
            UI側への公開プロパティの初期化が完了したときに発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.OpenPropertyResetting">
            <summary>
            公開プロパティへ既定値を設定する直前に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.OpenPropertyResetCompleted">
            <summary>
            公開プロパティへ既定値を設定した後に発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.PushingProperties">
            <summary>
            UI側からロジック側へ変更を反映中の公開プロパティ一覧を取得します。
            </summary>
            <value>変更を反映中の公開プロパティ一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.IsDataReadOnly">
            <summary>
            公開プロパティデータが読み取り専用かどうかを取得、設定します。
            </summary>
            <value>読み取り専用の場合は true。それ以外の場合は false。</value>
            <remarks>
            true に設定されている場合、<br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged.ValidationWarningChanged"/> <br/>
            の各イベントは発生しません。
            このプロパティは、通常、動的に変更することはありません。<br/>
            パフォーマンスの観点から、特定の処理中に一時的に各イベントの発生を抑制させるだけである場合は、
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.IgnoreDataChanged"/> プロパティを設定してください。
            </remarks>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.IsDataReadOnlyChanged">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.IsDataReadOnly"/> プロパティが変更されたときに発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.IgnoreDataChanged">
            <summary>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged.ValidationWarningChanged"/> <br/>
            の各イベントの発生を抑制するかどうかを取得、設定します。
            </summary>
            <value>イベントの発生を抑制する場合は true。それ以外の場合は false。</value>
            <remarks>
            true に設定されている場合、各イベントは発生しません。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.IsDataReadOnly"/> プロパティと異なり、特定の処理中に一時的に各イベントの発生を抑制させる目的で使用します。
            </remarks>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.IgnoreDataChangedChanged">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.IgnoreDataChanged"/> プロパティが変更されたときに発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.Initialized">
            <summary>
            インスタンスの初期化が完了したときに発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.ItemAttributeNeeded">
            <summary>
            項目属性情報が要求されたときに発生します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Interfaces.IAoDebuggable">
            <summary>
            デバッグ情報データの抽出、復元が可能であることを示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Interfaces.IAoDebuggable.ExtractDebugData">
            <summary>
            オブジェクトの現在の状態からデバッグ情報データを抽出します。
            </summary>
            <returns>抽出されたデバッグ情報データ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Interfaces.IAoDebuggable.LoadDebugData(Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData)">
            <summary>
            指定されたデバッグ情報データから、オブジェクトの状態を復元します。
            </summary>
            <param name="data">復元するデバッグ情報データ</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.DEFAULT_NAME">
            <summary>
            既定のインスタンス識別名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SourcesString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Sources"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SourceMappingString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SourceMapping"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OpenPropertiesString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OpenProperties"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.PushingPropertiesString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.PushingProperties"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsDataReadOnlyString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsDataReadOnly"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.NameString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Name"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ErrorsString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Errors"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.WarningsString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Warnings"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.#ctor">
            <summary>
            既定のインスタンス識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.#ctor(System.String)">
            <summary>
            指定した識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">インスタンス識別名</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject._sources">
            <summary>
            データの実体の参照元オブジェクト一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.InstanciateSources">
            <summary>
            データの実体の参照元オブジェクトの管理用ディクショナリを生成します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Sources"/> プロパティを新たに設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.InitializeSources">
            <summary>
            データの実体の参照元オブジェクト一覧を初期化します。
            </summary>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnSourcesInitialized"/> メソッドを実行して
            イベントを発生させて下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.InitializeSourcesMain">
            <summary>
            データの実体の参照元オブジェクト一覧の初期化処理を実行します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Sources"/> プロパティに要素を追加して 初期化します。<br/>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.InitializeSources"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行後の
            適切なタイミングで、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnSourcesInitialized"/> メソッドを呼び出すようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnSourcesInitialized">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SourcesInitialized"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ResetSources">
            <summary>
            管理しているすべての参照元オブジェクトに既定値の設定を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ResetSource(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject)">
            <summary>
            指定した参照元オブジェクトに既定値を設定します。
            </summary>
            <param name="source">既定値設定対象オブジェクト</param>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnSourceResetting(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceResettingEventArgs)"/>、
            及び、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnSourceResetCompleted(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceResetEventArgs)"/> の各メソッドを実行してイベントを発生させて下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ResetSourceMain(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject)">
            <summary>
            指定した参照元オブジェクトの既定値設定処理を実行します。
            </summary>
            <param name="source">既定値設定対象オブジェクト</param>
            <remarks>
            通常は、エンティティのクリア処理を行います。<br/>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ResetSource(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject)"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行前後の
            適切なタイミングで、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnSourceResetting(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceResettingEventArgs)"/>、及び、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnSourceResetCompleted(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceResetEventArgs)"/> 
            の各メソッドを呼び出すようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnSourceResetting(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceResettingEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SourceResetting"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnSourceResetCompleted(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceResetEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SourceResetCompleted"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.InstanciateSourceMapping">
            <summary>
            データの実体の参照元オブジェクト間に設定される、メンバーのマッピング情報の格納用ディクショナリを生成します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SourceMapping"/> プロパティを新たに設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.InitializeSourceMapping">
            <summary>
            データの実体の参照元オブジェクト間に設定される、メンバーのマッピング情報を初期化します。
            </summary>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnSourceMappingInitialized"/> メソッドを実行して
            イベントを発生させて下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.InitializeSourceMappingMain">
            <summary>
            データの実体の参照元オブジェクト間に設定される、メンバーのマッピング情報の初期化処理を実行します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SourceMapping"/> プロパティに要素を追加して 初期化します。<br/>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.InitializeSourceMapping"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行後の
            適切なタイミングで、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnSourceMappingInitialized"/> メソッドを呼び出すようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnSourceMappingInitialized">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SourceMappingInitialized"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Sources_DataChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <summary>
            管理している参照元オブジェクトの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            UI側から参照元オブジェクトへの値の設定ではなく、参照元オブジェクトの値が直接変更された場合に、
            バインドされている公開プロパティのデータ変更イベントとして、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.DataChanged"/> を発生させて再通知します。<br/>
            また、参照元オブジェクト間のメンバーのマッピング設定が行われている場合は、マッピング先へ値を転送します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ReplaceErrorsOrWarningsEventItem(System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException})">
            <summary>
            指定したデータ変更イベントエラー情報、もしくは警告情報のイベント関連項目のうち、このオブジェクトの公開プロパティにバインドされている項目を、
            対応する公開プロパティに置き換えます。
            </summary>
            <param name="collection">データ変更イベントエラー情報、もしくは警告情報</param>
            <returns>イベント関連項目を置換されたデータ変更イベントエラー情報、もしくは警告情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Sources_ValidationErrorChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <summary>
            管理している参照元オブジェクトの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            自身の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ValidationErrorChanged"/> イベントとして再通知します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Sources_ValidationWarningChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <summary>
            管理している参照元オブジェクトの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged.ValidationWarningChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            自身の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ValidationWarningChanged"/> イベントとして再通知します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.AddSourcesEventHandler(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary)">
            <summary>
            指定した参照元オブジェクト一覧へイベントハンドラを登録します。
            </summary>
            <param name="sources">参照元オブジェクト一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.RemoveSourcesEventHandler(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary)">
            <summary>
            指定した参照元オブジェクト一覧に登録されているイベントハンドラを解除します。
            </summary>
            <param name="sources">参照元オブジェクト一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.InstanciateOpenProperties">
            <summary>
            UI側への公開プロパティ一覧の管理用ディクショナリを生成します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OpenProperties"/> プロパティを新たに設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.InitializeOpenProperties">
            <summary>
            UI側への公開プロパティ設定を初期化します。
            </summary>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnOpenPropertiesInitialized"/> メソッドを実行して
            イベントを発生させて下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.InitializeOpenPropertiesMain">
            <summary>
            UI側への公開プロパティ設定の初期化処理を実行します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OpenProperties"/> プロパティに要素を追加して 初期化します。<br/>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.InitializeOpenProperties"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行後の
            適切なタイミングで、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnOpenPropertiesInitialized"/> メソッドを呼び出すようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnOpenPropertiesInitialized">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OpenPropertiesInitialized"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ResetOpenProperties">
            <summary>
            UI側への公開プロパティに既定値を設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ResetOpenProperty(System.String)">
            <summary>
            指定した公開プロパティに既定値を設定します。
            </summary>
            <param name="name">既定値設定対象公開プロパティ名</param>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnOpenPropertyResetting(Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyResettingEventArgs)"/>、
            及び、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnOpenPropertyResetCompleted(Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyResetEventArgs)"/> の各メソッドを実行してイベントを発生させて下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ResetOpenPropertyMain(System.String)">
            <summary>
            指定した公開プロパティへの既定値設定処理を実行します。
            </summary>
            <param name="name">既定値設定対象公開プロパティ名</param>
            <remarks>
            対象の公開プロパティの値が未設定(null)、または、対象の公開プロパティの型が値型か <see cref="T:System.String"/> 型の場合は既定値を設定します。<br/>
            また、対象の公開プロパティの値が <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IResetable"/> を実装したオブジェクトの場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IResetable.Reset"/> を実行して既定値に戻します。<br/>
            他の参照型に関しては継承クラスでoverrideし、必要に応じて適切な値を設定してください。<br/>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ResetOpenProperty(System.String)"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行前後の
            適切なタイミングで、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnOpenPropertyResetting(Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyResettingEventArgs)"/>、及び、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnOpenPropertyResetCompleted(Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyResetEventArgs)"/> 
            の各メソッドを呼び出すようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnOpenPropertyResetting(Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyResettingEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OpenPropertyResetting"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnOpenPropertyResetCompleted(Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyResetEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OpenPropertyResetCompleted"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.InstanciatePushingProperties">
            <summary>
            UI側からロジック側へ変更を反映中の公開プロパティの格納用リストを生成します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.PushingPropertyNames"/> プロパティを新たに設定します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject._isDataReadOnly">
            <summary>
            公開プロパティデータが読み取り専用かどうかを示す値です。
            </summary>
            <value>読み取り専用の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnIsDataReadOnlyChanged">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsDataReadOnlyChanged"/> イベントを発生させます。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject._ignoreDataChanged">
            <summary>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged.ValidationWarningChanged"/> <br/>
            の各イベントの発生を抑制するかどうかを示す値です。
            </summary>
            <value>イベントの発生を抑制する場合は true。それ以外の場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnIgnoreDataChangedChanged">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IgnoreDataChangedChanged"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Initialize">
            <inheritdoc/>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnInitialized"/> メソッドを実行して
            イベントを発生させて下さい。<br/>
            また、適切なタイミングで <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsInitialized"/> プロパティを変更するようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.InitializeMain">
            <summary>
            インスタンスの初期化処理を実行します。
            </summary>
            <remarks>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Initialize"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行前後の
            適切なタイミングで、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnInitialized"/> メソッドを呼び出すようにして下さい。<br/>
            また、適切なタイミングで <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsInitialized"/> プロパティを変更するようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnInitialized">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Initialized"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.GetItemAttribute(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnItemAttributeNeeded(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ItemAttributeEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ItemAttributeNeeded"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ContainsProperty(System.String)">
            <inheritdoc/>
            <remarks>
            継承クラスにて override する場合は、<paramref name="propName"/> に対して、必ず <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/> の
            設定を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.GetValue(System.String)">
            <inheritdoc/>
            <remarks>
            継承クラスにて override する場合は、<paramref name="propName"/> に対して、必ず <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/> の
            設定を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.GetValue``1(System.String)">
            <summary>
            指定したプロパティ名の値を指定した型で取得します。
            </summary>
            <typeparam name="TValue">取得する値の型</typeparam>
            <param name="propName">プロパティ名</param>
            <returns>プロパティに設定されている値</returns>
            <remarks>
            継承クラスにて override する場合は、<paramref name="propName"/> に対して、必ず <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/> の
            設定を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SetValue(System.Object,System.String)">
            <inheritdoc/>
            <remarks>
            <paramref name="value"/> に <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetailCollection"/> が設定された場合、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.Name"/> プロパティの
            値を <paramref name="propName"/> で置き換えます。<br/>
            継承クラスにて override する場合は、<paramref name="propName"/> に対して、必ず <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/> の
            設定を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnDataChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.DataChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnDataValueChanged(System.String,System.Object,System.Object)">
            <summary>
            指定した公開プロパティの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.DataChanged"/> イベントを発生させ、エラー、及び、警告が生じた場合は設定します。
            </summary>
            <param name="propName">プロパティ名</param>
            <param name="oldValue">変更前の値</param>
            <param name="newValue">変更後の値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.GetSuspendees">
            <summary>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.BeginEdit"/>、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Rollback"/>、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Commit"/> の各メソッドで、編集の開始、取消、確定を管理する
            対象のオブジェクトの一覧を取得します。
            </summary>
            <returns>編集管理対象オブジェクト一覧</returns>
            <remarks>
            対象のオブジェクトは、通常、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.DataChanged"/> イベント処理に関連するオブジェクトになります。
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject"/> そのものではないため、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject"/> 自身への変更は基本的に取消できません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.BeginEdit">
            <inheritdoc/>
            <remarks>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.GetSuspendees"/> メソッドで取得される <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクトに対して、順に <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable.BeginEdit"/> を呼び出します。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.BeginEdit"/> が呼び出された後、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Commit"/>、もしくは、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Rollback"/> がまだ呼び出されていない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Rollback">
            <inheritdoc/>
            <remarks>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.GetSuspendees"/> メソッドで取得される <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクトに対して、順に <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable.Rollback"/> を呼び出します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Commit">
            <inheritdoc/>
            <remarks>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.GetSuspendees"/> メソッドで取得される <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクトに対して、順に <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable.Commit"/> を呼び出します。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.BeginEdit"/> がまだ呼び出されていない場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.InstanciateErrorsAndWarnings">
            <summary>
            データ変更イベント処理時のエラー、及び、警告情報の格納用ディクショナリを生成します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Errors"/>、及び、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Warnings"/> の各プロパティを新たに設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ClearErrorsAndWarnings">
            <summary>
            エラー、及び、警告情報をクリアします。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ClearErrorsAndWarnings(System.String)">
            <summary>
            指定した公開プロパティのエラー、及び、警告情報をクリアします。
            </summary>
            <param name="propName">プロパティ名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SetErrorsAndWarnings(System.String,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException},System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException})">
            <summary>
            指定した公開プロパティのエラー、及び、警告情報を設定します。
            </summary>
            <param name="propName">プロパティ名</param>
            <param name="errors">エラー情報</param>
            <param name="warnings">警告情報</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ErrorsOrWarnings_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            エラー、及び、警告情報の <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            自身の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ValidationErrorChanged"/> イベント、もしくは、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ValidationWarningChanged"/> イベントとして再通知します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject._errors">
            <summary>
            データ変更イベントエラーの一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.HasAnyError">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.GetErrors(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.AddErrorsEventHandlers(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary)">
            <summary>
            指定したエラー情報一覧にイベントハンドラを登録します。
            </summary>
            <param name="item">エラー情報一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.RemoveErrorsEventHandlers(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary)">
            <summary>
            指定したエラー情報一覧に登録されているイベントハンドラを解除します。
            </summary>
            <param name="item">エラー情報一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnValidationErrorChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ValidationErrorChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject._warnings">
            <summary>
            データ変更イベント警告の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.HasAnyWarning">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.GetWarnings(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.AddWarningsEventHandlers(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary)">
            <summary>
            指定した警告情報一覧にイベントハンドラを登録します。
            </summary>
            <param name="item">警告情報一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.RemoveWarningsEventHandlers(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary)">
            <summary>
            指定した警告情報一覧に登録されているイベントハンドラを解除します。
            </summary>
            <param name="item">警告情報一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnValidationWarningChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ValidationWarningChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.PopValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.PushValue(System.Object,System.String)">
            <inheritdoc/>
            <remarks>
            継承先においてoverrideする場合、<see cref="T:System.Exception"/> をキャッチし、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ReplaceOutOfMemoryException(System.Exception)"/> を実行するようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ReplaceOutOfMemoryException(System.Exception)">
            <summary>
            対象の例外が <see cref="T:System.OutOfMemoryException"/> 由来の場合、ガベージコレクションを強制実行した後、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.AladdinOutOfMemoryException"/> にラップして返します。
            </summary>
            <param name="ex">対象例外</param>
            <returns><paramref name="ex"/> が <see cref="T:System.OutOfMemoryException"/> 由来の場合は <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.AladdinOutOfMemoryException"/> 。それ以外の場合は null 。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ThrowDataEventExceptionOnError(System.String)">
            <summary>
            指定した公開プロパティで、データ変更イベント処理のエラーが生じている場合に例外を発生させます。
            </summary>
            <param name="propName">公開プロパティ名</param>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException">指定した公開プロパティで、データ変更イベント処理のエラーが生じている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Reset">
            <inheritdoc/>
            <remarks>
            単純に、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Reset(System.Boolean)"/> オーバーロードを ignoreDataChanged = true で呼び出します。<br/>
            このメソッド内でロジックデータに変更があっても、<br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.DataChanged"/><br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ValidationErrorChanged"/><br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ValidationWarningChanged"/><br/>
            の各イベントは発生しません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Reset(System.Boolean)">
            <summary>
            保持しているメンバーの値を既定値に戻します。
            </summary>
            <param name="ignoreDataChanged">
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.DataChanged"/><br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ValidationErrorChanged"/><br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ValidationWarningChanged"/><br/>
            の各イベントの発生を抑制する場合は true。抑制しない場合は false。
            </param>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnResetting(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResettingEventArgs)"/> 、
            及び、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnResetCompleted(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResetEventArgs)"/> の各メソッドを実行してイベントを発生させて下さい。<br/>
            また、適切なタイミングで <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsResetting"/> プロパティを変更するようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ResetMain">
            <summary>
            保持しているメンバーの既定値設定処理を実行します。
            </summary>
            <remarks>
            参照元オブジェクト、公開プロパティに既定値を設定し、データ変更イベントのエラー、及び、警告情報をクリアします。<br/>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Reset(System.Boolean)"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行前後の
            適切なタイミングで、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnResetting(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResettingEventArgs)"/> 、及び、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnResetCompleted(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResetEventArgs)"/> 
            の各メソッドを呼び出すようにして下さい。<br/>
            また、適切なタイミングで <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsResetting"/> プロパティを変更するようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnResetting(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResettingEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Resetting"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnResetCompleted(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResetEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ResetCompleted"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.GetSource(System.String)">
            <inheritdoc/>
            <param name="sourceName">
            取得する参照元オブジェクト名。<br/>
            参照元オブジェクト名 = プロパティ名 であるプロパティの get メソッド内からの実行時のみ省略可能です。
            </param>
            <remarks>
            <paramref name="sourceName"/> の参照元オブジェクトが取得できない、かつ、
            <paramref name="sourceName"/> の末尾が "行" となっている場合(ex. エンティティ行)、
            "行" を除いた文字列の名前の参照元オブジェクトの取得を試みます。<br/>
            継承クラスにて override する場合は、<paramref name="sourceName"/> に対して、必ず <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/> の
            設定を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.GetSource``1(System.String)">
            <summary>
            指定した名前の参照元オブジェクトを取得します。
            </summary>
            <typeparam name="TSource">取得する参照元オブジェクトの型</typeparam>
            <param name="sourceName">
            取得する参照元オブジェクト名。<br/>
            参照元オブジェクト名 = プロパティ名 であるプロパティの get メソッド内からの実行時のみ省略可能です。
            </param>
            <remarks>
            <paramref name="sourceName"/> の参照元オブジェクトが取得できない、かつ、
            <paramref name="sourceName"/> の末尾が "行" となっている場合(ex. エンティティ行)、
            "行" を除いた文字列の名前の参照元オブジェクトの取得を試みます。<br/>
            継承クラスにて override する場合は、<paramref name="sourceName"/> に対して、必ず <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/> の
            設定を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ExtractDebugData">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ExtractSourceDebugData">
            <summary>
            データの実体の参照元オブジェクトから、デバッグ情報データを抽出します。
            </summary>
            <returns>抽出されたデバッグ情報データ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ExtractSourceDebugData(System.String)">
            <summary>
            指定した参照元オブジェクトから、デバッグ情報データを抽出します。
            </summary>
            <param name="sourceName">参照元オブジェクト名</param>
            <returns>抽出されたデバッグ情報データ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.LoadDebugData(Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.LoadSourceDebugData(Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData)">
            <summary>
            指定されたデバッグ情報データから、参照元オブジェクトの状態を復元します。
            </summary>
            <param name="data">復元するデバッグ情報データ</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.LoadSourceDebugData(System.String,Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData)">
            <summary>
            指定されたデバッグ情報データから、対象の参照元オブジェクトの状態を復元します。
            </summary>
            <param name="sourceName">参照元オブジェクト名</param>
            <param name="value">復元するデバッグ情報データ</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.NeedsToFireValidationEvent">
            <summary>
            値の変更、及び、検証に関するイベントを発生させる必要があるかどうかを取得します。
            </summary>
            <value>イベントを発生させる必要がある場合は true。それ以外の場合は false。</value>
            <remarks>
            通常は、<br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.DataChanged"/><br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ValidationErrorChanged"/><br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ValidationWarningChanged"/><br/>
            の各イベントの発生前に参照され、このメソッドの戻り値に応じて当該イベントを発生させます。<br/>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsDataReadOnly"/>、<seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IgnoreDataChanged"/> の各プロパティも参考にしてください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Sources">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SourcesInitialized">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SourceResetting">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SourceResetCompleted">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SourceMapping">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SourceMappingInitialized">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OpenProperties">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OpenPropertiesInitialized">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OpenPropertyResetting">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OpenPropertyResetCompleted">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.PushingProperties">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.PushingPropertyNames">
            <summary>
            UI側からロジック側へ変更を反映中の公開プロパティの名前一覧を取得、設定します。
            </summary>
            <value>変更を反映中の公開プロパティの名前一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsDataReadOnly">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsDataReadOnlyChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IgnoreDataChanged">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IgnoreDataChangedChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsInitialized">
            <summary>
            インスタンスの初期化処理が完了しているかどうかを取得、設定します。
            </summary>
            <value>インスタンスの初期化処理が完了している場合は true。それ以外の場合は false。</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Initialized">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ItemAttributeNeeded">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Name">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.DataChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsSuspended">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Errors">
            <inheritdoc/>
            <remarks>
            この辞書には、すべてのエラー情報が保持されています。<br/>
            実際にはエラーにならない公開プロパティもキーに含まれている場合があります。<br/>
            実際にエラーになるかどうかを知るためには、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.HasAnyError"/> メソッドや<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.GetErrors(System.String)"/> メソッドを使用してください。
            </remarks>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ValidationErrorChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Warnings">
            <inheritdoc/>
            <remarks>
            この辞書には、全ての警告情報が保持されています。<br/>
            実際には警告にならない公開プロパティもキーに含まれている場合があります。<br/>
            実際に警告になるかどうかを知るためには、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.HasAnyWarning"/> メソッドや<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.GetWarnings(System.String)"/> メソッドを使用してください。
            </remarks>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ValidationWarningChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsResetting">
            <summary>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Reset(System.Boolean)"/> 処理を実行中かどうかを取得、設定します。
            </summary>
            <value><see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Reset(System.Boolean)"/> 処理を実行中の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Resetting">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ResetCompleted">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsDebugDataLoading">
            <summary>
            デバッグ情報データの復元処理中かどうかを取得、設定します。
            </summary>
            <value>デバッグ情報データの復元処理中の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetail">
            <summary>
            UIとのバインディング元となれる明細(コレクション要素)オブジェクトを示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetail.IsInputted">
            <summary>
            入力済み明細かどうかを返します。
            </summary>
            <returns>入力済みの場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetail.Parent">
            <summary>
            この明細が属しているコレクションオブジェクトを取得、設定します。
            </summary>
            <value>属しているコレクションオブジェクト</value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.DEFAULT_NAME">
            <summary>
            既定のインスタンス識別名です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.#ctor">
            <summary>
            既定のインスタンス識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.#ctor(System.String)">
            <summary>
            指定した識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">インスタンス識別名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.IsInputted">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.InitializeSourcesMain">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.InitializeSourceMappingMain">
            <inheritdoc/>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.Parent"/> が設定されている場合は、何もしません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.InitializeOpenPropertiesMain">
            <inheritdoc/>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.Parent"/> が設定されている場合は、何もしません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.GetItemAttribute(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.OnDataChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.GetEventIndex(System.Object)">
            <summary>
            指定したイベント発生元オブジェクトのコレクション内でのインデックスを取得します。
            </summary>
            <param name="eObj">イベント発生元オブジェクト</param>
            <returns>
            自身がコレクションに属しており、<paramref name="eObj"/> が自身、もしくは、自身の参照元オブジェクトである場合は、自身のコレクション内でのインデックス。
            他の場合は -1。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.OnValidationErrorChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <inheritdoc/>
            <remarks>
            <paramref name="e"/> の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs.Item"/> が自身、もしくは、自身の参照元オブジェクトである場合のみ、
            自身のコレクション内でのインデックスを設定した上で通知します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.OnValidationWarningChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <inheritdoc/>
            <remarks>
            <paramref name="e"/> の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs.Item"/> が自身、もしくは、自身の参照元オブジェクトである場合のみ、
            自身のコレクション内でのインデックスを設定した上で通知します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.PushValue(System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.ResetMain">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.Parent">
            <inheritdoc/>
            <remarks>
            このオブジェクトが複数のコレクションによって保持されている場合、通常、このプロパティは最後に追加されたコレクションオブジェクトを返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.SourceMapping">
            <inheritdoc/>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.Parent"/> の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.SourceMapping"/> を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.OpenProperties">
            <inheritdoc/>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.Parent"/> の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.OpenProperties"/> を返します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.CodeTypes">
            <summary>
            単一値入力項目を表示するための属性タイプ一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.IsInputted">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.IsInputted"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.ResetOpenPropertyMain(System.String)">
            <inheritDoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ResetOpenPropertyMain(System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.ExecDataChangedAll">
            <summary>
            全てプロパティの DataChanged イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.CurrentValueToDefault">
            <summary>
            現在の保持値をデフォルト値に設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.GetItemAttribute(System.String)">
            <inheritDoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.GetItemAttribute(System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.OnDataValueChanged(System.String,System.Object,System.Object)">
            <inheritDoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OnDataValueChanged(System.String,System.Object,System.Object)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.SetInitialize(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute)">
            <summary>
            追加条件行の初期化処理を行います。
            </summary>
            <param name="attr">項目属性</param>
            <remarks>
            行データに項目属性を設定し、属性のデフォルト値を設定します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail._initalOperatorType">
            <summary> リセットされたときや初期状態で表示する <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.OperatorType"/> です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail._originalItemType">
            <summary> 元の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType"/>です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.multiTextItemAttribute">
            <summary>
            複数項目入力時の項目属性です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.GetBooleanValue(System.Object)">
            <summary>
            <see cref="T:System.Object"/>から<see cref="T:System.Boolean"/>値を取得します。
            </summary>
            <param name="o">対象オブジェクト</param>
            <returns><see cref="T:System.Boolean"/>値</returns>
            <remarks>
            <paramref name="o"/>がnull、空文字の場合はtrueに、
            もともと<see cref="T:System.Boolean"/>型の場合、キャストして<see cref="T:System.Boolean"/>値にします。
            上記以外はすべてfalseを返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.CopyTo(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            指定オブジェクトに値をコピーします。
            </summary>
            <param name="to">コピー先オブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.CreateConditionString">
            <summary>
            抽出条件文字列を生成します。
            </summary>
            <returns>生成された抽出条件文字列オブジェクトのコレクション</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.RestoreValueFromConditionString(Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItemCollection,System.Boolean)">
            <summary>
            抽出条件値情報を設定します。
            </summary>
            <param name="conditionValueItemCollection">抽出条件文字列オブジェクトのコレクション</param>
            <param name="needResetOnNotSaveCondition">保存対象外の時リセットする必要があるかどうかを表す値</param>
            <returns></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.FindConditionString(Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItemCollection)">
            <summary>
            抽出条件値情報から当該明細に対応するものを検索します。
            </summary>
            <param name="conditionValueItemCollection">抽出条件文字列オブジェクトのコレクション</param>
            <returns>当該明細に対応する抽出条件値情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.RestoreValueFromConditionString(Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem,System.Boolean)">
            <summary>
            抽出条件を設定します。
            </summary>
            <param name="item">抽出条件文字列オブジェクト</param>
            <param name="needResetOnNotSaveCondition">条件保存を行わない場合にResetする必要があるかどうかを表す値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.CreateWhereQuery(System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>
            Where句に設定する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/>オブジェクトを生成します。
            </summary>
            <param name="dbParameters">パラメータ引数を格納するリスト</param>
            <returns>生成された<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/>オブジェクトの配列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.CreateWhereKubunQuery(System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>
            区分の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/>オブジェクトを作成します。
            </summary>
            <param name="dbParameters">パラメータ引数を格納するリスト</param>
            <returns>生成された<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.CreateWhereCheckBoxQuery(System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>
            チェックボックスの<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/>オブジェクトを作成します。
            </summary>
            <param name="dbParameters">パラメータ引数を格納するリスト</param>
            <returns>生成された<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.CreateWhereTagQuery(System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>
            付箋の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/>オブジェクトを作成します。
            </summary>
            <param name="dbParameters">パラメータ引数を格納するリスト</param>
            <returns>生成された<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.CreateWhereQueryInternal(System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>
            区分、チェックボックス、付箋以外の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/>オブジェクトを作成します。
            </summary>
            <param name="dbParameters">パラメータ引数を格納するリスト</param>
            <returns>生成された<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.MakeParamName(System.String)">
            <summary>
            パラメータ名を作成します。
            </summary>
            <param name="baseName">基準名</param>
            <returns>パラメータ名</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.MakeFromParamName(System.String)">
            <summary>
            範囲指定のFrom側パラーメータ名を作成します。
            </summary>
            <param name="baseName">基準名</param>
            <returns>パラメータ名</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.MakeToParamName(System.String)">
            <summary>
            範囲指定のTo側パラーメータ名を作成します。
            </summary>
            <param name="baseName">基準名</param>
            <returns>パラメータ名</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.DefaultDataManager">
            <summary>
            デフォルトデータ管理オブジェクトを取得します。
            </summary>
            <value>デフォルトデータ管理オブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.KeyName">
            <summary>
            キー名を取得、設定します。
            </summary>
            <value>キー名</value>
            <remarks>
            この項目はコレクション内で一意にする必要があります。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.InitialOperatorType">
            <summary>
            リセットされたときや初期状態で表示する <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.OperatorType"/> を取得、設定します。
            </summary>
            <value>リセットされたときや初期状態で表示する <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.OperatorType"/> </value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.OriginalItemType">
            <summary>
            元の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType"/>を取得、設定します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.BindingSource">
            <summary>
            バインドソースを取得、設定します。
            </summary>
            <value>バインドソース</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Expression">
            <summary>
            式を取得、設定します。
            </summary>
            <value>式</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.ItemAttribute">
            <summary>
            項目属性を取得、設定します。
            </summary>
            <value>項目属性</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.MultiTextItemAttribute">
            <summary>
            複数項目入力時の項目属性を取得します。
            </summary>
            <value>複数項目入力時の項目属性</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.OperatorType">
            <summary>
            演算子のタイプを取得、設定します。
            </summary>
            <value>演算子のタイプ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.DefaultAdded">
            <summary>
            デフォルトで表示しておくかどうかの値を取得、設定します。
            </summary>
            <value>デフォルトで表示しておく場合、true。それ以外はfalse。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Code">
            <summary>
            単一値入力時の入力値を取得、設定します。
            </summary>
            <value>単体単一値入力時の入力値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.CodeName">
            <summary>
            単一値入力時に取得された名称を取得、設定します。
            </summary>
            <value>単一値入力時に取得された名称</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.IsGetCodeName">
            <summary>
            単一値入力時の入力時の名称取得が成功したか否かを表す値を取得、設定します。
            </summary>
            <value>単一値入力時の名称取得が成功したか否かを表す値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.NameText">
            <summary>
            複数値入力時の入力値を取得、設定します。
            </summary>
            <value>複数値入力時の入力値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.FromCode">
            <summary>
            範囲指定の開始値を取得、設定します。
            </summary>
            <value>範囲指定の開始値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.ToCode">
            <summary>
            範囲指定の終了値を取得、設定します。
            </summary>
            <value>範囲指定の終了値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.YM">
            <summary>
            年月を取得、設定します。
            </summary>
            <value>年月</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.FromYM">
            <summary>
            範囲指定の開始年月を取得、設定します。
            </summary>
            <value>範囲指定の開始年月</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.ToYM">
            <summary>
            範囲指定の終了年月を取得、設定します。
            </summary>
            <value>範囲指定の終了年月</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Date">
            <summary>
            日付を取得、設定します。
            </summary>
            <value>日付</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.FromDate">
            <summary>
            範囲指定の開始日付を取得、設定します。
            </summary>
            <value>範囲指定の開始日付</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.ToDate">
            <summary>
            範囲指定の終了日付を取得、設定します。
            </summary>
            <value>範囲指定の終了日付</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun">
            <summary>
            区分の値を取得、設定します。
            </summary>
            <value>区分の値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.DefaultDateSetting">
            <summary>
            日付データ設定情報を取得、設定します。
            </summary>
            <value>日付データ設定情報を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.DefaultDateSetting"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.DefaultFromDateSetting">
            <summary>
            日付開始データ設定情報を取得、設定します。
            </summary>
            <value>日付開始データ設定情報を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.DefaultDateSetting"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.DefaultToDateSetting">
            <summary>
            日付終了データ設定情報を取得、設定します。
            </summary>
            <value>日付終了データ設定情報を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.DefaultDateSetting"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.NoRemove">
            <summary>
            削除不可であるかどうかを表す値を取得、設定します。
            </summary>
            <value>削除不可であるかどうかを表す値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.IndividualFindItem">
            <summary>
            個別検索情報を保持する<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.IndividualFindItem"/>を取得、設定します。
            <c>fw:3</c>
            </summary>
            <value>個別検索情報を保持する<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.IndividualFindItem"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.LimitMonthSpan">
            <summary>
            月の範囲上限値を取得、設定します。
            </summary>
            <value>月の範囲上限値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.IsSaveCondition">
            <summary>
            条件保存を行うかを表す値を取得、設定します。
            </summary>
            <value>条件保存を行うかを表す値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun1Checked">
            <summary>
            区分1のチェック値を取得、設定します。
            </summary>
            <value>区分1のチェック値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun1Label">
            <summary>
            区分1のラベル文字列を取得、設定します。
            </summary>
            <value>区分1のラベル文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun1TextValue">
            <summary>
            区分1のコントロールの値を取得、設定します。
            </summary>
            <value>区分1のコントロールの値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun1Value">
            <summary>
            区分1のWhere句に使用する値を取得、設定します。
            </summary>
            <value>区分1のWhere句に使用する値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun2Checked">
            <summary>
            区分2のチェック値を取得、設定します。
            </summary>
            <value>区分2のチェック値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun2Label">
            <summary>
            区分2のラベル文字列を取得、設定します。
            </summary>
            <value>区分2のラベル文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun2TextValue">
            <summary>
            区分2のコントロールの値を取得、設定します。
            </summary>
            <value>区分2のコントロール</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun2Value">
            <summary>
            区分2のWhere句に使用する値を取得、設定します。
            </summary>
            <value>区分2のWhere句に使用する値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun3Checked">
            <summary>
            区分3のチェック値を取得、設定します。
            </summary>
            <value>区分3のチェック値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun3Label">
            <summary>
            区分3のラベル文字列を取得、設定します。
            </summary>
            <value>区分3のラベル文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun3TextValue">
            <summary>
            区分3のコントロールの値を取得、設定します。
            </summary>
            <value>区分3のコントロール</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun3Value">
            <summary>
            区分3のWhere句に使用する値を取得、設定します。
            </summary>
            <value>区分3のWhere句に使用する値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun4Checked">
            <summary>
            区分4のチェック値を取得、設定します。
            </summary>
            <value>区分4のチェック値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun4Label">
            <summary>
            区分4のラベル文字列を取得、設定します。
            </summary>
            <value>区分4のラベル文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun4TextValue">
            <summary>
            区分4のコントロールの値を取得、設定します。
            </summary>
            <value>区分4のコントロールの値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun4Value">
            <summary>
            区分4のWhere句に使用する値を取得、設定します。
            </summary>
            <value>区分4のWhere句に使用する値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun5Checked">
            <summary>
            区分5のチェック値を取得、設定します。
            </summary>
            <value>区分5のチェック値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun5Label">
            <summary>
            区分5のラベルを取得、設定します。
            </summary>
            <value>区分5のラベル</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun5TextValue">
            <summary>
            区分5のコントロールの値を取得、設定します。
            </summary>
            <value>区分5のコントロールの値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun5Value">
            <summary>
            区分5のWhere句に使用する値を取得、設定します。
            </summary>
            <value>区分5のWhere句に使用する値</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames">
            <summary>
            公開プロパティ名を保持するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.KeyName">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.KeyName"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.ItemAttribute">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.ItemAttribute"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.OperatorType">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.OperatorType"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Code">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Code"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.CodeName">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.CodeName"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.IsGetCodeName">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.IsGetCodeName"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.NameText">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.NameText"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.FromCode">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.FromCode"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.ToCode">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.ToCode"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.YM">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.YM"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.FromYM">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.FromYM"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.ToYM">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.ToYM"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Date">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Date"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.FromDate">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.FromDate"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.ToDate">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.ToDate"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.DefaultDateSetting">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.DefaultDateSetting"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.DefaultFromDateSetting">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.DefaultFromDateSetting"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.DefaultToDateSetting">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.DefaultToDateSetting"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.NoRemove">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.NoRemove"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.IndividualFindItem">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.IndividualFindItem"/>プロパティのプロパティ名文字列定数です。
            <c>fw:3</c>
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun1Checked">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun1Checked"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun1Label">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun1Label"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun1TextValue">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun1TextValue"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun1Value">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun1Value"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun2Checked">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun2Checked"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun2Label">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun2Label"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun2TextValue">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun2TextValue"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun2Value">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun2Value"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun3Checked">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun3Checked"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun3Label">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun3Label"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun3TextValue">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun3TextValue"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun3Value">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun3Value"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun4Checked">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun4Checked"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun4Label">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun4Label"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun4TextValue">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun4TextValue"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun4Value">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun4Value"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun5Checked">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun5Checked"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun5Label">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun5Label"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun5TextValue">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun5TextValue"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.Kubun5Value">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.Kubun5Value"/>プロパティのプロパティ名文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.KubunChecked">
            <summary>
            区分Xのチェックプロパティ名のフォーマット文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.KubunLabel">
            <summary>
            区分Xのラベルプロパティ名のフォーマット文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.KubunTextValue">
            <summary>
            区分Xのコントロールの値プロパティのフォーマット文字列定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail.PropertyNames.KubunValue">
            <summary>
            区分XのWhere句に使用する値プロパティのフォーマット文字列定数です。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection">
            <summary>
            カスタム抽出条件の明細コレクションクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1">
            <summary>
            明細データを要素に持つコレクションの基底のジェネリッククラスです。
            </summary>
            <typeparam name="D">コレクション内の要素の型</typeparam>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase">
            <summary>
            明細データを要素に持つコレクションの基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1">
            <summary>
            UI(コレクション系コントロール類)のとのバインディング用の値の設定、保持、及び、復元が可能なオブジェクトを要素に持つコレクションの基底クラスです。
            </summary>
            <typeparam name="T">コレクション内の要素の型</typeparam>
            <remarks>
            コレクション変更時のイベントの発生順は、基本的に以下のようになります。<br/>
            なお、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> プロパティ変更中、及び、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Reset"/> 実行時は、以下のイベントは発生しません。<br/>
            1. <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.CurrentSortedKeys"/> の <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> イベント(ソートされている場合)。<seealso cref="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.CurrentSortedKeysString"/><br/>
            2. <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/> の <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> イベント(増減する場合)。<seealso cref="F:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.CountString"/><br/>
            3. Item[] の <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> 変更イベント。<seealso cref="F:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.IndexerName"/><br/>
            4. <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> 変更イベント。<br/>
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1">
            <summary>
            項目が追加、削除されたとき、またはリスト全体が更新されたときに通知を提供する動的なデータ コレクションを表します。
            </summary>
            <typeparam name="T">コレクション内の要素の型</typeparam>
            <remarks>
            <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> でオーバーライドできないインターフェース類をオーバーライドできるように独自実装します。<br/>
            実装方法は <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> に準拠します。ただし、一部の例外を発生させる処理が省略されています。<br/>
            また、<see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> では <see cref="M:System.Collections.ObjectModel.Collection`1.Clear"/> 時に <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove"/> のイベントは
            発生しませんが、このクラスでは発生します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1">
            <summary>
            ジェネリック コレクションの基本クラスです。
            </summary>
            <typeparam name="T">保持される値の型</typeparam>
            <remarks>
            <see cref="T:System.Collections.ObjectModel.Collection`1"/> でオーバーライドできないインターフェース類をオーバーライドできるように独自実装します。<br/>
            実装方法は <see cref="T:System.Collections.ObjectModel.Collection`1"/> に準拠します。ただし、一部の例外を発生させる処理が省略されています。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1._items">
            <summary>
            処理を委譲する <see cref="T:System.Collections.Generic.IList`1"/> ラッパー。<br/>
            明確な意図がない限り、コンストラクタ以外ではこの変数に対して直接の操作を行うことは避け、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Items"/> プロパティを参照するようにして下さい。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> クラスの新しい空のインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            指定したリストのラッパーとして <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="list">新しいコレクションによってラップされているリスト</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="list"/> が null の場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.IndexOf(`0)">
            <summary>
            指定したオブジェクトを検索し、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> 全体内で最初に見つかった位置の 0 から始まるインデックスを返します。
            </summary>
            <param name="item"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> 内で検索するオブジェクト。 参照型の場合、null の値を使用できます。</param>
            <returns>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> 全体内で <paramref name="item"/> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号。
            それ以外の場合は -1。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Insert(System.Int32,`0)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> 内の指定したインデックスの位置に要素を挿入します。
            </summary>
            <param name="index"><paramref name="item"/> を挿入する位置の 0 から始まるインデックス</param>
            <param name="item">挿入するオブジェクト。 参照型の場合、null の値を使用できます。</param>
            <remarks>
            継承クラスにおいて override する際は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Add(`0)"/> メソッドと挙動を統一させるためにも、
            なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.InsertItem(System.Int32,`0)"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.RemoveAt(System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> の指定したインデックスにある要素を削除します。
            </summary>
            <param name="index">削除する要素の 0 から始まるインデックス番号</param>
            <remarks>
            継承クラスにおいて override する際は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Remove(`0)"/> メソッドと挙動を統一させるためにも、
            なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.RemoveItem(System.Int32)"/> メソッドの override を検討してください。
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> が負の数、もしくは、 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/> 以上の場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Add(`0)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> の末尾にオブジェクトを追加します。
            </summary>
            <param name="item"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> の末尾に追加するオブジェクト。参照型の場合、null の値を使用できます。</param>
            <remarks>
            継承クラスにおいて override する際は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Insert(System.Int32,`0)"/> メソッドと挙動を統一させるためにも、
            なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.InsertItem(System.Int32,`0)"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Clear">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> からすべての要素を削除します。
            </summary>
            <remarks>
            継承クラスにおいて override する際は、なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.ClearItems"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Contains(`0)">
            <summary>
            ある要素が <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> 内に存在するかどうかを判断します。
            </summary>
            <param name="item"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> 内で検索するオブジェクト。 参照型の場合、null の値を使用できます。</param>
            <returns><paramref name="item"/> が <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> に存在する場合は true。それ以外の場合はfalse。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.CopyTo(`0[],System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> 全体を互換性のある 1 次元の <see cref="T:System.Array"/> にコピーします。
            コピー操作は、コピー先の配列の指定したインデックスから始まります。
            </summary>
            <param name="array">
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> から要素がコピーされる 1 次元の <see cref="T:System.Array"/>。
            <see cref="T:System.Array"/> には、0 から始まるインデックス番号が必要です。
            </param>
            <param name="arrayIndex">コピーの開始位置となる、<paramref name="array"/> 内の 0 から始まるインデックス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Remove(`0)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> 内で最初に見つかった特定のオブジェクトを削除します。
            </summary>
            <param name="item"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> から削除するオブジェクト。 参照型の場合、null の値を使用できます。</param>
            <returns>
            <paramref name="item"/> が正常に削除された場合は true。それ以外の場合は false。
            このメソッドは、<paramref name="item"/> が元の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> に見つからなかった場合にも false を返します。
            </returns>
            <remarks>
            継承クラスにおいて override する際、戻り値の変更ではなく、削除処理そのものの変更を行う場合には、
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.RemoveAt(System.Int32)"/> メソッドと挙動を統一させるためにも、なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.RemoveItem(System.Int32)"/> メソッドの override を検討してください。<br/>
            また、<paramref name="item"/> のインデックスが予めわかっている場合には、パフォーマンスの観点から <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.RemoveAt(System.Int32)"/> メソッドの使用を推奨します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.GetEnumerator">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> を反復処理する列挙子を返します。
            </summary>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> の <see cref="T:System.Collections.Generic.IEnumerator`1"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            コレクションを反復処理する列挙子を返します。
            </summary>
            <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator"/> オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.System#Collections#IList#Add(System.Object)">
            <summary>
            <see cref="T:System.Collections.IList"/> に項目を追加します。
            </summary>
            <param name="value"><see cref="T:System.Collections.IList"/> に追加するオブジェクト</param>
            <returns>新しい要素が挿入された位置。または、項目がコレクションに挿入されなかった場合は -1。</returns>
            <remarks>
            <paramref name="value"/> の型が <typeparamref name="T"/> の場合に、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Add(`0)"/> を実行します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            <see cref="T:System.Collections.IList"/> に特定の値が格納されているかどうかを判断します。
            </summary>
            <param name="value"><see cref="T:System.Collections.IList"/> 内で検索するオブジェクト</param>
            <returns><paramref name="value"/> が <see cref="T:System.Collections.IList"/> に存在する場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="value"/> の型が <typeparamref name="T"/> の場合に、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Contains(`0)"/> を実行します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            <see cref="T:System.Collections.IList"/> 内での指定した項目のインデックスを調べます。
            </summary>
            <param name="value"><see cref="T:System.Collections.IList"/> 内で検索するオブジェクト</param>
            <returns>リストに存在する場合は value のインデックス。それ以外の場合は -1。</returns>
            <remarks>
            <paramref name="value"/> の型が <typeparamref name="T"/> の場合に、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.IndexOf(`0)"/> を実行します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            <see cref="T:System.Collections.IList"/> の指定したインデックスの位置に項目を挿入します。
            </summary>
            <param name="index"><paramref name="value"/> を挿入する位置の、0 から始まるインデックス番号</param>
            <param name="value"><see cref="T:System.Collections.IList"/> に挿入するオブジェクト</param>
            <remarks>
            <paramref name="value"/> の型が <typeparamref name="T"/> の場合に、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Insert(System.Int32,`0)"/> を実行します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            <see cref="T:System.Collections.IList"/> 内で最初に見つかった特定のオブジェクトを削除します。
            </summary>
            <param name="value"><see cref="T:System.Collections.IList"/> から削除するオブジェクト</param>
            <remarks>
            <paramref name="value"/> の型が <typeparamref name="T"/> の場合に、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Remove(`0)"/> を実行します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.IsCompatibleObject(System.Object)">
            <summary>
            指定したオブジェクトが <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> の要素として互換性があるかどうかを返します。
            </summary>
            <param name="value">互換性があるかどうかを判定するオブジェクト</param>
            <returns>指定したオブジェクトが <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> の要素として互換性がある場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.CopyTo(System.Array,System.Int32)">
            <summary>
            <see cref="T:System.Collections.ICollection"/> の要素を <see cref="T:System.Array"/> にコピーします。<see cref="T:System.Array"/> の特定のインデックスからコピーが開始されます。
            </summary>
            <param name="array">
            <see cref="T:System.Collections.ICollection"/> から要素がコピーされる 1 次元の <see cref="T:System.Array"/>。
            <see cref="T:System.Array"/> には、0 から始まるインデックス番号が必要です。
            </param>
            <param name="index">コピーの開始位置となる、<paramref name="array"/> 内の 0 から始まるインデックス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.ClearItems">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> からすべての要素を削除します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.GetItem(System.Int32)">
            <summary>
            指定したインデックスにある要素を取得します。
            </summary>
            <param name="index">取得する要素の 0 から始まるインデックス番号</param>
            <returns>指定したインデックスにある要素</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.InsertItem(System.Int32,`0)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> 内の指定したインデックスの位置に要素を挿入します。
            </summary>
            <param name="index"><paramref name="item"/> を挿入する位置の 0 から始まるインデックス</param>
            <param name="item">挿入するオブジェクト。 参照型の場合、null の値を使用できます。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.RemoveItem(System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> の指定したインデックスにある要素を削除します。
            </summary>
            <param name="index">削除する要素の 0 から始まるインデックス番号</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.SetItem(System.Int32,`0)">
            <summary>
            指定したインデックス位置にある要素を置き換えます。
            </summary>
            <param name="index">置き換える要素の 0 から始まるインデックス番号</param>
            <param name="item">指定したインデックス位置に存在する要素の新しい値。 参照型の場合、null の値を使用できます。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Move(System.Int32,System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> の要素の位置を変更します。
            </summary>
            <param name="oldIndex">移動させる要素の現在の位置を示す 0 から始まるインデックス番号</param>
            <param name="newIndex">移動させる要素の移動先の位置を示す 0 から始まるインデックス番号</param>
            <remarks>
            継承クラスにおいて override する際は、なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.MoveItem(System.Int32,System.Int32)"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.MoveItem(System.Int32,System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> の要素の位置を変更します。
            </summary>
            <param name="oldIndex">移動させる要素の現在の位置を示す 0 から始まるインデックス番号</param>
            <param name="newIndex">移動させる要素の移動先の位置を示す 0 から始まるインデックス番号</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.AddRange(`0[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> の末尾にオブジェクトを追加します。
            </summary>
            <param name="items"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> の末尾に追加するオブジェクトの配列</param>
            <remarks>
            末尾を開始位置として、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.InsertRange(System.Int32,`0[])"/> メソッドを呼び出します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            指定したコレクションの要素を <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> の末尾に追加します。
            </summary>
            <param name="collection">末尾に追加するオブジェクトの列挙子</param>
            <remarks>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.AddRange(`0[])"/> メソッドを呼び出します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.InsertRange(System.Int32,`0[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> 内の指定したインデックスの位置に要素を挿入します。
            </summary>
            <param name="startIndex"><paramref name="items"/> を挿入する位置の 0 から始まるインデックス</param>
            <param name="items">挿入するオブジェクトの配列</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            指定したコレクションの要素を <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> の指定したインデックス位置に挿入します。
            </summary>
            <param name="startIndex"><paramref name="collection"/> の要素を挿入する位置の 0 から始まるインデックス</param>
            <param name="collection">挿入するオブジェクトの列挙子</param>
            <remarks>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.InsertRange(System.Int32,`0[])"/> メソッドを呼び出します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Items">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> をラップする <see cref="T:System.Collections.Generic.IList`1"/> ラッパーを取得、設定します。<br/>
            コンストラクタ内等、インスタンスの生成直後を除いて、なるべく set 操作は行わないでください。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> をラップする <see cref="T:System.Collections.Generic.IList`1"/> ラッパー</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Item(System.Int32)">
            <summary>
            指定したインデックスにある要素を取得または設定します。
            </summary>
            <param name="index">取得または設定する要素の 0 から始まるインデックス番号</param>
            <value>指定したインデックスにある要素</value>
            <remarks>
            継承クラスにおいて override する際は、このプロパティではなく、なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.GetItem(System.Int32)"/> / <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.SetItem(System.Int32,`0)"/> 
            の 各メソッドの override を検討してください。<br/>
            <see cref="T:System.Collections.IList"/> にキャストされた際、意図通り動作しなくなる可能性があります。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> に格納されている要素の数を取得します。
            </summary>
            <value>格納されている要素の数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.IsReadOnly">
            <summary>
            <see cref="T:System.Collections.Generic.ICollection`1"/> が読み取り専用かどうかを示す値を取得します。
            </summary>
            <value>読み取り専用の場合は true。読み取り専用でない場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.System#Collections#IList#IsFixedSize">
            <summary>
            <see cref="T:System.Collections.IList"/> が固定サイズかどうかを示す値を取得します。
            </summary>
            <value><see cref="T:System.Collections.IList"/> が固定サイズの場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.System#Collections#IList#IsReadOnly">
            <summary>
            <see cref="T:System.Collections.IList"/> が読み取り専用かどうかを示す値を取得します。
            </summary>
            <value><see cref="T:System.Collections.IList"/> が読み取り専用の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            指定したインデックスにある要素を取得または設定します。
            </summary>
            <param name="index">取得または設定する要素の、0 から始まるインデックス番号</param>
            <returns>指定したインデックスにある要素</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.IsSynchronized">
            <summary>
            <see cref="T:System.Collections.ICollection"/> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。
            </summary>
            <value><see cref="T:System.Collections.ICollection"/> へのアクセスが同期されている (スレッド セーフである) 場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.SyncRoot">
            <summary>
            <see cref="T:System.Collections.ICollection"/> へのアクセスを同期するために使用できるオブジェクトを取得します。
            </summary>
            <value><see cref="T:System.Collections.ICollection"/> へのアクセスを同期するために使用できるオブジェクト</value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.CountString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.IndexerName">
            <summary>
            プロパティ変更イベント(<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.PropertyChanged"/>)において、要素のインデックスが
            変更されたことを示すために用いるプロパティ名の代替文字列を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            指定したコレクションからコピーされる要素を格納する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="collection">要素のコピー元のコレクション</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> が null の場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            指定したリストからコピーされた要素を格納する  <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="list">要素のコピー元のリスト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.CopyFrom(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            指定したコレクションから要素をコピーして格納します。
            </summary>
            <param name="collection">要素のコピー元のコレクション。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.CollectionChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.PropertyChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.OnPropertyChanged(System.String)">
            <summary>
            指定したプロパティの値の変更イベントを発生させます。
            </summary>
            <param name="propertyName">値の変更されたプロパティ名</param>
            <remarks>
            継承クラスにて override する場合は、<paramref name="propertyName"/> に対して、必ず <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/> の
            設定を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.ClearItems">
            <inheritdoc/>
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1"/> からすべての要素を削除し、コレクションの変更イベントを発生させます。
            </summary>
            <remarks>
            継承クラスにおいて、イベントの発生タイミングや発生するイベントの内容を変更せず、コレクションの要素の削除処理のみを
            変更したい場合には、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.ClearItemsMain"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.ClearItemsMain">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1"/> からすべての要素を削除します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.InsertItem(System.Int32,`0)">
            <inheritdoc/>
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1"/> 内の指定したインデックスの位置に要素を挿入し、コレクションの変更イベントを発生させます。
            </summary>
            <remarks>
            継承クラスにおいて、イベントの発生タイミングや発生するイベントの内容を変更せず、コレクションの要素の挿入処理のみを
            変更したい場合には、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.InsertItemMain(System.Int32,`0)"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.InsertItemMain(System.Int32,`0)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1"/> 内の指定したインデックスの位置に要素を挿入します。
            </summary>
            <param name="index"><paramref name="item"/> を挿入する位置の 0 から始まるインデックス</param>
            <param name="item">挿入するオブジェクト。 参照型の場合、null の値を使用できます。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.RemoveItem(System.Int32)">
            <inheritdoc/>
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1"/> の指定したインデックスにある要素を削除し、コレクションの変更イベントを発生させます。
            </summary>
            <remarks>
            継承クラスにおいて、イベントの発生タイミングや発生するイベントの内容を変更せず、コレクションの要素の削除処理のみを
            変更したい場合には、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.RemoveItemMain(System.Int32)"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.RemoveItemMain(System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1"/> の指定したインデックスにある要素を削除します。
            </summary>
            <param name="index">削除する要素の 0 から始まるインデックス番号</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.SetItem(System.Int32,`0)">
            <inheritdoc/>
            <summary>
            指定したインデックス位置にある要素を置き換え、コレクションの変更イベントを発生させます。
            </summary>
            <remarks>
            継承クラスにおいて、イベントの発生タイミングや発生するイベントの内容を変更せず、コレクションの要素の置き換え処理のみを
            変更したい場合には、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.SetItemMain(System.Int32,`0)"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.SetItemMain(System.Int32,`0)">
            <summary>
            指定したインデックス位置にある要素を置き換えます。
            </summary>
            <param name="index">置き換える要素の 0 から始まるインデックス番号</param>
            <param name="item">指定したインデックス位置に存在する要素の新しい値。 参照型の場合、null の値を使用できます。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.MoveItem(System.Int32,System.Int32)">
            <inheritdoc/>
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1"/> の要素の位置を変更し、コレクションの変更イベントを発生させます。
            </summary>
            <remarks>
            継承クラスにおいて、イベントの発生タイミングや発生するイベントの内容を変更せず、コレクションの要素の移動処理のみを
            変更したい場合には、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.MoveItemMain(System.Int32,System.Int32)"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.MoveItemMain(System.Int32,System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1"/> の要素の位置を変更します。
            </summary>
            <param name="oldIndex">移動させる要素の現在の位置を示す 0 から始まるインデックス番号</param>
            <param name="newIndex">移動させる要素の移動先の位置を示す 0 から始まるインデックス番号</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.InsertRange(System.Int32,`0[])">
            <inheritdoc/>
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> 内の指定したインデックスの位置に要素を挿入し、コレクションの変更イベントを発生させます。
            </summary>
            <remarks>
            継承クラスにおいて、イベントの発生タイミングや発生するイベントの内容を変更せず、コレクションの要素の挿入処理のみを
            変更したい場合には、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.InsertRangeMain(System.Int32,`0[])"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.InsertRangeMain(System.Int32,`0[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1"/> 内の指定したインデックスの位置に要素を挿入します。
            </summary>
            <param name="startIndex"><paramref name="items"/> を挿入する位置の 0 から始まるインデックス</param>
            <param name="items">挿入するオブジェクトの配列</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.BlockReentrancy">
            <summary>
            このコレクションを変更するための再入試行を禁止します。
            </summary>
            <returns>オブジェクトの破棄に使用できる <see cref="T:System.IDisposable"/> オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.CheckReentrancy">
            <summary>
            このコレクションを変更するための再入試行をチェックします。
            </summary>
            <exception cref="T:System.InvalidOperationException">
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.BlockReentrancy"/> が呼び出され、その <see cref="T:System.IDisposable"/> 戻り値がまだ破棄されていない場合にスローします。 <br/>
            通常、これは、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.CollectionChanged"/> イベントの発生中に、コレクションに対して追加の変更が実行されることを意味します。 <br/>
            ただし、このような状況が発生するかどうかは、派生クラスが <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.BlockReentrancy"/> の呼び出しを選択するタイミングに応じて異なります。
            </exception>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1._monitor">
            <summary>
            コレクション変更イベントの発生監視オブジェクト用オブジェクトです。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.CollectionChanged">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.PropertyChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.IsEventHandling">
            <summary>
            プロパティ、もしくは、コレクションの変更イベントのハンドリング中かどうかを取得、設定します。
            </summary>
            <value>プロパティ、もしくは、コレクションの変更イベントのハンドリング中の場合は true。それ以外の場合は false。</value>
            <remarks>
            true に設定されている場合、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.PropertyChanged"/> イベント、および、
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.CollectionChanged"/> イベントの発生が抑制されます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.SimpleMonitor">
            <summary>
            コレクション変更イベントの発生を監視するためのクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.SimpleMonitor.Enter">
            <summary>
            コレクション変更イベントの発生回数を加算します。<br />
            コレクション変更イベントの処理を開始する(イベントを発生させる)際に呼び出してください。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.SimpleMonitor.Dispose">
            <summary>
            コレクション変更イベントの発生回数を減算します。<br />
            コレクション変更イベントの処理が完了した際に呼び出してください。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.SimpleMonitor._busyCount">
            <summary>
            コレクション変更イベントの発生回数です。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.SimpleMonitor.Busy">
            <summary>
            コレクション変更イベントの処理中かどうかを取得します。
            </summary>
            <value>コレクション変更イベントの処理中である場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection`1">
            <summary>
            UI(コレクション系コントロール類)のバインディング元となれるジェネリックコレクションを示すインターフェースです。
            </summary>
            <typeparam name="T">値の型</typeparam>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection">
            <summary>
            UI(コレクション系コントロール類)のバインディング元となれるコレクションを示すインターフェースです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IOpenUIPropertyCollection">
            <summary>
            コレクション要素のプロパティの名前を指定して、UI側からロジック側の値を取得、及び、設定できるよう公開するインターフェースです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenPropertyCollection">
            <summary>
            要素のプロパティ名を指定して、対象の要素のプロパティ値の設定、及び、取得ができるコレクションであることを示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenPropertyCollection.GetValue(System.Int32,System.String)">
            <summary>
            指定したインデックスに対応するコレクション要素の、指定したプロパティの値を取得します。
            </summary>
            <param name="index">インデックス</param>
            <param name="propName">プロパティ名</param>
            <returns>プロパティに設定されている値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenPropertyCollection.SetValue(System.Int32,System.Object,System.String)">
            <summary>
            指定したインデックスに対応するコレクション要素の、指定したプロパティに値を設定します。
            </summary>
            <param name="index">インデックス</param>
            <param name="value">プロパティに設定する値</param>
            <param name="propName">プロパティ名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IOpenUIPropertyCollection.PopValue(System.Int32,System.String)">
            <summary>
            UI側からロジック側の指定したインデックスに対応するコレクション要素の、指定したプロパティの値を取得します。
            </summary>
            <param name="index">コレクション要素のインデックス</param>
            <param name="propName">ロジック側プロパティ名</param>
            <returns>ロジック側プロパティ値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IOpenUIPropertyCollection.PushValue(System.Int32,System.Object,System.String)">
            <summary>
            UI側からロジック側の指定したインデックスに対応するコレクション要素の、指定したプロパティに値を設定します。
            </summary>
            <param name="index">コレクション要素のインデックス</param>
            <param name="value">設定値</param>
            <param name="propName">ロジック側プロパティ名</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISourceHolderCollection">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject"/> を保持しているオブジェクトを格納するコレクションであることを示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISourceHolderCollection.GetSource(System.Int32,System.String)">
            <summary>
            指定したインデックスに対応するコレクション要素から、指定した名前のバインディングソースを取得します。
            </summary>
            <param name="index">インデックス</param>
            <param name="sourceName">バインディングソース名</param>
            <returns>バインディングソースオブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.Initialize">
            <summary>
            インスタンスの初期化を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.GetItemAttribute(System.Int32,System.String)">
            <summary>
            指定したインデックスの要素の、指定した公開プロパティに設定されている項目属性を取得します。
            </summary>
            <param name="index">インデックス</param>
            <param name="propName">公開プロパティ名</param>
            <returns>項目属性</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.Name">
            <summary>
            インスタンスの識別名を取得、設定します。
            </summary>
            <value>識別名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.SourceMapping">
            <summary>
            コレクション要素のデータの実体の参照元オブジェクト間に設定される、メンバーのマッピング情報を取得、設定します。
            </summary>
            <value>参照元オブジェクト間に設定される、メンバーのマッピング情報</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.SourceMappingInitialized">
            <summary>
            コレクション要素のデータの実体の参照元オブジェクト間に設定される、メンバーのマッピング情報の初期化が完了したときに発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.OpenProperties">
            <summary>
            コレクション要素のUI側への公開プロパティ一覧を取得、設定します。
            </summary>
            <value>コレクション要素のUI側への公開プロパティ一覧</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.OpenPropertiesInitialized">
            <summary>
            コレクション要素のUI側への公開プロパティの初期化が完了したときに発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.IsDataReadOnly">
            <summary>
            自身、及び、コレクション要素の公開プロパティデータが読み取り専用かどうかを取得、設定します。
            </summary>
            <value>読み取り専用の場合は true。それ以外の場合は false。</value>
            <remarks>
            true に設定されている場合、<br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged.ValidationWarningChanged"/> <br/>
            の各イベントは発生しません。<br/>
            このプロパティは、通常、動的に変更することはありません。<br/>
            パフォーマンスの観点から、特定の処理中に一時的に各イベントの発生を抑制させるだけである場合は、
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.IgnoreDataChanged"/> プロパティを設定してください。
            </remarks>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.IsDataReadOnlyChanged">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.IsDataReadOnly"/> プロパティが変更されたときに発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.IgnoreDataChanged">
            <summary>
            自身、および、コレクション要素の <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged.ValidationWarningChanged"/> <br/>
            の各イベントの発生を抑制するかどうかを取得、設定します。
            </summary>
            <value>イベントの発生を抑制する場合は true。それ以外の場合は false。</value>
            <remarks>
            true に設定されている場合、各イベントは発生しません。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.IsDataReadOnly"/> プロパティと異なり、特定の処理中に一時的に各イベントの発生を抑制させる目的で使用します。
            </remarks>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.IgnoreDataChangedChanged">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.IgnoreDataChanged"/> プロパティが変更されたときに発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.Initialized">
            <summary>
            インスタンスの初期化が完了したときに発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.ItemAttributeNeeded">
            <summary>
            項目属性情報が要求されたときに発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObjectCollection.ItemType">
            <summary>
            コレクションの要素の型を取得します。
            </summary>
            <value>コレクションの要素の型</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISortableOpenProertyCollection`1">
            <summary>
            要素を並び替え可能な <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenPropertyCollection"/> ジェネリックインタフェースです。
            </summary>
            <typeparam name="T">コレクションの要素の型</typeparam>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISortableOpenProertyCollection">
            <summary>
            要素を並び替え可能な <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenPropertyCollection"/> インターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISortableOpenProertyCollection.Sort(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem[])">
            <summary>
            指定した大小比較用キー項目をソートキーとして使用し、コレクションの要素を並び替えます。
            </summary>
            <param name="keys">大小比較用キー項目</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISortableOpenProertyCollection.Sort(System.String,Ill.Incorporated.Aladdinoffice.Framework.Attributes.SortDirectionType)">
            <summary>
            対象のプロパティ名をソートキーとして使用し、指定した方向へコレクションの要素を並び替えます。
            </summary>
            <param name="key">プロパティ名</param>
            <param name="direction">並び替えの方向</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISortableOpenProertyCollection.Sort(System.String)">
            <summary>
            指定した公開プロパティをソートキーとして使用し、コレクションの要素を並び替えます。
            </summary>
            <param name="key">公開プロパティ名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISortableOpenProertyCollection.UndoSort">
            <summary>
            コレクションの要素を、並び替えを行う前の状態に戻します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISortableOpenProertyCollection.CurrentSortedKeys">
            <summary>
            現在のソートキー情報を取得、設定します。
            </summary>
            <value>現在のソートキー情報</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISortableOpenProertyCollection`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>
            指定した比較クラスを使用して、コレクションの要素を並び替えます。
            </summary>
            <param name="comparer">要素を比較するクラス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISortableOpenProertyCollection`1.Sort``1(System.Func{`0,``0})">
            <summary>
            指定した比較キー抽出関数を使用して、コレクションの要素を並び替えます。
            </summary>
            <typeparam name="TKey"><paramref name="keySelector"/> によって返されるキーの型</typeparam>
            <param name="keySelector">要素から比較キーを抽出する関数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISortableOpenProertyCollection`1.Sort``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            指定した比較キー抽出関数で抽出した比較キーを、指定した比較クラスで比較し、コレクションの要素を並び替えます。
            </summary>
            <typeparam name="TKey"><paramref name="keySelector"/> によって返されるキーの型</typeparam>
            <param name="keySelector">要素から比較キーを抽出する関数</param>
            <param name="comparer">比較キーの大小比較を行う <see cref="T:System.Collections.Generic.IComparer`1"/></param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.DEFAULT_NAME">
            <summary>
            既定のインスタンス識別名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.DEFAULT_CAPACITY">
            <summary>
            格納可能な要素の数の既定値です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.DEFAULT_COUNT">
            <summary>
            格納する要素の数の既定値です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.PROPERTYNAME_CAPACITY">
            <summary>
            例外メッセージで <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> プロパティを表すときに用いる文字列です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.PROPERTYNAME_COUNT">
            <summary>
            例外メッセージで <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/> プロパティを表すときに用いる文字列です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.PROPERTYNAME_DEFAULT_COUNT">
            <summary>
            例外メッセージで <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.DefaultCount"/> プロパティを表すときに用いる文字列です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.NameString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Name"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.SourcesString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Sources"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.SourceMappingString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.SourceMapping"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OpenPropertiesString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OpenProperties"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IsDataReadOnlyString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IsDataReadOnly"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IgnoreDataChangedString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IgnoreDataChanged"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.CurrentSortedKeysString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.CurrentSortedKeys"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.CapacityString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.DefaultCountString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.DefaultCount"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.#ctor(System.Int32,System.Int32)">
            <summary>
            格納可能な要素数、及び、既定の要素数を指定して、 <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="capacity">格納可能な要素数</param>
            <param name="count">既定の要素数</param>
            <exception cref="T:System.ArgumentException"><paramref name="count"/> が <paramref name="capacity"/> より大きい場合にスローします。</exception>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1._name">
            <summary>
            インスタンスの識別名です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1._sources">
            <summary>
            コレクションの要素の参照元オブジェクト属性です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InstanciateSources">
            <summary>
            コレクションの要素の参照元オブジェクト属性を設定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1._sourceMapping">
            <summary>
            コレクション要素のデータの実体の参照元オブジェクト間に設定される、メンバーのマッピング情報です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InstanciateSourceMapping">
            <summary>
            コレクション要素のデータの実体の参照元オブジェクト間に設定される、メンバーのマッピング情報の格納用ディクショナリを生成します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.SourceMapping"/> プロパティを新たに設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InitializeSourceMapping">
            <summary>
            コレクション要素のデータの実体の参照元オブジェクト間に設定される、メンバーのマッピング情報を初期化します。
            </summary>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnSourceMappingInitialized"/> メソッドを実行して
            イベントを発生させて下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InitializeSourceMappingMain">
            <summary>
            コレクション要素のデータの実体の参照元オブジェクト間に設定される、メンバーのマッピング情報の初期化処理を実行します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.SourceMapping"/> プロパティに要素を追加して 初期化します。<br/>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InitializeSourceMapping"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行後の
            適切なタイミングで、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnSourceMappingInitialized"/> メソッドを呼び出すようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnSourceMappingInitialized">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.SourceMappingInitialized"/> イベントを発生させます。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1._openProperties">
            <summary>
            コレクション要素のUI側への公開プロパティ一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InstanciateOpenProperties">
            <summary>
            コレクション要素のUI側への公開プロパティ一覧の管理用ディクショナリを生成します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OpenProperties"/> プロパティを新たに設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InitializeOpenProperties">
            <summary>
            コレクション要素のUI側への公開プロパティ設定を初期化します。
            </summary>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnOpenPropertiesInitialized"/> メソッドを実行して
            イベントを発生させて下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InitializeOpenPropertiesMain">
            <summary>
            コレクション要素のUI側への公開プロパティ設定の初期化処理を実行します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OpenProperties"/> プロパティに要素を追加して 初期化します。<br/>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InitializeOpenProperties"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行後の
            適切なタイミングで、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnOpenPropertiesInitialized"/> メソッドを呼び出すようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnOpenPropertiesInitialized">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OpenPropertiesInitialized"/> イベントを発生させます。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1._isDataReadOnly">
            <summary>
            自身、及び、コレクション要素の公開プロパティデータが読み取り専用かどうかを示す値です。
            </summary>
            <value>読み取り専用の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnIsDataReadOnlyChanged">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IsDataReadOnlyChanged"/> イベントを発生させます。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1._ignoreDataChanged">
            <summary>
            自身、および、コレクション要素の <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged.ValidationWarningChanged"/> <br/>
            の各イベントの発生を抑制するかどうかを示す値です。
            </summary>
            <value>イベントの発生を抑制する場合は true。それ以外の場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnIgnoreDataChangedChanged">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IgnoreDataChangedChanged"/> イベントを発生させます。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1._isInitialized">
            <summary>
            インスタンスの初期化処理が完了しているかどうかを示す値です。
            </summary>
            <value>インスタンスの初期化処理が完了している場合は true。それ以外の場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Initialize">
            <inheritdoc/>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IsInitialized"/> プロパティを変更するようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InitializeMain">
            <summary>
            インスタンスの初期化処理を実行します。
            </summary>
            <remarks>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Initialize"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行前後の
            適切なタイミングで、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IsInitialized"/> プロパティを変更するようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnInitialized">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Initialized"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.GetItemAttribute(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnItemAttributeNeeded(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ItemAttributeEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ItemAttributeNeeded"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnDataChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.DataChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Item_DataChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <summary>
            コレクション要素の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            自身の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.DataChanged"/> イベントとして再通知します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.GetEventIndex(System.Object)">
            <summary>
            指定したイベント発生元オブジェクトのコレクション内でのインデックスを取得します。
            </summary>
            <param name="eObj">イベント発生元オブジェクト</param>
            <returns>
            指定したオブジェクトがコレクションの要素、もしくは、コレクションの要素の参照元オブジェクトの場合は、コレクション内でのインデックスを、
            他の場合は -1 を、
            それぞれ返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnValidationErrorChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ValidationErrorChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Item_ValidationErrorChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <summary>
            コレクション要素の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            自身の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ValidationErrorChanged"/> イベントとして再通知します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnValidationWarningChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ValidationWarningChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Item_ValidationWarningChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <summary>
            コレクション要素の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged.ValidationWarningChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            自身の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ValidationWarningChanged"/> イベントとして再通知します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.PopValue(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.PushValue(System.Int32,System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.GetValue(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.GetValue``1(System.Int32,System.String)">
            <summary>
            指定したインデックスに対応するコレクション要素の、指定したプロパティの値を指定した型で取得します。
            </summary>
            <typeparam name="TValue">取得する値の型</typeparam>
            <param name="index">インデックス</param>
            <param name="propName">プロパティ名</param>
            <returns>プロパティに設定されている値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.SetValue(System.Int32,System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Reset">
            <inheritdoc/>
            <remarks>
            このメソッド内でロジックデータに変更があっても、<br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.DataChanged"/><br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ValidationErrorChanged"/><br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ValidationWarningChanged"/><br/>
            の各イベントは発生しません。<br/>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnResetting(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResettingEventArgs)"/> 、
            及び、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnResetCompleted(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResetEventArgs)"/> の各メソッドを実行してイベントを発生させて下さい。<br/>
            また、適切なタイミングで <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IsResetting"/> プロパティを変更するようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ResetMain">
            <summary>
            保持しているメンバーの既定値設定処理を実行します。
            </summary>
            <remarks>
            通常は、要素の数を既定の数に戻し、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> 分のすべてのコレクション要素の <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IResetable.Reset"/> を実行します。<br/>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Reset"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行前後の
            適切なタイミングで、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnResetting(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResettingEventArgs)"/> 、及び、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnResetCompleted(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResetEventArgs)"/> 
            の各メソッドを呼び出すようにして下さい。<br/>
            また、適切なタイミングで <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IsResetting"/> プロパティを変更するようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnResetting(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResettingEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Resetting"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnResetCompleted(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResetEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ResetCompleted"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.GetSource(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.GetSource``1(System.Int32,System.String)">
            <summary>
            指定したインデックスに対応するコレクション要素から、指定した名前のバインディングソースを指定した型で取得します。
            </summary>
            <param name="index">インデックス</param>
            <param name="sourceName">バインディングソース名</param>
            <returns>バインディングソースオブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.BeginEdit">
            <summary>
            コレクション、及び、コレクションの要素の値の編集を開始します。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.BeginEdit"/> が呼び出された後、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Commit"/>、もしくは、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Rollback"/> がまだ呼び出されていない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Rollback">
            <summary>
            コレクション、及び、コレクションの要素の値の編集を取り消して、以前の状態に戻します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Commit">
            <summary>
            コレクション、及び、コレクションの要素の値の編集を確定させます。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.BeginEdit"/> がまだ呼び出されていない場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Sort(System.Collections.Generic.IComparer{`0})">
            <inheritdoc/>
            <remarks>
            継承クラスにおいて override する際は、他の Sort メソッドと挙動を統一させるためにも、
            なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ExecSort``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Sort``1(System.Func{`0,``0})">
            <inheritdoc/>
            <remarks>
            継承クラスにおいて override する際は、他の Sort メソッドと挙動を統一させるためにも、
            なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ExecSort``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Sort``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})">
            <inheritdoc/>
            <remarks>
            継承クラスにおいて override する際は、他の Sort メソッドと挙動を統一させるためにも、
            なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ExecSort``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1._defaultSortedKeys">
            <summary>
            既定のソートキーです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Sort(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem[])">
            <inheritdoc/>
            <remarks>
            継承クラスにおいて override する際は、他の Sort メソッドと挙動を統一させるためにも、
            なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ExecSort``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})"/> メソッドの override を検討してください。<br/>
            要素の大小比較には <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OpenPropertyComparer"/> プロパティで指定される比較用オブジェクトを用います。<br/>
            要素同士の比較条件を変更したい場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Compare(`0,`0)"/>、もしくは、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.CompareDefaultOrderIndex(`0,`0)"/> メソッドの
            override ではなく、まずは、 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OpenPropertyComparer"/> プロパティの設定変更を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Sort(System.String,Ill.Incorporated.Aladdinoffice.Framework.Attributes.SortDirectionType)">
            <inheritdoc/>
            <remarks>
            継承クラスにおいて override する際は、他の Sort メソッドと挙動を統一させるためにも、
            なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ExecSort``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})"/> メソッドの override を検討してください。<br/>
            要素の大小比較には <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OpenPropertyComparer"/> プロパティで指定される比較用オブジェクトを用います。<br/>
            要素同士の比較条件を変更したい場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Compare(`0,`0)"/>、もしくは、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.CompareDefaultOrderIndex(`0,`0)"/> メソッドの
            override ではなく、まずは、 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OpenPropertyComparer"/> プロパティの設定変更を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Sort(System.String)">
            <inheritdoc/>
            <remarks>
            指定した公開プロパティによる並び替えが行われている場合、並び替えの方向のみを変えて再度、並び替えを実行します。<br/>
            並び替えの方向は昇順 ←→ 降順 が交互に変更されます。<br/>
            <br/>
            継承クラスにおいて override する際は、他の Sort メソッドと挙動を統一させるためにも、
            なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ExecSort``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})"/> メソッドの override を検討してください。<br/>
            要素の大小比較には <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OpenPropertyComparer"/> プロパティで指定される比較用オブジェクトを用います。<br/>
            要素同士の比較条件を変更したい場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Compare(`0,`0)"/>、もしくは、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.CompareDefaultOrderIndex(`0,`0)"/> メソッドの
            override ではなく、まずは、 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OpenPropertyComparer"/> プロパティの設定変更を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.UndoSort">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ClearSortedItems">
            <summary>
            コレクションの要素の並び替え後の状態をクリアします。
            </summary>
            <returns>
            並び替え後の状態をクリアした場合は true を、すでに並び替え前の状態であるなど、クリア処理が行われなかった場合は false を返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Compare(`0,`0)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.CompareDefaultOrderIndex(`0,`0)">
            <summary>
            2 つのコレクション要素を既定の並び順で比較し、一方が他方より小さいか、等しいか、大きいかを示す値を返します。
            </summary>
            <param name="x">比較対象の第 1 オブジェクト。</param>
            <param name="y">2 番目に比較するオブジェクト。</param>
            <returns>
            <paramref name="x"/> と <paramref name="y"/> の相対値を示す符号付き整数。
            
            0 より小さい値 => <paramref name="x"/> が <paramref name="y"/> より小さい。
            0              => <paramref name="x"/> と <paramref name="y"/> が等しい。
            0 より大きい値 => <paramref name="x"/> が <paramref name="y"/> より大きい。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InstanciateOpenPropertyComparer">
            <summary>
            コレクションの要素の大小関係を公開プロパティで比較する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenPropertyComparer`1"/> オブジェクトを生成します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OpenPropertyComparer"/> プロパティを新たに設定します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1._sorted">
            <summary>
            並び替え結果のコレクションです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ExecSort``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            指定した比較キー抽出関数で抽出した比較キーを、指定した比較クラスで比較し、コレクションの要素を並び替えます。
            </summary>
            <typeparam name="TKey"><paramref name="keySelector"/> によって返されるキーの型</typeparam>
            <param name="keySelector">要素からキーを抽出する関数</param>
            <param name="comparer">キーを比較する <see cref="T:System.Collections.Generic.IComparer`1"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnSorted">
            <summary>
            並び替え完了通知を行います。
            </summary>
            <remarks>
            ・<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.CurrentSortedKeys"/> の <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> イベント。<seealso cref="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.CurrentSortedKeysString"/><br/>
            ・Item[] の <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> 変更イベント。<seealso cref="F:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.IndexerName"/><br/>
            ・<see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> 変更イベント。<br/>
            を順に発生させます。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1._current">
            <summary>
            外部に公開する分のコレクション要素を保持する <see cref="T:System.Collections.Generic.IList`1"/> ラッパーです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1._isCapacityChanging">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> プロパティの設定中かどうかを示す値です。
            </summary>
            <value><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> プロパティの設定中である場合は true。それ以外の場合は false。</value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1._defaultCount">
            <summary>
            既定で格納する要素の数を示す値です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.NewItem">
            <summary>
            コレクションの要素の新しいインスタンスを生成します。<br />
            ただし、インスタンスを生成するだけで、コレクションの要素としては追加しません。
            </summary>
            <returns>コレクションの要素の新しいインスタンス</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.AddRange(System.Int32)">
            <summary>
            指定した数の新しいコレクション要素を生成し、コレクションの末尾に追加します。
            </summary>
            <param name="number">追加する要素数</param>
            <returns>新しく追加したコレクションの要素の配列</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="number"/>で 1 より小さい値が指定された場合にスローします。</exception>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException">追加後の要素数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> を超える場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Add">
            <summary>
            新しいコレクション要素を一つ生成し、コレクションの末尾に追加します。
            </summary>
            <returns>新しく追加したコレクションの要素</returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException">追加後の要素数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> を超える場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.RemoveRange(System.Int32)">
            <summary>
            指定した数のコレクション要素を、コレクションの末尾から除去します。
            </summary>
            <param name="number">除去する要素の数</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="number"/>で 1 より小さい値が指定された場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Remove">
            <summary>
            コレクションの末尾の要素をコレクションから除去します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.SetCount(System.Int32)">
            <summary>
            格納されている要素の数が指定した数になるようにコレクションの要素を増減させます。
            </summary>
            <param name="number">格納する要素数</param>
            <remarks>
            このメソッドで要素の数を変更すると <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/> プロパティの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.PropertyChanged"/> イベントが発生します。<br/>
            継承クラスにおいて、イベントを発生させたくない場合、あるいは、イベントの発生タイミングを制御したい場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.SetCurrentItems(System.Int32)"/> メソッドを
            使用してください。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException"><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> の変更中の場合にスローします。</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="number"/> が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> より大きい場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.SetCurrentItems(System.Int32)">
            <summary>
            コレクションの要素の内、指定した数の分だけが外部に公開されるように設定します。
            </summary>
            <param name="number">外部に公開する要素の数</param>
            <remarks>
            このメソッドで要素の数を変更しても <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/> プロパティの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.PropertyChanged"/> イベントは
            発生しません。<br/>
            イベントを発生させたい場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.SetCount(System.Int32)"/> メソッドを呼び出してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ClearItemsMain">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InsertItemMain(System.Int32,`0)">
            <inheritdoc/>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException">追加後の要素数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> を超える場合。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.RemoveItemMain(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.SetItemMain(System.Int32,`0)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.MoveItemMain(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InsertRangeMain(System.Int32,`0[])">
            <inheritdoc/>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException">追加後の要素数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> を超える場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InitializeItem(`0)">
            <summary>
            コレクションに新たに追加される要素に対して、必要な初期設定を行います。<br />
            通常は、イベントハンドラの登録などを行います。
            </summary>
            <param name="item">新たに追加するコレクション要素</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.FinalizeItem(`0)">
            <summary>
            コレクションから除去する要素に対して、不要になる設定の解除を行います。<br />
            通常は、イベントハンドラの解除などを行います。
            </summary>
            <param name="item">コレクションから除去する要素</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.AddItemEventHandler(`0)">
            <summary>
            指定したコレクション要素にイベントハンドラの登録を行います。
            </summary>
            <param name="item">コレクション要素</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.RemoveItemEventHandler(`0)">
            <summary>
            指定したコレクション要素に登録されているイベントハンドラの解除を行います。
            </summary>
            <param name="item">コレクション要素</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.AsEnumerableForCapacity">
            <summary>
            コレクション内から <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> 分の全要素を取得します。
            </summary>
            <returns><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> 分の全要素</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <inheritdoc/>
            <remarks>
            一旦、<see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged"/> イベントを発生させた後、
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.DataChanged"/> イベントに変換して再通知します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1._propertyInfo">
            <summary>
            プロパティのメタデータ情報をキャッシュして保持しておくディクショナリです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.GetPublicPropertyInfo(System.String)">
            <summary>
            指定した名前のパブリックプロパティのメタデータ情報を取得します。
            </summary>
            <param name="propertyName">プロパティ名</param>
            <returns>プロパティのメタデータ情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ExtractDebugData">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.LoadDebugData(Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.NeedsToFireValidationEvent">
            <summary>
            値の変更、及び、検証に関するイベントを発生させる必要があるかどうかを取得します。
            </summary>
            <returns>イベントを発生させる必要がある場合は true。それ以外の場合は false。</returns>
            <remarks>
            通常は、<br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.DataChanged"/><br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ValidationErrorChanged"/><br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ValidationWarningChanged"/><br/>
            の各イベントの発生前に参照され、このメソッドの戻り値に応じて当該イベントを発生させます。<br/>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IsDataReadOnly"/>、<seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IgnoreDataChanged"/> の各プロパティも参照してください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Name">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Sources">
            <summary>
            コレクションの要素の参照元オブジェクト属性を取得、設定します。
            </summary>
            <value>コレクションの要素の参照元オブジェクト属性</value>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.OnPropertyChanged(System.String)"/> メソッドを実行して、
            イベントを発生させてください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.SourceMapping">
            <inheritdoc/>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.OnPropertyChanged(System.String)"/> メソッドを実行して、
            イベントを発生させてください。
            </remarks>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.SourceMappingInitialized">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OpenProperties">
            <inheritdoc/>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.OnPropertyChanged(System.String)"/> メソッドを実行して、
            イベントを発生させてください。
            </remarks>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OpenPropertiesInitialized">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IsDataReadOnly">
            <inheritdoc/>
            <summary>
            自身、及び、コレクション要素の公開プロパティデータが読み取り専用かどうかを取得、設定します。
            </summary>
            <remarks>
            true に設定されている場合、<br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged.ValidationWarningChanged"/> <br/>
            の各イベントは発生しません。<br/>
            このプロパティは、通常、動的に変更することはありません。<br/>
            パフォーマンスの観点から、特定の処理中に一時的に各イベントの発生を抑制させるだけである場合は、
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IgnoreDataChanged"/> プロパティを設定してください。<br/>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.OnPropertyChanged(System.String)"/> メソッドを実行して、
            イベントを発生させてください。
            </remarks>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IsDataReadOnlyChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IgnoreDataChanged">
            <inheritdoc/>
            <summary>
            自身、および、コレクション要素の <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged.ValidationWarningChanged"/> <br/>
            の各イベントの発生を抑制するかどうかを取得、設定します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IgnoreDataChangedChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IsInitialized">
            <summary>
            インスタンスの初期化処理が完了しているかどうかを取得、設定します。
            </summary>
            <value>インスタンスの初期化処理が完了している場合は true。それ以外の場合は false。</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Initialized">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ItemAttributeNeeded">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ItemType">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.System#Collections#ICollection#IsSynchronized">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.System#Collections#ICollection#SyncRoot">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.DataChanged">
            <summary>
            自身、および、コレクション要素のロジックデータの変更が行われたときに発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ValidationErrorChanged">
            <summary>
            自身、及び、コレクション要素のデータ変更イベント処理のエラー状態が変更されたときに発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ValidationWarningChanged">
            <summary>
            自身、及び、コレクション要素のデータ変更イベント処理の警告状態が変更されたときに発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IsResetting">
            <summary>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Reset"/> 処理を実行中かどうかを取得、設定します。
            </summary>
            <value><see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Reset"/> 処理を実行中の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Resetting">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ResetCompleted">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Backup">
            <summary>
            メンバーの確定値保持用のディクショナリを取得、設定します。
            </summary>
            <value>メンバーの確定値保持用のディクショナリ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IsSuspended">
            <summary>
            コレクション、及び、コレクションの要素のメンバーの値の編集中かどうかを取得します。
            </summary>
            <value>コレクション、及び、コレクションの要素のメンバーの値の編集中である場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.CurrentSortedKeys">
            <inheritdoc/>
            <remarks>
            以下のメソッドを介さずにこのプロパティが設定された場合、実際のコレクション要素の並び順と、ソートキー情報の整合性が取れなくなる
            可能性があります。<br/>
            現在のコレクション要素の並び順にあったソートキー情報を設定するか、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Sort(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem[])"/> メソッドを、
            使用するなどして、なるべく、整合性が取れるようにしてください。<br/>
            なお、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Add"/>、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Add(`0)"/>、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Insert(System.Int32,`0)"/>、
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Move(System.Int32,System.Int32)"/>、及び、インデクサによるコレクションの要素の置き換えが発生した場合は、整合性を保つ
            ため、現在のソートキー情報はクリアされます。( null が設定されます。)<br/>
            <br/>
            整合性の確保されているメソッド。<br/>
            ・ <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Sort(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem[])"/><br/>
            ・ <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Sort(System.String,Ill.Incorporated.Aladdinoffice.Framework.Attributes.SortDirectionType)"/><br/>
            ・ <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Sort(System.String)"/><br/>
            ・ <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Sort(System.Collections.Generic.IComparer{`0})"/><br/>
            ・ <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Sort``1(System.Func{`0,``0})"/><br/>
            ・ <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Sort``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})"/><br/>
            ・ <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Add"/><br/>
            ・ <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Add(`0)"/><br/>
            ・ <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Insert(System.Int32,`0)"/><br/>
            ・ <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})"/><br/>
            ・ <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.InsertRange(System.Int32,`0[])"/><br/>
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OpenPropertyComparer">
            <summary>
            コレクションの要素の大小関係を公開プロパティで比較する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenPropertyComparer`1"/> オブジェクトを取得、設定します。
            </summary>
            <value>コレクションの要素の大小関係を公開プロパティで比較する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenPropertyComparer`1"/> オブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.OriginalItems">
            <summary>
            並び替えを行う前の状態のコレクションを取得、設定します。<br/>
            このプロパティが返す <see cref="T:System.Collections.Generic.IList`1"/> は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> 分の要素をすべて含みます。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity">
            <summary>
            格納可能な要素の数を取得、設定します。
            </summary>
            <value>格納可能な要素の数</value>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.OnPropertyChanged(System.String)"/> メソッドを実行して、イベントを発生させてください。
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>、もしくは、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.DefaultCount"/> より小さい値が指定された場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.DefaultCount">
            <summary>
            既定で格納する要素の数を取得します。
            </summary>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ExtendedObservableCollection`1.OnPropertyChanged(System.String)"/> メソッドを実行して、イベントを発生させてください。
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Capacity"/> より大きい値が指定された場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IsRangeInserting">
            <summary>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.InsertRange(System.Int32,`0[])"/> による、一括挿入処理中かどうかを取得、設定します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Items">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1"/> をラップする <see cref="T:System.Collections.Generic.IList`1"/> ラッパーを取得します。
            </summary>
            <remarks>
            格納されている要素の数だけ返します。<br/>
            このプロパティで取得される<see cref="T:System.Collections.Generic.IList`1"/>には変更を加えないでください。<br/>
            このプロパティで取得される<see cref="T:System.Collections.Generic.IList`1"/>に変更を加えても、コレクション自体に変更は及びません。<br/>
            ただし、このプロパティで取得される<see cref="T:System.Collections.Generic.IList`1"/>の要素への変更は、このコレクションの要素にも反映されます。
            </remarks>
            <exception cref="T:System.ArgumentNullException">null が指定された場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.IsDebugDataLoading">
            <summary>
            デバッグ情報データの復元処理中かどうかを取得、設定します。
            </summary>
            <value>デバッグ情報データの復元処理中の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetailCollection">
            <summary>
            UIとのバインディング元となれる明細(コレクション要素)オブジェクトを管理するコレクションを示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetailCollection.GetDetail(System.Int32)">
            <summary>
            指定したインデックスに対応する明細を取得します。
            </summary>
            <param name="index">インデックス</param>
            <returns>コレクション内の指定したインデックスの明細</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetailCollection.IsInputted">
            <summary>
            入力済み明細が存在するかどうかを返します。
            </summary>
            <returns>入力済み明細が存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetailCollection.Parent">
            <summary>
            当該明細コレクションを保持する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule"/> オブジェクトを取得、設定します。
            </summary>
            <value>当該明細コレクションを保持する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule"/> オブジェクト</value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase.DEFAULT_NAME">
            <summary>
            既定のインスタンス識別名です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase.ParentString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase.Parent"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule,System.Int32,System.Int32)">
            <summary>
            対象のモジュールに属し、指定した格納可能要素数、及び、既定要素数を持つ、既定のインスタンス識別名の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="module">モジュール</param>
            <param name="capacity">格納可能な要素の数</param>
            <param name="count">既定の要素の数</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase._parent">
            <summary>
            当該明細コレクションを保持する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule"/> オブジェクトです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase.GetDetail(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase.IsInputted">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase.Compare(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetail,Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetail)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase.InitializeItem(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetail)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase.FinalizeItem(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetail)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase.Name">
            <inheritdoc/>
            <remarks>
            このコレクションが <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject"/> の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.OpenProperties"/> に
            (<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.SetValue(System.Object,System.String)"/> メソッドで)設定された場合、対応する公開プロパティの
            名前で上書きが行われます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase.Parent">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetailCollection`1">
            <summary>
            UIとのバインディング元となれる明細(コレクション要素)オブジェクトを管理するジェネリックコレクションを示すインターフェースです。
            </summary>
            <typeparam name="T">管理する明細クラスの型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetailCollection`1.GetDetail(System.Int32)">
            <summary>
            指定したインデックスに対応する明細を取得します。
            </summary>
            <param name="index">インデックス</param>
            <returns>コレクション内の指定したインデックスの明細</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule,System.Int32,System.Int32)">
            <summary>
            対象のモジュールに属し、指定した格納可能要素数、及び、既定要素数を持つ、既定のインスタンス識別名の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="module">モジュール</param>
            <param name="capacity">格納可能な要素の数</param>
            <param name="count">既定の要素の数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.GetDetail(System.Int32)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase.GetDetail(System.Int32)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.InstanciateSources">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.InitializeOpenPropertiesMain">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.IndexOf(`0)">
            <summary>
            指定したオブジェクトを検索し、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> 全体内で最初に見つかった位置の 0 から始まるインデックスを返します。
            </summary>
            <param name="item"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> 内で検索するオブジェクト。 参照型の場合、null の値を使用できます。</param>
            <returns>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> 全体内で <paramref name="item"/> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号。
            それ以外の場合は -1。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.Insert(System.Int32,`0)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> 内の指定したインデックスの位置に要素を挿入します。
            </summary>
            <param name="index"><paramref name="item"/> を挿入する位置の 0 から始まるインデックス。</param>
            <param name="item">挿入するオブジェクト。 参照型の場合、null の値を使用できます。</param>
            <remarks>
            継承クラスにおいて override する際は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.Add(`0)"/> メソッドと挙動を統一させるためにも、
            なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InsertItemMain(System.Int32,`0)"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.Add(`0)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> の末尾にオブジェクトを追加します。
            </summary>
            <param name="item"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> の末尾に追加するオブジェクト。 参照型の場合、null の値を使用できます。</param>
            <remarks>
            継承クラスにおいて override する際は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.Insert(System.Int32,`0)"/> メソッドと挙動を統一させるためにも、
            なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.InsertItemMain(System.Int32,`0)"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.Contains(`0)">
            <summary>
            ある要素が <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> 内に存在するかどうかを判断します。
            </summary>
            <param name="item">内で検索するオブジェクト。 参照型の場合、null の値を使用できます。</param>
            <returns><paramref name="item"/> が <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> に存在する場合は true。それ以外の場合はfalse。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.CopyTo(`0[],System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> 全体を互換性のある 1 次元の <see cref="T:System.Array"/> にコピーします。コピー操作は、コピー先の配列の指定したインデックスから始まります。
            </summary>
            <param name="array">
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> から要素がコピーされる 1 次元の <see cref="T:System.Array"/>。
            <see cref="T:System.Array"/> には、0 から始まるインデックス番号が必要です。
            </param>
            <param name="arrayIndex">コピーの開始位置となる、<paramref name="array"/> 内の 0 から始まるインデックス。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.Remove(`0)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> 内で最初に見つかった特定のオブジェクトを削除します。
            </summary>
            <param name="item"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> から削除するオブジェクト。 参照型の場合、null の値を使用できます。</param>
            <returns>
            <paramref name="item"/> が正常に削除された場合は true。
            それ以外の場合は false。 
            このメソッドは、<paramref name="item"/> が元の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> に見つからなかった場合にも false を返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.GetEnumerator">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> を反復処理する列挙子を返します。
            </summary>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> の <see cref="T:System.Collections.Generic.IEnumerator`1"/>。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.Sort(System.Collections.Generic.IComparer{`0})">
            <inheritdoc/>
            <remarks>
            継承クラスにおいて override する際は、他の Sort メソッドと挙動を統一させるためにも、
            なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ExecSort``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})"/> メソッドの override を検討してください。
            要素同士の比較条件を変更したい場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Compare(`0,`0)"/>、もしくは、
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.CompareDefaultOrderIndex(`0,`0)"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.Sort``1(System.Func{`0,``0})">
            <inheritdoc/>
            <remarks>
            継承クラスにおいて override する際は、他の Sort メソッドと挙動を統一させるためにも、
            なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ExecSort``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})"/> メソッドの override を検討してください。
            要素同士の比較条件を変更したい場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Compare(`0,`0)"/>、もしくは、
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.CompareDefaultOrderIndex(`0,`0)"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.Sort``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})">
            <inheritdoc/>
            <remarks>
            継承クラスにおいて override する際は、他の Sort メソッドと挙動を統一させるためにも、
            なるべく、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.ExecSort``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0})"/> メソッドの override を検討してください。
            要素同士の比較条件を変更したい場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Compare(`0,`0)"/>、もしくは、
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.CompareDefaultOrderIndex(`0,`0)"/> メソッドの override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.Compare(`0,`0)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.Add">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.Add"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.NewItem">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.ItemType">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1.Item(System.Int32)">
            <summary>
            指定したインデックスにある要素を取得または設定します。
            </summary>
            <param name="index">取得または設定する要素の、0 から始まるインデックス番号。</param>
            <value>指定したインデックスにある要素。</value>
            <remarks>
            継承クラスにおいて override する際は、このプロパティではなく、なるべく、
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.GetItem(System.Int32)"/> / <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObjectCollection`1.SetItemMain(System.Int32,`0)"/> 
            の 各メソッドの override を検討してください。
            <see cref="T:System.Collections.IList"/> にキャストされた際、意図通り動作しなくなる可能性があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule,System.Int32,System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> の新しいインスタンスを生成し、指定したモジュール、格納可能な要素の数、既定の要素の数で初期化します。
            </summary>
            <param name="module">モジュール</param>
            <param name="capacity">格納可能な要素の数</param>
            <param name="count">既定の要素の数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule,Ill.Incorporated.Aladdinoffice.Framework.Designer.DefaultDataManager,System.Int32,System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`1"/> の新しいインスタンスを生成し、指定したモジュール、デフォルトデータ管理オブジェクト、格納可能な要素の数、既定の要素の数で初期化します。
            </summary>
            <param name="module">モジュール</param>
            <param name="defaultDataManager">デフォルトデータ管理オブジェクト</param>
            <param name="capacity">格納可能な要素の数</param>
            <param name="count">既定の要素の数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection.AddItemWithCapacity(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail"/>オブジェクトから条件の追加を行います。
            </summary>
            <param name="row">追加する条件</param>
            <remarks>
            キャパシティが足りない場合は拡張して追加を行います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection.ResetMain">
            <inheritdoc/>
            <remarks>
            通常<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection.ResetMain"/>では行数が変更されますが、行数を変更しないようにする為
            オーバーライドしています。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection.DefaultDataManager">
            <summary>
            デフォルトデータ管理オブジェクトを取得、設定します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute">
            <summary>
            カスタム抽出条件の式項目を指定した行のための項目属性クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.LABEL">
            <summary>
            デザイン時などに表示するためのラベル文字列を示す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.DefaultValue">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DefaultValue"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.DigitDecimal">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DigitDecimal"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.DigitInteger">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DigitInteger"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.DisplayName">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DisplayName"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.Filter">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Filter"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.Find">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Find"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.InputMode">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.InputMode"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.ItemType">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.ItemType"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.Jump">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Jump"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.Label">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Label"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.List">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.List"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.MaxLength">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.MaxLength"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.MultiLine">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.MultiLine"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.Necessary">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Necessary"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.Perless">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Perless"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.UseComma">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseComma"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.UseFuzzy">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseFuzzy"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutExpressionItemAttribute.UseMinus">
            <inheritDoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseMinus"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder">
            <summary>
            カスタム抽出条件機能をモジュールに追加するためのクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.DEFAULT_KEY">
            <summary> デフォルトの明細プロパティキー文字列定数です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.DEFAULT_ADD_CONDITION_KEY">
            <summary> デフォルトの追加可能条件プロパティキー文字列定数です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.DEFAULT_FILTER_KEY">
            <summary> デフォルトのフィルタプロパティキー文字列定数です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.SHOW_AUTO_LAYOUT_ACTION_KEY">
            <summary> デフォルトの設定画面表示アクションキー文字列定数です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.MAX_INDIVIDUAL_FIND_ITEMS">
            <summary> 個別検索最大項目数の定数です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder._initialDefaultDataManager">
            <summary>
            初期状態復旧用のデフォルトデータ管理オブジェクトです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.module">
            <summary>
            モジュールです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.dataEvent">
            <summary>
            データイベントオブジェクトです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder._key">
            <summary> 明細プロパティキーです。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder._addConditionKey">
            <summary>
            追加可能条件プロパティキーです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder._allItems">
            <summary> 追加できるすべての項目の退避を保持するコレクションです。 </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule,System.String,System.String,System.String,System.String)">
            <summary>
            モジュール、明細プロパティキー、追加条件プロパティキー、フィルタープロパティキー、設定画面表示のアクションキーを指定して、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder"/>クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="module">設定するモジュール</param>
            <param name="key">保持する明細プロパティキー</param>
            <param name="addConditionKey">保持する追加条件プロパティキー</param>
            <param name="filterKey">保持するフィルタプロパティキー</param>
            <param name="showAutoLayoutSettingActionKey">カスタム抽出条件の設定画面を表示するアクションキー</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule,Ill.Incorporated.Aladdinoffice.Framework.Designer.DefaultDataManager,System.String,System.String,System.String,System.String)">
            <summary>
            モジュール、初期値管理オブジェクト、明細プロパティキー、追加条件プロパティキー、フィルタープロパティキー、設定画面表示のアクションキーを指定して、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder"/>クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="module">設定するモジュール</param>
            <param name="defaultDataManager">初期値管理オブジェクト</param>
            <param name="key">保持するキー</param>
            <param name="addConditionKey">保持する追加条件プロパティキー</param>
            <param name="filterKey">保持するフィルタプロパティキー</param>
            <param name="showAutoLayoutSettingActionKey">カスタム抽出条件の設定画面を表示するアクションキー</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Module_OpenPropertiesInitialized(System.Object,System.EventArgs)">
            <summary>
            公開プロパティの設定と初期化を行います。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Module_DataEventChanged(System.Object,System.EventArgs)">
            <summary>
            DataEventオブジェクトを設定します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.On_DataEventInitialized(System.Object,System.EventArgs)">
            <summary>
            DataEventにイベントハンドラを登録します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.On_Data_Changed(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <summary>
            データの変更イベントハンドラです。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.On_フィルタ_Changed(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <summary>
            フィルタ文字列の変更イベントハンドラです。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Add(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            指定の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail"/>を追加します。
            </summary>
            <param name="item">対象の明細行オブジェクトである<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Add(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            項目属性、明細キー名、対象列名、式、削除不可であるかどうかの値を指定して、明細行を追加します。
            </summary>
            <param name="attr">項目属性</param>
            <param name="name">明細キー名</param>
            <param name="source">対象列名</param>
            <param name="expression">式</param>
            <param name="noRemove">削除不可であるかどうかの値</param>
            <returns>追加された明細行オブジェクト</returns>
            <remarks>
            キャパシティが足りない場合は拡張して追加を行います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Add(System.String)">
            <summary>
            明細キー名を指定して、明細行を追加します。
            </summary>
            <param name="name">追加する条件を検索するキー</param>
            <returns>追加された明細行オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.AddItem(System.String,System.String)">
            <summary>
            追加する条件を検索するキーと行データに保持するキーを指定して、明細行を追加します。
            </summary>
            <param name="name">追加する条件を検索するキー</param>
            <param name="keyName">行データに保持するキー値</param>
            <returns>追加された明細行オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Add(System.String,System.String)">
            <summary>
            追加する条件のデータ元であるテーブル名と列名を指定して、明細行を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns>追加された明細行オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Add(System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListInputType)">
            <summary>
            追加する条件のデータ元であるテーブル名と列名、リスト入力タイプを指定して、明細行を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="inputType">リスト入力タイプ</param>
            <returns>追加された明細行オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.AddItem(System.String,System.String,System.String)">
            <summary>
            追加する条件のデータ元であるテーブル名と列名、行データに保持するキー値を指定して、明細行を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="keyName">行データに保持するキー値</param>
            <returns>追加された明細行オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.AddItem(System.String,System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListInputType,System.Nullable{System.Boolean})">
            <summary>
            追加する条件のデータ元であるテーブル名と列名、行データに保持するキー値、リスト入力タイプ、削除不可であるかどうかの値を指定して、明細行を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="keyName">行データに保持するキー値</param>
            <param name="inputType">リスト入力タイプ</param>
            <param name="noRemove">削除不可であるかどうかの値</param>
            <returns>追加された明細行オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.ShowAutoLauoutSettingEditor">
            <summary>
            カスタム抽出条件の設定編集画面を表示します。
            </summary>
            <returns>常にtrue。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.UpdateCanAddItems">
            <summary>
            追加可能条件を更新します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.AddAllCanAddItemToCandidate">
            <summary>
            全ての追加可能な条件を追加候補を保持する<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.追加可能条件"/>に設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.AddDetailRow(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail,System.Int32,System.Boolean)">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Items"/>に追加対象の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail"/>、インデックス、候補を更新するかどうかの値を指定して、行を追加します。
            </summary>
            <param name="detail">追加対象の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail"/></param>
            <param name="index">追加先インデックス</param>
            <param name="updateCandidate">候補情報を更新するかどうかの値</param>
            <returns>追加された明細行オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.RemoveDetailRow(System.Int32)">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Items"/>から指定インデックスの行を削除します。
            </summary>
            <param name="index">削除対象インデックス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.ClearDetailRows">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Items"/>の全行をクリアします。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.MoveDetailRow(System.Int32,System.Int32)">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Items"/>の指定行を指定のインデックスに移動します。
            </summary>
            <param name="srcIndex">移動元インデックス</param>
            <param name="destIndex">移動先インデックス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.AddItemFromCandidate(System.String,System.Int32,System.Boolean)">
            <summary>
            追加候補の中からキーを指定して<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Items"/>の指定インデックス位置に追加します。
            </summary>
            <param name="key">追加候補のキー名</param>
            <param name="index">追加先インデックス</param>
            <param name="updateCandidate">候補情報を更新するかどうかの値</param>
            <returns>追加された明細行オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.IndividualFind(System.Int32)">
            <summary>
            個別検索を実行します。
            </summary>
            <param name="index">個別検索を行う対象行インデックス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.IndividualClear(System.Int32)">
            <summary>
            個別検索情報の削除を行います。
            </summary>
            <param name="index">個別検索情報の削除を行う行インデックス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.CurrentValueToDefault">
            <summary>
            現在の保持値をデフォルト値に設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.InitDefaultValues">
            <summary>
            保持されたデフォルト値を画面の定義時点の初期値に戻します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.RemoveItem(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail,System.Boolean,System.Boolean)">
            <summary>
            削除を行う対象の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail"/>を指定指定して、行を全ての項目から削除します。
            </summary>
            <param name="item">削除対象の項目</param>
            <param name="updateCandidate">追加候補を更新するかどうかの値</param>
            <param name="displayedItemRemove">既に表示されている項目も削除するかどうかの値</param>
            <remarks>
            このメソッドで行の削除を行った場合、追加候補からも削除されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.ResetFilter">
            <summary>
            フィルタをリセットします。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.SetDefaultFromCondition(Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionSaveData)">
            <summary>
            現在設定されているデフォルトデータの情報を条件文字列データから初期化します。
            </summary>
            <param name="conditionSaveData">条件文字列データ</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.SetInitDefaultDataManager">
            <summary>
            現在設定されているデフォルトデータの情報を初期状態にします。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.ClearAll">
            <summary>
            フィルタ、及び、カスタム抽出条件設定に関するすべてのコレクションをクリアして、初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.RemoveModuleHandler">
            <summary>
            モジュールにハンドリングしたイベントを削除します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.AddModuleHandler">
            <summary>
            モジュールにイベントのハンドリングを追加します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.RemoveDataEventHandler">
            <summary>
            データイベントにハンドリングされたイベントを削除します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.AddDataEventHandler">
            <summary>
            データイベントにイベントのハンドリングを追加します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.SetFromTo(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail,System.String,System.String)">
            <summary>
            From項目をTo項目にコピーします。
            </summary>
            <param name="detail">明細データ</param>
            <param name="fromName">開始プロパティ名</param>
            <param name="toName">終了プロパティ名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.SetError(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <summary>
            エラーの設定を行います。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.IsCheckAnyOnNecessary(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            行がチェックボックス表示でかつ、必須の場合にチェックが一つ以上あるかどうかを確認します。
            </summary>
            <param name="detail">対象の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail"/></param>
            <returns>行がチェックボックス表示でかつ、必須の場合true。それ以外はfalse。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.SetItems(System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail})">
            <summary>
            指定の選択アイテムを表示項目に設定します。
            </summary>
            <param name="selectedItems">選択アイテム</param>
            <returns>設定が正常に終了した場合、true。それ以外はfalse。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.DefaultDataManager">
            <summary>
            デフォルトデータ管理オブジェクトを取得、設定します。
            </summary>
            <value>デフォルトデータ管理オブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Module">
            <summary>
            モジュールを取得、設定します。
            </summary>
            <value>モジュール</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.DataEvent">
            <summary>
            データイベントオブジェクトを取得、設定します。
            </summary>
            <value>データイベントオブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.IsSettingShowing">
            <summary>
            設定を表示している状態かどうかを表す値を取得、設定します。
            </summary>
            <value>設定を表示している場合、true。それ以外はfalse。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Key">
            <summary>
            明細プロパティキーを取得、設定します。
            </summary>
            <value>明細プロパティキー</value>
            <remarks>
            カスタム抽出条件明細コレクションである<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection"/>の公開プロパティ名になります。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.AddConditionKey">
            <summary>
            追加可能条件プロパティキーを取得、設定します。
            </summary>
            <value>追加可能条件プロパティキー</value>
            <remarks>設定画面に表示される追加可能な条件を保持するコレクションの公開プロパティ名になります。</remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.FilterKey">
            <summary>
            フィルタプロパティキーを取得、設定します。
            </summary>
            <value>フィルタプロパティキー</value>
            <remarks>項目フィルタ文字列プロパティの公開プロパティ名になります。</remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.ShowAutoLayoutActionKey">
            <summary>
            設定画面表示アクションキーを取得、設定します。
            </summary>
            <value>設定画面表示アクションキー</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.フィルタ">
            <summary>
            フィルタ文字列を取得します。
            </summary>
            <value>フィルタ文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.追加可能条件">
            <summary>
            追加可能条件を保持する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection"/>を取得します。
            </summary>
            <value>追加可能条件を保持する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Items">
            <summary>
            カスタム抽出条件行データを保持する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection"/>を取得します。
            </summary>
            <value>カスタム抽出条件行データを保持する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.AllItems">
            <summary>
            追加できるすべての項目を取得します。
            </summary>
            <value>追加できるすべての項目</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.CanAddItems">
            <summary>
            追加できる項目の列挙を取得します。
            </summary>
            <value>追加できる項目の列挙</value>
            <remarks>追加可能な項目はすべての項目を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.AllItems"/>の内、すでに表示している<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutModuleBinder.Items"/>の項目を除いたものになります。</remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute">
            <summary>
            カスタム抽出条件明細の複数項目入力のための項目属性クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.MAX_KEYWORD_NUM">
            <summary> 最大キーワード数の定数です。 </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute)">
            <summary>
            ベースとなる項目属性を指定して、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute"/>クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="attr">ベースとなる項目属性</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.CheckCharacter(System.Char)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.CheckCharacter(System.Char)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.CheckLength(System.String,System.Int32,System.Int32,System.String)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.CheckLength(System.String,System.Int32,System.Int32,System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.Format(System.String)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Format(System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.CheckFormatted(System.String)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.CheckFormatted(System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.Attribute">
            <summary>
            ベースとなる項目属性を取得します。
            </summary>
            <value>ベースとなる項目属性</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.CurrentOperatorType">
            <summary>
            現在の演算子を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType"/>を取得、設定します。
            </summary>
            <value>現在の演算子を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.AlpahbetType">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.AlpahbetType"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.Label">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Label"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.Find">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Find"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.Jump">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Jump"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.ItemType">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.ItemType"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.InputMode">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.InputMode"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.DisplayName">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.DisplayName"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.List">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.List"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.UseMinus">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.UseMinus"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.MaxLength">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.MaxLength"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.MultiLine">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.MultiLine"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.Necessary">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Necessary"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.Perless">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Perless"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.UseFuzzy">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.UseFuzzy"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.DefaultValue">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.DefaultValue"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.UIConverter">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.UIConverter"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.Visible">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Visible"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutMultiItemAttribute.WhereVisible">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.WhereVisible"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity">
            <summary>
            カスタム抽出条件の文字列を取得するためのエンティティクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1">
            <summary>
            ストアドファンクションに対応するエンティティクラスです。
            </summary>
            <typeparam name="T">エンティティ行の型</typeparam>
            <remarks>
            対象がストアドファンクションであるため、このクラスではテーブルの更新処理はすべて無効化されています。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1">
            <summary>
            エンティティを表す基底のジェネリッククラスです。
            </summary>
            <typeparam name="T">エンティティ行の型</typeparam>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase">
            <summary>
            エンティティを表す基底クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.TEMPLATE_TABLE_PREFIEX_CHAR">
            <summary>
            一時テーブルであることを示す接頭辞の定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.DEFAULT_BULK_INSERT_SWITCHING_THRESHOLD">
            <summary>
            INSERT処理において、通常挿入と一括挿入を切り替えるレコード数の閾値の初期値を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.FORCE_BULK_INSERT_SWITCHING_THRESHOLD">
            <summary>
            INSERT処理において、強制的に一括挿入を指定するための定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.FORCE_NOMAL_INSERT_SWITCHING_THRESHOLD">
            <summary>
            INSERT処理において、強制的に通常挿入を指定するための定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.AS_POSSIBLE_MULTIPLE_QUERY_COUNT_VALUE">
            <summary>
            複数クエリ発行時に、可能な限りの数のクエリを同時発行することを指定するための定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.DEFAULT_UPDATE_ID_COLUMN_NAME">
            <summary>
            更新者 の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.DEFAULT_REGISTERED_ID_COLUMN_NAME">
            <summary>
            登録者 の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.DEFAULT_UPDATE_DATE_COLUMN_NAME">
            <summary>
            更新日付 の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.DEFAULT_REGISTERED_DATE_COLUMN_NAME">
            <summary>
            登録日付 の列名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Boolean)">
            <summary>
            指定した位置のエンティティ行のプライマリキーに対応するレコードをデータベース上のテーブルからSELECTし、当該エンティティ行を上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="index">取得するエンティティ行のインデックス</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean,System.Int32,System.Object[])">
            <summary>
            対象のプライマリキーに対応するレコードをデータベース上のテーブルからSELECTし、指定した位置のエンティティ行を上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <param name="index">上書きするエンティティ行のインデックス</param>
            <param name="values">取得対象のプライマリキー値</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys"/> で返される列の順序に合わせる必要があります。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            指定した抽出条件に対応するレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="newWheres">抽出条件</param>
            <param name="params">抽出条件のパラメータ(パラメータ名と値の組)の一覧</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="params"/> のキーには、エンティティの列名が使用されている必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.Boolean,System.Int32,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定したクエリでデータベース上のテーブルからレコードをSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="name">実行するクエリの名前</param>
            <param name="query">実行するクエリ</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <param name="index">上書きを開始するエンティティ行の位置。先頭行からすべて上書きする場合は 負数 を指定します。</param>
            <param name="dbParams">クエリの実行時に使用するデータベースパラメータ</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectAll(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean)">
            <summary>
            データベース上のテーブルから全レコードをSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="refill">エンティティ行をすべて置き換える(行数の調整も行う)場合は true。それ以外の場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean,System.Boolean,System.Object[])">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <param name="values">対象のプライマリキー値</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys"/> で返される列の順序に合わせる必要があります。<br/>
            <paramref name="values"/> が指定されなかった場合は、コレクションに保持している先頭のエンティティ行のプライマリキーを条件に使用します。<br/>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            対象の抽出条件以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <param name="dbParams">抽出条件として使用するデータベースパラメータ</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。<br/>
            また、<paramref name="dbParams"/> で指定するデータベースパラメータのパラメータ名にはエンティティの列名が使用されている必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectFixedPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean,System.Boolean,System.Object[])">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <param name="values">対象のプライマリキー値</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys"/> で返される列の順序に合わせる必要があります。<br/>
            <paramref name="values"/> が指定されなかった場合は、コレクションに保持している先頭のエンティティ行のプライマリキーを条件に使用します。<br/>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以降のレコードで補います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectFixedPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            対象の抽出条件以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <param name="dbParams">抽出条件として使用するデータベースパラメータ</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以降のレコードで補います。<br/>
            また、<paramref name="dbParams"/> で指定するデータベースパラメータのパラメータ名にはエンティティの列名が使用されている必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean,System.Boolean,System.Object[])">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <param name="values">対象のプライマリキー値</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys"/> で返される列の順序に合わせる必要があります。<br/>
            <paramref name="values"/> が指定されなかった場合は、コレクションに保持している末尾のエンティティ行のプライマリキーを条件に使用します。<br/>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            対象の抽出条件以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <param name="dbParams">抽出条件として使用するデータベースパラメータ</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。<br/>
            また、<paramref name="dbParams"/> で指定するデータベースパラメータのパラメータ名にはエンティティの列名が使用されている必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectFixedNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean,System.Boolean,System.Object[])">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <param name="values">対象のプライマリキー値</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys"/> で返される列の順序に合わせる必要があります。<br/>
            <paramref name="values"/> が指定されなかった場合は、コレクションに保持している末尾のエンティティ行のプライマリキーを条件に使用します。<br/>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以前のレコードで補います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectFixedNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            対象の抽出条件以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <param name="dbParams">抽出条件として使用するデータベースパラメータ</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以前のレコードで補います。<br/>
            また、<paramref name="dbParams"/> で指定するデータベースパラメータのパラメータ名にはエンティティの列名が使用されている必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectTop(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Boolean,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定した件数のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="topCount">取得件数</param>
            <param name="fixedCount">条件に合うレコード数が<paramref name="topCount"/> に満たない場合に条件以降のレコードで補う場合は true。それ以外の場合は false。</param>
            <param name="compSign">比較符号</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <param name="dbParams">抽出条件として使用するデータベースパラメータ</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="dbParams"/> で指定するデータベースパラメータのパラメータ名にはエンティティの列名が使用されている必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Insert(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            コレクションに保持しているエンティティ行のデータベースへのINSERTを行います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <returns>INSERTが正常に実行された場合は影響を受けた行数。それ以外の場合は -1。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Insert(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定したクエリを用いて、コレクションに保持しているエンティティ行のデータベースへのINSERTを行います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="query">実行するクエリ</param>
            <param name="dbParams">クエリの実行時に使用するデータベースパラメータ</param>
            <returns>クエリが正常に実行された場合は影響を受けた行数。それ以外の場合は -1。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.BulkInsert(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            コレクションに保持しているエンティティ行のデータベースへの一括INSERTを行います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <returns>INSERTが正常に実行された場合は影響を受けた行数。それ以外の場合は -1。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.BulkInsert(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.DatabaseBulkInsertPriorityFlag)">
            <summary>
            コレクションに保持しているエンティティ行のデータベースへの一括INSERTを行います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="priorityFlag">一括挿入優先フラグ</param>
            <returns>INSERTが正常に実行された場合は影響を受けた行数。それ以外の場合は -1。</returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">対象のデータベースが SQL Server でない場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Update(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean)">
            <summary>
            コレクションに保持しているエンティティ行のデータベースへのUPDATEを行います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="changeLineOnly">変更があったエンティティ行のみ更新を更新する場合は true。すべてのエンティティ行を更新する場合は false。</param>
            <returns>UPDATE処理を行ったエンティティオブジェクト</returns>
            <remarks>
            <paramref name="changeLineOnly"/> に true が設定されている場合は <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetUpdateEntity(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)"/> で作成された複製オブジェクト、
            それ以外の場合は自分自身を返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Update(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Boolean)">
            <summary>
            コレクションに保持しているエンティティ行と、指定した条件列の値が等しいデータベースレコードへのUPDATEを行います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">条件列名</param>
            <param name="changeLineOnly">変更があったエンティティ行のみ更新を更新する場合は true。すべてのエンティティ行を更新する場合は false。このメソッドでは使用しません。</param>
            <returns>自分自身</returns>
            <remarks>
            プライマリキーが無いテーブルや、プライマリキー以外の列で対象を指定してUPDATEする際に使用できます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.MergeUpdate(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean)">
            <summary>
            コレクションに保持しているエンティティ行のデータベースへのMERGEを行います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="changeLineOnly">変更があったエンティティ行のみ更新を更新する場合は true。すべてのエンティティ行を更新する場合は false。</param>
            <returns>MERGE処理を行ったエンティティオブジェクト</returns>
            <remarks>
            データベースに存在しないエンティティ行に対してはINSERT、存在するエンティティ行に対してはUPDATEが適用されます。<br/>
            <paramref name="changeLineOnly"/> に true が設定されている場合は <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetUpdateEntity(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)"/> で作成された複製オブジェクト、
            それ以外の場合は自分自身を返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.MergeUpdate(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Boolean)">
            <summary>
            コレクションに保持しているエンティティ行と、指定した条件列の値が等しいデータベースレコードへのMERGEを行います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">条件列名</param>
            <param name="changeLineOnly">変更があったエンティティ行のみ更新を更新する場合は true。すべてのエンティティ行を更新する場合は false。このメソッドでは使用しません。</param>
            <returns>自分自身</returns>
            <remarks>
            プライマリキーが無いテーブルや、プライマリキー以外の列で対象を指定してMERGEする際に使用できます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Update(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定したクエリを用いて、コレクションに保持しているエンティティ行のデータベースへのUPDATEを行います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="query">実行するクエリ</param>
            <param name="dbParams">クエリの実行時に使用するデータベースパラメータ</param>
            <returns>クエリが正常に実行された場合は影響を受けた行数。それ以外の場合は -1。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetUpdateEntity(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            コレクション要素のうち、更新対象のエンティティ行のみを保持した自身の複製を作成します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <returns>更新対象のエンティティ行のみを保持した複製エンティティオブジェクト</returns>
            <remarks>
            データベース上のテーブルからレコードを取得してコレクション要素と比較し、更新処理が必要なエンティティ行のみをコレクション要素に持つ新たなエンティティオブジェクトを返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Delete(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            対象のプライマリキーに対応するレコードをデータベース上のテーブルからDELETEします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">削除対象のプライマリキー値</param>
            <returns>DELETEが正常に実行された場合は影響を受けた行数。それ以外の場合は -1。</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys"/> で返される列の順序に合わせる必要があります。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Delete(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            指定した条件に対応するレコードをデータベース上のテーブルからDELETEします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">条件列名</param>
            <param name="values">条件値</param>
            <returns>DELETEが正常に実行された場合は影響を受けた行数。それ以外の場合は -1。</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <paramref name="columns"/> で指定する列の順序に合わせる必要があります。<br/>
            プライマリキーが無いテーブルや、プライマリキー以外の列で対象を指定してDELETEする際に使用できます。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <paramref name="values"/> で指定された値の数が <paramref name="columns"/>で指定された列数に満たない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Delete(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <summary>
            指定したクエリを用いて、データベース上のテーブルからレコードをDELETEします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="query">実行するクエリ</param>
            <param name="dbParams">クエリの実行時に使用するデータベースパラメータ</param>
            <param name="usesEntityValues">コレクションに保持しているエンティティ行の値を条件値に使用する場合は true。<paramref name="dbParams"/> で指定されている値を使用する場合は false。</param>
            <returns>DELETEが正常に実行された場合は影響を受けた行数。それ以外の場合は -1。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.AllDelete(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            データベース上のテーブルからすべてのレコードをDELETEします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <returns>DELETEが正常に実行された場合は影響を受けた行数。それ以外の場合は -1。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Refresh(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[])">
            <summary>
            コレクションに保持しているエンティティ行の対象の列の値を、データベース上の値で上書きして最新の状態にします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columnNames">上書きする列名の一覧</param>
            <returns>このエンティティにプライマリキーが設定されており、正常に最新の状態にできた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.RefreshUpdateAndRegisteredInfo(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            コレクションに保持しているエンティティ行の、登録、及び、更新の情報に対応する列の値を、データベース上の値で上書きして最新の状態にします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <returns>このエンティティにプライマリキーが設定されており、正常に最新の状態にできた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectCount(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            対象のプライマリキーに対応するレコードの数をデータベース上のテーブルから取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">検索対象のプライマリキー値</param>
            <returns>レコード数</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys"/> で返される列の順序に合わせる必要があります。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectCount(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            指定した条件に対応するレコードの数をデータベース上のテーブルから取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">条件列名</param>
            <param name="values">条件値</param>
            <returns>レコード数</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <paramref name="columns"/> で指定する列の順序に合わせる必要があります。<br/>
            プライマリキーが無いテーブルや、プライマリキー以外の列で対象を指定してDELETEする際に使用できます。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <paramref name="values"/> で指定された値の数が <paramref name="columns"/>で指定された列数に満たない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectCount(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            指定した抽出条件に対応するレコードの数をデータベース上のテーブルから取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="newWheres">抽出条件</param>
            <param name="params">抽出条件のパラメータ(パラメータ名と値の組)の一覧</param>
            <returns>レコード数</returns>
            <remarks>
            <paramref name="params"/> のキーには、エンティティの列名が使用されている必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectCount(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定した抽出条件に対応するレコードの数をデータベース上のテーブルから取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="newWheres">抽出条件</param>
            <param name="dbParams">抽出条件として使用するデータベースパラメータ</param>
            <returns>レコード数</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.ExistsRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            対象のプライマリキーに対応するレコードがデータベース上のテーブルに存在するかどうかを返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">取得対象のプライマリキー値</param>
            <returns>レコードが存在する場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys"/> で返される列の順序に合わせる必要があります。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.ExistsRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            指定した条件に対応するレコードがデータベース上のテーブルに存在するかどうかを返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">条件列名</param>
            <param name="values">条件値</param>
            <returns>レコードが存在する場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <paramref name="columns"/> で指定する列の順序に合わせる必要があります。<br />
            プライマリキーが無いテーブルや、プライマリキー以外の列で対象を指定してDELETEする際に使用できます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.ExistsRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            指定した抽出条件に対応するレコードがデータベース上のテーブルに存在するかどうかを返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="newWheres">抽出条件</param>
            <param name="params">抽出条件のパラメータ(パラメータ名と値の組)の一覧</param>
            <returns>レコードが存在する場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="params"/> のキーには、エンティティの列名が使用されている必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.ExistsRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定した抽出条件に対応するレコードがデータベース上のテーブルに存在するかどうかを返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="newWheres">抽出条件</param>
            <param name="dbParams">抽出条件として使用するデータベースパラメータ</param>
            <returns>レコードが存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.LockOnly(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            対象のプライマリキーに対応するレコードにロックをかけます。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">ロック対象のプライマリキー値</param>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys"/> で返される列の順序に合わせる必要があります。<br/>
            レコードの取得を行う必要がない場合に使用してください。<br/>
            レコードの取得も必要な場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean,System.Int32,System.Object[])"/>を使用してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.LockOnly(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            指定した条件に対応するレコードにロックをかけます。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">条件列名</param>
            <param name="values">条件値</param>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <paramref name="columns"/> で指定する列の順序に合わせる必要があります。<br />
            プライマリキーが無いテーブルや、プライマリキー以外の列で対象を指定してDELETEする際に使用できます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.LockOnly(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            指定した抽出条件に対応するレコードにロックをかけます。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="newWheres">抽出条件</param>
            <param name="params">抽出条件のパラメータ(パラメータ名と値の組)の一覧</param>
            <remarks>
            <paramref name="params"/> のキーには、エンティティの列名が使用されている必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.LockOnly(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定した抽出条件に対応するレコードにロックをかけます。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="newWheres">抽出条件</param>
            <param name="dbParams">抽出条件として使用するデータベースパラメータ</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            対象のプライマリキーに対応するレコードをデータベース上のテーブルからSELECTします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">取得対象のプライマリキー値</param>
            <returns>結果セット(キャンセル時はnull)</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys"/> で返される列の順序に合わせる必要があります。<br/>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectedResult(System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            対象のプライマリキーに対応するレコードをデータベース上のテーブルから指定した件数分だけSELECTします。
            </summary>
            <param name="topCount">取得件数</param>
            <param name="section">データベース接続セクション</param>
            <param name="values">取得対象のプライマリキー値</param>
            <returns>結果セット(キャンセル時はnull)</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys"/> で返される列の順序に合わせる必要があります。<br/>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[],Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            指定した条件に対応するレコードをデータベース上のテーブルからSELECTします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">条件列名</param>
            <param name="values">条件値</param>
            <param name="lockOp">ロック操作</param>
            <returns>結果セット(キャンセル時はnull)</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <paramref name="columns"/> で指定する列の順序に合わせる必要があります。<br/>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.String[],System.Object[],Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            指定した条件に対応するレコードをデータベース上のテーブルから指定した件数分だけSELECTします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="topCount">取得件数</param>
            <param name="columns">条件列名</param>
            <param name="values">条件値</param>
            <param name="lockOp">ロック操作</param>
            <returns>結果セット(キャンセル時はnull)</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <paramref name="columns"/> で指定する列の順序に合わせる必要があります。<br/>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            指定した抽出条件に対応するレコードをデータベース上のテーブルからSELECTします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="newWheres">抽出条件</param>
            <param name="params">抽出条件のパラメータ(パラメータ名と値の組)の一覧</param>
            <param name="lockOp">ロック操作</param>
            <returns>結果セット(キャンセル時はnull)</returns>
            <remarks>
            <paramref name="params"/> のキーには、エンティティの列名が使用されている必要があります。<br/>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            指定した抽出条件に対応するレコードをデータベース上のテーブルから指定した件数分だけSELECTします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="topCount">取得件数</param>
            <param name="newWheres">抽出条件</param>
            <param name="params">抽出条件のパラメータ(パラメータ名と値の組)の一覧</param>
            <param name="lockOp">ロック操作</param>
            <returns>結果セット(キャンセル時はnull)</returns>
            <remarks>
            <paramref name="params"/> のキーには、エンティティの列名が使用されている必要があります。<br/>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            指定した抽出条件に対応するレコードをデータベース上のテーブルからSELECTします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="newWheres">抽出条件</param>
            <param name="dbParams">クエリの実行時に使用するデータベースパラメータ</param>
            <param name="lockOp">ロック操作</param>
            <returns>結果セット(キャンセル時はnull)</returns>
            <remarks>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            指定した抽出条件に対応するレコードをデータベース上のテーブルから指定した件数分だけSELECTします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="topCount">取得件数</param>
            <param name="newWheres">抽出条件</param>
            <param name="dbParams">クエリの実行時に使用するデータベースパラメータ</param>
            <param name="lockOp">ロック操作</param>
            <returns>結果セット(キャンセル時はnull)</returns>
            <remarks>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            指定したクエリでデータベース上のテーブルからレコードをSELECTします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="selectQuery">実行するクエリの生成用オブジェクト</param>
            <param name="dbParams">クエリの実行時に使用するデータベースパラメータ</param>
            <param name="lockOp">ロック操作</param>
            <returns>結果セット(キャンセル時はnull)</returns>
            <remarks>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            指定したクエリでデータベース上のテーブルからレコードをSELECTします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="name">実行するクエリの名前</param>
            <param name="query">実行するクエリ</param>
            <param name="dbParams">クエリの実行時に使用するデータベースパラメータ</param>
            <param name="lockOp">ロック操作</param>
            <returns>結果セット(キャンセル時はnull)</returns>
            <remarks>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            対象のプライマリキーに対応する先頭のレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">取得対象のプライマリキー値</param>
            <returns>レコードが存在する場合は変換されたエンティティ行。存在しない場合は null。</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys"/> で返される列の順序に合わせる必要があります。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[],System.Boolean)">
            <summary>
            指定した条件に対応する先頭のレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">条件列名</param>
            <param name="values">条件値</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>レコードが存在する場合は変換されたエンティティ行。存在しない場合は null。</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <paramref name="columns"/> で指定する列の順序に合わせる必要があります。<br />
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            指定した抽出条件に対応する先頭のレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="newWheres">抽出条件</param>
            <param name="params">抽出条件のパラメータ(パラメータ名と値の組)の一覧</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>レコードが存在する場合は変換されたエンティティ行。存在しない場合は null。</returns>
            <remarks>
            <paramref name="params"/> のキーには、エンティティの列名が使用されている必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <summary>
            指定した抽出条件に対応する先頭のレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="newWheres">抽出条件</param>
            <param name="dbParams">クエリの実行時に使用するデータベースパラメータ</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>レコードが存在する場合は変換されたエンティティ行。存在しない場合は null。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <summary>
            指定したクエリでデータベース上のテーブルからレコードをSELECTし、先頭レコードをエンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="selectQuery">実行するクエリの生成用オブジェクト</param>
            <param name="dbParams">クエリの実行時に使用するデータベースパラメータ</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>レコードが存在する場合は変換されたエンティティ行。存在しない場合は null。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            対象のプライマリキーに対応するレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">取得対象のプライマリキー値</param>
            <returns>SELECT結果に対応するエンティティ行の一覧</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            対象のプライマリキーに対応するレコードをデータベース上のテーブルから指定した件数分だけSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="topCount">取得件数</param>
            <param name="section">データベース接続セクション</param>
            <param name="values">取得対象のプライマリキー値</param>
            <returns>SELECT結果に対応するエンティティ行の一覧</returns>
            <remarks>
            戻り値の型は <see cref="T:System.Collections.Generic.IEnumerable`1"/> ですが、実体は配列です。すなわち、対応するレコードはすべて読み込まれています。<br/>
            読み込みが完了していない = <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>が開いたままの状態で、再度データベースへのアクセスが行われるとエラーになってしまうため、
            配列化して<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>からの読み込みを完了させ、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>を閉じるようにしています。<br/>
            SELECT結果のループ処理を行う際、ループ中にデータベースへの再アクセスが行われないことがわかっている場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])"/> 
            メソッドと <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.GetEntityRows(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)"/> メソッドを組み合わせて使用し、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>から随時、レコードを
            読み込むようにすることで、メモリ消費が抑えられ、パフォーマンスを改善させられる場合があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[],System.Boolean)">
            <summary>
            指定した条件に対応するレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">条件列名</param>
            <param name="values">条件値</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>SELECT結果に対応するエンティティ行の一覧</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.String[],System.Object[],System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.String[],System.Object[],System.Boolean)">
            <summary>
            指定した条件に対応するレコードをデータベース上のテーブルから指定した件数分だけSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="topCount">取得件数</param>
            <param name="columns">条件列名</param>
            <param name="values">条件値</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>SELECT結果に対応するエンティティ行の一覧</returns>
            <remarks>
            戻り値の型は <see cref="T:System.Collections.Generic.IEnumerable`1"/> ですが、実体は配列です。すなわち、対応するレコードはすべて読み込まれています。<br/>
            読み込みが完了していない = <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>が開いたままの状態で、再度データベースへのアクセスが行われるとエラーになってしまうため、
            配列化して<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>からの読み込みを完了させ、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>を閉じるようにしています。<br/>
            SELECT結果のループ処理を行う際、ループ中にデータベースへの再アクセスが行われないことがわかっている場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])"/> 
            メソッドと <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.GetEntityRows(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)"/> メソッドを組み合わせて使用し、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>から随時、レコードを
            読み込むようにすることで、メモリ消費が抑えられ、パフォーマンスを改善させられる場合があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            指定した抽出条件に対応するレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="newWheres">抽出条件</param>
            <param name="params">抽出条件のパラメータ(パラメータ名と値の組)の一覧</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>SELECT結果に対応するエンティティ行の一覧</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            指定した抽出条件に対応するレコードをデータベース上のテーブルから指定した件数分だけSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="topCount">取得件数</param>
            <param name="newWheres">抽出条件</param>
            <param name="params">抽出条件のパラメータ(パラメータ名と値の組)の一覧</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>SELECT結果に対応するエンティティ行の一覧</returns>
            <remarks>
            <paramref name="params"/> のキーには、エンティティの列名が使用されている必要があります。<br/>
            戻り値の型は <see cref="T:System.Collections.Generic.IEnumerable`1"/> ですが、実体は配列です。すなわち、対応するレコードはすべて読み込まれています。<br/>
            読み込みが完了していない = <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>が開いたままの状態で、再度データベースへのアクセスが行われるとエラーになってしまうため、
            配列化して<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>からの読み込みを完了させ、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>を閉じるようにしています。<br/>
            SELECT結果のループ処理を行う際、ループ中にデータベースへの再アクセスが行われないことがわかっている場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])"/> 
            メソッドと <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.GetEntityRows(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)"/> メソッドを組み合わせて使用し、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>から随時、レコードを
            読み込むようにすることで、メモリ消費が抑えられ、パフォーマンスを改善させられる場合があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <summary>
            指定した抽出条件に対応するレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="newWheres">抽出条件</param>
            <param name="dbParams">クエリの実行時に使用するデータベースパラメータ</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>SELECT結果に対応するエンティティ行の一覧</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <summary>
            指定した抽出条件に対応するレコードをデータベース上のテーブルから指定した件数分だけSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="topCount">取得件数</param>
            <param name="newWheres">抽出条件</param>
            <param name="dbParams">クエリの実行時に使用するデータベースパラメータ</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>SELECT結果に対応するエンティティ行の一覧</returns>
            <remarks>
            戻り値の型は <see cref="T:System.Collections.Generic.IEnumerable`1"/> ですが、実体は配列です。すなわち、対応するレコードはすべて読み込まれています。<br/>
            読み込みが完了していない = <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>が開いたままの状態で、再度データベースへのアクセスが行われるとエラーになってしまうため、
            配列化して<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>からの読み込みを完了させ、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>を閉じるようにしています。<br/>
            SELECT結果のループ処理を行う際、ループ中にデータベースへの再アクセスが行われないことがわかっている場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])"/> 
            メソッドと <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.GetEntityRows(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)"/> メソッドを組み合わせて使用し、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>から随時、レコードを
            読み込むようにすることで、メモリ消費が抑えられ、パフォーマンスを改善させられる場合があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <summary>
            指定したクエリでデータベース上のテーブルからレコードをSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="selectQuery">実行するクエリの生成用オブジェクト</param>
            <param name="dbParams">クエリの実行時に使用するデータベースパラメータ</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>SELECT結果に対応するエンティティ行の一覧</returns>
            <remarks>
            戻り値の型は <see cref="T:System.Collections.Generic.IEnumerable`1"/> ですが、実体は配列です。すなわち、対応するレコードはすべて読み込まれています。<br/>
            読み込みが完了していない = <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>が開いたままの状態で、再度データベースへのアクセスが行われるとエラーになってしまうため、
            配列化して<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>からの読み込みを完了させ、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>を閉じるようにしています。<br/>
            SELECT結果のループ処理を行う際、ループ中にデータベースへの再アクセスが行われないことがわかっている場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])"/> 
            メソッドと <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.GetEntityRows(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)"/> メソッドを組み合わせて使用し、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>から随時、レコードを
            読み込むようにすることで、メモリ消費が抑えられ、パフォーマンスを改善させられる場合があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Object[])">
            <summary>
            対象の列に対するIN句の条件を指定して、データベース上のテーブルからレコードをSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="column">IN句で絞り込む列名</param>
            <param name="values">IN句に含める条件値</param>
            <returns>SELECT結果に対応するエンティティ行の一覧</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.String,System.Object[])"/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object[])"/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.String,System.Object[])">
            <summary>
            対象の列に対するIN句の条件を指定して、データベース上のテーブルから指定した件数分だけレコードをSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="topCount">取得件数</param>
            <param name="column">IN句で絞り込む列名</param>
            <param name="values">IN句に含める条件値</param>
            <returns>SELECT結果に対応するエンティティ行の一覧</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object[])"/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,System.String,System.Object[])">
            <summary>
            指定した抽出条件に、対象の列に対するIN句の条件を追加して、データベース上のテーブルからレコードをSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="where">抽出条件</param>
            <param name="column">IN句で絞り込む列名</param>
            <param name="values">IN句に含める条件値</param>
            <returns>SELECT結果に対応するエンティティ行の一覧</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,System.String,System.Object[])"/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object[])"/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,System.String,System.Object[])">
            <summary>
            指定した抽出条件に、対象の列に対するIN句の条件を追加して、データベース上のテーブルから指定した件数分だけレコードをSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="topCount">取得件数</param>
            <param name="where">抽出条件</param>
            <param name="column">IN句で絞り込む列名</param>
            <param name="values">IN句に含める条件値</param>
            <returns>SELECT結果に対応するエンティティ行の一覧</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object[])"/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object[])">
            <summary>
            指定した抽出条件に、対象の列に対するIN句の条件を追加して、データベース上のテーブルからレコードをSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="wheres">抽出条件</param>
            <param name="params">抽出条件のパラメータ(パラメータ名と値の組)の一覧</param>
            <param name="column">IN句で絞り込む列名</param>
            <param name="values">IN句に含める条件値</param>
            <returns>SELECT結果に対応するエンティティ行の一覧</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object[])"/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object[])">
            <summary>
            指定した抽出条件に、対象の列に対するIN句の条件を追加して、データベース上のテーブルから指定した件数分だけレコードをSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="topCount">取得件数</param>
            <param name="wheres">抽出条件</param>
            <param name="params">抽出条件のパラメータ(パラメータ名と値の組)の一覧</param>
            <param name="column">IN句で絞り込む列名</param>
            <param name="values">IN句に含める条件値</param>
            <returns>SELECT結果に対応するエンティティ行の一覧</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.ExecBatch(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定したクエリを実行します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="query">実行するクエリ</param>
            <param name="dbParams">クエリの実行時に使用するデータベースパラメータ</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.CreateTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            新しいテーブルをデータベースに作成します。
            </summary>
            <param name="section">データベース接続セクション</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.CreateTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Reflection.PropertyInfo[])">
            <summary>
            指定した列をスキーマに持つ新しいテーブルをデータベースに作成します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="properties">テーブル列に対応する、エンティティ行のプロパティの一覧</param>
            <remarks>
            作成されるテーブルの名前は、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.TableName"/> に準拠します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.CreateTempTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            既存の実テーブルのスキーマをコピーして、一時テーブルをデータベースに作成します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <remarks>
            作成されるテーブルの名前は、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.TableName"/> に準拠します。<br/>
            <br/>
            [[[ 注意 ]]]<br/>
            既存テーブルから一時テーブルを作成する場合に使用してください。<br/>
            xxx関連更新テーブルなどの一時テーブルは <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.CreateTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)"/>で作成してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.CreateTempTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[])">
            <summary>
            既存の実テーブルのスキーマから指定した列をコピーして、一時テーブルをデータベースに作成します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columnNames">一時テーブルに含める列の一覧。null を指定した場合、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.InsertColumns"/> が参照されます。</param>
            <remarks>
            作成されるテーブルの名前は、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.TableName"/> に準拠します。<br/>
            <br/>
            [[[ 注意 ]]]<br/>
            既存テーブルから一時テーブルを作成する場合に使用してください。<br/>
            xxx関連更新テーブルなどの一時テーブルは <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.CreateTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)"/>で作成してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.CreateBackupTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String)">
            <summary>
            データベース上の既存のテーブルをコピーして、指定した名前の新しいテーブルにバックアップします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="backupTableName">バックアップテーブル名</param>
            <remarks>
            コピー元のテーブルは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.TableName"/> で指定されます。<br/>
            スキーマだけでなく、レコードもすべてコピーされます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.DropTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            データベースからテーブルを削除します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <remarks>
            削除するテーブルは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.TableName"/> で指定されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.TruncateTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            データベース上のテーブルから、すべてのレコードを削除します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <remarks>
            レコードを削除するテーブルは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.TableName"/> で指定されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.IsChangedDatabaseValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            コレクションに保持している各エンティティ行について、データベース上の値から変更があるかどうかを返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <returns>1つでも変更がある場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetUpdateDate(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            コレクションに保持しているエンティティ行の最新の更新日付をデータベースから取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <returns>
            プライマリキー、及び、最新の更新日付のみを持つエンティティ行。<br />
            ただし、データベースに存在しないプライマリキーの分(新規行、もしくは、削除済みの行の分)は含まれません。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.CheckUpdateDate(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            コレクションに保持している各エンティティ行について、データベース上の値が更新されていないかどうかチェックします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <returns>1行もデータベース上の値が更新されていない場合は true。1行でも更新されている場合は false。</returns>
            <remarks>
            更新日付 の変更の有無で判定します。<br/>
            ただし、このメソッドでは、データベース上に対応するレコードが1つも存在しない場合、SELECT後にレコードが削除されたような場合でも更新されていないとみなされます。<br/>
            これを避けるためには、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetUpdateDate(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)"/> メソッドと <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.CheckUpdateDate(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase})"/> を組み合わせてチェックしてください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.CheckUpdateDate(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase})">
            <summary>
            コレクションに保持している各エンティティ行について、更新日付が更新されていないかどうかチェックします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="compRows">最新の更新日付情報</param>
            <returns>1行も更新日付が更新されていない場合は true。1行でも更新されている場合(新規行 or 削除行も含む)は false。</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetUpdateDate(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectColumns(System.Boolean,System.Boolean)">
            <summary>
            クエリのSELECT句に含める列の一覧を取得します。
            </summary>
            <param name="addPrefixName">SELECT句のエイリアスの接頭辞にテーブル名を追加する場合は true。追加しない場合は false。</param>
            <param name="isNullReplace">ISNULL判定を行う場合は true。行わない場合は false。</param>
            <returns>SELECT句に含める列の一覧</returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectionColumns"/> で指定されている列を順に返します。<br/>
            <paramref name="isNullReplace"/> に true が設定されているとき、null の場合の代替値には以下が指定されます。<br/>
            ・文字列型の列の場合、空 の文字列。<br/>
            ・他の列の場合、0。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectFroms(System.Boolean)">
            <summary>
            クエリのFROM句を取得します。
            </summary>
            <param name="isLock">ロックを行う場合は true。それ以外の場合は false。</param>
            <returns>FROM句</returns>
            <remarks>
            <paramref name="isLock"/> が true の場合、このメソッドでは行ロック用のテーブルヒントが付与されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectFroms(System.Boolean,System.Boolean)">
            <summary>
            ロック方法を指定してクエリのFROM句を取得します。
            </summary>
            <param name="isLock">ロックを行う場合は true。それ以外の場合は false。</param>
            <param name="isTableLock">テーブルロックを行う場合は true。行ロックを行う場合は false。</param>
            <returns>FROM句</returns>
            <remarks>
            <paramref name="isLock"/> が true の場合、<paramref name="isTableLock"/> の値に応じて、テーブルロック用、もしくは、行ロック用のテーブルヒントが付与されます。<br />
            <paramref name="isLock"/> が false の場合、<paramref name="isTableLock"/> の設定は無視されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectWheres(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Int32,System.Boolean,System.Int32)">
            <summary>
            プライマリキーの値を対象の比較演算子で指定するWHERE句を取得します。
            </summary>
            <param name="compSign">プライマリキーの比較演算子</param>
            <param name="usedConditionKeyCount">条件として使用するプライマリキーの数。すべてのプライマリキー列を使用する場合は 負数 を指定します。</param>
            <param name="addPrefixName">列のエイリアスの接頭辞にテーブル名を追加する場合は true。追加しない場合は false。</param>
            <param name="sequenceNo">パラメータ名に付与するシーケンス番号</param>
            <returns>プライマリキーを指定するWHERE句</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectWheres(System.Collections.Generic.IEnumerable{System.String},Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Int32,System.Boolean,System.Int32)">
            <summary>
            条件列の値を対象の比較演算子で指定するWHERE句を取得します。
            </summary>
            <param name="columns">条件列の一覧</param>
            <param name="compSign">条件列の比較演算子</param>
            <param name="usedConditionKeyCount">条件として使用するプライマリキーの数。すべてのプライマリキー列を使用する場合は 負数 を指定します。</param>
            <param name="addPrefixName">列のエイリアスの接頭辞にテーブル名を追加する場合は true。追加しない場合は false。</param>
            <param name="sequenceNo">パラメータ名に付与するシーケンス番号</param>
            <returns>条件列を指定するWHERE句</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectOrderBys(System.Boolean)">
            <summary>
            プライマリキーで並び替えるORDER BY句を取得します。
            </summary>
            <param name="isAscending">昇順で並び替える場合は true。降順で並び替える場合は false。</param>
            <returns>プライマリキーで並び替えるORDER BY句</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectQuery(System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn},System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery},System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumn},System.Int32,System.Boolean)">
            <summary>
            指定した要素からなるSELECTクエリの生成用オブジェクトを取得します。
            </summary>
            <param name="columns">SELECT句</param>
            <param name="froms">FROM句</param>
            <param name="wheres">WHERE句</param>
            <param name="orderBys">ORDER BY句</param>
            <param name="topCount">取得件数。全行取得する場合は 負数 を指定します。</param>
            <param name="isDistinct">重複行を除去する場合は true。それ以外の場合は false。</param>
            <returns>SELECTクエリの生成用オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectQuery(System.Int32)">
            <summary>
            プライマリキーの値を等号で指定し、ロックを行わず、重複行も含めた全レコードをプライマリキーの昇順で取得するSELECTクエリの生成用オブジェクトを取得します。
            </summary>
            <param name="usedConditionKeyCount">条件として使用するプライマリキーの数。すべてのプライマリキー列を使用する場合は 負数 を指定します。</param>
            <returns>SELECTクエリの生成用オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection)">
            <summary>
            指定した抽出条件で、ロックを行わず、重複行も含めた全レコードをプライマリキーの昇順で取得するSELECTクエリの生成用オブジェクトを取得します。
            </summary>
            <param name="newWheres">抽出条件</param>
            <returns>SELECTクエリの生成用オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectQuery(System.Int32,System.Boolean,System.Boolean,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Boolean,System.Boolean)">
            <summary>
            プライマリキーの値を対象の比較演算子で指定するSELECTクエリの生成用オブジェクトを取得します。
            </summary>
            <param name="topCount">取得件数。全行取得する場合は 負数 を指定します。</param>
            <param name="isDistinct">重複行を除去する場合は true。それ以外の場合は false。</param>
            <param name="isLock">ロックを行う場合は true。それ以外の場合は false。</param>
            <param name="usedConditionKeyCount">条件として使用するプライマリキーの数。すべてのプライマリキー列を使用する場合は 負数 を指定します。</param>
            <param name="compSign">プライマリキーの比較演算子</param>
            <param name="isAscending">昇順で並び替える場合は true。降順で並び替える場合は false。</param>
            <param name="addPrefixName">列のエイリアスの接頭辞にテーブル名を追加する場合は true。追加しない場合は false。</param>
            <returns>SELECTクエリの生成用オブジェクト</returns>
            <remarks>
            <paramref name="isLock"/> が true の時、プライマリキーに対するWHERE句が指定されている場合は行ロック、指定されていない場合はテーブルロックが指定されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetDbParamaters(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[],System.Boolean)">
            <summary>
            プライマリキー列に指定した値を代入するためのデータベースパラメータを作成します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">プライマリキー値の一覧</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>作成したデータベースパラメータの一覧</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetDbParamaters(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[],System.Boolean)">
            <summary>
            対象の列に指定した値を代入するためのデータベースパラメータを作成します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">パラメータ化する列の一覧</param>
            <param name="values">パラメータ値の一覧</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>作成したデータベースパラメータの一覧</returns>
            <remarks>
            <paramref name="columns"/> に null 、もしくは、空の配列 が指定された場合は、プライマリキー列に対するデータベースパラメータを作成します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.MakeWheresAndParameters(System.String[],System.Object[],Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            指定した列と値の抽出条件を作成します。
            </summary>
            <param name="columns">条件列名</param>
            <param name="values">条件値</param>
            <param name="newWheres">作成された抽出条件を格納するコレクション</param>
            <param name="newWhereParams">作成された抽出条件で使用するパラメータを格納するディクショナリ</param>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <paramref name="values"/> で指定された値の数が <paramref name="columns"/>で指定された列数に満たない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SetForceBulkInsertMode">
            <summary>
            挿入時に強制的に一括挿入(SqlBulkCopy)を使用して挿入するように設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SetForceNormalInsertMode">
            <summary>
            挿入時に強制的に通常挿入(INSERTステートメント)を使用して挿入するように設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.ConvertTableName">
            <summary>
            このエンティティのテーブルを一時テーブルとして使用するかどうかに応じて、テーブル名の変換を行います。
            </summary>
            <returns>変換後のテーブル名</returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.BaseTableName"/>を基に、一時テーブルとして使用するかどうかに応じて、接頭辞の追加、もしくは、除去を行った名前を返します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase._name">
            <summary>
            このエンティティの識別名です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.NewRow">
            <summary>
            新しいエンティティ行を作成します。
            </summary>
            <returns>新規に作成したエンティティ行</returns>
            <remarks>
            オブジェクトの生成のみ行い、自身のコレクションには追加しません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Add">
            <summary>
            新しいエンティティ行を作成し、末尾に追加します。
            </summary>
            <returns>追加したエンティティ行</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Add(System.String)">
            <summary>
            指定した識別名を持つ新しいエンティティ行を作成し、末尾に追加します。
            </summary>
            <param name="name">エンティティ行の識別名</param>
            <returns>追加したエンティティ行</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.InsertItem(System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetRowProperty(System.String)">
            <summary>
            エンティティ行クラスから、指定した名前のプロパティの情報を取得します。
            </summary>
            <param name="name">プロパティ名</param>
            <returns>エンティティ行クラスのプロパティ情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetColumnNames(System.String[])">
            <summary>
            エンティティ行クラスの指定したプロパティに対応する列名の一覧を取得します。
            </summary>
            <param name="propertyNames">プロパティ名の一覧</param>
            <returns>指定したプロパティに対応する列名の一覧</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetPropertyNames(System.String[])">
            <summary>
            エンティティ行クラスで、指定した列に対応するプロパティの名前の一覧を取得します。
            </summary>
            <param name="columnNames">列名の一覧</param>
            <returns>指定した列に対応するプロパティの名前の一覧</returns>
            <remarks>
            <paramref name="columnNames"/> が省略された場合は、プライマリキー列に対応するプロパティの名前を取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetValidRows(System.String[])">
            <summary>
            コレクションに保持しているエンティティ行の内、指定した列の値が有効なエンティティ行の一覧を取得します。
            </summary>
            <param name="columnNames">列名の一覧</param>
            <returns>有効なエンティティ行の一覧</returns>
            <remarks>
            <paramref name="columnNames"/> が省略された場合は、プライマリキー列の値が有効なエンティティ行を取得します。
            </remarks>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.IsValidColumns(System.String[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.System#ICloneable#Clone">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Clone">
            <summary>
            このエンティティのコピーである新しいオブジェクトを作成します。
            </summary>
            <returns>このエンティティのコピーである新しいオブジェクト</returns>
            <remarks>
            識別名やテーブル名、列の設定などのみコピーされます。コレクションに保持しているエンティティ行はコピーされません。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase._backUpItems">
            <summary>
            編集開始前のコレクション要素です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.BeginEdit">
            <inheritdoc/>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.BeginEdit"/> が呼び出された後、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Commit"/>、もしくは、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Rollback"/> がまだ呼び出されていない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Rollback">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Commit">
            <inheritdoc/>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.BeginEdit"/> がまだ呼び出されていない場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.BulkInsertSwitchingThreshold">
            <summary>
            INSERT処理において、通常挿入と一括挿入を切り替えるレコード数の閾値を取得、設定します。
            </summary>
            <value>INSERT処理において、通常挿入と一括挿入を切り替えるレコード数の閾値</value>
            <remarks>
            レコード数がこの値以下   ... 通常挿入<br/>
            レコード数がこの値より上 ... 一括挿入<br/>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.FORCE_NOMAL_INSERT_SWITCHING_THRESHOLD"/> ... レコード数に関係なく、通常挿入<br/>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.FORCE_BULK_INSERT_SWITCHING_THRESHOLD"/>  ... レコード数に関係なく、一括挿入<br/>
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.MaxMultipleQueryCount">
            <summary>
            同時発行できるクエリの最大数を取得、設定します。
            </summary>
            <value>同時発行できるクエリの最大数</value>
            <remarks>
            INSERT、UPDATE、MERGE、DELETE の各処理において有効です。<br/>
            可能な限り同時発行させる場合には <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.AS_POSSIBLE_MULTIPLE_QUERY_COUNT_VALUE"/> を指定します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.BracketedTableName">
            <summary>
            ブラケット(角括弧「[]」)付与されたテーブル名を取得します。
            </summary>
            <value>ブラケット(角括弧「[]」)付与されたテーブル名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.BracketedName">
            <summary>
            ブラケット(角括弧「[]」)付与された識別名を取得します。
            </summary>
            <value>ブラケット(角括弧「[]」)付与された識別名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys">
            <summary>
            プライマリキーに対応する列名の一覧を取得します。
            </summary>
            <value>プライマリキー列名の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.RowValidationType">
            <summary>
            このエンティティのエンティティ行の有効性の判定方法を取得、設定します。
            </summary>
            <value>エンティティ行の有効性の判定方法</value>
            <remarks>
            エンティティ行の有効性の判定時、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.RowValidationFunc"/> プロパティが設定されていれば、
            このプロパティよりも <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.RowValidationFunc"/> プロパティ の処理が優先されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.RowValidationFunc">
            <summary>
            このエンティティのエンティティ行の有効性の判定処理を取得、設定します。
            </summary>
            <value>エンティティ行の有効性の判定処理</value>
            <remarks>
            エンティティ行が有効と判断できる場合は true、それ以外の場合は false を返すメソッドへのデリゲートを指定します。<br/>
            エンティティ行の有効性の判定時、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.RowValidationType"/> プロパティの設定よりも優先して使用されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryPropertyNames">
            <summary>
            エンティティ行クラスで、プライマリキーの列に対応するプロパティの名前の一覧を取得します。
            </summary>
            <value>プライマリキーの列に対応するプロパティの名前の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.ValidPrimaryRows">
            <summary>
            コレクションに保持しているエンティティ行の内、有効なプライマリキーが入力されているエンティティ行の一覧を取得します。
            </summary>
            <value>コレクション内で有効なプライマリキーのエンティティ行の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.TableName">
            <summary>
            テーブル名を取得します。
            </summary>
            <value>テーブル名</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.BaseTableName"/>を基に、一時テーブルとして使用するかどうかに応じて、接頭辞の追加、もしくは、除去を行った名前を返します。
            </remarks>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.ConvertTableName"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.IsTemplate">
            <summary>
            このエンティティのテーブルを一時テーブルとして使用するかどうかを取得、設定します。
            </summary>
            <value>一時テーブルとして使用する場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.BaseTableName">
            <summary>
            基本のテーブル名を取得します。
            </summary>
            <value>基本のテーブル名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Name">
            <summary>
            このエンティティの識別名を取得、設定します。
            </summary>
            <value>エンティティの識別名</value>
            <remarks>
            空 を設定した場合、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.TableName"/> が返されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.AllColumns">
            <summary>
            このエンティティのすべての列と、エンティティ行クラスの対応するプロパティ名の一覧を取得します。
            </summary>
            <value>すべての列と、エンティティ行クラスの対応するプロパティ名の一覧</value>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.AllColumnAttributes">
            <summary>
            このエンティティのすべての列と、対応するデータベース列情報の一覧を取得します。
            </summary>
            <value>すべての列と、対応するデータベース列情報の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectionColumns">
            <summary>
            テーブルのSELECT処理で使用する列と、エンティティ行クラスの対応するプロパティ名の一覧を取得します。
            </summary>
            <value>SELECT処理で使用する列と、エンティティ行クラスの対応するプロパティ名の一覧</value>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.InsertColumns">
            <summary>
            テーブルのINSERT処理で使用する列と、エンティティ行クラスの対応するプロパティ名の一覧を取得します。
            </summary>
            <value>INSERT処理で使用する列と、エンティティ行クラスの対応するプロパティ名の一覧</value>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.UpdateColumns">
            <summary>
            テーブルのUPDATE処理で使用する列と、エンティティ行クラスの対応するプロパティ名の一覧を取得します。
            </summary>
            <value>UPDATE処理で使用する列と、エンティティ行クラスの対応するプロパティ名の一覧</value>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.UpdateIdColumnName">
            <summary>
            更新者 に対応する列名を取得します。
            </summary>
            <value>更新者 に対応する列名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.RegisteredIdColumnName">
            <summary>
            登録者 に対応する列名を取得します。
            </summary>
            <value>登録者 に対応する列名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.UpdateDateColumnName">
            <summary>
            更新日付 に対応する列名を取得します。
            </summary>
            <value>更新日付 に対応する列名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.RegisteredDateColumnName">
            <summary>
            登録日付 に対応する列名を取得します。
            </summary>
            <value>登録日付 に対応する列名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.UpdateInfoColumnName">
            <summary>
            データベースのレコードの更新情報に対応する列名の一覧を取得します。
            </summary>
            <value>更新情報に対応する列名の一覧</value>
            <remarks>
            通常は、更新者、及び、更新日付 の列名が含まれます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.RegisteredInfoColumnName">
            <summary>
            データベースのレコードの登録情報に対応する列名の一覧を取得します。
            </summary>
            <value>登録情報に対応する列名の一覧</value>
            <remarks>
            通常は、登録者、及び、登録日付 の列名が含まれます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.UpdateAndRegisteredInfoColumnName">
            <summary>
            データベースのレコードの登録、及び、更新の情報に対応する列名の一覧を取得します。
            </summary>
            <value>登録、及び、更新の情報に対応する列名の一覧</value>
            <remarks>
            通常は、更新者、更新日付、登録者、及び、登録日付 の列名が含まれます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.IsSuspended">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.NewRow">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.IndexOf(`0)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.IndexOf(`0)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.Insert(System.Int32,`0)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Insert(System.Int32,`0)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.Add(`0)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Add(`0)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.Add">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Add"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.Add(System.String)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.Add(System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.Contains(`0)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Contains(`0)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.CopyTo(`0[],System.Int32)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.CopyTo(`0[],System.Int32)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.Remove(`0)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Remove(`0)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetEnumerator">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.GetEnumerator"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetRowProperty(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[],System.Boolean)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[],System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRows(System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[],System.Boolean)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[],System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.String[],System.Object[],System.Boolean)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.String[],System.Object[],System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Object[])">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Object[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.String,System.Object[])">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.String,System.Object[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,System.String,System.Object[])">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,System.String,System.Object[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,System.String,System.Object[])">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,System.String,System.Object[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object[])">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object[])">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.CreateTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.CreateTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.MakeAllSelectionColumns(System.Boolean)">
            <summary>
            エンティティ行 <typeparamref name="T"/> のプロパティ情報を基に、対象テーブルの列名の一覧を取得します。
            </summary>
            <param name="all">バイナリ列を含むすべての列を取得する場合は true。それ以外の場合は false。</param>
            <returns>エンティティ行のプロパティ名と対象テーブルの列名の組の一覧</returns>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            <br />
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.MakeAllColumnAttributes">
            <summary>
            エンティティ行 <typeparamref name="T"/> のプロパティ情報を基に、対象テーブルの列情報の一覧を取得します。
            </summary>
            <returns>エンティティ行のプロパティ名と対象テーブルの列情報の組の一覧</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.Item(System.Int32)">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Item(System.Int32)"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.#ctor(System.String,System.String[],System.String[])">
            <summary>
            指定したストアドファンクションの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="functionName">ストアドファンクション名</param>
            <param name="argNames">ストアドファンクションの引数名の一覧</param>
            <param name="returnNames">ストアドファンクションの戻り値名の一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.functionName">
            <summary>
            このエンティティのストアドファンクション名です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.argumentNames">
            <summary>
            このエンティティのストアドファンクションの引数名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.CreateQuery">
            <summary>
            ストアドファンクションを実行するクエリの生成用オブジェクトを取得します。
            </summary>
            <returns>クエリの生成用オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectFroms(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectFroms(System.Boolean,System.Boolean)">
            <inheritdoc/>
            <remarks>
            ストアドファンクションではロック用のテーブルヒントは使用できないため、このクラスでは <paramref name="isLock"/>、<paramref name="isTableLock"/> の設定は無視されます。<br />
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectWheres(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Int32,System.Boolean,System.Int32)">
            <inheritdoc/>
            <remarks>
            ストアドファンクションではWHERE句は使用できないため、このクラスでは常に空が返されます。<br />
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetDbParamaters(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[],System.Boolean)">
            <inheritdoc/>
            <summary>
            ストアドファンクションの引数に指定した値を代入するためのデータベースパラメータを作成します。
            </summary>
            <param name="section">データーベース接続セクション</param>
            <param name="values">ストアドファンクションの引数値の一覧</param>
            <param name="tablePrefix">パラメータ名にストアドファンクション名を付与する場合は true。付与しない場合は false。</param>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.ArgumentNames"/> で返される引数名の順序に合わせる必要があります。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            指定した引数値で実行したストアドファンクションの実行結果で、このエンティティを上書きします。
            </summary>
            <param name="section">データーベース接続セクション</param>
            <param name="values">ストアドファンクションの引数値の一覧</param>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.ArgumentNames"/> で返される引数名の順序に合わせる必要があります。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <inheritdoc/>
            <summary>
            指定した引数値で実行したストアドファンクションの実行結果を、エンティティ行に変換して返します。
            </summary>
            <param name="section">データーベース接続セクション</param>
            <param name="values">ストアドファンクションの引数値の一覧</param>
            <returns>実行結果に対応するエンティティ行の一覧</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.ArgumentNames"/> で返される引数名の順序に合わせる必要があります。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[],System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[],System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.String[],System.Object[],System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Object[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.String,System.Object[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,System.String,System.Object[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,System.String,System.Object[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRowsByINClause(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.Object[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.IsChangedDatabaseValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.Insert(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.Insert(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.BulkInsert(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.BulkInsert(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.DatabaseBulkInsertPriorityFlag)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.Update(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.Update(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.MergeUpdate(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.MergeUpdate(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.Update(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetUpdateEntity(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.Delete(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.Delete(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.Delete(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.AllDelete(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.ExecBatch(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.CreateTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.CreateTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Reflection.PropertyInfo[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.CreateTempTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.CreateTempTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.CreateBackupTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.DropTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.TruncateTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.PrimaryKeys">
            <inheritdoc/>
            <remarks>
            ストアドファンクションにはプライマリキーは存在しないため、このエンティティでは常に空の配列を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.BaseTableName">
            <inheritdoc/>
            <summary>
            ストアドファンクション名を取得します。
            </summary>
            <value>ストアドファンクション名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.ArgumentNames">
            <summary>
            ストアドファンクションの引数名の一覧を取得します。
            </summary>
            <value>ストアドファンクションの引数名の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.AllColumns">
            <inheritdoc/>
            <remarks>
            このクラスでは <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectionColumns"/> と等価です。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.AllColumnAttributes">
            <inheritdoc/>
            <remarks>
            このクラスでは <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectionColumns"/> と等価です。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.ParameterNames">
            <summary>
            ストアドファンクションの引数を指定するデータベースパラメータの名前の一覧を取得します。
            </summary>
            <value>ストアドファンクションの引数を指定するデータベースパラメータの名前の一覧</value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.TABLE_NAME">
            <summary> テーブル名を表す定数です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.Code">
            <summary> 行データのコードプロパティの名称の定数です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.CodeName">
            <summary> 行データの取得名の名称の定数です。 </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity"/>クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute,System.String)">
            <summary>
            セクション、名称表示項目情報、入力されたコードを指定して、Selectを実行します。
            </summary>
            <param name="section">セクション</param>
            <param name="display">名称表示項目情報</param>
            <param name="code">入力されたコード</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute,System.String)">
            <summary>
            セクション、名称表示項目情報、入力されたコードを指定して、値の取得を実行します。
            </summary>
            <param name="section">セクション</param>
            <param name="display">名称表示項目情報</param>
            <param name="code">入力されたコード</param>
            <returns>取得した情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.GetSelectRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute,System.String)">
            <summary>
            セクション、名称表示項目情報、入力されたコードを指定して、値の取得を実行します。
            </summary>
            <param name="section">セクション</param>
            <param name="display">名称表示項目情報</param>
            <param name="code">入力されたコード</param>
            <returns>取得した情報の列挙</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.CreateQuery(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute)">
            <summary>
            取得用のクエリを作成します。
            </summary>
            <param name="display">名称表示項目情報</param>
            <returns>取得用クエリ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.GetSelectColumns(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute,System.Boolean)">
            <summary>
            列情報の取得を行います。
            </summary>
            <param name="display">名称表示項目情報</param>
            <param name="addPrefixName">プレフィックスの付加有無区分</param>
            <returns>列情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.GetSelectFroms(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute,System.Boolean)">
            <summary>
            テーブル情報の取得を行います。
            </summary>
            <param name="display">名称表示項目情報</param>
            <param name="isLock">ロックの有無区分</param>
            <returns>テーブル情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.GetSelectWheres(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Int32,System.Boolean,System.Int32)">
            <summary>
            検索条件の取得を行います。
            </summary>
            <param name="display">名称表示項目情報</param>
            <param name="compSign">判定演算子</param>
            <param name="usedConditionKeyCount">この引数は使用されていません。</param>
            <param name="addPrefixName">この引数は使用されていません。</param>
            <param name="sequenceNo">この引数は使用されていません。</param>
            <returns>検索条件</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.GetSelectQuery(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IGetNameAttribute,System.Int32,System.Boolean,System.Boolean,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Boolean,System.Boolean)">
            <summary>
            選択クエリの取得を行います。
            </summary>
            <param name="display">名称表示項目情報</param>
            <param name="topCount">取得件数</param>
            <param name="isDistinct">重複行削除区分</param>
            <param name="isLock">ロックを行うか否か</param>
            <param name="usedConditionKeyCount">条件として使用するプライマリキー数</param>
            <param name="compSign">判定演算子</param>
            <param name="isAscending">ソート順</param>
            <param name="addPrefixName">プレフィックスの付加有無区分</param>
            <returns>SELECT句</returns>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.PRIMARY_KEY">
            <summary> PrimaryKeyリストです。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.ARGUMENT_NAMES">
            <summary> SFの引数です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.ALL_SELECTION_COLUMNS">
            <summary> 全列の名前を格納するコレクションです。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.ALL_COLUMN_ATTRIBUTES">
            <summary> 全列の属性を格納するコレクションです。 </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.MakeAllSelectionColumns(System.Boolean)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase`1.MakeAllSelectionColumns(System.Boolean)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.GetSelectQuery(System.Int32,System.Boolean,System.Boolean,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Boolean,System.Boolean)">
            <inheritdoc/>
            <remarks>このメソッドは使用できません</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.GetSelectColumns(System.Boolean,System.Boolean)">
            <inheritdoc/>
            <remarks>このメソッドは使用できません</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.GetSelectFroms(System.Boolean)">
            <inheritdoc/>
            <remarks>このメソッドは使用できません</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.GetSelectFroms(System.Boolean,System.Boolean)">
            <inheritdoc/>
            <remarks>このメソッドは使用できません</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.GetSelectWheres(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Int32,System.Boolean,System.Int32)">
            <inheritdoc/>
            <remarks>このメソッドは使用できません</remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.PrimaryKeys">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.PrimaryKeys"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.BaseTableName">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.BaseTableName"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.ArgumentNames">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.ArgumentNames"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.AllColumns">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.AllColumns"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntity.AllColumnAttributes">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.StoredFunctionEntityBase`1.AllColumnAttributes"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntityRow">
            <summary>
            カスタム抽出条件の名称取得時の行データクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase">
            <summary>
            エンティティ行を表す基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase">
            <summary>
            バインディング用の値の設定、保持、及び、復元が可能なオブジェクトの基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2">
            <summary>
            キーと値のコレクションを表します。
            </summary>
            <typeparam name="TKey">ディクショナリ内のキーの型</typeparam>
            <typeparam name="TValue">ディクショナリ内の値の型</typeparam>
            <remarks>
            <see cref="T:System.Collections.Generic.Dictionary`2"/> でオーバーライドできないインターフェース類をオーバーライドできるように独自実装します。<br/>
            このクラスでは、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Remove(`0)"/> 、及び、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Clear"/> メソッドでディクショナリの要素は削除されません。<br/>
            各キーに対応する値を <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.GetDefaultValue"/>メソッドで取得した既定値で初期化するだけです。<br/>
            キーごと要素を削除したい場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.RemoveKey(`0)"/> 、または、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.ClearKeys"/> メソッドを呼び出してください。<br/>
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2._items">
            <summary>
            処理を委譲する <see cref="T:System.Collections.Generic.IDictionary`2"/> ラッパー。<br/>
            明確な意図がない限り、コンストラクタ以外ではこの変数に対して直接の操作を行うことは避け、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Items"/> プロパティを参照するようにして下さい。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.#ctor">
            <summary>
            空で、キーの型の既定の等値比較子を使用する、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            指定した <see cref="T:System.Collections.Generic.IDictionary`2"/> から要素をコピーして格納し、キーの型の既定の等値比較子を使用する、
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="dictionary">要素のコピー元の <see cref="T:System.Collections.Generic.IDictionary`2"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="dictionary"/> が null の場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            空で、指定した <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="comparer">
            キーの比較時に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> 実装。<br/>
            キーの型の既定の <see cref="T:System.Collections.Generic.EqualityComparer`1"/> を使用する場合は null。
            </param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            指定した <see cref="T:System.Collections.Generic.IDictionary`2"/> から要素をコピーして格納し、指定した <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する、
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="dictionary">要素のコピー元の <see cref="T:System.Collections.Generic.IDictionary`2"/></param>
            <param name="comparer">
            キーの比較時に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> 実装。<br/>
            キーの型の既定の <see cref="T:System.Collections.Generic.EqualityComparer`1"/> を使用する場合は null。
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="dictionary"/> が null の場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Add(`0,`1)">
            <summary>
            指定したキーと値をディクショナリに追加します。
            </summary>
            <param name="key">追加する要素のキー</param>
            <param name="value">追加する要素の値。 参照型の場合、null の値を使用できます。</param>
            <remarks>
            このメソッドは内部的には、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Item(`0)"/> の set 操作を行っているだけです。<br/>
            継承クラスにおいて override する際は、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Item(`0)"/> の override を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.ContainsKey(`0)">
            <summary>
            指定したキーが <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に格納されているかどうかを判断します。
            </summary>
            <param name="key"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> 内で検索されるキー</param>
            <returns>指定したキーを持つ要素が <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に格納されている場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.ContainsValue(`1)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に特定の値が格納されているかどうかを判断します。
            </summary>
            <param name="value"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> 内で検索される値。 参照型の場合、null の値を使用できます。</param>
            <returns>指定した値を持つ要素が <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に格納されている場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Remove(`0)">
            <summary>
            指定したキーに関連付けられている値に既定値を設定します。
            </summary>
            <param name="key">設定する値のキー</param>
            <returns>常に、true。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.TryGetValue(`0,`1@)">
            <summary>
            指定したキーに関連付けられている値を取得します。
            </summary>
            <param name="key">取得する値のキー</param>
            <param name="value">
            このメソッドから制御が戻るときに、キーが見つかった場合は、指定したキーに関連付けられている値が格納されます。
            それ以外の場合は <paramref name="value"/> パラメーターの型に対する既定の値。
            このパラメーターは初期化せずに渡されます。
            </param>
            <returns>指定したキーを持つ要素が <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に格納されている場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に項目を追加します。
            </summary>
            <param name="item"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に追加するオブジェクト</param>
            <remarks>
            このメソッドはインタフェース実装のために存在します。<br/>
            基本的に使用しないでください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Clear">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> 内のすべての要素の値に既定値を設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に特定の要素が格納されているかどうかを判断します。
            </summary>
            <param name="item"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> 内で検索するオブジェクト</param>
            <returns><paramref name="item"/> が <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に存在する場合は true。それ以外の場合は false。</returns>
            <remarks>
            このメソッドはインタフェース実装のために存在します。<br/>
            基本的に使用しないでください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> の要素を <see cref="T:System.Array"/> にコピーします。
            <see cref="T:System.Array"/> の特定のインデックスからコピーが開始されます。
            </summary>
            <param name="array">
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> から要素がコピーされる 1 次元の <see cref="T:System.Array"/>。
            <see cref="T:System.Array"/> には、0 から始まるインデックス番号が必要です。
            </param>
            <param name="arrayIndex">コピーの開始位置となる、<paramref name="array"/> 内の 0 から始まるインデックス。</param>
            <remarks>
            このメソッドはインタフェース実装のために存在します。<br/>
            基本的に使用しないでください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> 内で最初に見つかった特定のオブジェクトを削除します。
            </summary>
            <param name="item"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> から削除するオブジェクト。 参照型の場合、null の値を使用できます。</param>
            <returns>
            <paramref name="item"/> が正常に削除された場合は true。それ以外の場合は false。
            このメソッドは、<paramref name="item"/> が元の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に見つからなかった場合にも false を返します。
            </returns>
            <remarks>
            このメソッドはインタフェース実装のために存在します。<br/>
            基本的に使用しないでください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.GetEnumerator">
            <summary>
            コレクションを反復処理する列挙子を返します。
            </summary>
            <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.Generic.IEnumerator`1"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            コレクションを反復処理する列挙子を返します。
            </summary>
            <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator"/> オブジェクト</returns>
            <remarks>
            このメソッドはインタフェース実装のために存在します。<br/>
            基本的に使用しないでください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
            <summary>
            指定したキーおよび値を持つ要素を <see cref="T:System.Collections.IDictionary"/> オブジェクトに追加します。
            </summary>
            <param name="key">追加する要素のキーとして使用する <see cref="T:System.Object"/></param>
            <param name="value">追加する要素の値として使用する <see cref="T:System.Object"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#IDictionary#Contains(System.Object)">
            <summary>
            指定したキーを持つ要素が <see cref="T:System.Collections.IDictionary"/> オブジェクトに格納されているかどうかを確認します。
            </summary>
            <param name="key">オブジェクト内で検索されるキー</param>
            <returns>指定したキーを持つ要素を <see cref="T:System.Collections.IDictionary"/> が保持している場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#IDictionary#GetEnumerator">
            <summary>
            <see cref="T:System.Collections.IDictionary"/> オブジェクトの <see cref="T:System.Collections.IDictionaryEnumerator"/> オブジェクトを返します。
            </summary>
            <returns><see cref="T:System.Collections.IDictionary"/> オブジェクトの <see cref="T:System.Collections.IDictionaryEnumerator"/> オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#IDictionary#Remove(System.Object)">
            <summary>
            指定したキーを持つ要素の値に既定値を設定します。
            </summary>
            <param name="key">設定する要素のキー</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.IsCompatibleKey(System.Object)">
            <summary>
            指定したオブジェクトが <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> の要素のキーとして互換性があるかどうかを返します。
            </summary>
            <param name="key">互換性があるかどうかを判定するオブジェクト</param>
            <returns>指定したオブジェクトが <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> の要素のキーとして互換性がある場合は true。それ以外の場合は false。</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> が null の場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.IsCompatibleValue(System.Object)">
            <summary>
            指定したオブジェクトが <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> の要素の値として互換性があるかどうかを返します。
            </summary>
            <param name="value">互換性があるかどうかを判定するオブジェクト</param>
            <returns>指定したオブジェクトが <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> の要素の値として互換性がある場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            <see cref="T:System.Collections.ICollection"/> の要素を <see cref="T:System.Array"/> にコピーします。<see cref="T:System.Array"/> の特定のインデックスからコピーが開始されます。
            </summary>
            <param name="array">
            <see cref="T:System.Collections.ICollection"/> から要素がコピーされる 1 次元の <see cref="T:System.Array"/>。
            <see cref="T:System.Array"/> には、0 から始まるインデックス番号が必要です。
            </param>
            <param name="index">コピーの開始位置となる、<paramref name="array"/> 内の 0 から始まるインデックス。</param>
            <remarks>
            このメソッドはインタフェース実装のために存在します。<br/>
            基本的に使用しないでください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            <see cref="T:System.Runtime.Serialization.ISerializable"/> インターフェイスを実装し、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> インスタンスをシリアル化するために必要なデータを返します。
            </summary>
            <param name="info">
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> インスタンスをシリアル化するために必要な情報を格納する <see cref="T:System.Runtime.Serialization.SerializationInfo"/> オブジェクト
            </param>
            <param name="context">
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> インスタンスに関連付けられているシリアル化ストリームのソースおよびデスティネーションを格納する <see cref="T:System.Runtime.Serialization.StreamingContext"/> 構造体
            </param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.OnDeserialization(System.Object)">
            <summary>
            <see cref="T:System.Runtime.Serialization.ISerializable"/> インターフェイスを実装し、逆シリアル化が完了したときに逆シリアル化イベントを発生させます。
            </summary>
            <param name="sender">逆シリアル化イベントのソース</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.FindKey(`1)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に格納されている値に対応する先頭のキーを取得します。
            </summary>
            <param name="value">
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> 内で検索される値。 参照型の場合、null の値を使用できます。</param>
            <returns>指定した値を持つ要素が <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に格納されている場合は 対応するキー。それ以外の場合は null。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.FindKeys(`1)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に格納されている値に対応するキーの一覧を取得します。
            </summary>
            <param name="value">
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> 内で検索される値。 参照型の場合、null の値を使用できます。</param>
            <returns>指定した値を持つ要素に対応する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> のキーの一覧</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.RemoveKey(`0)">
            <summary>
            指定したキーを持つ値を <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> から削除します。
            </summary>
            <param name="key">削除する要素のキー</param>
            <returns>
            要素が見つかり、正常に削除された場合は true。それ以外の場合は false。<br/>
            このメソッドは、<paramref name="key"/> が <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に見つからない場合、false を返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.ClearKeys">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> からすべてのキーと値を削除します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.GetDefaultValue">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> の要素の値の既定値を取得します。
            </summary>
            <returns>要素の値の既定値</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Items">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> をラップする <see cref="T:System.Collections.Generic.IDictionary`2"/> ラッパーを取得、設定します。<br/>
            コンストラクタ内等、インスタンスの生成直後を除いて、なるべく set 操作は行わないでください。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> をラップする <see cref="T:System.Collections.Generic.IDictionary`2"/> ラッパー</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Comparer">
            <summary>
            ディクショナリのキーが等しいかどうかを確認するために使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を取得します。
            </summary>
            <value>ディクショナリのキーが等しいかどうかを確認するために使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Keys">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> のキーを保持している <see cref="T:System.Collections.Generic.ICollection`1"/> を取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> のキーを保持している <see cref="T:System.Collections.Generic.ICollection`1"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Values">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> の値を格納している <see cref="T:System.Collections.Generic.ICollection`1"/> を取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> の値を格納している <see cref="T:System.Collections.Generic.ICollection`1"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Item(`0)">
            <summary>
            指定したキーに関連付けられている値を取得または設定します。
            </summary>
            <param name="key">取得または設定する値のキー</param>
            <value>
            指定したキーに関連付けられている値。<br />
            指定したキーが見つからなかった場合、get / set 操作は指定したキーを持つ新しい要素を作成します。
            </value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Count">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に格納されているキー/値ペアの数を取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に格納されているキー/値ペアの数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> が読み取り専用かどうかを示す値を取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> が読み取り専用である場合は true。それ以外の場合は false。</value>
            <remarks>
            このメソッドはインタフェース実装のために存在します。<br/>
            基本的に使用しないでください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#IDictionary#IsFixedSize">
            <summary>
            <see cref="T:System.Collections.IDictionary"/> オブジェクトが固定サイズかどうかを示す値を取得します。
            </summary>
            <value><see cref="T:System.Collections.IDictionary"/> オブジェクトが固定サイズの場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#IDictionary#IsReadOnly">
            <summary>
            <see cref="T:System.Collections.IDictionary"/> オブジェクトが読み取り専用かどうかを示す値を取得します。
            </summary>
            <value><see cref="T:System.Collections.IDictionary"/> オブジェクトが読み取り専用の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#IDictionary#Keys">
            <summary>
            <see cref="T:System.Collections.IDictionary"/> オブジェクトのキーを保持している <see cref="T:System.Collections.ICollection"/> オブジェクトを取得します。
            </summary>
            <value><see cref="T:System.Collections.IDictionary"/> オブジェクトのキーを保持している <see cref="T:System.Collections.ICollection"/> オブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#IDictionary#Values">
            <summary>
            <see cref="T:System.Collections.IDictionary"/> オブジェクト内の値を格納している <see cref="T:System.Collections.ICollection"/> オブジェクトを取得します。
            </summary>
            <value><see cref="T:System.Collections.IDictionary"/> オブジェクト内の値を格納している <see cref="T:System.Collections.ICollection"/> オブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#IDictionary#Item(System.Object)">
            <summary>
            指定したキーを持つ要素を取得または設定します。
            </summary>
            <param name="key">取得または設定する要素のキー</param>
            <returns>指定したキーの要素。該当するキーが存在しない場合は null。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#ICollection#IsSynchronized">
            <summary>
            <see cref="T:System.Collections.ICollection"/> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。
            </summary>
            <value><see cref="T:System.Collections.ICollection"/> へのアクセスが同期されている (スレッド セーフである) 場合は true。それ以外の場合は false。</value>
            <remarks>
            このメソッドはインタフェース実装のために存在します。<br/>
            基本的に使用しないでください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#ICollection#SyncRoot">
            <summary>
            <see cref="T:System.Collections.ICollection"/> へのアクセスを同期するために使用できるオブジェクトを取得します。
            </summary>
            <value><see cref="T:System.Collections.ICollection"/> へのアクセスを同期するために使用できるオブジェクト</value>
            <remarks>
            このメソッドはインタフェース実装のために存在します。<br/>
            基本的に使用しないでください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
            <summary>
            読み取り専用のディクショナリのキーを含む列挙可能なコレクションを取得します。
            </summary>
            <value>読み取り専用のディクショナリのキーを含む列挙可能なコレクション</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
            <summary>
            読み取り専用のディクショナリの値を含む列挙可能なコレクションを取得します。
            </summary>
            <value>読み取り専用のディクショナリの値を含む列挙可能なコレクション</value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.DEFAULT_NAME">
            <summary>
            既定のインスタンス識別名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.NameProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.Name"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.#ctor(System.String)">
            <summary>
            指定した識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">インスタンス識別名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.RemoveKey(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.ClearKeys">
            <inheritdoc/>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase._name">
            <summary>
            このインスタンスの識別名です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.ContainsProperty(System.String)">
            <inheritdoc/>
            <remarks>
            継承クラスにて override する場合は、<paramref name="propName"/> に対して、必ず <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/> の
            設定を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.GetValue(System.String)">
            <inheritdoc/>
            <remarks>
            継承クラスにて override する場合は、<paramref name="propName"/> に対して、必ず <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/> の
            設定を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.GetValue``1(System.String)">
            <summary>
            指定したプロパティ名の値を指定した型で取得します。
            </summary>
            <typeparam name="TValue">取得する値の型</typeparam>
            <param name="propName">プロパティ名</param>
            <returns>プロパティに設定されている値</returns>
            <remarks>
            継承クラスにて override する場合は、<paramref name="propName"/> に対して、必ず <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/> の
            設定を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.SetValue(System.Object,System.String)">
            <inheritdoc/>
            <remarks>
            継承クラスにて override する場合は、<paramref name="propName"/> に対して、必ず <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/> の
            設定を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.OnDataChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.DataChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase._backup">
            <summary>
            メンバーの確定値保持用のディクショナリです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.BeginEdit">
            <inheritdoc/>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.BeginEdit"/> が呼び出された後、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.Commit"/>、もしくは、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.Rollback"/> がまだ呼び出されていない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.Rollback">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.Rollback(System.String)">
            <summary>
            指定したプロパティの値の編集を取り消して、以前の状態に戻します。
            </summary>
            <param name="key">プロパティ名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.Commit">
            <inheritdoc/>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.BeginEdit"/> がまだ呼び出されていない場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.Commit(System.String)">
            <summary>
            指定したプロパティの値の編集を確定させます。
            </summary>
            <param name="key">プロパティ名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.ExtractDebugData">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.ExtractItemDebugData(System.String)">
            <summary>
            指定したプロパティのデバッグ情報データの値を抽出します。
            </summary>
            <param name="key">プロパティ名</param>
            <returns>抽出されたデバッグ情報データ値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.LoadDebugData(Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.LoadItemDebugData(System.String,System.Object)">
            <summary>
            指定したプロパティに、デバッグ情報データの値を復元します。
            </summary>
            <param name="key">プロパティ</param>
            <param name="value">復元するデバッグ情報データ値</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.Name">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.DataChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.Backup">
            <summary>
            メンバーの確定値保持用のディクショナリを取得します。
            </summary>
            <value>メンバーの確定値保持用のディクショナリ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.IsSuspended">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.IsDebugDataLoading">
            <summary>
            デバッグ情報データの復元処理中かどうかを取得、設定します。
            </summary>
            <value>デバッグ情報データの復元処理中の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.name">
            <summary>
            このインスタンスの識別名です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.IsValidColumns(System.String[])">
            <summary>
            指定した列の値がすべて有効かどうかを返します。
            </summary>
            <param name="columnNames">値を検証する列名の一覧</param>
            <returns>すべて有効な値である場合は true。それ以外の場合は false。</returns>
            <remarks>
            このエンティティ行が属するエンティティの <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.RowValidationFunc"/> が設定されている場合は、そのデリゲートの処理により有効性を判定します。
            他の場合は、このエンティティ行が属するエンティティの <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.RowValidationType"/> の設定に従って有効性を判定します。<br/>
            <paramref name="columnNames"/> が省略された場合は、プライマリキー列に対応する値を検証します。
            ただし、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.RowValidationFunc"/> が設定されておらず、プライマリキー列も存在しないエンティティの場合は、常に有効とみなされます。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.IsInputtedColumnsInternal(System.String[])">
            <summary>
            指定した列の値がすべて入力された値かどうかを返します。
            </summary>
            <param name="columnNames">値を検証する列名の一覧</param>
            <returns>すべて入力された値である場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="columnNames"/> が省略された場合は、プライマリキー列に対応する値を検証します。
            </remarks>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.IsCheckInputtedColumns(System.Object[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.IsValidKeyItemsInternal(System.String[])">
            <summary>
            指定した列の値がプライマリキー値として有効かどうかを返します。
            </summary>
            <param name="columnNames">値を検証する列名の一覧</param>
            <returns>プライマリキーとして有効な場合は true。無効な場合は false。</returns>
            <remarks>
            <paramref name="columnNames"/> が省略された場合は、プライマリキー列に対応する値を検証します。
            </remarks>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.IsCheckValidKeyItems(System.Object[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.ClearColumns(System.String[])">
            <summary>
            指定した列の値をクリアして既定値 (null) に戻します。
            </summary>
            <param name="columns">クリアする列名の一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.ClearWithoutPrimary">
            <summary>
            プライマリキー以外のすべての列の値をクリアして既定値 (null) に戻します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.ClearWithoutColumns(System.String[])">
            <summary>
            指定した列以外のすべての列の値をクリアして既定値 (null) に戻します。
            </summary>
            <param name="columns">クリアしない列名の一覧</param>
            <remarks>
            <paramref name="columns"/> に空が指定された場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.ClearWithoutPrimary"/> により、
            プライマリキー以外のすべての列の値がクリアされます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.IsEqualsPrimary(System.Object[])">
            <summary>
            指定した値が、このエンティティ行のプライマリキーと等しいかどうかを返します。
            </summary>
            <param name="compareValues">プライマリキーと比較する値の一覧</param>
            <returns>プライマリキーと等しい場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.GetPropertyValues(System.String[])">
            <summary>
            このエンティティ行の指定した列の値を取得します。
            </summary>
            <param name="columnNames">値を取得する列名の一覧</param>
            <returns>指定した列の値の一覧</returns>
            <remarks>
            <paramref name="columnNames"/> が省略された場合は、プライマリキー列に対応する値を取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.GetValues(System.String[])">
            <summary>
            このエンティティ行の指定したプロパティの値を取得します。
            </summary>
            <param name="propertyNames">値を取得するプロパティ名の一覧</param>
            <returns>指定したプロパティの値の一覧</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.CopyTo(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase,System.String[])">
            <summary>
            このエンティティ行の指定した列の値を、対象のエンティティ行にコピーします。
            </summary>
            <param name="row">コピー先のエンティティ行</param>
            <param name="columns">コピーする列名の一覧</param>
            <remarks>
            <paramref name="columns"/> で指定された順に列の値をコピーします。<br/>
            <paramref name="columns"/> に null 、または、空が設定された場合は、コピー先、もしくは、このエンティティ行が属するエンティティの
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectionColumns"/> に設定されている列の順でコピーします。
            その場合、このエンティティ行が属するエンティティよりも、コピー先のエンティティ行が属するエンティティの <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectionColumns"/> が
            優先されます。<br/>
            このエンティティ行とコピー先のエンティティ行のどちらも特定のエンティティに属していない場合は、このエンティティ行の
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Keys"/> の順でコピーします。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <paramref name="columns"/> が指定されておらず、コピー先のエンティティ行の型がこのエンティティ行の型と異なる場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.IsCheckInputtedColumns(System.Object[])">
            <summary>
            指定した値がすべて入力された値かどうかを返します。
            </summary>
            <param name="values">値の一覧</param>
            <returns>すべて入力された値である場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="values"/> に null 、もしくは、空の文字列が含まれる場合は false を返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.IsCheckValidKeyItems(System.Object[])">
            <summary>
            指定した値がプライマリキー値として有効かどうかを返します。
            </summary>
            <param name="values">値の一覧</param>
            <returns>プライマリキーとして有効な場合は true。無効な場合は false。</returns>
            <remarks>
            <paramref name="values"/> に1つでも null が含まれる場合、もしくは、先頭の値が空の文字列である場合は false を返します。<br />
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.Entity">
            <summary>
            このエンティティ行が属するエンティティを取得、設定します。
            </summary>
            <value>属するエンティティ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.Name">
            <inheritdoc/>
            <remarks>
            空 が設定された場合は、このエンティティ行が属するエンティティの識別名が返されます。<br />
            さらに、属するエンティティが設定されてない場合は、型の名称が返されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.PrimaryValues">
            <summary>
            プライマリキーの値を取得します。
            </summary>
            <value>プライマリキー値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.IsValidPrimary">
            <summary>
            プライマリキーの値がすべて有効かどうかを取得します。
            </summary>
            <value>すべて有効な値である場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.Index">
            <summary>
            このエンティティ行の属するエンティティ内での位置を示すインデックスを取得します。
            </summary>
            <value>このエンティティ行が特定のエンティティに属する場合は位置を示すインデックス。それ以外の場合は -1。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntityRow.DisplayName">
            <summary>
            名称表示項目情報を取得、設定します。
            </summary>
            <value>名称表示項目情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntityRow.Code">
            <summary>
            入力されたコードを取得、設定します。
            </summary>
            <value>入力されたコード</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameEntityRow.CodeName">
            <summary>
            取得した名称を取得、設定します。
            </summary>
            <value>取得した名称</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute">
            <summary>
            カスタム抽出条件の明細行で名称表示を行う為の項目属性クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.DEFAULT_MAX_LENGTH">
            <summary>
            既定の最大文字列長さの定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute"/>クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.item">
            <summary>
            名称表示項目属性インスタンスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.CheckCharacter(System.Char)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.CheckCharacter(System.Char)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.CheckLength(System.String,System.Int32,System.Int32,System.String)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.CheckLength(System.String,System.Int32,System.Int32,System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.Format(System.String)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Format(System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.CheckFormatted(System.String)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.CheckFormatted(System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.Item">
            <summary>
            名称表示項目属性インスタンスを取得します。
            </summary>
            <value>名称表示項目属性インスタンス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.AlpahbetType">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.AlpahbetType"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.Label">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Label"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.Find">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Find"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.Jump">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Jump"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.ItemType">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.ItemType"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.InputMode">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.InputMode"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.DisplayName">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.DisplayName"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.List">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.List"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.MaxLength">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.MaxLength"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.MultiLine">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.MultiLine"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.Perless">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Perless"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.UseMinus">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.UseMinus"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.Necessary">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Necessary"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.UseFuzzy">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.UseFuzzy"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.DefaultValue">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.DefaultValue"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.UIConverter">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.UIConverter"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.Visible">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.Visible"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutNameItemAttribute.WhereVisible">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute.WhereVisible"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutPresentData">
            <summary>
            カスタム抽出条件のドラッグ&amp;ドロップ処理でのデータクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutPresentData.#ctor(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail,System.IntPtr)">
            <summary>
            対象明細行オブジェクトと送信先ウィンドウハンドルを指定して<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutPresentData"/>クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="detail">対象明細行オブジェクト</param>
            <param name="handle">送信先ウィンドウハンドル</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutPresentData.Detail">
            <summary>
            対象明細行オブジェクトを取得します。
            </summary>
            <value>対象明細行オブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutPresentData.TargetWindow">
            <summary>
            送信先ウィンドウハンドルを取得します。
            </summary>
            <value>送信先ウィンドウハンドル</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutPropertyItemManagementKey">
            <summary>
            カスタム抽出条件のプロパティ毎のアイテム管理キークラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey">
            <summary>
            プロパティ毎のアイテム管理キークラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey.#ctor(System.Type,System.String)">
            <summary>
            親のタイプとプロパティ名を指定して<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey"/>クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="t">親タイプ</param>
            <param name="name">プロパティ名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey.#ctor(System.Type,System.Int32,System.String)">
            <summary>
            親のタイプとインデックス、プロパティ名を指定して<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey"/>クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="t">親タイプ</param>
            <param name="index">インデックス</param>
            <param name="name">プロパティ名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey.Equals(System.Object)">
            <inheritdoc cref="M:System.Object.Equals(System.Object)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey.GetHashCode">
            <inheritdoc cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey.Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey.ParentType">
            <summary>
            親タイプを取得、設定します。
            </summary>
            <value>親タイプ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey.Index">
            <summary>
            行インデックスを取得、設定します。
            </summary>
            <value>行インデックス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey.OpenPropetyName">
            <summary>
            公開プロパティ名を取得、設定します。
            </summary>
            <value>公開プロパティ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey.MatchInherit">
            <summary>
            指定の型の派生型にもマッチさせるかどうかを表す値を取得、設定します。
            </summary>
            <value>指定の型の派生型にもマッチさせる場合、true。それ以外はfalse。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutPropertyItemManagementKey.#ctor(System.Type,System.String,System.String)">
            <summary>
            親タイプ、プロパティ名、キー名を指定して、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutPropertyItemManagementKey"/>クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="t">親タイプ</param>
            <param name="name">プロパティ名</param>
            <param name="key">キー名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutPropertyItemManagementKey.#ctor(System.Type,System.Int32,System.String,System.String)">
            <summary>
            親タイプ、インデックス、プロパティ名、キー名を指定して、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutPropertyItemManagementKey"/>クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="t">親タイプ</param>
            <param name="index">インデックス</param>
            <param name="name">プロパティ名</param>
            <param name="key">キー名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutPropertyItemManagementKey.Equals(System.Object)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey.Equals(System.Object)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutPropertyItemManagementKey.GetHashCode">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey.GetHashCode"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutPropertyItemManagementKey.Clone">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey.Clone"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutPropertyItemManagementKey.KeyName">
            <summary>
            明細キー名を取得、設定します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.IAutoLayoutSupportModule">
            <summary>
            モジュールにてカスタム抽出条件をサポートする為に実装するインタフェースです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule">
            <summary>
            プログラム(画面)のデータ、及び、ロジックを管理する機能を提供するインターフェースです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IEntityHolder">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase"/> を保持していることを示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IEntityHolder.GetEntity(System.String)">
            <summary>
            指定した名前のエンティティを取得します。
            </summary>
            <param name="entityName">取得するエンティティ名</param>
            <returns>エンティティ</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IFunctionCaller">
            <summary>
            処理の名前と引数を指定して、特定の処理を実行する機能を提供するインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IFunctionCaller.ExecuteFunction(System.String,System.Object)">
            <summary>
            指定した名前のファンクション処理を実行します。
            </summary>
            <param name="functionName">ファンクション名</param>
            <param name="arg">実行時引数</param>
            <returns>正常に処理を完了できた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IFunctionCaller.FunctionExecuting">
            <summary>
            ファンクション処理を実行する直前に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IFunctionCaller.FunctionExecuted">
            <summary>
            ファンクション処理を実行した後に発生します。
            </summary>
            <remarks>
            このイベントは通常、ファンクション処理が正常に終了した場合にのみ発生します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IValidationErrorObserver">
            <summary>
            データ変更イベント処理のエラー発生を監視するためのインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IValidationErrorObserver.BeginErrorObservation">
            <summary>
            データ変更イベントエラーの発生の監視を開始します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IValidationErrorObserver.EndErrorObservation">
            <summary>
            データ変更イベントエラーの発生の監視を終了します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IValidationErrorObserver.GetErrorsOnObservation">
            <summary>
            データ変更イベントエラーの発生監視中に新たに発生したエラー情報の一覧を取得します。
            </summary>
            <returns>
            監視中に新たに発生したエラー情報一覧。<br />
            このエラー情報には通常、自身が保持しているものだけでなく、発生したすべてのエラー情報が含まれます。
            </returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.INotifyResponseNeeded">
            <summary>
            UIからの応答を要求することを示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.INotifyResponseNeeded.GetResponse(Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.ResponseNeededEventArgs)">
            <summary>
            UIに処理を要求して返された応答結果を取得します。
            </summary>
            <param name="e">UIへの応答要求イベント引数</param>
            <returns>UIからの応答</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.INotifyResponseNeeded.GetResponse``1(Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.ResponseNeededEventArgs)">
            <summary>
            UIに処理を要求して返された応答結果を、指定した型で取得します。
            </summary>
            <typeparam name="T">UIからの応答の型</typeparam>
            <param name="e">UIへの応答要求イベント引数</param>
            <returns>UIからの応答</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.INotifyResponseNeeded.GetResponse``1(System.String,Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.IActionArgs)">
            <summary>
            指定したアクションの実行をUIに要求して返された応答結果を、指定した型で取得します。
            </summary>
            <param name="key">アクション指定キー</param>
            <param name="args">アクション実行引数</param>
            <returns>UIからの応答</returns>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.INotifyResponseNeeded.ResponseNeeded">
            <summary>
            UIからの応答を要求するときに発生します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyStackPropertyChanged">
            <summary>
            複数のプロパティの値が変更されたときに、一括で通知することを示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyStackPropertyChanged.IsHoldingStackPropertyChanged">
            <summary>
            プロパティの値が変更されたことを示す情報が蓄積されているかどうかを返します。
            </summary>
            <returns>プロパティの値が変更されたことを示す情報が蓄積されている場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyStackPropertyChanged.SetRefreshNeeded">
            <summary>
            すべてのプロパティが変更されたことにして通知が行われるように設定します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyStackPropertyChanged.StackPropertyChanged">
            <summary>
            複数のプロパティの値が変更されたことを、一括で通知するときに発生します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.Post(Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs)">
            <summary>
            別モジュールから要求された処理を実行します。
            </summary>
            <param name="e">モジュール間引数</param>
            <returns>正常に処理された場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.Security">
            <summary>
            プログラムの実行権限情報を取得、設定します。
            </summary>
            <value>プログラムの実行権限情報</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.SecurityChanged">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.Security"/> プロパティが変更されたときに発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.DbConnection">
            <summary>
            データベースコネクションを取得します。
            </summary>
            <value>データベースコネクション</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.DbSection">
            <summary>
            データベース接続セクションを取得します。
            </summary>
            <value>データベース接続セクション</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.DbConnectionInitialized">
            <summary>
            データベースコネクションの初期化が完了したときに発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.Entities">
            <summary>
            管理対象エンティティの一覧を取得します。
            </summary>
            <value>管理対象エンティティの一覧</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.EntitiesInitialized">
            <summary>
            管理対象エンティティの初期化が完了したときに発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.Functions">
            <summary>
            実行対象ファンクションの一覧を取得します。
            </summary>
            <value>実行対象ファンクションの一覧</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.FunctionsInitialized">
            <summary>
            実行対象ファンクションの初期化が完了したときに発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.DataEvent">
            <summary>
            データ変更イベント処理オブジェクトを取得、設定します。
            </summary>
            <value>データ変更イベント処理オブジェクト</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.DataEventChanged">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.DataEvent"/> プロパティが変更されたときに発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.DataEventInitialized">
            <summary>
            データ変更イベント処理オブジェクトの初期化が完了したときに発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.CreatingArgs">
            <summary>
            プログラム起動時の引数を取得、設定します。
            </summary>
            <value>プログラム起動時の引数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.IAutoLayoutSupportModule.AutoLayoutPropetyName">
            <summary>
            カスタム抽出条件の情報を保持する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection"/>の公開プロパティ名を取得します。
            </summary>
            <value>カスタム抽出条件の情報を保持する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection"/>の公開プロパティ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.IAutoLayoutSupportModule.AutoLayoutModuleBinder">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.IAutoLayoutSupportModule.AutoLayoutModuleBinder"/>オブジェクトを取得します。
            </summary>
            <value><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.IAutoLayoutSupportModule.AutoLayoutModuleBinder"/>オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.IndividualFindItem">
            <summary>
            個別検索コードリストを保持するクラスです。
            <c>fw:3</c>
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.IndividualFindItem.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.IndividualFindItem"/>クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.IndividualFindItem.IsEmpty">
            <summary>
            オブジェクトが空であるかどうかを判断します。
            </summary>
            <returns>オブジェクトが空の場合、true。それ以外はfalse。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.IndividualFindItem.CreateWhereQuery(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String)">
            <summary>
            対象のクエリ列に対するWHERE句オブジェクトを生成します。
            </summary>
            <param name="bindingSource">対象クエリ列</param>
            <param name="params">格納先パラメータリスト(null を指定した場合、パラメータ化されません。)</param>
            <param name="parameterNameBase">基本パラメータ名(<paramref name="params"/> に null 以外を指定した場合、必須です。)</param>
            <returns>WHERE句オブジェクト</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.IndividualFindItem.Codes">
            <summary>
            個別検索コードリストを取得、設定します。
            </summary>
            <value>個別検索コードリスト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType">
            <summary>
            カスタム抽出条件の演算子を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.None">
            <summary>
            使用しない
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.Between">
            <summary>
            範囲指定
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.Equal">
            <summary>
            等しい
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.NotEqual">
            <summary>
            等しくない
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.GreaterThan">
            <summary>
            より大きい
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.LessThan">
            <summary>
            より小さい
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.GreaterEqual">
            <summary>
            以上
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.LessEqual">
            <summary>
            以下
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.Contains">
            <summary>
            含む
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.NotContains">
            <summary>
            含まない
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.StartsWith">
            <summary>
            先頭に一致
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.EndsWith">
            <summary>
            末尾に一致
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.ContainsAll">
            <summary>
            すべての値を含む
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.ContainsAny">
            <summary>
            いずれかの値を含む
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.NotContainsAny">
            <summary>
            いずれの値も含まない
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.StartsWithAny">
            <summary>
            いずれかの値で始まる
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.EndsWithAny">
            <summary>
            いずれかの値で終わる
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.Any">
            <summary>
            いずれかの値に一致
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.IsEmpty">
            <summary>
            ブランク
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.IsNotEmpty">
            <summary>
            ブランク以外
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.Individual">
            <summary>
            個別設定
            <c>fw:3</c>
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType"/>のための拡張メソッドクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.GetMessage(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType)">
            <summary>
            演算子のメッセージを取得します。
            </summary>
            <param name="type">演算子</param>
            <returns>メッセージ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.GetText(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType)">
            <summary>
            演算子のテキストを取得します。
            </summary>
            <param name="type">演算子</param>
            <returns>テキスト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.GetWhereQuery(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType,System.String,System.String,System.String,System.Nullable{Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType},System.Nullable{Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType},System.Boolean)">
            <summary>
            対象のクエリ列に対して指定した演算子を適用したWHERE句オブジェクトを取得します。
            </summary>
            <param name="type">演算子(<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.Individual"/>には対応していません。)</param>
            <param name="bindingSource">対象クエリ列</param>
            <param name="value1">1つ目の値(<paramref name="type"/> が空白指定演算子の場合のみ省略可。DBパラメータ名での指定はできません。)</param>
            <param name="value2">2つ目の値(<paramref name="type"/> が<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.Between"/> 以外の場合のみ省略可。DBパラメータ名での指定はできません。)</param>
            <param name="itemType1">1つ目の値の型区分(<paramref name="type"/>が空白指定演算子、もしくは、曖昧検索用演算子 の場合のみ省略可。)</param>
            <param name="itemType2">2つ目の値の型区分(<paramref name="value2"/> の型が <paramref name="itemType1"/> と異なる場合に設定します。)</param>
            <param name="fuzzy">
            曖昧検索の場合 true、 他の場合 false。
            <paramref name="type"/> が比較演算子 かつ <paramref name="itemType1"/> が日付/日時以外の文字列項目の場合にのみ有効です。
            </param>
            <returns>WHERE句オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.GetParameterizeWhereQuery(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.String,System.String,System.Nullable{Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType},System.Nullable{Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType},System.Boolean)">
            <summary>
            対象のクエリ列に対して指定した演算子を適用したWHERE句オブジェクトを取得します。
            このメソッドではクエリパラメータを一緒に生成します。
            <c>fw:3</c>
            </summary>
            <param name="type">演算子(<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.Individual"/>には対応していません。)</param>
            <param name="params">格納先パラメータリスト</param>
            <param name="bindingSource">対象クエリ列</param>
            <param name="parameterNameBase1"><paramref name="value1"/>用の基本パラメータ名(<paramref name="type"/> が空白指定演算子の場合のみ省略可。)</param>
            <param name="value1">1つ目の値(<paramref name="type"/> が空白指定演算子の場合のみ省略可。DBパラメータ名での指定はできません。)</param>
            <param name="parameterNameBase2"><paramref name="value2"/>用の基本パラメータ名(<paramref name="type"/> が<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.Between"/> 以外の場合のみ省略可。)</param>
            <param name="value2">2つ目の値(<paramref name="type"/> が<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.Between"/> 以外の場合のみ省略可。DBパラメータ名での指定はできません。)</param>
            <param name="itemType1">1つ目の値の型区分(<paramref name="type"/>が空白指定演算子、もしくは、曖昧検索用演算子 の場合のみ省略可。)</param>
            <param name="itemType2">2つ目の値の型区分(<paramref name="value2"/> の型が <paramref name="itemType1"/> と異なる場合に設定します。)</param>
            <param name="fuzzy">
            曖昧検索の場合 true、 他の場合 false。
            <paramref name="type"/> が比較演算子 かつ <paramref name="itemType1"/> が日付/日時以外の文字列項目の場合にのみ有効です。
            </param>
            <returns>WHERE句オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.GetBlankWhereQuery(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType,System.String)">
            <summary>
            対象のクエリ列に対して指定した空白指定用演算子を適用したWHERE句オブジェクトを取得します。
            </summary>
            <param name="type">空白指定用演算子</param>
            <param name="bindingSource">対象クエリ列</param>
            <returns>WHERE句オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.GetComparisonWhereQuery(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType,System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType,System.Boolean,System.Boolean)">
            <summary>
            対象のクエリ列に対して指定した比較演算子を適用したWHERE句オブジェクトを取得します。
            </summary>
            <param name="type">比較演算子</param>
            <param name="bindingSource">対象クエリ列</param>
            <param name="value">比較値 または DBパラメータ名</param>
            <param name="itemType">比較値の型区分</param>
            <param name="fuzzy">
            曖昧検索の場合 true、 他の場合 false。
            <paramref name="itemType"/> が日付/日時以外の文字列項目の場合にのみ有効です。
            </param>
            <param name="format">
            <paramref name="value"/> に対してエスケープ処理等を自動で行う場合 true、
            <paramref name="value"/> が DBパラメータ名の場合などエスケープ処理等が不要な場合 false。
            </param>
            <returns>WHERE句オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.GetParameterizeComparisonWhereQuery(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType,System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType,System.Boolean)">
            <summary>
            対象のクエリ列に対して指定した比較演算子を適用したWHERE句オブジェクトを取得します。
            このメソッドではクエリパラメータを一緒に生成します。
            </summary>
            <param name="type">比較演算子</param>
            <param name="parameterNameBase">基本パラメータ名</param>
            <param name="params">格納先パラメータリスト</param>
            <param name="bindingSource">対象クエリ列</param>
            <param name="value">比較値 または DBパラメータ名</param>
            <param name="itemType">比較値の型区分</param>
            <param name="fuzzy">
            曖昧検索の場合 true、 他の場合 false。
            <paramref name="itemType"/> が日付/日時以外の文字列項目の場合にのみ有効です。
            </param>
            <returns>WHERE句オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.EscapeForLike(System.String)">
            <summary>
            Like演算子のためにエスケープを行います。
            </summary>
            <param name="value">対象の文字列</param>
            <returns>処理後の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.EscapeForLikeEscapeString(System.String)">
            <summary>
            エスケープ文字列を付与してLike演算子のためにエスケープを行います。
            </summary>
            <param name="value">対象の文字列</param>
            <returns>処理後の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.GetFuzzyWhereQuery(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType,System.String,System.String,System.Boolean)">
            <summary>
            対象のクエリ列に対して指定した曖昧検索用演算子を適用したWHERE句オブジェクトを取得します。
            </summary>
            <param name="type">曖昧検索用演算子</param>
            <param name="bindingSource">対象クエリ列</param>
            <param name="value">検索値(DBパラメータでの指定はできません。)</param>
            <param name="fuzzy">曖昧検索の場合 true、他の場合 false。</param>
            <returns>WHERE句オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.CreateSimpleAnyQuery(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            単純なIN句のクエリを作成します。
            </summary>
            <param name="bindingSource">対象クエリ列</param>
            <param name="values">検索値(DBパラメータでの指定はできません。)</param>
            <returns>WHERE句オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.GetParameterizeFuzzyWhereQuery(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType,System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.Boolean)">
            <summary>
            対象のクエリ列に対して指定した曖昧検索用演算子を適用したWHERE句オブジェクトを取得します。
            このメソッドではクエリパラメータを一緒に生成します。
            </summary>
            <param name="type">曖昧検索用演算子</param>
            <param name="parameterNameBase">基本パラメータ名</param>
            <param name="params">格納先パラメータリスト</param>
            <param name="bindingSource">対象クエリ列</param>
            <param name="value">検索値(DBパラメータでの指定はできません。)</param>
            <param name="fuzzy">曖昧検索の場合 true、他の場合 false。</param>
            <returns>WHERE句オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.CreateParameterizedSimpleAnyQuery(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            単純なIN句のクエリを作成します。
            </summary>
            <param name="parameterNameBase">基本パラメータ名</param>
            <param name="params">格納先パラメータリスト</param>
            <param name="bindingSource">対象クエリ列</param>
            <param name="values">検索値(DBパラメータでの指定はできません。)</param>
            <returns>WHERE句オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.GetBetweenWhereQuery(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType,System.String,System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType,System.Nullable{Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType},System.Boolean)">
            <summary>
            対象のクエリ列に対して指定した範囲指定用演算子を適用したWHERE句オブジェクトを取得します。
            </summary>
            <param name="type">範囲指定用演算子(BETWEEN)</param>
            <param name="bindingSource">対象クエリ列</param>
            <param name="fromValue">FROM値 または FROM値のDBパラメータ名</param>
            <param name="toValue">TO値 または FROM値のDBパラメータ名</param>
            <param name="fromItemType">FROM値の型区分</param>
            <param name="toItemType">TO値の型区分(<paramref name="toValue"/> の型が <paramref name="fromItemType"/> と異なる場合に設定します。)</param>
            <param name="format">
            <paramref name="fromValue"/> 、及び、<paramref name="toValue"/> に対してエスケープ処理等を自動で行う場合 true、
            <paramref name="fromValue"/> 、及び、<paramref name="toValue"/> が DBパラメータ名の場合などエスケープ処理等が不要な場合 false。
            </param>
            <returns>WHERE句(BETWEEN)オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.GetParameterizeBetweenWhereQuery(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType,System.String,System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType,System.Nullable{Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType})">
            <summary>
            対象のクエリ列に対して指定した範囲指定用演算子を適用したWHERE句オブジェクトを取得します。
            このメソッドではクエリパラメータを一緒に生成します。
            </summary>
            <param name="type">範囲指定用演算子(BETWEEN)</param>
            <param name="fromParameterName">開始パラメータ名</param>
            <param name="toParameterName">終了パラメータ名</param>
            <param name="params">格納先パラメータリスト</param>
            <param name="bindingSource">対象クエリ列</param>
            <param name="fromValue">FROM値</param>
            <param name="toValue">TO値</param>
            <param name="fromItemType">FROM値の型区分</param>
            <param name="toItemType">TO値の型区分(<paramref name="toValue"/> の型が <paramref name="fromItemType"/> と異なる場合に設定します。)</param>
            <returns>WHERE句(BETWEEN)オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.IsBlankOperator(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType)">
            <summary>
            対象の演算子が空白指定用演算子かどうかを返します。
            </summary>
            <param name="type">演算子</param>
            <returns>
            空白指定用演算子の場合 true、他の場合 false
            
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.IsEmpty"/>:
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.IsNotEmpty"/>:
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.IsComparisonOperator(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType)">
            <summary>
            対象の演算子が比較演算子かどうかを返します。
            </summary>
            <param name="type">演算子</param>
            <returns>
            比較演算子の場合 true、他の場合 false
            
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.Equal"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.NotEqual"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.GreaterThan"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.LessThan"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.GreaterEqual"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.LessEqual"/>:
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.IsFuzzyOperator(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType)">
            <summary>
            対象の演算子が曖昧検索用演算子かどうかを返します。
            </summary>
            <param name="type">演算子</param>
            <returns>
            曖昧検索用演算子の場合 true、他の場合 false
            
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.Contains"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.NotContains"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.StartsWith"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.EndsWith"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.ContainsAll"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.ContainsAny"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.NotContainsAny"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.StartsWithAny"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.EndsWithAny"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.Any"/>:
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.IsRangeOperator(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType)">
            <summary>
            対象の演算子が範囲指定用演算子かどうかを返します。
            </summary>
            <param name="type">演算子</param>
            <returns>
            範囲指定用演算子の場合 true、他の場合 false
            
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.Between"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.NotEqual"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.GreaterThan"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.LessThan"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.GreaterEqual"/>: 
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.LessEqual"/>:
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorTypeExtensions.IsParameterName(System.String)">
            <summary>
            指定された値がパラメータ引数名であるかどうかを判断します。
            </summary>
            <param name="value">値</param>
            <returns>パラメータ名である場合は、true。それ以外はfalse。</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Attributes.DataEventAttribute">
            <summary>
            対象のメソッドがデータ変更イベントハンドラであることを指定するためのカスタム属性クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Attributes.DataEventAttribute.#ctor(System.Type,System.String)">
            <summary>
            指定したイベント発生元オブジェクト型、及び、プロパティ名の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Attributes.DataEventAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="sourceType">イベント発生元オブジェクト型</param>
            <param name="propertyName">イベント発生元プロパティ名</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Attributes.DataEventAttribute.SourceType">
            <summary>
            イベント発生元オブジェクト型を取得、設定します。
            </summary>
            <value>イベント発生元オブジェクト型</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Attributes.DataEventAttribute.PropertyName">
            <summary>
            イベント発生元プロパティ名を取得、設定します。
            </summary>
            <value>イベント発生元プロパティ名</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction">
            <summary>
            データ変更時の既定のチェック処理を行うクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.Make(System.Func{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs,System.Boolean})">
            <summary>
            指定した条件を満たす時だけ既定のチェック処理(<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.Action"/>)を実行する <see cref="T:System.Action`1"/> オブジェクトを作成します。
            </summary>
            <param name="where">既定のチェック処理(<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.Action"/>)を行う条件を判定する <see cref="T:System.Func`2"/> オブジェクト</param>
            <returns><paramref name="where"/> が true を返す場合のみ <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.Action"/> が実行される <see cref="T:System.Action`1"/> オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.Make(System.Action{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs})">
            <summary>
            指定した <see cref="T:System.Action`1"/> オブジェクトをラップして、このクラスで定義されたメソッドとして返します。
            </summary>
            <param name="exec"><see cref="T:System.Action`1"/> オブジェクト</param>
            <returns>このクラスで定義されたメソッドとしてラップされた <see cref="T:System.Action`1"/> オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.IsCheckAction(System.Action{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs})">
            <summary>
            指定された <see cref="T:System.Action`1"/> オブジェクトで呼び出されるメソッドがこのクラスで定義されたものかどうかを返します。
            </summary>
            <param name="action"><see cref="T:System.Action`1"/> オブジェクト</param>
            <returns><paramref name="action"/> で呼び出されるメソッドがこのクラスで定義されたものである場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.Action">
            <summary>
            データ変更時の既定のチェック処理です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.Invoke(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <summary>
            データ変更時の既定のチェック処理を実行します。
            </summary>
            <param name="e">データ変更イベント引数</param>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException">UIからの入力に伴うデータ変更でチェック結果に問題がある場合にスローします。</exception>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule"/> から通知されるデータ変更イベント(<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/>) の処理を一括で管理・処理するための基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Interfaces.IDataEvent">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule"/> から通知されるデータ変更イベント(<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/>) の処理をまとめたクラスであることを示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Interfaces.IDataEvent.Initialize">
            <summary>
            データ変更イベントハンドラの初期登録処理を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Interfaces.IDataEvent.Suspend">
            <summary>
            データ変更イベントハンドラの処理の一時停止を要求し、要求を解除する為の <see cref="T:System.IDisposable"/> オブジェクトを返します。
            </summary>
            <returns>データ変更イベントハンドラの処理の一時停止要求解除用<see cref="T:System.IDisposable"/> オブジェクト</returns>
            <remarks>
            このメソッドが呼び出されたタイミング、及び、このメソッドで返される <see cref="T:System.IDisposable"/> オブジェクトが破棄されるタイミングで、
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Interfaces.IDataEvent.IsSuspended"/> の値が適切に設定されるように実装してください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Interfaces.IDataEvent.Module">
            <summary>
            イベント管理対象モジュールを取得、設定します。
            </summary>
            <value>イベント管理対象モジュール</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Interfaces.IDataEvent.DataHandlers">
            <summary>
            データ変更イベントハンドラの一覧を取得します。
            </summary>
            <value>データ変更イベントハンドラの一覧</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Interfaces.IDataEvent.Initialized">
            <summary>
            データ変更イベントハンドラの初期登録処理が完了したときに発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Interfaces.IDataEvent.IsSuspended">
            <summary>
            データ変更イベントハンドラの処理の一時停止要求が行われているかどうかを取得します。
            </summary>
            <value>データ変更イベントハンドラの処理の一時停止要求が行われている場合は true。行われていない場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.InstanciateHandlers">
            <summary>
            データ変更イベントハンドラの格納用ディクショナリオブジェクトを生成し、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.DataHandlers"/> プロパティに設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.AddDataHandler(System.Type,System.String,System.Action{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs}[])">
            <summary>
            データ変更イベントハンドラを追加します。
            </summary>
            <param name="keyType">イベントが発生する型</param>
            <param name="propertyName">変更されたプロパティ名</param>
            <param name="handlers">データ変更イベントハンドラ</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase._module">
            <summary>
            イベント管理対象モジュールです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.Initialize">
            <inheritdoc/>
            <remarks>
            継承先において override する場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.OnInitialized"/> メソッドを実行してイベントを発生させて下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.InitializeMain">
            <summary>
            データ変更イベントハンドラの初期登録処理を行います。
            </summary>
            <remarks>
            既定では、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Attributes.DataEventAttribute"/> 属性が設定されたメソッドを読み込んで、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.DataHandlers"/> プロパティに保持します。<br/>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.Initialize"/> メソッドを介さずに本メソッドを呼び出す際には、本メソッドの実行前後の適切なタイミングで、
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.OnInitialized"/> メソッドを呼び出すようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.OnInitialized">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.Initialized"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.Suspend">
            <inheritdoc/>
            <remarks>
            このメソッドが呼び出された後、すなわち、データ変更イベントハンドラの処理の一時停止要求が行われている場合でも、通常は、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.DataHandlers"/> プロパティに
            登録されているイベントハンドラは継続して呼び出されます。<br/>
            各イベントハンドラ内で <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.IsSuspended"/> プロパティの値を参照し、必要に応じて処理を抜けるように実装されている必要があります。<br/>
            このメソッドが呼ばれた後、イベントハンドラの継続呼出を行わせなくする場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.Module_DataChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)"/> メソッドを override して、
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.IsSuspended"/> プロパティを参照するようにしてください。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">既に一時停止要求が行われている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.AddModuleEventHandler(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule)">
            <summary>
            指定したイベント管理対象モジュールに対してイベントハンドラを登録します。
            </summary>
            <param name="module">イベント管理対象モジュール</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.RemoveModuleEventHandler(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule)">
            <summary>
            指定したイベント管理対象モジュールに登録されているイベントハンドラを解除します。
            </summary>
            <param name="module">イベント管理対象モジュール</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.Module_DataChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.Module"/> の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            通常は、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.DataHandlers"/> プロパティに登録されている各イベントハンドラの内、イベント引数で指定されたオブジェクト型、及び、プロパティ名に
            対応するイベントハンドラを順に実行します。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.DataHandlers"/> プロパティに対応するイベントハンドラが登録されていない場合は、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction"/> の処理が実行されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.Module">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.DataHandlers">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.Initialized">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.IsSuspended">
            <inheritdoc/>
            <remarks>
            このプロパティが true に設定されている、すなわち、データ変更イベントハンドラの処理の一時停止要求が行われている場合でも、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.DataHandlers"/> プロパティに
            登録されているハンドラは継続して呼び出されます。<br/>
            各ハンドラ内でこのプロパティの値を参照し、必要に応じて処理を抜けるように実装されている必要があります。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase`1">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule"/> から通知されるデータ変更イベント(<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/>) の処理を一括で管理・処理するための基底のジェネリッククラスです。
            </summary>
            <typeparam name="TModule">イベント管理対象の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule"/> オブジェクトの型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase`1.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase`1.#ctor(`0)">
            <summary>
            指定した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule"/> オブジェクトをイベント管理対象として、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="module">イベント管理対象モジュール</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase`1.Module">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventBase.Module"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList">
            <summary>
            データ変更イベントハンドラの保持用コレクションクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList.InsertItem(System.Int32,System.Action{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs})">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList.SetItem(System.Int32,System.Action{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs})">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList.OnAddingDefaultHandler(System.ComponentModel.HandledEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList.AddingDefaultHandler"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList.OnDefaultHandlerAdded">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList.DefaultHandlerAdded"/> イベントを発生させます。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList.AddingDefaultHandler">
            <summary>
            既定のデータ変更イベントハンドラ (<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.Action"/>) が追加される直前に発生します。
            </summary>
            <remarks>
            このイベントハンド内で、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.Action"/> の追加処理を行わないでください。
            <see cref="T:System.StackOverflowException"/> が発生する恐れがあります。
            </remarks>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList.DefaultHandlerAdded">
            <summary>
            既定のデータ変更イベントハンドラ (<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.Action"/>) が追加された後に発生します。
            </summary>
            <remarks>
            このイベントハンド内で、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.Action"/> の追加処理を行わないでください。
            <see cref="T:System.StackOverflowException"/> が発生する恐れがあります。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerModifiedEventArgs">
            <summary>
            データ変更イベントハンドラの管理を行うディクショナリ(<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary"/>) への特定の変更処理が完了した際に
            発生するイベントのデータを提供します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerModifiedEventArgs.#ctor(System.Type,System.String)">
            <summary>
            指定したオブジェクト型、及び、プロパティ名の、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerModifiedEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="sourceType">イベントが発生するオブジェクトの型</param>
            <param name="propertyName">イベントが発生するオブジェクトのプロパティ名</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerModifiedEventArgs.SourceType">
            <summary>
            データ変更イベントが発生するオブジェクトの型を取得します。
            </summary>
            <value>データ変更イベントが発生するオブジェクトの型</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerModifiedEventArgs.PropertyName">
            <summary>
            データ変更イベントが発生するオブジェクトのプロパティ名を取得します。
            </summary>
            <value>データ変更イベントが発生するオブジェクトのプロパティ名</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerModifyingEventArgs">
            <summary>
            データ変更イベントハンドラの管理を行うディクショナリ(<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary"/>) への特定の変更処理が開始した際に
            発生するイベントのデータを提供します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerModifyingEventArgs.#ctor(System.Type,System.String,System.Boolean)">
            <summary>
            指定したオブジェクト型、及び、プロパティ名の、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerModifyingEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="sourceType">イベントが発生するオブジェクトの型</param>
            <param name="propertyName">イベントが発生するオブジェクトのプロパティ名</param>
            <param name="defaultHandledValue"><see cref="P:System.ComponentModel.HandledEventArgs.Handled"/> プロパティの既定値</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerModifyingEventArgs.SourceType">
            <summary>
            データ変更イベントが発生するオブジェクトの型を取得します。
            </summary>
            <value>データ変更イベントが発生するオブジェクトの型</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerModifyingEventArgs.PropertyName">
            <summary>
            データ変更イベントが発生するオブジェクトのプロパティ名を取得します。
            </summary>
            <value>データ変更イベントが発生するオブジェクトのプロパティ名</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.ErrorMessageFormatter">
            <summary>
            特定のエラーメッセージのフォーマットを行うためのクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.ErrorMessageFormatter.DEFAULT_TARGET_NAME_STRING">
            <summary>
            テーブル名が明示的に指定されなかった際に代わりに使用される文字列です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.ErrorMessageFormatter.DefaultReplaceFunc">
            <summary>
            テーブル名をメッセージ表示用に置換するための既定の <see cref="T:System.Func`2"/> オブジェクトです。
            </summary>
            <remarks>
            既定では、以下のような処理を行います。<br/>
            ・末尾が "マスタ" の場合はこれを除去する。<br/>
            ・末尾が "トラン" の場合はこれを除去する。<br/>
            ・末尾が "ファイル" の場合はこれを除去する。<br/>
            ・他の場合はそのまま返す。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.ErrorMessageFormatter.RemoveLastKey(System.String@,System.String)">
            <summary>
            対象の文字列の末尾から、指定した部分文字列を除去します。
            </summary>
            <param name="source">
            対象文字列。(戻り値)<br />
            末尾が<paramref name="key"/>である場合は除去された文字列、そうでない場合は元のままの文字列が返されます。
            </param>
            <param name="key">除去する部分文字列</param>
            <returns><paramref name="source"/>から<paramref name="key"/>が除去された場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.ErrorMessageFormatter.#cctor">
            <summary>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.ErrorMessageFormatter.DefaultReplaceFunc"/> が設定された <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.ErrorMessageFormatter"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.ErrorMessageFormatter.NotExistMessage(System.String,System.Object)">
            <summary>
            対象のテーブルに指定した値のコードが存在しないことを示すエラーメッセージを返します。
            </summary>
            <param name="tableName">対象テーブル名(ブランクを指定できます。)</param>
            <param name="value">コード値</param>
            <returns>対象のテーブルに指定した値のコードが存在しないことを示すエラーメッセージ</returns>
            <remarks>
            返される値は通常、以下のようになります。<br/>
            「〇〇〇〇[XXXXXX]が存在しません。」<br/>
            ※ 〇〇〇〇 = <paramref name="tableName"/>、XXXXXX = <paramref name="value"/>。<br/>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.ErrorMessageFormatter.DefaultReplaceFunc"/> を用いて、メッセージ表示用に <paramref name="tableName"/> の置換処理が行われます。<br/>
            この時、必要に応じて項目名ファイルの値が参照されます。<br/>
            <paramref name="tableName"/>にブランクが指定された場合は、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.ErrorMessageFormatter.DEFAULT_TARGET_NAME_STRING"/> の値が使用されます。
            </remarks>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.ErrorMessageFormatter.NotExistMessage(System.String,System.Object,System.Func{System.String,System.String})"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.ErrorMessageFormatter.NotExistMessage(System.String,System.Object,System.Func{System.String,System.String})">
            <summary>
            対象のテーブルに指定した値のコードが存在しないことを示すエラーメッセージを返します。
            </summary>
            <param name="tableName">対象テーブル名(ブランクを指定できます。)</param>
            <param name="value">コード値</param>
            <param name="replaceFunc">テーブル名の置換処理用オブジェクト</param>
            <returns>対象のテーブルに指定した値のコードが存在しないことを示すエラーメッセージ</returns>
            <remarks>
            返される値は通常、以下のようになります。<br/>
            「〇〇〇〇[XXXXXX]が存在しません。」<br/>
            ※ 〇〇〇〇 = <paramref name="tableName"/>、XXXXXX = <paramref name="value"/>。<br/>
            <paramref name="replaceFunc"/> を用いて、メッセージ表示用に <paramref name="tableName"/> の置換処理が行われます。<br/>
            この時、必要に応じて項目名ファイルの値が参照されます。<br/>
            <paramref name="tableName"/>にブランクが指定された場合は、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.ErrorMessageFormatter.DEFAULT_TARGET_NAME_STRING"/> の値が使用されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.ErrorMessageFormatter.NotExistMessage(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Object,System.Func{System.String,System.String})">
            <summary>
            対象のエンティティに指定した値のコードが存在しないことを示すエラーメッセージを返します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="value">コード値</param>
            <param name="replaceFunc">エンティティ名の置換処理用オブジェクト</param>
            <returns>対象のエンティティに指定した値のコードが存在しないことを示すエラーメッセージ</returns>
            <remarks>
            返される値は通常、以下のようになります。<br/>
            「〇〇〇〇[XXXXXX]が存在しません。」<br/>
            ※ 〇〇〇〇 = <paramref name="entity"/>の名称、XXXXXX = <paramref name="value"/>。<br/>
            <paramref name="replaceFunc"/> を用いて、メッセージ表示用に <paramref name="entity"/>の名称の置換処理が行われます。<br/>
            この時、必要に応じて項目名ファイルの値が参照されます。
            </remarks>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.ErrorMessageFormatter.NotExistMessage(System.String,System.Object,System.Func{System.String,System.String})"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2">
            <summary>
            項目が追加、削除されたとき、またはリスト全体が更新されたときに通知を提供する動的なデータ ディクショナリを表します。
            </summary>
            <typeparam name="TKey">ディクショナリ内のキーの型。</typeparam>
            <typeparam name="TValue">ディクショナリ内の値の型。</typeparam>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.CountString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2.Count"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.#ctor">
            <summary>
            空で、キーの型の既定の等値比較子を使用する、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            指定した <see cref="T:System.Collections.Generic.IDictionary`2"/> から要素をコピーして格納し、キーの型の既定の等値比較子を使用する、
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="dictionary">要素のコピー元の <see cref="T:System.Collections.Generic.IDictionary`2"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            空で、指定した <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="comparer">
            キーの比較時に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> 実装。
            キーの型の既定の <see cref="T:System.Collections.Generic.EqualityComparer`1"/> を使用する場合は null。
            </param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            指定した <see cref="T:System.Collections.Generic.IDictionary`2"/> から要素をコピーして格納し、指定した <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> を使用する、
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="dictionary">要素のコピー元の <see cref="T:System.Collections.Generic.IDictionary`2"/></param>
            <param name="comparer">
            キーの比較時に使用する <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> 実装。
            キーの型の既定の <see cref="T:System.Collections.Generic.EqualityComparer`1"/> を使用する場合は null。
            </param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.CollectionChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.PropertyChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.OnPropertyChanged(System.String)">
            <summary>
            指定したプロパティの値の変更イベントを発生させます。
            </summary>
            <param name="propertyName">値の変更されたプロパティ名</param>
            <remarks>
            継承クラスにて override する場合は、<paramref name="propertyName"/> に対して、必ず <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/> の
            設定を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.Add(`0,`1)">
            <inheritdoc/>
            <summary>
            指定したキーと値をディクショナリに追加し、コレクションの変更イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.Clear">
            <inheritdoc/>
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2"/> 内のすべての要素の値に既定値を設定し、コレクションの変更イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.RemoveKey(`0)">
            <inheritdoc/>
            <summary>
            指定したキーを持つ値を <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2"/> から削除し、コレクションの変更イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.ClearKeys">
            <inheritdoc/>
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2"/> からすべてのキーと値を削除し、コレクションの変更イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.BlockReentrancy">
            <summary>
            このコレクションを変更するための再入試行を禁止します。
            </summary>
            <returns>オブジェクトの破棄に使用できる <see cref="T:System.IDisposable"/> オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.CheckReentrancy">
            <summary>
            このコレクションを変更するための再入試行をチェックします。
            </summary>
            <exception cref="T:System.InvalidOperationException">
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.BlockReentrancy"/> が呼び出され、その <see cref="T:System.IDisposable"/> 戻り値がまだ破棄されていない場合にスローします。 <br/>
            通常、これは、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.CollectionChanged"/> イベントの発生中に、コレクションに対して追加の変更が実行されることを意味します。 <br/>
            ただし、このような状況が発生するかどうかは、派生クラスが <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.BlockReentrancy"/> の呼び出しを選択するタイミングに応じて異なります。
            </exception>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2._monitor">
            <summary>
            コレクション変更イベントの発生監視オブジェクト用オブジェクトです。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.CollectionChanged">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.PropertyChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.IsEventHandling">
            <summary>
            プロパティ / コレクションの変更イベントのハンドリング中かどうかを取得、設定します。
            </summary>
            <value>プロパティ / コレクションの変更イベントのハンドリング中の場合は true。それ以外の場合は false。</value>
            <remarks>
            trueに設定されている場合、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.PropertyChanged"/> イベント、および、
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.CollectionChanged"/> イベントの発生が抑制されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.Item(`0)">
            <inheritdoc/>
            <summary>
            指定したキーに関連付けられている値を取得または設定し、必要に応じてコレクションの変更イベントを発生させます。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.SimpleMonitor">
            <summary>
            コレクション変更イベントの発生を監視するためのクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.SimpleMonitor.Enter">
            <summary>
            コレクション変更イベントの発生回数を加算します。<br />
            コレクション変更イベントの処理を開始する(イベントを発生させる)際に呼び出してください。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.SimpleMonitor.Dispose">
            <summary>
            コレクション変更イベントの発生回数を減算します。<br />
            コレクション変更イベントの処理が完了した際に呼び出してください。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.SimpleMonitor._busyCount">
            <summary>
            コレクション変更イベントの発生回数です。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.ObservableDictionary`2.SimpleMonitor.Busy">
            <summary>
            コレクション変更イベントの処理中かどうかを取得します。
            </summary>
            <value>コレクション変更イベントの処理中である場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2">
            <summary>
            <see cref="T:System.Collections.Generic.Dictionary`2"/> クラスをXMLシリアライズ可能なように拡張したクラスです。
            </summary>
            <typeparam name="TKey">ディクショナリ内のキーの型</typeparam>
            <typeparam name="TValue">ディクショナリ内の値の型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2.#ctor">
            <summary>
            空で、既定の初期量を備え、キーの型の既定の等値比較子を使用する、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            指定した <see cref="T:System.Collections.Generic.IDictionary`2"/> から要素をコピーして格納し、キーの型の既定の等値比較子を使用する、
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="dictionary">要素のコピー元の <see cref="T:System.Collections.Generic.IDictionary`2"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2.XmlSerializableKeyValuePair`2">
            <summary>
            XMLシリアライズ可能な、キー/値ペアを定義します。
            </summary>
            <typeparam name="TPairKey">キーの型</typeparam>
            <typeparam name="TPairValue">値の型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2.XmlSerializableKeyValuePair`2.op_Explicit(Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary{`0,`1}.XmlSerializableKeyValuePair{`2,`3})~System.Collections.Generic.KeyValuePair{`2,`3}">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2.XmlSerializableKeyValuePair`2"/> 構造体から <see cref="T:System.Collections.Generic.KeyValuePair`2"/> 構造体への明示的な変換を行います。
            </summary>
            <param name="custom"><see cref="T:System.Collections.Generic.KeyValuePair`2"/>構造体に変換する値</param>
            <returns><see cref="T:System.Collections.Generic.KeyValuePair`2"/>構造体に変換された値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2.XmlSerializableKeyValuePair`2.op_Explicit(System.Collections.Generic.KeyValuePair{`2,`3})~Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary{`0,`1}.XmlSerializableKeyValuePair{`2,`3}">
            <summary>
            <see cref="T:System.Collections.Generic.KeyValuePair`2"/> 構造体から <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2.XmlSerializableKeyValuePair`2"/> 構造体への明示的な変換を行います。
            </summary>
            <param name="keyvalue"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2.XmlSerializableKeyValuePair`2"/>構造体に変換する値</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2.XmlSerializableKeyValuePair`2"/>構造体に変換された値</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2.XmlSerializableKeyValuePair`2.Key">
            <summary>
            キー/値ペア内のキーを取得、設定します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.XmlSerializableDictionary`2.XmlSerializableKeyValuePair`2.Value">
            <summary>
            キー/値ペア内の値を取得、設定します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SerializeAssemblyExportAttribute">
            <summary>
            対象のクラスをシリアル化アセンブリへの出力対象にするかどうかを指定するためのカスタム属性クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SerializeAssemblyExportAttribute.#ctor(System.Boolean)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SerializeAssemblyExportAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="isExport">出力対象である場合は true。それ以外の場合は false。</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SerializeAssemblyExportAttribute.IsExport">
            <summary>
            出力対象であるかどうかを取得します。
            </summary>
            <value>出力対象である場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SourceAttribute">
            <summary>
            対象のプロパティがバインディング用のデータソースであることを示すためのカスタム属性クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SourceAttribute.EntityNameProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SourceAttribute.EntityName"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SourceAttribute.NameProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SourceAttribute.Name"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SourceAttribute.#ctor(System.String,System.String)">
            <summary>
            指定したエンティティ名、及び、バインディングソース名の、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SourceAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="entityName">インスタンス取得元となるエンティティ名。</param>
            <param name="name">
            バインディングソース名。<br/>
            省略した場合、エンティティ名がそのままバインディングソース名となります。
            </param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SourceAttribute._name">
            <summary>
            バインディングソース名です。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SourceAttribute.EntityName">
            <summary>
            バインディングソースのインスタンスの取得元となるエンティティ名を取得、設定します。
            </summary>
            <value>バインディングソースのインスタンスの取得元となるエンティティ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SourceAttribute.Name">
            <summary>
            バインディングソース名を取得、設定します。
            </summary>
            <value>
            バインディングソース名。<br/>
            ブランク を設定した場合は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SourceAttribute.EntityName"/> が返されるようになります。
            </value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceResettingEventArgs">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject"/> オブジェクトへ既定値を設定する前に発生するイベントのデータを提供します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResettingEventArgs`1">
            <summary>
            オブジェクトへ既定値を設定する前に発生するイベントのデータを提供するジェネリッククラスです。
            </summary>
            <typeparam name="T">既定値設定対象オブジェクトの型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResettingEventArgs`1.#ctor(`0,System.Boolean)">
            <summary>
            指定した既定値設定対象オブジェクトの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResettingEventArgs`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="item">既定値設定対象オブジェクト</param>
            <param name="defaultHandledValue"><see cref="P:System.ComponentModel.HandledEventArgs.Handled"/> プロパティの既定値</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResettingEventArgs`1.Item">
            <summary>
            既定値設定対象オブジェクトを取得します。
            </summary>
            <value>既定値設定対象オブジェクト</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceResettingEventArgs.#ctor(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject,System.Boolean)">
            <summary>
            指定した既定値設定対象オブジェクトの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceResettingEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="item">既定値設定対象オブジェクト</param>
            <param name="defaultHandledValue"><see cref="P:System.ComponentModel.HandledEventArgs.Handled"/> プロパティの既定値</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EnumDescriptionConverter">
            <summary> 
            <see cref="T:System.Enum"/> 型オブジェクトのさまざまな表現への変換や、その逆の変換を行う型コンバーターを提供します。<br/>
            主に <see cref="T:System.FlagsAttribute"/> が付与された <see cref="T:System.Enum"/> 型に対応しています。
            </summary> 
            <remarks>
            以下の URL よりソースコード参照。<br/>
            https://code.msdn.microsoft.com/windowsdesktop/CSEnumStringConverter-31cb7347
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EnumDescriptionConverter.enumSeperator">
            <summary>
            複数の <see cref="T:System.Enum"/> 値を結合して文字列化する際のセパレータとして使用する文字を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EnumDescriptionConverter.maxHashElements">
            <summary>
            対象の <see cref="T:System.Enum"/> 型の列挙値のリストに保持する値の数の上限を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EnumDescriptionConverter.#ctor(System.Type)">
            <summary>
            指定した <see cref="T:System.Enum"/> 型の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EnumDescriptionConverter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="type">この列挙体コンバーターに関連付ける列挙体の型を表す <see cref="T:System.Type"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EnumDescriptionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EnumDescriptionConverter.Parse(System.Type,System.String)">
            <summary>
            指定した文字列を対象の <see cref="T:System.Enum"/> 型の値に変換します。
            </summary>
            <param name="enumType">対象の <see cref="T:System.Enum"/> 型</param>
            <param name="value">文字列</param>
            <returns><paramref name="enumType"/>で指定された列挙型の値</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="enumType"/>、または、<paramref name="value"/> が null の場合にスローします。</exception>
            <exception cref="T:System.ArgumentException">
            以下のいずれかの場合にスローします。<br/>
            ・<paramref name="enumType"/> が <see cref="T:System.Enum"/> 型でない場合。
            ・<paramref name="value"/> が空の場合。<br/>
            ・<paramref name="value"/> に対応する <paramref name="enumType"/> 型の値が見つからない場合。<br/>
            </exception>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EnumDescriptionConverter.fieldInfoHash">
            <summary>
            対象の <see cref="T:System.Enum"/> 型の列挙値のリストです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EnumDescriptionConverter.GetStringToEnumDictionary(System.Type)">
            <summary>
            対象の <see cref="T:System.Enum"/> 型に含まれる列挙値の名称と値の組を取得します。
            </summary>
            <param name="enumType">対象の <see cref="T:System.Enum"/> 型</param>
            <returns>列挙値の名称と値の組</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EnumDescriptionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EnumDescriptionConverter.GetEnumDescription(System.Enum)">
            <summary>
            対象の <see cref="T:System.Enum"/> 値の説明文を取得します。
            </summary>
            <param name="value"><see cref="T:System.Enum"/> 値</param>
            <returns>説明文</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EnumDescriptionConverter.GetEnumDescription(System.Type,System.String)">
            <summary>
            対象の型の、指定したフィールドの説明文を取得します。
            </summary>
            <param name="type">型</param>
            <param name="name">フィールド名</param>
            <returns>説明文</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenPropertyComparer">
            <summary>
            2つの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenProperty"/> オブジェクトを比較するためのインターフェースです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenPropertyComparer.ComparisonKeys">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenProperty"/> オブジェクトの大小判定用キー情報を取得、設定します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenProperty"/> オブジェクトの大小判定用キー情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenPropertyComparer.SubComparers">
            <summary>
            特定のプロパティの値を比較するための指定比較オブジェクトの一覧を取得します。
            </summary>
            <value>
            特定のプロパティの値を比較するための指定比較オブジェクトの一覧。<br/>
            key   : プロパティ名。<br/>
            value : 指定比較オブジェクト。<br/>
            </value>
            <remarks>
            2つの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenProperty"/> オブジェクトを <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenPropertyComparer.ComparisonKeys"/> プロパティのキー情報に基づいて比較する際、
            このディクショナリに比較オブジェクトが登録されていれば、その比較クラスのインスタンスを優先的に使用して、比較処理を行います。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenPropertyComparer`1">
            <summary>
            2つの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenProperty"/> オブジェクトを比較するためのジェネリックインターフェースです。
            </summary>
            <typeparam name="T">比較する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenProperty"/> オブジェクトの型</typeparam>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparer`1">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenProperty"/> オブジェクトの大小比較を行う標準クラスです。
            </summary>
            <typeparam name="T">比較対象である <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenProperty"/> オブジェクトの型</typeparam>
            <remarks>
            <typeparamref name="T"/> が <see cref="T:System.IComparable"/> / <see cref="T:System.IComparable`1"/> を実装していても、本比較クラスでは、
            <see cref="M:System.IComparable.CompareTo(System.Object)"/> / <see cref="M:System.IComparable`1.CompareTo(`0)"/> メソッドは使用しません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparer`1.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparer`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparer`1.Compare(`0,`0)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentException"><paramref name="x"/> と <paramref name="y"/> の型が異なる場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparer`1.ComparisonKeys">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparer`1.SubComparers">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyCollection">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenProperty"/> オブジェクトの大小比較用のキーを管理するためのコレクションクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyCollection.Add(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem)">
            <inheritdoc/>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem.Key"/> プロパティが同じキー項目が既にコレクションの要素として存在する場合は、
            それを除去した上で追加されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyCollection.Add(System.String,Ill.Incorporated.Aladdinoffice.Framework.Attributes.SortDirectionType)">
            <summary>
            指定したプロパティ名、及び、並び替え方向のキー項目を、コレクションの末尾に追加します。
            </summary>
            <param name="key">大小比較を行うプロパティ名</param>
            <param name="direction">並び替え方向</param>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem.Key"/> プロパティが <paramref name="key"/> と同じキー項目が既にコレクションの要素として存在する場合は、
            それを除去した上で追加されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyCollection.AddToTop(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem)">
            <summary>
            指定した要素をコレクションの先頭に挿入します。
            </summary>
            <param name="item">追加する値</param>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem.Key"/> プロパティが同じキー項目が既にコレクションの要素として存在する場合は、
            それを除去した上で追加されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyCollection.AddToTop(System.String,Ill.Incorporated.Aladdinoffice.Framework.Attributes.SortDirectionType)">
            <summary>
            指定したプロパティ名、及び、並び替え方向のキー項目を、コレクションの先頭に挿入します。
            </summary>
            <param name="key">大小比較を行うプロパティ名</param>
            <param name="direction">並び替え方向</param>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem.Key"/> プロパティが <paramref name="key"/> と同じキー項目が既にコレクションの要素として存在する場合は、
            それを除去した上で追加されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyCollection.InsertItem(System.Int32,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem)">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenProperty"/> オブジェクトの大小比較用キー項目クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem.KeyString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem.Key"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem.DirectionString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem.Direction"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem.#ctor(System.String,Ill.Incorporated.Aladdinoffice.Framework.Attributes.SortDirectionType)">
            <summary>
            指定したプロパティ名、及び、並び替え方向の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="key">大小比較を行うプロパティ名</param>
            <param name="direction">並び替え方向</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem.ExtractDebugData">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem.LoadDebugData(Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem.Key">
            <summary>
            大小比較を行うプロパティ名を取得、設定します。
            </summary>
            <value>大小比較を行うプロパティ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.OpenPropertyComparisonKeyItem.Direction">
            <summary>
            並び替え方向を取得、設定します。
            </summary>
            <value>並び替え方向</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResettingEventArgs">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IResetable.Resetting"/> イベントのデータを提供します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResettingEventArgs.#ctor(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IResetable,System.Boolean)">
            <summary>
            指定した既定値設定対象オブジェクトの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResettingEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="item">既定値設定対象オブジェクト</param>
            <param name="defaultHandledValue"><see cref="P:System.ComponentModel.HandledEventArgs.Handled"/> プロパティの既定値</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged"/> イベントのデータを提供します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs.NOT_USED_INDEX">
            <summary>
            変更が発生したオブジェクトがコレクションの要素ではないことを表すインデックス値の定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs.#ctor(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IValidationErrorHolder,System.String,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException},System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException},System.Int32)">
            <summary>
            指定したオブジェクトのプロパティのエラー変更情報を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="item">エラー状態が変更されたオブジェクトインスタンス</param>
            <param name="name">エラー状態が変更されたプロパティ名</param>
            <param name="added">新たに発生したエラー情報</param>
            <param name="removed">解除されたエラー情報</param>
            <param name="index">エラー状態が変更されたオブジェクトを保持するコレクション内でのインデックス</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs.Index">
            <summary>
            変更が発生したオブジェクトインスタンスを保持するコレクション内でのインデックスを取得します。
            </summary>
            <value>変更が発生したオブジェクトインスタンスを保持するコレクション内でのインデックス</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs.Item"/> プロパティが <see cref="T:System.Collections.ICollection"/> に含まれている場合にのみ有効です。<br/>
            含まれていない場合は <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs.NOT_USED_INDEX"/> が設定されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs.Item">
            <summary>
            エラー状態が変更されたオブジェクトインスタンスを取得します。
            </summary>
            <value>エラー状態が変更されたオブジェクトインスタンス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs.Name">
            <summary>
            エラー状態が変更されたプロパティ名を取得します。
            </summary>
            <value>エラー状態が変更されたプロパティ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs.AddedErrors">
            <summary>
            新たに発生したエラー情報を取得します。
            </summary>
            <value>新たに発生したエラー情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs.RemovedErrors">
            <summary>
            解除されたエラー情報を取得します。
            </summary>
            <value>解除されたエラー情報</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged.ValidationWarningChanged"/> イベントのデータを提供します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs.NOT_USED_INDEX">
            <summary>
            変更が発生したオブジェクトがコレクションの要素ではないことを表すインデックス値の定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs.#ctor(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IValidationWarningHolder,System.String,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException},System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException},System.Int32)">
            <summary>
            指定したオブジェクトのプロパティの警告変更情報を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="item">警告状態が変更されたオブジェクトインスタンス</param>
            <param name="name">警告状態が変更されたプロパティ名</param>
            <param name="added">新たに発生した警告情報</param>
            <param name="removed">解除された警告情報</param>
            <param name="index">警告状態が変更されたオブジェクトを保持するコレクション内でのインデックス</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs.Index">
            <summary>
            変更が発生したオブジェクトインスタンスを保持するコレクション内でのインデックスを取得します。
            </summary>
            <value>変更が発生したオブジェクトインスタンスを保持するコレクション内でのインデックス</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs.Item"/> プロパティが <see cref="T:System.Collections.ICollection"/> に含まれている場合にのみ有効です。<br/>
            含まれていない場合は <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs.NOT_USED_INDEX"/> が設定されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs.Item">
            <summary>
            警告状態が変更されたオブジェクトインスタンスを取得します。
            </summary>
            <value>警告状態が変更されたオブジェクトインスタンス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs.Name">
            <summary>
            警告状態が変更されたプロパティ名を取得します。
            </summary>
            <value>警告状態が変更されたプロパティ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs.AddedWarnings">
            <summary>
            新たに発生した警告情報を取得します。
            </summary>
            <value>新たに発生した警告情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs.RemovedWarnings">
            <summary>
            解除された警告情報を取得します。
            </summary>
            <value>解除された警告情報</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject">
            <summary>
            バインディング用の値の設定、保持、及び、復元が可能な標準オブジェクトのクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.DEFAULT_NAME">
            <summary>
            既定のインスタンス識別名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.#ctor(System.String)">
            <summary>
            指定した識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">インスタンス識別名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.RemoveKey(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.ClearKeys">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.AddItemEventHandler(System.Object)">
            <summary>
            要素として保持している対象のオブジェクトへイベントハンドラを登録します。
            </summary>
            <param name="item">対象オブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.RemoveItemEventHandler(System.Object)">
            <summary>
            要素として保持している対象のオブジェクトに登録されているイベントハンドラを解除します。
            </summary>
            <param name="item">対象オブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.Item_DataChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <summary>
            要素として保持しているオブジェクトの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            自身の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObjectBase.DataChanged"/> イベントとして再通知します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.Item_ValidationErrorChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <summary>
            要素として保持しているオブジェクトの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            自身の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.ValidationErrorChanged"/> イベントとして再通知します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.Item_ValidationWarningChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <summary>
            要素として保持しているオブジェクトの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged.ValidationWarningChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            自身の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.ValidationWarningChanged"/> イベントとして再通知します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.OnValidationErrorChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.ValidationErrorChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.OnValidationWarningChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.ValidationWarningChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.Rollback(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.Commit(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.ValidationErrorChanged">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BindableObject.ValidationWarningChanged">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResetEventArgs`1">
            <summary>
            オブジェクトへ既定値を設定した後に発生するイベントのデータを提供するジェネリッククラスです。
            </summary>
            <typeparam name="T">既定値設定対象オブジェクトの型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResetEventArgs`1.#ctor(`0)">
            <summary>
            指定した既定値設定対象オブジェクトの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResetEventArgs`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="item">既定値設定対象オブジェクト</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResetEventArgs`1.Item">
            <summary>
            既定値設定対象オブジェクトを取得します。
            </summary>
            <value>既定値設定対象オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResetEventArgs">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IResetable.ResetCompleted"/> イベントのデータを提供します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResetEventArgs.#ctor(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IResetable)">
            <summary>
            指定した既定値設定対象オブジェクトの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ResetEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="item">既定値設定対象オブジェクト</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceResetEventArgs">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject"/> オブジェクトへ既定値を設定した後に発生するイベントのデータを提供します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceResetEventArgs.#ctor(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject)">
             <summary>
            指定した既定値設定対象オブジェクトの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceResetEventArgs"/> クラスの新しいインスタンスを初期化します。
             </summary>
             <param name="item">既定値設定対象オブジェクト</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingTargetItem">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject"/> 同士のメンバーのマッピング反映先を示すクラスです。
            </summary>
            <remarks>
            このクラスの <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingTargetItem.Equals(System.Object)"/> メソッド、及び、比較演算子は、親クラスである <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem"/>
            に準拠します。<br/>
            したがって、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingTargetItem.Converter"/> プロパティが異なる場合でも、他のプロパティが等しければ、同じオブジェクトとして扱われます。
            </remarks> 
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject"/> 同士のメンバーのマッピング元を示すクラスです。
            </summary>
            <remarks>
            このクラスでは、異なるインスタンスでも、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem.SourceName"/> / <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem.SourceMemberName"/> の各プロパティがともに
            等しければ、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem.Equals(System.Object)"/> メソッドは true を返します。比較演算子についても同様です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem.#ctor(System.String,System.String)">
            <summary>
            指定したバインディング用オブジェクト名、及び、メンバー名の、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="sourceName">バインディング用オブジェクト名</param>
            <param name="sourceMemberName">バインディング用オブジェクトのメンバー名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem.op_Equality(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem)">
            <summary>
            オペランドの値が等しい場合に true が返され、それ以外の場合は false が返されます。
            </summary>
            <param name="a">比較元</param>
            <param name="b">比較先</param>
            <returns>オペランドの値が等しい場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem.op_Inequality(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem)">
            <summary>
            オペランドの値が異なる場合に true が返され、それ以外の場合は false が返されます。
            </summary>
            <param name="a">比較元</param>
            <param name="b">比較先</param>
            <returns>オペランドの値が異なる場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem.SourceName">
            <summary>
            バインディング用オブジェクト名を取得します。
            </summary>
            <value>バインディング用オブジェクト名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem.SourceMemberName">
            <summary>
            バインディング用オブジェクトのメンバー名を取得します。
            </summary>
            <value>バインディング用オブジェクトのメンバー名</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingTargetItem.#ctor(System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter)">
            <summary>
            指定したバインディング用オブジェクト名、及び、メンバー名の、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingTargetItem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="sourceName">バインディング用オブジェクト名</param>
            <param name="sourceMemberName">バインディング用オブジェクトのメンバー名</param>
            <param name="converter">バインディング用の値の反映時に使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingTargetItem.SendTo(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISourceHolder)">
            <summary>
            指定された値を、対象のバインディング用オブジェクトに反映します。
            </summary>
            <param name="value">反映する値</param>
            <param name="holder">値を反映するバインディング用オブジェクトを保持しているオブジェクト</param>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingTargetItem.Converter"/> プロパティが null でない場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter.Convert(System.Object)"/> メソッドにより変換した値を反映します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingTargetItem.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingTargetItem.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingTargetItem.Converter">
            <summary>
            バインディング用の値の反映時に使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> を取得、設定します。
            </summary>
            <value>バインディング用の値の反映時に使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/></value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateFormatConverter">
            <summary>
            AOフォーマット(yyyyMMdd)形式の日付文字列 ← → <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.DateFormat"/> 列挙体で指定されたフォーマットの日付文字列 の相互変換を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateFormatConverter.REG_PATTERN">
            <summary>
            AOフォーマットの日付文字列を年、月、日の各部分文字列に分割するための正規表現パターンを表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateFormatConverter.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Attributes.DateFormat)">
            <summary>
            指定した日付の文字列フォーマットの、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateFormatConverter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="format">日付の文字列フォーマット</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateFormatConverter.Pattern">
            <summary>
            AOフォーマットの日付文字列を年、月、日の各部分文字列に分割するための正規表現です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateFormatConverter.Convert(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が AOフォーマットの日付文字列 の場合は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateFormatConverter.Format"/> プロパティで指定されたフォーマットの日付文字列を、
            他の場合は <see cref="F:System.String.Empty"/> を
            それぞれ返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateFormatConverter.Eval(System.Text.RegularExpressions.Match)">
            <summary>
            正規表現の検索結果に対して、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateFormatConverter.Format"/> プロパティで指定されたフォーマットの日付文字列に変換した文字列を返します。
            </summary>
            <param name="match">正規表現の検索結果</param>
            <returns>変換された日付文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateFormatConverter.ConvertBack(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> から "/"(スラッシュ)、"年"、"月"、"日" を除去した文字列が AOフォーマットの日付文字列 の場合はその文字列を、
            他の場合は <see cref="F:System.String.Empty"/> を
            それぞれ返します。
            </returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateFormatConverter.Format">
            <summary>
            表示用の日付の文字列フォーマットを取得、設定します。
            </summary>
            <value>表示用の日付の文字列フォーマット</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateTimeConverter">
            <summary>
            日時 (<see cref="T:System.DateTime"/>) ← → フォーマットされた文字列 の相互変換を行うクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateTimeConverter.#ctor(System.String)">
            <summary>
            指定した日付のフォーマット形式の、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateTimeConverter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="format">日付のフォーマット形式</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateTimeConverter.Convert(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が  <see cref="T:System.DateTime"/> 型の場合は、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateTimeConverter.Format"/> プロパティで指定された形式にフォーマットされた文字列を、
            他の場合は <see cref="F:System.String.Empty"/> を、
            それぞれ返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateTimeConverter.ConvertBack(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が <see cref="T:System.DateTime"/> 型にパース可能な、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateTimeConverter.Format"/> プロパティで指定された形式の文字列の場合は対応するパース結果を、
            他の場合は 端末のシステム時刻 を、
            それぞれ返します。
            </returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DateTimeConverter.Format">
            <summary>
            日付のフォーマット形式を取得、設定します。
            </summary>
            <value>日付のフォーマット形式</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter">
            <summary>
            区分値 ← → 区分値の表示文字列 の相互変換を行うクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListAttribute,Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayListType)">
            <summary>
            指定した区分項目、及び、表示方法の、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="list">区分項目</param>
            <param name="type">表示方法</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter.#ctor(System.String,Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayListType)">
            <summary>
            指定した区分項目、及び、表示方法の、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="listName">区分国目名</param>
            <param name="type">表示方法</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter.Convert(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter.ListType"/> に含まれる区分値の場合は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter.Type"/> で指定された表示方法の文字列を、
            他の場合は null を、
            それぞれ返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter.ToFormat(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListValueAttribute)">
            <summary>
            対象の区分値を「値:ラベル」形式の文字列に変換します。
            </summary>
            <param name="list">区分値</param>
            <returns>区分値の「値:ラベル」形式の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter.ConvertBack(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter.ListType"/> に含まれる区分値の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter.Type"/> で指定された表示方法の文字列である場合はその区分値を、
            他の場合は <paramref name="value"/> を、
            それぞれ返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter.Equals(System.Object,Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListValueAttribute)">
            <summary>
            対象の文字列が、指定した区分値の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter.Type"/> で指定された表示方法の文字列に等しいかどうかを返します。
            </summary>
            <param name="value">対象文字列</param>
            <param name="list">区分値</param>
            <returns>指定した値が、対象の区分値の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter.Type"/> で指定された表示方法の文字列に等しい場合は true。等しくない場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter.Type">
            <summary>
            区分値の表示方法 を取得、設定します。
            </summary>
            <value>区分値の表示方法</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DisplayListTypeConverter.ListType">
            <summary>
            区分項目情報を取得、設定します。
            </summary>
            <value>区分項目情報</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToStringConverter`1">
            <summary>
            <see cref="T:System.Enum"/> ← → 文字列(数字 等) の相互変換を行うクラスです。
            </summary>
            <typeparam name="T">変換対象の <see cref="T:System.Enum"/> 型、もしくは、その Null許容型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToStringConverter`1.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToStringConverter`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <exception cref="T:System.InvalidOperationException"><typeparamref name="T"/> が <see cref="T:System.Enum"/> 型、もしくは、その Null許容型 でない場合にスローします。</exception>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToStringConverter`1._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToStringConverter`1"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToStringConverter`1._enumType">
            <summary>
            変換に使用される <see cref="T:System.Enum"/> 型を示す型オブジェクトです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToStringConverter`1.Convert(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が <typeparamref name="T"/> 型の場合は対応する値の <see cref="T:System.String"/> 変換値を、
            他の場合は <see cref="F:System.String.Empty"/> を、
            それぞれ返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToStringConverter`1.ConvertBack(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が <typeparamref name="T"/> 型で <see cref="M:System.Enum.Parse(System.Type,System.String)"/> 可能な値な場合にはその結果を、
            他の場合は <typeparamref name="T"/> 型の既定値(<typeparamref name="T"/> がNull許容型の場合は null)を、
            それぞれ返します。
            </returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToStringConverter`1.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToStringConverter`1"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToStringConverter`1"/> の既定のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.NumericToStringConverter`1">
            <summary>
            <typeparamref name="T"/> 型の数値 ← → <see cref="T:System.String"/> の相互変換を行うクラスです。
            </summary>
            <typeparam name="T">変換元の数値型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.NumericToStringConverter`1.Convert(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が <typeparamref name="T"/> 型 に変換可能な場合は <see cref="M:System.Object.ToString"/> メソッドの実行結果を、
            他の場合は <see cref="F:System.String.Empty"/> を、
            それぞれ返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.NumericToStringConverter`1.ConvertBack(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が <typeparamref name="T"/> 型にパース可能な場合は対応するパース結果を、
            他の場合は <typeparamref name="T"/> 型の既定値(<typeparamref name="T"/> がNull許容型の場合は null)を、
            それぞれ返します。
            </returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.DecimalToStringConverter">
            <summary>
            <see cref="T:System.Decimal"/> ← → <see cref="T:System.String"/> の相互変換を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.DecimalToStringConverter._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.DecimalToStringConverter"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DecimalToStringConverter.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.DecimalToStringConverter"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.DecimalToStringConverter"/> の既定のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.DoubleToStringConverter">
            <summary>
            <see cref="T:System.Double"/> ← → <see cref="T:System.String"/> の相互変換を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.DoubleToStringConverter._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.DoubleToStringConverter"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.DoubleToStringConverter.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.DoubleToStringConverter"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.DoubleToStringConverter"/> の既定のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.FloatToStringConverter">
            <summary>
            <see cref="T:System.Single"/> ← → <see cref="T:System.String"/> の相互変換を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.FloatToStringConverter._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.FloatToStringConverter"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.FloatToStringConverter.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.FloatToStringConverter"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.FloatToStringConverter"/> の既定のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.IntegerToStringConverter">
            <summary>
            <see cref="T:System.Int32"/> ← → <see cref="T:System.String"/> の相互変換を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.IntegerToStringConverter._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.IntegerToStringConverter"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.IntegerToStringConverter.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.IntegerToStringConverter"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.IntegerToStringConverter"/> の既定のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.LongToStringConverter">
            <summary>
            <see cref="T:System.Int64"/> ← → <see cref="T:System.String"/> の相互変換を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.LongToStringConverter._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.LongToStringConverter"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.LongToStringConverter.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.LongToStringConverter"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.LongToStringConverter"/> の既定のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ShortToStringConverter">
            <summary>
            <see cref="T:System.Int16"/> ← → <see cref="T:System.String"/> の相互変換を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.ShortToStringConverter._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ShortToStringConverter"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.ShortToStringConverter.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ShortToStringConverter"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ShortToStringConverter"/> の既定のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToEnumNameConverter`1">
            <summary>
            <see cref="T:System.Enum"/> ← → <see cref="T:System.Enum"/> の文字列表現 の相互変換を行うクラスです。
            </summary>
            <typeparam name="T">変換対象の <see cref="T:System.Enum"/> 型、もしくは、その Null許容型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToEnumNameConverter`1.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToEnumNameConverter`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <exception cref="T:System.InvalidOperationException"><typeparamref name="T"/> が <see cref="T:System.Enum"/> 型、もしくは、その Null許容型 でない場合にスローします。</exception>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToEnumNameConverter`1._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToEnumNameConverter`1"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToEnumNameConverter`1._enumType">
            <summary>
            変換に使用される <see cref="T:System.Enum"/> 型を示す型オブジェクトです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToEnumNameConverter`1.Convert(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が <typeparamref name="T"/> 型の場合はその文字列表現を、
            他の場合は <see cref="F:System.String.Empty"/> を、
            それぞれ返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToEnumNameConverter`1.ConvertBack(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が <typeparamref name="T"/> 型で <see cref="M:System.Enum.Parse(System.Type,System.String)"/> 可能な値な場合にはその結果を、
            他の場合は <typeparamref name="T"/> 型の既定値(<typeparamref name="T"/> がNull許容型の場合は null)を、
            それぞれ返します。
            </returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToEnumNameConverter`1.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToEnumNameConverter`1"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.EnumToEnumNameConverter`1"/> の既定のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.PasswordCryptConverter">
            <summary>
            パスワード文字列の暗号化 ← → 復号化を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.PasswordCryptConverter._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.PasswordCryptConverter"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.PasswordCryptConverter.Convert(System.Object)">
            <inheritdoc/>
            <returns>復号化されたパスワード文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.PasswordCryptConverter.ConvertBack(System.Object)">
            <inheritdoc/>
            <returns>暗号化されたパスワード文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.PasswordCryptConverter.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.PasswordCryptConverter"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.PasswordCryptConverter"/> の既定のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseBulkInsert">
            <summary>
            データベースへ一括挿入を行う基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseBulkInsert">
            <summary>
            データベースへ一括挿入を行うインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseBulkInsert.Exec(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            一括挿入を実行します。
            </summary>
            <param name="section">データべース接続セクション</param>
            <returns>影響を受けた行数</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseBulkInsert.Connection">
            <summary>
            データベース接続コネクションを取得します。
            </summary>
            <value>データベース接続コネクション</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseBulkInsert.PriorityFlag">
            <summary>
            優先すべき処理を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.DatabaseBulkInsertPriorityFlag"/> を取得します。
            </summary>
            <value>一括挿入優先フラグ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseBulkInsert.Table">
            <summary>
            一括挿入するデータテーブルを設定、取得します。
            </summary>
            <value>一括挿入するデータテーブル</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseBulkInsert.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.DatabaseBulkInsertPriorityFlag)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseBulkInsert"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="conn">データベース接続コネクション</param>
            <param name="priorityFlag">優先すべき処理を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.DatabaseBulkInsertPriorityFlag"/> </param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseBulkInsert.Exec(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseBulkInsert.WriteLog(System.String)">
            <summary>
            ログ出力を行います。
            </summary>
            <param name="tableName">テーブル名</param>
            <remarks>
            処理件数が0の場合にログを出力するために利用します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseBulkInsert.WriteLog(System.String,System.Data.DataTable)">
            <summary>
            ログ出力を行います。
            </summary>
            <param name="tableName">テーブル名</param>
            <param name="table">一括挿入するデータテーブル</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseBulkInsert.Connection">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseBulkInsert.PriorityFlag">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseBulkInsert.Table">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute">
            <summary>
            データベースの列情報を指定するカスタム属性クラスです。
            </summary>
            <remarks>
            シノニム、型情報、NULL許可、デフォルト値といった情報を保持します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="attr">列情報を指定するカスタム属性インスタンス</param>
            <remarks>既存のインスタンスから新しいインスタンスを作成します。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute.#ctor(System.String,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="databaseType">データベースの型を表す文字列</param>
            <param name="validDigit">有効桁数</param>
            <param name="digitDecimal">小数桁数</param>
            <param name="isAllowNull">NULLを許可する場合は true。それ以外の場合は false。</param>
            <param name="defaultValue">デフォルト値</param>
            <remarks>
            デフォルト値がブランクの場合、文字列型はブランク、数値型は0、日付型は現在日付が自動的に設定されます。
            nullの場合、何も設定されません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute.#ctor(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="synonymName">シノニム名を表す文字列</param>
            <param name="databaseType">データベースの型を表す文字列</param>
            <param name="validDigit">有効桁数</param>
            <param name="digitDecimal">小数桁数</param>
            <param name="isAllowNull">NULLを許可する場合は true。それ以外の場合は false。</param>
            <param name="defaultValue">デフォルト値</param>
            <remarks>
            デフォルト値がブランクの場合、文字列型はブランク、数値型は0、日付型は現在日付が自動的に設定されます。
            nullの場合、何も設定されません。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute.SynonymName">
            <summary>
            シノニム名を表す文字列を取得、設定します。
            </summary>
            <value>シノニム名</value>
            <remarks>
            このプロパティがnull、ブランク、スペースの場合、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute.DatabaseType"/> が優先されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute.DatabaseType">
            <summary>
            データベースの型を表す文字列を取得、設定します。
            </summary>
            <value>データベースの型を表す文字列</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute.DatabaseType"/> がnull、ブランク、スペースの場合、このプロパティが優先されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute.ValidDigit">
            <summary>
            有効桁数を取得、設定します。
            </summary>
            <value>有効桁数</value>
            <remarks>
            0以下の場合は設定されません。
            <see cref="F:System.Int32.MaxValue"/> の場合「MAX」が設定されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute.DigitDecimal">
            <summary>
            小数桁数を取得、設定します。
            </summary>
            <value>小数桁数</value>
            <remarks>
            0以下の場合は設定されません。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute.IsAllowNull">
            <summary>
            NULLを許可するかを設定、取得します。
            </summary>
            <value>NULL許可フラグ</value>
            <remarks>
            NULLを許可する場合は true。それ以外の場合は false。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute.DefaultValue">
            <summary>
            デフォルト値を取得、設定します。
            </summary>
            <value>デフォルト値</value>
            <remarks>
            nullの場合、何も設定されません。
            数値の場合「IDENTITY」を指定すると自動カウントされる列を作成できます。
            ブランクの場合は、データベースの型によって動作が変わります。
            文字列の場合はブランク、数値型の場合は0、日付型の場合は現在日付が設定されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute.DbType">
            <summary>
            データベースの型を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute.DbType"/> を取得します。
            </summary>
            <value>データベースの型を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute.DbType"/></value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommandExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommandExtensions.GetChangeValueNeededParameters(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            値を切り替える必要のあるパラメータを取得します。
            </summary>
            <param name="cmd"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand"/> </param>
            <param name="section">データべース接続セクション</param>
            <returns>実行パラメータ</returns>
            <remarks>
            DetailやEntityの行ごとにデータを変更する場合に、切り替えが必要なパラメータを取得します。
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand"/> の設定されているプロパティによって取得する内容を切り替えます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommandExtensions.GetUpdateInfoParameters(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand)">
            <summary>
            更新情報を表すパラメータを取得します。
            </summary>
            <param name="cmd"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand"/> </param>
            <returns>更新情報パラメータ</returns>
            <remarks>
            更新情報とは「更新者」「更新日付」を示します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommandExtensions.GetRegisteredInfoParameters(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand)">
            <summary>
            登録情報パラメータの取得を取得します。
            </summary>
            <param name="cmd"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand"/> </param>
            <returns>登録情報パラメータ</returns>
            <remarks>
            登録情報とは「登録者」「登録日付」を示します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommandExtensions.GetParametersWithoutUpdateAndRegisteredInfo(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand)">
            <summary>
            更新情報と登録情報を除いたパラメータを取得します。
            </summary>
            <param name="cmd"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand"/> </param>
            <returns>更新情報、登録情報を除いたパラメータ</returns>
            <remarks>
            更新情報とは「更新者」「更新日付」、登録情報とは「登録者」「登録日付」を示します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommandExtensions.GetParametersWithoutUpdateInfo(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand)">
            <summary>
            更新情報を除いたパラメータを取得します。
            </summary>
            <param name="cmd"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand"/> </param>
            <returns>更新情報を除いたパラメータ</returns>
            <remarks>
            更新情報とは「更新者」「更新日付」を示します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommandExtensions.GetParametersWithoutRegisteredInfo(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand)">
            <summary>
            登録情報を除いたパラメータを取得します。
            </summary>
            <param name="cmd"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand"/> </param>
            <returns>登録情報を除いたパラメータ</returns>
            <remarks>
            登録情報とは「登録者」「登録日付」を示します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommandExtensions.SetUpdateInfoParameterValues(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction)">
            <summary>
            更新情報パラメータの設定を行います。
            </summary>
            <param name="cmd"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand"/> </param>
            <param name="transaction"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction"/> </param>
            <remarks>
            更新情報とは「更新者」「更新日付」を示します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommandExtensions.SetRegisteredInfoParameterValues(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction)">
            <summary>
            登録情報パラメータの設定を行います。
            </summary>
            <param name="cmd"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand"/> </param>
            <param name="transaction"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction"/> </param>
            <remarks>
            登録情報とは「登録者」「登録日付」を示します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnectionExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnectionExtensions.SetSystemValues(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection)">
            <summary>
            システム設定情報を基に対象のデータベース接続の各種情報を設定します。
            </summary>
            <param name="connection">データベース接続</param>
            <remarks>
            システム設定情報を基に設定される情報は以下の通りです。<br/>
            コマンドタイムアウト<br/>
            ロックタイムアウト<br/>
            DB接続リトライ回数<br/>
            更新リトライ回数<br/>
            DB再接続待機時間<br/>
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException">
            <summary>
            データベース操作で異常が発生した場合にスローされる例外です。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException">
            <summary>
            AladdinOfficeが発生させる例外です。
            </summary>
            <remarks>
            Catchしてそのまま処理を続けてもよい場合にスローされる例外です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException.#ctor(System.String,System.Object[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="args">メッセージの引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException.#ctor(System.Exception,System.String,System.Object[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="innerException">この例外の原因となる例外</param>
            <param name="message">メッセージ</param>
            <param name="args">メッセージの引数</param>
            <remarks></remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException.#ctor(System.String,System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="innerException">この例外の原因となる例外</param>
            <remarks></remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException.Is(System.Exception)">
            <summary>
            <paramref name="ex"/> に<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException"/> が含まれるか判定します。
            </summary>
            <param name="ex">対象の例外</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException"/> が含まれる場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException.Find(System.Exception)">
            <summary>
            <paramref name="ex"/> に含まれる最初の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException"/> を検索します。
            </summary>
            <param name="ex">対象の例外</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException"/>。見つからない場合はnullを返します。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.#ctor(System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="innerException">この例外の原因となる例外</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.#ctor(System.String,System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="innerException">この例外の原因となる例外</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.AppendExecuteCommandInfo(System.Data.Common.DbCommand)">
            <summary>
            実行コマンド情報の設定を行います。
            </summary>
            <param name="execCmd">実行コマンド</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.ToString">
            <summary>
            オブジェクトを表すの文字列を作成して返します。
            </summary>
            <returns>このオブジェクトを表す文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.ConvertAllErrorMessage(System.String,System.Data.SqlClient.SqlException)">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.SqlException"/> を文字列に変換します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="sqlEx">データベースの例外を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.SqlException"/></param>
            <returns>変換されたメッセージ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.ConvertAllErrorMessage(System.Data.SqlClient.SqlException)">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.SqlException"/> をメッセージに変換します。
            </summary>
            <param name="sqlEx">データベースの例外を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.SqlException"/></param>
            <returns>変換されたメッセージ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.ConvertOriginalMessage(System.String,System.Exception)">
            <summary>
            データベースの例外を表す<see cref="T:System.Exception"/> をメッセージに変換します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="innerException">データベースの例外を表す<see cref="T:System.Exception"/></param>
            <returns>変換されたメッセージ</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.SqlException">
            <summary>
            この例外の原因となった<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.SqlException"/> を取得、設定します。
            </summary>
            <value>この例外の原因となった<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.SqlException"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.BaseMessage">
            <summary>
            基本メッセージを取得します。
            </summary>
            <value>基本メッセージ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.OriginalMessage">
            <summary>
            例外の原因となった例外のメッセージを取得します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException.ExecuteCommandInfo">
            <summary>
            実行したコマンドの情報を取得します。
            </summary>
            <value>実行したコマンドの情報</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseOperationException">
            <summary>
            データベースの操作時に異常が発生した場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseOperationException.#ctor(System.Exception,System.Int32,System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseOperationException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="innerException">この例外の原因となる例外</param>
            <param name="executeCount">実行回数</param>
            <param name="retryCount">リトライ回数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseOperationException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseOperationException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="innerException">この例外の原因となる例外</param>
            <param name="executeCount">実行回数</param>
            <param name="retryCount">リトライ回数</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseOperationException.ExecuteCount">
            <summary>
            実行回数を取得します。
            </summary>
            <value>実行回数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseOperationException.RetryCount">
            <summary>
            リトライ回数を取得します。
            </summary>
            <value>リトライ回数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseOperationException.IsLastExecute">
            <summary>
            実行回数がリトライ回数に達しているかを取得します。
            </summary>
            <value>実行回数がリトライ回数に達していた場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.UserDatabaseException">
            <summary>
            データベース操作時にユーザーが想定したエラーをキャッチした場合にスローされる例外です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.UserDatabaseException.USER_ERROR_NUMBER">
            <summary>
            ユーザーエラーを表す基底のエラー番号
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.UserDatabaseException.#ctor(System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.UserDatabaseException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="innerException">この例外の原因となる例外</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.UserDatabaseException.#ctor(System.String,System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.UserDatabaseException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="innerException">この例外の原因となる例外</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.UserDatabaseException.IsUserError(System.Data.SqlClient.SqlException)">
            <summary>
            ユーザーエラーかどうかを判定します。
            </summary>
            <param name="ex">判定する <see cref="T:System.Data.SqlClient.SqlException"/></param>
            <returns>ユーザーエラーの場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseOverRetryCountException">
            <summary>
            リトライ回数が規定値を超えた場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseOverRetryCountException.#ctor(System.Exception,System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseOverRetryCountException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="innerException">この例外の原因となる例外</param>
            <param name="retryCount">リトライ回数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseOverRetryCountException.#ctor(System.String,System.Exception,System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseOverRetryCountException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="innerException">この例外の原因となる例外</param>
            <param name="retryCount">リトライ回数</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.QueryingLockTimeoutException">
            <summary>
            ロックタイムアウトが発生した場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.QueryingLockTimeoutException.#ctor(System.Exception,System.Int32,System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.QueryingLockTimeoutException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="innerException">この例外の原因となる例外</param>
            <param name="executeCount">実行回数</param>
            <param name="retryCount">リトライ回数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.QueryingLockTimeoutException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.QueryingLockTimeoutException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="innerException">この例外の原因となる例外</param>
            <param name="executeCount">実行回数</param>
            <param name="retryCount">リトライ回数</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.QueryingDeadlockException">
            <summary>
            デッドロックが発生した場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.QueryingDeadlockException.#ctor(System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.QueryingDeadlockException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="innerException">この例外の原因となる例外</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.QueryingDeadlockException.#ctor(System.String,System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.QueryingDeadlockException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="innerException">この例外の原因となる例外</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.QueryingCommandTimeoutException">
            <summary>
            コンマンドタイムアウトが発生したる場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.QueryingCommandTimeoutException.#ctor(System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.QueryingCommandTimeoutException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="innerException">この例外の原因となる例外</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.QueryingCommandTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.QueryingCommandTimeoutException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="innerException">この例外の原因となる例外</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.ExclusiveLockTimeoutException">
            <summary>
            排他ロックによってセッションの排他ロックを取得できなかった場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.ExclusiveLockTimeoutException.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.ExclusiveLockTimeoutException"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.ExclusiveLockTimeoutException.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.ExclusiveLockTimeoutException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue">
            <summary>
            データベースのパラメータの名称や値を管理するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue._entityName">
            <summary>
            Entity名
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue._parameterName">
            <summary>
            パラメータ名
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.#ctor(System.String,System.Object)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="parameterName">パラメータ名</param>
            <param name="value">値</param>
            <remarks>
            パラメータ名から取得すべきEntity名、列名を自動で算出して、インスタンスを初期化します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.#ctor(System.String,System.String,System.Object)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="entityName">Entity名</param>
            <param name="columnName">Entityの列名</param>
            <param name="value">値</param>
            <remarks>
            指定されたEntity名とEntityの列名でインスタンスを初期化します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.Object)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="entity">値の取得元となるEntity</param>
            <param name="columnName">値の取得元となるEntityの列名</param>
            <param name="value">値</param>
            <remarks>
            指定されたEntityとEntityの列名でインスタンスを初期化します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.#ctor(System.String,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.Object)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="parameterName">パラメータ名</param>
            <param name="entity">値の取得元となるEntity</param>
            <param name="columnName">値の取得元となるEntityの列名</param>
            <param name="value">値</param>
            <remarks>
            パラメータ名を指定してインスタンスを初期化します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.#ctor(System.String,System.String,System.String,System.Object)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="parameterName">パラメータ名</param>
            <param name="detailName">値の取得元となるDetail名</param>
            <param name="propertyName">値の取得元となるプロパティ名</param>
            <param name="value">値</param>
            <remarks>
            指定されたDetail名、Detailプロパティ名でインスタンスを初期化します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.GetValues(Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase})">
            <summary>
            値の一覧を対象のEntity行一覧から取得して、メンバに設定します。
            </summary>
            <param name="module">Module</param>
            <param name="entityRows">対象のEntity行一覧</param>
            <remarks>
            インスタンスにEntityが設定されていない場合、Moduleのインスタンスから指定のEntityを探して利用します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.GetValues(Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetail})">
            <summary>
            値一覧を対象のDetaik行一覧から取得して、メンバに設定する。
            </summary>
            <param name="module">Module</param>
            <param name="details">対象Detail一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.ReplaceSequenceNo(System.Int32)">
            <summary>
            パラメータ名に記述されているシーケンス番号を指定のシーケンス番号で置き換えます。
            </summary>
            <param name="sequenceNo">シーケンス番号</param>
            <remarks>
            <paramref name="sequenceNo"/>が<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.INVALID_SEQUENCE_NO"/>と等しい場合、
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.ParameterNameWithoutSequenceNo"/>が返されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.System#ICloneable#Clone">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.Clone">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue"/> インスタンスのコピーを作成します。
            </summary>
            <returns>コピーされた<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue"/></returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.Value">
            <summary>
            パラメータの値を取得、設定します。
            </summary>
            <value>パラメータの値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.Values">
            <summary>
            パラメータの値を表す配列を取得、設定します。
            </summary>
            <value>パラメータの値を表す配列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.Entity">
            <summary>
            値の取得元となるEntityを取得、設定します。
            </summary>
            <value>値の取得元となるEntity</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.EntityName">
            <summary>
            Entity名を取得、設定します。
            </summary>
            <value>Entity名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.ColumnName">
            <summary>
            Entityの列名を取得、設定します。
            </summary>
            <value>Entityの列名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.DetailName">
            <summary>
            Detail名を取得、設定します。
            </summary>
            <value>Detail名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.PropertyName">
            <summary>
            Detailのプロパティ名を取得、設定します。
            </summary>
            <value>Detailのプロパティ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.ParameterName">
            <summary>
            パラメータ名を取得、設定します。
            </summary>
            <value>パラメータ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.ParameterNameWithoutSequenceNo">
            <summary>
            パラメータ名からシーケンス番号を除外した文字列を取得します。
            </summary>
            <value>パラメータ名からシーケンス番号を除外した文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.IsAppendSequenceNo">
            <summary>
            パラメータ名にシーケンス番号が含まれるかを取得します。
            </summary>
            <value>シーケンス番号が含まれる場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.IsParameterNamed">
            <summary>
            パラメータ名を編集済みかを取得します。
            </summary>
            <value>編集済みの場合は true。それ以外の場合は false。</value>
            <remarks>
            シーケンス番号の付与などを行ってパラメータ名を編集しているかどうかを判定します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue.IsInputtedValue">
            <summary>
            Detailプロパティ名を利用したインスタンスかを取得します。
            </summary>
            <value>Detailプロパティ名で構成されている場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseStringExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseStringExtensions.SetUserNameAndPassword(Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString)">
            <summary>
            対象のデータベース接続情報の接続ユーザ名/パスワードを設定します。
            </summary>
            <param name="str">対象のデータベース接続情報</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTimeout">
            <summary>
            データベースのタイムアウト時間を表すクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTimeout">
            <summary>
            データベースのタイムアウトを表すインターフェースです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTimeout.CommandTimeout">
            <summary>
            コマンドタイムアウト時間を秒で取得、設定します。
            </summary>
            <value>コマンドタイムアウト時間(秒)</value>
            <remarks>
            0を指定するとタイムアウトは発生しません。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTimeout.LockTimeout">
            <summary>
            ロックタイムアウト時間をミリ秒で取得、設定します。
            </summary>
            <value>ロックタイムアウト時間(ミリ秒)</value>
            <remarks>
            負数を設定するとロックタイムアウトは発生しません。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTimeout.ExclusiveLockTimeout">
            <summary>
            排他タイムアウト時間をミリ秒で取得、設定します。
            </summary>
            <value>排他タイムアウト時間(ミリ秒)</value>
            <remarks>
            負数を設定すると排他タイムアウトは発生しません。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTimeout.DEFAULT_COMMAND_TIMEOUT_SEC_VALUE">
            <summary>
            デフォルトのコマンドタイムアウト時間(ミリ秒)を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTimeout.DEFAULT_LOCK_TIMEOUT_SEC_VALUE">
            <summary>
            デフォルトのロックタイムアウト時間(ミリ秒)を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTimeout.DEFAULT_EXCLUSIVE_LOCK_TIMEOUT">
            <summary>
            デフォルトのセッション取得タイムアウト時間(ミリ秒)を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTimeout.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTimeout"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTimeout.Clone">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTimeout.CommandTimeout">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTimeout.LockTimeout">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTimeout.ExclusiveLockTimeout">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseUtil">
            <summary>
            データベース用のユーティリティクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseUtil.WriteTitleLog(System.String,System.String)">
            <summary>
            タイトルをログに出力します。
            </summary>
            <param name="title">タイトル</param>
            <param name="name">名前</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseUtil.WriteMethodLog(System.Reflection.MethodBase)">
            <summary>
            メソッド情報をログに出力します。
            </summary>
            <param name="method">メソッド情報</param>
            <remarks></remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseUtil.WriteSqlLog(System.Data.Common.DbCommand)">
            <summary>
            <see cref="T:System.Data.Common.DbCommand"/>の情報をログに出力します。
            </summary>
            <param name="cmd">データベースのコマンドを表す<see cref="T:System.Data.Common.DbCommand"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseUtil.WriteErrorLog(System.Exception)">
            <summary>
            データベース操作中に発生した例外をログに出力します。
            </summary>
            <param name="ex">例外</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil">
            <summary>
            データベースの型に関するユーティリティクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.CHAR">
            <summary>
            CHAR型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.NCHAR">
            <summary>
            NCHAR型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.VARCHAR">
            <summary>
            VARCHAR型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.NVARCHAR">
            <summary>
            NVARCHAR型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.TEXT">
            <summary>
            TEXT型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.NTEXT">
            <summary>
            NTEXT型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.DECIMAL">
            <summary>
            DECIMAL型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.NUMERIC">
            <summary>
            NUMERIC型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.FLOAT">
            <summary>
            FLOAT型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.REAL">
            <summary>
            REAL型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.INT">
            <summary>
            INT型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.BIGINT">
            <summary>
            BIGINT型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.SMALLINT">
            <summary>
            SMALLINT型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.TINYINT">
            <summary>
            TINYINT型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.MONEY">
            <summary>
            MONEY型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.SMALLMONEY">
            <summary>
            SMALLMONEY型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.BIT">
            <summary>
            BIT型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.BINARY">
            <summary>
            BINARY型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.VARBINARY">
            <summary>
            VARBINARY型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.IMAGE">
            <summary>
            IMAGE型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.DATETIME">
            <summary>
            DATETIME型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.DATETIME2">
            <summary>
            DATETIME2型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.DATETIMEOFFSET">
            <summary>
            DATETIMEOFFSET型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.SMALLDATETIME">
            <summary>
            SMALLDATETIME型を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.NULL">
            <summary>
            NULLを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.IDENTITY">
            <summary>
            IDENTITYを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.LENGTH_TYPES">
            <summary>
            桁数が必要な型の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.TWO_BYTE_TYPES">
            <summary>
            UNICODE(2バイト文字)を保持する型の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.SCALE_TYPES">
            <summary>
            精度が必要な型の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.STRING_TYPES">
            <summary>
            文字列型の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.NUMBER_TYPES">
            <summary>
            数値型の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.DATE_TYPES">
            <summary>
            日付型の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.BINARY_TYPES">
            <summary>
            バイナリ型の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.RESERVED_WORDS">
            <summary>
            予約語の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.TypeOfNeededLength(System.String)">
            <summary>
            型文字列が示す型に桁数が必要かを判定します。
            </summary>
            <param name="value">型文字列</param>
            <returns>桁数が必要な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.TypeOfNeededScale(System.String)">
            <summary>
            型文字列が示す型に精度が必要か判定します。
            </summary>
            <param name="value">型文字列</param>
            <returns>精度が必要な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.TypeOfString(System.String)">
            <summary>
            型文字列が示す型が文字列型かを判定します。
            </summary>
            <returns>true:文字列/false:非文字列</returns>
            <returns>文字列型の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.TypeOfTwoBytesString(System.String)">
            <summary>
            型文字列が示す型がUNICODE(2バイト文字)かを判定します。
            </summary>
            <param name="value">型文字列</param>
            <returns>UNICODE(2バイト文字)の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.TypeOfNumber(System.String)">
            <summary>
            型文字列が示す型が数値項目かを判定します。
            </summary>
            <param name="value">型文字列</param>
            <returns>数値項目の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.TypeOfDate(System.String)">
            <summary>
            型文字列が示す型が日付項目かを判定します。
            </summary>
            <param name="value">型文字列</param>
            <returns>日付項目の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.TypeOfBinary(System.String)">
            <summary>
            型文字列が示す型がバイナリ項目かを判定します。
            </summary>
            <param name="value">型文字列</param>
            <returns>バイナリ項目の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.IsReserved(System.String)">
            <summary>
            文字列が予約語として宣言されているかを判定します。
            </summary>
            <param name="value">文字列</param>
            <returns>予約語の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.GetSystemType(System.String)">
            <summary>
            型文字列が示す型の.NET Framework上で扱われる型に変換します。
            </summary>
            <param name="databaseType">型文字列</param>
            <returns>型文字列が表す.NET Framework上の型</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeUtil.GetDefaultValue(System.String)">
            <summary>
            型文字列が示す型のデフォルト値を取得します。
            </summary>
            <param name="databaseType">型文字列</param>
            <returns>デフォルト値</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.DatabaseBulkInsertPriorityFlag">
            <summary>
            一括挿入時の優先するためのフラグを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.DatabaseBulkInsertPriorityFlag.Speed">
            <summary>
            速度優先
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.DatabaseBulkInsertPriorityFlag.Trigger">
            <summary>
            トリガー優先
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.DatabaseBulkInsertPriorityFlag.Constraint">
            <summary>
            制約優先
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.DatabaseBulkInsertPriorityFlag.Default">
            <summary>
            標準
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseProcedure">
            <summary>
            ストアドプロシージャを実行するためのインターフェースです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand">
            <summary>
            データベースへクエリを実行するコマンドを表すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand.Exec(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            設定されているコマンドを実行します。
            </summary>
            <param name="section">データべース接続セクション</param>
            <returns>正常に処理された場合は true。それ以外の場合は false</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand.DetachResult">
            <summary>
            結果セットとコマンドの紐づけを解除します。
            </summary>
            <returns>直前に実行された結果オブジェクト</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand.ResultSet">
            <summary>
            コマンドを実行した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> を取得します。
            </summary>
            <value>コマンドを実行した結果オブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseCommand.ExecParam">
            <summary>
            コマンドを実行するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseExecuteParameter"/> を取得、設定します。
            </summary>
            <value>コマンド実行パラメータ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseProcedure.AllErrorInfoMessage">
            <summary>
            全てのエラーメッセージを取得します。
            </summary>
            <value>全てのエラーメッセージ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseProcedure.ErrorClass">
            <summary>
            クライアントエラー重大度を取得します。
            </summary>
            <value>クライアントエラー重大度</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseProcedure.ErrorMessage">
            <summary>
            エラーメッセージを取得します。
            </summary>
            <value>エラーメッセージ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseProcedure.ErrorState">
            <summary>
            サーバーエラー重大度を取得します。
            </summary>
            <value>サーバーエラー重大度</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseProcedure.IsNotifyUserError">
            <summary>
            ユーザー操作エラーを通知するかどうかを取得、設定します。
            </summary>
            <value>例外を上位へthrowする場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseProcedure.ProcedureName">
            <summary>
            ストアドプロシージャ名を取得します。
            </summary>
            <value>ストアドプロシージャ名</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting">
            <summary>
            データベースのロックと存在確認を行うクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="entityName">Entity名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting.#ctor(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="entityName">Entity名</param>
            <param name="where">条件</param>
            <param name="values">パラメータ値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="entity">Entity</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="entity">Entity</param>
            <param name="where">条件</param>
            <param name="values">パラメータ値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting.IsValidData(Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase,System.Object,System.Int32)">
            <summary>
            データが有効かを判定します。
            </summary>
            <param name="module">処理対象の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase"/></param>
            <param name="item">対象項目</param>
            <param name="index">インデックス</param>
            <returns>データが有効な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting.GetRows(System.Object,System.Int32)">
            <summary>
            ロック対象の有効行を取得します。
            </summary>
            <param name="item">対象の項目</param>
            <param name="index">インデックス</param>
            <returns>ロック対象の有効行一覧</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting.Entity">
            <summary>
            Entityを取得、設定します。
            </summary>
            <value>Entity</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting.EntityName">
            <summary>
            Entity名を取得、設定します。
            </summary>
            <value>Entity名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting.Values">
            <summary>
            ロックを行うPrimaryKeyの値を取得、設定します。
            </summary>
            <value>PrimaryKeyに設定される値一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting.Where">
            <summary>
            ロックを行う条件を取得、設定します。
            </summary>
            <value>ロックを行う条件</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting.ParamValues">
            <summary>
            ロックを行うためのパラメータを取得、設定します。
            </summary>
            <value>ロックを行うためのパラメータ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting.ValidDataEvaluator">
            <summary>
            データが有効かどうか判定するファンクションを取得、設定します。
            </summary>
            <value>データが有効かどうか判定するファンクション</value>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase"/>に対して操作を行う場合に、そのデータが有効なデータかどうかを判定処理を設定してください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting.IsAndEvaluation">
            <summary>
            ファンクションをすべて評価するかを取得、設定します。
            </summary>
            <value>ファンクションをすべて評価する場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting.GetRowsEvaluator">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase"/>から行を取得するためのファンクションを取得、設定します。
            </summary>
            <value>行データを取得するためのファンクション</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting.IsGetRowsMode">
            <summary>
            行取得を行うかを取得します。
            </summary>
            <value>行取得を行う場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings">
            <summary>
            複数のロックと存在確認を行うためのクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="detailName">明細プロパティ名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddLock(System.String)">
            <summary>
            ロック対象に追加します。
            </summary>
            <param name="entityName">ロック対象のEntity名</param>
            <returns>追加したロックに利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddLock(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue[])">
            <summary>
            ロック対象に追加します。
            </summary>
            <param name="entityName">ロック対象のEntity名</param>
            <param name="values">条件で使用するパラメータ</param>
            <returns>追加したロックに利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddLock(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue[])">
            <summary>
            ロック対象に追加します。
            </summary>
            <param name="entityName">ロック対象のEntity名</param>
            <param name="where">存在確認に利用する条件</param>
            <param name="values">条件で使用するパラメータ</param>
            <returns>追加したロックに利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddLock(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            ロック対象に追加します。
            </summary>
            <param name="entity">ロック対象のEntity</param>
            <returns>追加したロックに利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddLock(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue[])">
            <summary>
            ロック対象に追加します。
            </summary>
            <param name="entity">ロック対象のEntity</param>
            <param name="values">条件で使用するパラメータ</param>
            <returns>追加したロックに利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddLock(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue[])">
            <summary>
            ロック対象に追加します。
            </summary>
            <param name="entity">ロック対象のEntity</param>
            <param name="where">存在確認に利用する条件</param>
            <param name="values">条件で使用するパラメータ</param>
            <returns>追加したロックに利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.RemoveLock(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <summary>
            ロック対象を削除します。
            </summary>
            <param name="setting">ロックに利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddExistenceCheck(System.String)">
            <summary>
            存在確認対象に追加します。
            </summary>
            <param name="entityName">存在確認対象のEntity名</param>
            <returns>追加した存在確認対象に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddExistenceCheck(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue[])">
            <summary>
            存在確認対象に追加します。
            </summary>
            <param name="entityName">ロック対象のEntity名</param>
            <param name="values">条件で使用するパラメータ</param>
            <returns>追加した存在確認対象に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddExistenceCheck(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue[])">
            <summary>
            存在確認対象に追加します。
            </summary>
            <param name="entityName">存在確認対象のEntity名</param>
            <param name="where">存在確認に利用する条件</param>
            <param name="values">条件で使用するパラメータ</param>
            <returns>追加した存在確認対象に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddExistenceCheck(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            存在確認対象に追加します。
            </summary>
            <param name="entity">存在確認対象のEntity</param>
            <returns>追加した存在確認対象に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddExistenceCheck(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue[])">
            <summary>
            存在確認対象に追加します。
            </summary>
            <param name="entity">存在確認対象のEntity</param>
            <param name="values">条件で使用するパラメータ</param>
            <returns>追加した存在確認対象に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddExistenceCheck(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue[])">
            <summary>
            存在確認対象に追加します。
            </summary>
            <param name="entity">対象のEntity</param>
            <param name="where">存在確認に利用する条件</param>
            <param name="values">条件で使用するパラメータ</param>
            <returns>追加した存在確認対象に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.RemoveExistenceCheck(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <summary>
            存在確認対象を削除します。
            </summary>
            <param name="setting">存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddLockAndExistenceCheck(System.String)">
            <summary>
            ロックと存在確認対象の両方に追加します。
            </summary>
            <param name="entityName">対象のEntity名</param>
            <returns>追加したロックと存在確認対象に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddLockAndExistenceCheck(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue[])">
            <summary>
            ロックと存在確認対象の両方に追加します。
            </summary>
            <param name="entityName">対象のEntity名</param>
            <param name="values">条件で使用するパラメータ</param>
            <returns>追加したロックと存在確認対象に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddLockAndExistenceCheck(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue[])">
            <summary>
            ロックと存在確認対象の両方に追加します。
            </summary>
            <param name="entityName">対象のEntity名</param>
            <param name="where">ロックと存在確認に利用する条件</param>
            <param name="values">条件で使用するパラメータ</param>
            <returns>追加したロックと存在確認対象に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddLockAndExistenceCheck(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            ロックと存在確認対象の両方に追加します。
            </summary>
            <param name="entity">対象のEntity</param>
            <returns>追加したロックと存在確認対象に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddLockAndExistenceCheck(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue[])">
            <summary>
            ロックと存在確認対象の両方に追加します。
            </summary>
            <param name="entity">対象のEntity</param>
            <param name="values">条件で使用するパラメータ</param>
            <returns>追加したロックと存在確認対象に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
            <remarks></remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.AddLockAndExistenceCheck(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue[])">
            <summary>
            ロックと存在確認対象の両方に追加します。
            </summary>
            <param name="entity">対象のEntity</param>
            <param name="where">ロックと存在確認に利用する条件</param>
            <param name="values">条件で使用するパラメータ</param>
            <returns>追加したロックと存在確認対象に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.DetailName">
            <summary>
            明細のプロパティ名を取得します。
            </summary>
            <value>明細のプロパティ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.LockSettings">
            <summary>
            ロック対象を取得します。
            </summary>
            <value>ロック対象</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings.ExistenceCheckSettings">
            <summary>
            存在確認対象を取得します。
            </summary>
            <value>存在確認対象</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck">
            <summary>
            ロックと存在確認を管理するクラス
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase,Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="module">処理対象のModule</param>
            <param name="settings">ロックと存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.ExecLock(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32)">
            <summary>
            設定に従ってロックを行います。
            </summary>
            <param name="section">セクション</param>
            <param name="targetRowIndex">対象の行インデックス</param>
            <returns>ロックに成功した場合は true。それ以外の場合は false。</returns>
            <remarks>
            全行対象にするためには対象の行インデックスを負数を指定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.ExecExistenceCheck(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32)">
            <summary>
            設定に従って存在確認を行います。
            </summary>
            <param name="section">セクション</param>
            <param name="targetRowIndex">対象の行インデックス</param>
            <returns>データベースにデータが存在する場合は true。それ以外の場合は false。</returns>
            <remarks>
            全行対象にするためには対象の行インデックスを負数を指定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.BuildLockInfos">
            <summary>
            ロックに必要な情報を作成します。
            </summary>
            <returns>ロックするための情報が作成できた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.BuildExistenceCheck">
            <summary>
            存在確認に必要な情報を作成します。
            </summary>
            <returns>存在確認するための情報が作成できた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.GetValidEntityRows(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <summary>
            対象となる有効なEntityRowを取得します。
            </summary>
            <param name="setting">ロックと存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></param>
            <returns>対象となる有効なEntityRow</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.MakeWhereInfos(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <summary>
            条件を作成します。
            </summary>
            <param name="setting">ロックと存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></param>
            <returns>条件</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.MakeWhereInfo(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,System.Int32,System.Boolean)">
            <summary>
            対象のインデックスに対応する条件を作成します。
            </summary>
            <param name="setting">ロックと存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></param>
            <param name="baseWheres">ベースとなる条件</param>
            <param name="index">インデックス</param>
            <param name="addSequenceNo">シーケンス番号付与フラグ</param>
            <returns>対象のインデックスに対応する条件</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.GetMakeInfoCount(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <summary>
            対象の行数を取得します。
            </summary>
            <param name="setting">ロックと存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></param>
            <returns>対象行数</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.GetParameterValues(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <summary>
            パラメータを取得し、<paramref name="setting"/> に設定します。
            </summary>
            <param name="setting">ロックと存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.MakeBaseWhere(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <summary>
            ベースとなる条件を作成します。
            </summary>
            <param name="setting">ロックと存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></param>
            <returns>ベースとなる条件</returns>
            <remarks>
            設定されているEntityもしくはDetailの入力行からベースとなる条件を作成します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.MakeEntityWheres(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <summary>
            設定されたEntityから検索を行う条件を作成します。
            </summary>
            <param name="setting">ロックと存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></param>
            <returns>Entityを検索するための条件</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.MakeInputWheres(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <summary>
            設定されているEntityを検索するための条件を作成します。
            </summary>
            <param name="setting">ロックと存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></param>
            <returns>Entityを検索するための条件</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.IsINClauseForEntityPrimaryKey(System.Int32,System.Int32,System.Int32)">
            <summary>
            IN句を利用して実行するかを主キーから判定します。
            </summary>
            <param name="paramCount">パラメータ数</param>
            <param name="rowCount">行数</param>
            <param name="whereColumnCount">条件列数</param>
            <returns>IN句を利用して実行する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.IsINClauseForEntityParameter(System.Int32,System.Int32)">
            <summary>
            IN句を利用して実行するかをパラメータ数から判定します。
            </summary>
            <param name="paramCount">パラメータ数</param>
            <param name="rowCount">行数</param>
            <returns>IN句を利用して実行する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.IsINClauseForInput(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <summary>
            IN句を利用して実行するかを入力行について判定します。
            </summary>
            <param name="setting">ロックと存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></param>
            <returns>IN句を利用して実行する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.IsINClauseForInput(System.Int32,System.Int32)">
            <summary>
            IN句を利用して実行するかを入力行について判定します。
            </summary>
            <param name="paramCount">パラメータ数</param>
            <param name="rowCount">行数</param>
            <returns>IN句を利用して実行する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.ReplaceSequenceNo(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery,System.Int32)">
            <summary>
            条件のシーケンス番号を置換します。
            </summary>
            <param name="where">条件</param>
            <param name="sequenceNo">シーケンス番号</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.Name">
            <summary>
            このインスタンスの名称を取得、設定します。
            </summary>
            <value>このインスタンスの名称</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.Module">
            <summary>
            Moduleを取得します。
            </summary>
            <value>Module</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.Settings">
            <summary>
            ロックと存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings"/>を取得します。
            </summary>
            <value>ロックと存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.Entities">
            <summary>
            対象のEntityを取得します。
            </summary>
            <value>対象のEntity</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.IsINClause">
            <summary>
            IN句を利用して条件を作成するかを取得、設定します。
            </summary>
            <value>IN句を利用して条件を作成する場合は true。それ以外の場合は false。</value>
            <remarks>実行時に設定されます。</remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.TargetRowIndex">
            <summary>
            対象の行インデックスを取得、設定します。
            </summary>
            <value>対象の行インデックス</value>
            <remarks>
            実行時に設定されます。
            全行対象にするためには対象の行インデックスを負数を指定します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheck.CurrentValidEntityRows">
            <summary>
            有効なEntity行を取得、設定します。
            </summary>
            <value>有効なEntity行</value>
            <remarks>実行時に設定されます。</remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail">
            <summary>
            明細データ用のデータベースのロックと存在確認を行うクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase,Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="module">処理対象Module</param>
            <param name="settings">ロックと存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSettings"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail.BuildLockInfos">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail.BuildExistenceCheck">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail.MakeWhereInfos(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail.GetValidEntityRows(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <summary>
            検索対象となる有効なEntityRowを取得します。
            </summary>
            <param name="setting">ロックと存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></param>
            <returns>有効なEntityRow</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail.GetValidDetails(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <summary>
            検索対象となる有効なDetailを取得します。
            </summary>
            <param name="setting">ロックと存在確認に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting"/></param>
            <returns>有効なDetail</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail.MakeWhereInfo(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,System.Int32,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail.GetMakeInfoCount(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail.GetParameterValues(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail.MakeInputWheres(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail.IsINClauseForInput(Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckSetting)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail.AllDetails">
            <summary>
            全Detailを取得、設定します。
            </summary>
            <value>全Detail</value>
            <remarks>実行時に設定されます。</remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail.InputtedDetails">
            <summary>
            入力済みDetailを取得、設定します。
            </summary>
            <value>入力済みDetail</value>
            <remarks>実行時に設定されます。</remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.LockAndExistenceCheckDetail.CurrentValidDetails">
            <summary>
            有効なDetailを取得、設定します。
            </summary>
            <value>有効なDetail</value>
            <remarks>実行時に設定されます。</remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.ExistenceCheckException">
            <summary>
            データベースに特定のレコードが存在しなかった場合にスローされる例外です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.ExistenceCheckException._values">
            <summary>
            検索に利用した列名と値
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.ExistenceCheckException.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.Object}})">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.ExistenceCheckException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="whereInfo">検索に利用した条件</param>
            <param name="values">検索に利用した列名と値</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.ExistenceCheckException.WhereInfo">
            <summary>
            検索に利用した条件を取得します。
            </summary>
            <value>検索に利用した条件</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.ExistenceCheckException.Entity">
            <summary>
            検索に利用したEntityを取得します。
            </summary>
            <value>検索に利用したEntity</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.ExistenceCheckException.Values">
            <summary>
            検索に利用した列名と値を取得します。
            </summary>
            <value>検索に利用した列名と値</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo">
            <summary>
            EntityのWHERE句を管理するクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Object[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="entity">Entity</param>
            <param name="values">検索条件の値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo.AddWhere(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery)">
            <summary>
            検索条件を追加します。
            </summary>
            <param name="where"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/></param>
            <returns><paramref name="where"/> を返します。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo.AddWhereFormat(System.String,System.Object[])">
            <summary>
            検索条件を追加します。
            </summary>
            <param name="whereFormat">条件を指定する書式</param>
            <param name="formatArgs"><paramref name="whereFormat"/> を構成する引数</param>
            <returns>追加された<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo.AddWhereFormat(System.String,System.String,System.Object[])">
            <summary>
            検索条件を追加します。
            </summary>
            <param name="name">テーブル名.列名</param>
            <param name="whereFormat">条件を指定する書式</param>
            <param name="formatArgs"><paramref name="whereFormat"/> を構成する引数</param>
            <returns>追加された<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo.AddWhereFormat(System.String,System.String,System.String,System.Object[])">
            <summary>
            検索条件を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="whereFormat">条件を指定する書式</param>
            <param name="formatArgs"><paramref name="whereFormat"/> を構成する引数</param>
            <returns>追加された<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo.AddWhereFormat(System.String,System.String,System.String,System.String,System.String,System.Object[])">
            <summary>
            検索条件を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="value1">検索条件の値1</param>
            <param name="value2">検索条件の値2</param>
            <param name="whereFormat">条件を指定する書式</param>
            <param name="formatArgs"><paramref name="whereFormat"/> を構成する引数</param>
            <returns>追加された<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo.AddDbParameter(Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterValue)">
            <summary>
            検索条件のパラメータを追加します。
            </summary>
            <param name="value">パラメータ</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo.Entity">
            <summary>
            Entityを取得、設定します。
            </summary>
            <value>Entity</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo.Values">
            <summary>
            検索条件の値を取得、設定します。
            </summary>
            <value>検索条件の値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo.Wheres">
            <summary>
            検索条件を取得、設定します。
            </summary>
            <value>検索条件</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo.DbParameters">
            <summary>
            検索条件のパラメータを取得、設定します。
            </summary>
            <value>検索条件のパラメータ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo.IsINClause">
            <summary>
            IN句を利用して条件を構成するかを取得、設定します。
            </summary>
            <value>IN句を利用して条件を構成する場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.DropTableQueryBuilder">
            <summary>
            データベースからテーブルを削除するためのクエリを作成するためのクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder">
            <summary>
            テーブル操作を行うクエリを作成するための基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IQueryBuilder">
            <summary>
            テーブル操作を行うクエリを作成するためのインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IQueryBuilder.Build(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            テーブル操作を行うクエリを作成します。
            </summary>
            <param name="entity">Entity</param>
            <returns>テーブル操作を行うクエリ</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IQueryBuilder.Name">
            <summary>
            名称を取得、設定します。
            </summary>
            <value>名称</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IQueryBuilder.Query">
            <summary>
            クエリを取得します。
            </summary>
            <value>クエリ</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder.Build(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            テーブル操作を行うクエリを作成します。
            </summary>
            <param name="entity">Entity</param>
            <returns>テーブル操作を行うクエリ</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder.Name">
            <summary>
            名称を取得、設定します。
            </summary>
            <value>名称</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder.Query">
            <summary>
            クエリを取得します。
            </summary>
            <value>クエリ</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.DropTableQueryBuilder.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.DropTableQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.DropTableQueryBuilder.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.DropTableQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">クエリ名称</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.DropTableQueryBuilder.Build(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            データベースからテーブルを削除するためのクエリを作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <returns>テーブル削除クエリ</returns>
            <remarks>
            このメソッドを呼び出した場合 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder.Query"/> を作成したクエリで置き換えます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.ESCAPE_CHAR">
            <summary>
            エスケープ文字を表す定数です。
            </summary>
            <remarks>
            LIKEで曖昧検索を行う場合に<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.ESCAPE_REPLACE_TEXT"/> を指定の文字列でエスケープするために利用します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.ESCAPE_TEXT">
            <summary>
            エスケープ対象の文字を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.ESCAPE_REPLACE_TEXT">
            <summary>
            エスケープ置換が必要な文字列を表す定数です。
            </summary>
            <remarks>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.ESCAPE_TEXT"/> に一致する文字列が存在した場合に、
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.ESCAPE_REPLACE_TEXT"/> に一致する文字列を<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.ESCAPE_CHAR"/> でエスケープします。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddParamQueryInternal(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Object,System.Boolean,System.Boolean)">
            <summary>
            条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="paramName">パラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="sign">条件の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign"/></param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <param name="escape">エスケープが必要な場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <paramref name="sign"/> に<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsNone"/> が指定された場合にスローされます。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddBetweenParamQueryInternal(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Object,System.Object,System.Boolean,System.Boolean)">
            <summary>
            範囲指定の条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value1">条件の開始値</param>
            <param name="value2">条件の終了値</param>
            <param name="value3">空白のみ抽出を行う場合は true。それ以外の場合は false。</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddBetweenDateTimeParamQueryInternal(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            日付項目の範囲指定の条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value1">条件の開始値</param>
            <param name="value2">条件の終了値</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.EscapeLikeValue(System.String@)">
            <summary>
            条件の値をエスケープします。
            </summary>
            <param name="value">条件の値</param>
            <returns><paramref name="value"/>がエスケープされた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddLikeNotLikeParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            部分一致、不一致条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="paramName">パラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value">条件の値</param>
            <param name="format">条件を置換するためのフォーマット</param>
            <param name="like">部分一致を利用する場合は true。それ以外の場合は false。</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
            <remarks>
            <paramref name="like"/> がtrueの場合は部分一致(LIKE)検索を行います。
            <paramref name="like"/> がfalseの場合は部分不一致(NOT LIKE)検索を行います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddMultipleLikeNotLikeParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            複数条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="format">条件を置換するためのフォーマット</param>
            <param name="like">部分一致を利用する場合は true。それ以外の場合は false。</param>
            <param name="and">全一致の場合は true。それ以外の場合は false。</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>使用されたDBパラメータ</returns>
            <remarks>
            <paramref name="like"/> がtrueの場合は部分一致(LIKE)検索を行います。
            <paramref name="like"/> がfalseの場合は部分不一致(NOT LIKE)検索を行います。
            <paramref name="and"/> がtrueの場合は「AND」で条件が結合されます。
            <paramref name="and"/> がfalseの場合は「OR」で条件が結合されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddINClauseParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            いずれかの値に一致する条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="values">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件に含まれるパラメータを<paramref name="list"/> へ追加します。
            <paramref name="values"/> をスペースで分解し、IN句を用いていずれかに一致する条件を作成します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddINClauseParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            いずれかの値に一致する条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="values">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
            <remarks>
            <paramref name="values"/> をスペースで分解し、IN句を用いていずれかに一致する条件を作成します。
            </remarks>
            <!--
            EntityBase.GetSelectRowsByINClause を参考に実装しています。
            -->
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddExistOrNotExists(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery)">
            <summary>
            サブクエリの存在確認条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="not">存在しない場合を検索する場合は true。それ以外の場合は false。</param>
            <param name="query">SELECTステートメント</param>
            <remarks>
            <paramref name="not"/> がtrueの場合、存在しない場合(NOT EXISTS)で条件を作成します。
            <paramref name="not"/> がfalseの場合、存在する場合(EXISTS)で条件を作成します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddEqualsParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Object)">
            <summary>
            条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="paramName">パラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value">条件の値</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddEqualsParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.Object)">
            <summary>
            条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="paramName">パラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value">条件の値</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Object)">
            <summary>
            条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="paramName">パラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="sign">条件の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign"/></param>
            <param name="value">条件の値</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
            <remarks>
            <paramref name="sign"/> には<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsNone"/>、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsLike"/> を指定できません。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <paramref name="sign"/> に<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsNone"/>、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsLike"/> が指定された場合にスローされます。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Object)">
            <summary>
            条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="paramName">パラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="sign">条件の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign"/></param>
            <param name="value">条件の値</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
            <remarks>
            <paramref name="sign"/> には<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsNone"/>、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsLike"/> を指定できません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddContainsParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            含む条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="paramName">パラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddContainsParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Boolean)">
            <summary>
            含む条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="paramName">パラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddNotContainsParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            含まない条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="paramName">パラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddNotContainsParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Boolean)">
            <summary>
            含まない条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="paramName">パラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddStartsWithParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            前方一致条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="paramName">パラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddStartsWithParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Boolean)">
            <summary>
            前方一致条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="paramName">パラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddEndsWithParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            後方一致条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="paramName">パラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddEndsWithParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Boolean)">
            <summary>
            後方一致条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="paramName">パラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddContainsAllParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            すべての値を含む条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddContainsAllParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Boolean)">
            <summary>
            すべての値を含む条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddContainsAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値を含む条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddContainsAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値を含む条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddNotContainsAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれの値も含まない条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddNotContainsAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれの値も含まない条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddStartsWithAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値で始まる条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddStartsWithAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値で始まる条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddEndsWithAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値で終わる条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddEndsWithAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値で終わる条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値に一致する条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値に一致する条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddBetweenParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Object,System.Object,System.Boolean)">
            <summary>
            範囲指定の条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value1">条件の開始値</param>
            <param name="value2">条件の終了値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddBetweenParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.Object,System.Object,System.Boolean)">
            <summary>
            範囲指定の条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value1">条件の開始値</param>
            <param name="value2">条件の終了値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddBetweenDateTimeParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            日付項目の範囲指定の条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value1">条件の開始年月日</param>
            <param name="value2">条件の終了年月日</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddBetweenDateTimeParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.String)">
            <summary>
            日付項目の範囲指定の条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value1">条件の開始年月日</param>
            <param name="value2">条件の終了年月日</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddBetweenDateTimeParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            日付項目の範囲指定の条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value1">条件の開始年月日</param>
            <param name="value2">条件の終了年月日</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddBetweenDateTimeParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            日付項目の範囲指定の条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を返します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value1">条件の開始年月日</param>
            <param name="value2">条件の終了年月日</param>
            <returns>条件で利用する<see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddEqualsParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.Object)">
            <summary>
            条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="paramName">パラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value">条件の値</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddEqualsParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.Object)">
            <summary>
            条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="paramName">パラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value">条件の値</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Object)">
            <summary>
            条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="paramName">パラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="sign">条件の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign"/></param>
            <param name="value">条件の値</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            <paramref name="sign"/> には<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsNone"/>、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsLike"/> を指定できません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Object)">
            <summary>
            条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="paramName">パラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="sign">条件の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign"/></param>
            <param name="value">条件の値</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            <paramref name="sign"/> には<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsNone"/>、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsLike"/> を指定できません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddContainsParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            含む条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="paramName">パラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddContainsParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.Boolean)">
            <summary>
            含む条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="paramName">パラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddNotContainsParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            含まない条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="paramName">パラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddNotContainsParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.Boolean)">
            <summary>
            含まない条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="paramName">パラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddStartsWithParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            前方一致条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="paramName">パラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddStartsWithParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.Boolean)">
            <summary>
            前方一致条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="paramName">パラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddEndsWithParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            後方一致条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="paramName">パラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddEndsWithParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.Boolean)">
            <summary>
            後方一致条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="paramName">パラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value">条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddContainsAllParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            すべての値を含む条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddContainsAllParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.Boolean)">
            <summary>
            すべての値を含む条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddContainsAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値を含む条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddContainsAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値を含む条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddNotContainsAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれの値も含まない条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddNotContainsAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれの値も含まない条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddStartsWithAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値で始まる条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddStartsWithAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値で始まる条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddEndsWithAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値で終わる条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddEndsWithAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値で終わる条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値に一致する条件を追加します
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddAnyParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.Boolean)">
            <summary>
            いずれかの値に一致する条件を追加します
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="multiValue">スペース区切りされた条件の値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddBetweenParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.Object,System.Object,System.Boolean)">
            <summary>
            範囲指定の条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value1">条件の開始値</param>
            <param name="value2">条件の終了値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddBetweenParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.Object,System.Object,System.Boolean)">
            <summary>
            範囲指定の条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value1">条件の開始値</param>
            <param name="value2">条件の終了値</param>
            <param name="fuzzy">あいまい検索を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddBetweenDateTimeParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            日付項目の範囲指定の条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value1">条件の開始年月日</param>
            <param name="value2">条件の終了年月日</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddBetweenDateTimeParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.String)">
            <summary>
            日付項目の範囲指定の条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value1">条件の開始年月日</param>
            <param name="value2">条件の終了年月日</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddBetweenDateTimeParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            日付項目の範囲指定の条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="table">ブランクの場合は無効。それ以外の場合はテーブル名。</param>
            <param name="column">列名</param>
            <param name="value1">条件の開始年月日</param>
            <param name="value2">条件の終了年月日</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddBetweenDateTimeParamQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            日付項目の範囲指定の条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="list">パラメータリスト</param>
            <param name="baseParamName">ベースとなるパラメータ名</param>
            <param name="expression">検索条件を表す式</param>
            <param name="value1">条件の開始年月日</param>
            <param name="value2">条件の終了年月日</param>
            <remarks>
            <paramref name="wheres"/> に条件を追加し、条件で利用する<see cref="T:System.Data.Common.DbParameter"/> を<paramref name="list"/> に追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddExists(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery)">
            <summary>
            サブクエリの存在確認条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="query">SELECTステートメント</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Extensions.WhereQueryCollectionExtensions.AddNotExists(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery)">
            <summary>
            サブクエリの非存在確認条件を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <param name="query">SELECTステートメント</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryUtil">
            <summary>
            クエリの文字列を操作するためのユーティリティクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryUtil.PERIOD">
            <summary>
            ピリオド文字を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryUtil.AppendBrackets(System.String,System.Boolean)">
            <summary>
            名称の前後に角括弧「[]」を追加します。
            </summary>
            <param name="name">名称</param>
            <param name="force">角括弧をエスケープして強制的に角括弧を付ける場合は true。それ以外の場合は false。</param>
            <returns>角括弧を追加した名称</returns>
            <remarks>
            <paramref name="force"/> がtrueの場合、名称の前後に角括弧を追加します。<br/>
            falseの場合、すでに角括弧「[]」で囲まれている場合、括弧「()」が付与されている(サブクエリ)場合、角括弧を追加しません。
            また、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryUtil.PERIOD"/>が含まれている場合、テーブル名と列名と判断し、分解して、テーブル名、列名それぞれに角括弧を追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryUtil.IsOthreTableValue(System.String)">
            <summary>
            テーブル名.列名の形式かを判断します。
            </summary>
            <param name="name">判断を行う文字列</param>
            <returns>「テーブル名.列名」の形式で表される文字列の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryUtil.IsExistsPeriod(System.String)">
            <summary>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryUtil.PERIOD"/>が含まれるかを判断します。
            </summary>
            <param name="name">判断を行う文字列</param>
            <returns><see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryUtil.PERIOD"/>が含まれる場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryUtil.IsAppendBrackets(System.String)">
            <summary>
            角括弧「[]」で囲まれているかを判断します。
            </summary>
            <param name="name">判断を行う文字列</param>
            <returns>角括弧「[]」で囲まれている場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryUtil.NoBrackerts(System.String)">
            <summary>
            角括弧「[]」で囲まれている内部の文字列を取得します。
            </summary>
            <param name="name">角括弧「[]」と取り除く文字列</param>
            <returns>角括弧「[]」を取り除いた文字列</returns>
            <remarks>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryUtil.PERIOD"/>が含まれている場合、テーブル名と列名と判断し、分解して、テーブル名、列名それぞれの角括弧「[]」を取り除きます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryUtil.IsFixedValue(System.String)">
            <summary>
            数値やDBで扱われる文字列などの固定文字列かを判断します。
            </summary>
            <param name="name">固定文字列か判断する文字列</param>
            <returns>固定文字列の場合は true。それ以外の場合は false。</returns>
            <remarks>
            判定できるものは以下の通りです。<br/>
            -(マイナス).(ドット)0～9で表される場合、数値項目<br/>
            '(シングルコーテーション)で始まる、文字列項目<br/>
            @で始まる、パラメタ変数<br/>
            *、すべての列を表す特殊文字列<br/>
            NULL、NULLを表す特殊文字列<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryUtil.IsSubQuery(System.String)">
            <summary>
            サブクエリかを判断します。
            </summary>
            <param name="query">サブクエリか判断する文字列</param>
            <returns>サブクエリの場合は true。それ以外の場合は false。</returns>
            <remarks>
            括弧「()」、改行、タブ、半角スペース、全角スペースのいずれかが含まれる場合はサブクエリと判断します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TruncateTableQueryBuilder">
            <summary>
            テーブルの全レコードをクリアするためのクエリを作成するためのクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TruncateTableQueryBuilder.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TruncateTableQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TruncateTableQueryBuilder.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TruncateTableQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">クエリの名称</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TruncateTableQueryBuilder.Build(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            テーブルの全レコードをクリアするためのクエリを作成します。
            </summary>
            <param name="entity">Entity</param>
            <returns>テーブルの全レコードをクリアするクエリ</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateIndexQueryBuilder">
            <summary>
            テーブルのインデックス作成クエリを作成するためのクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateIndexQueryBuilder.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateIndexQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateIndexQueryBuilder.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateIndexQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">クエリの名称</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateIndexQueryBuilder.Build(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            このメソッドは利用できません。
            </summary>
            <param name="entity">エンティティ</param>
            <returns>ブランク</returns>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IQueryBuilder"/> の実装のためにあります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateIndexQueryBuilder.Build(System.String,System.String,System.String[],System.Boolean,System.Boolean)">
            <summary>
            インデックス作成クエリを作成し、返します。
            </summary>
            <param name="tableName">テーブル名</param>
            <param name="indexName">インデックス名</param>
            <param name="columns">インデックスに含まれる列名</param>
            <param name="unique">インデックスを一意にする場合は true。それ以外の場合は false。</param>
            <param name="clustered">インデックスをクラスタ化する場合は true。それ以外の場合は false。</param>
            <returns>インデックス作成クエリ</returns>
            <remarks>
            このメソッドを呼び出した場合 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder.Query"/> を作成したクエリで置き換えます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateIndexQueryBuilder.GetExistenceCheckQuery(System.String,System.String)">
            <summary>
            インデックスの存在確認チェッククエリを作成します。
            </summary>
            <param name="tableName">テーブル名</param>
            <param name="indexName">インデックス名</param>
            <returns>インデックス存在確認チェック用クエリ</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.GenericProcedureCommand">
            <summary>
            ストアドプロシージャを実行するための汎用クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand">
            <summary>
            SQL Server のストアドプロシージャを表す基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand">
            <summary>
            データベースで実行するコマンドを表すクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand._resultSet">
            <summary>
            コマンドを実行した結果オブジェクトです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseExecuteParameter)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="param">実行パラメータ</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.Exec(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.DetachResult">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.Exec(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Data.Common.DbCommand,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseRetry)">
            <summary>
            コマンドを実行します。
            </summary>
            <param name="section">データべース接続セクション</param>
            <param name="cmd">データベースコマンド</param>
            <param name="retry">リトライオブジェクト</param>
            <returns>正常に処理された場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.Exec(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Data.Common.DbCommand,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase[],System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter}[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            コマンドを実行します。
            </summary>
            <param name="section">データべース接続セクション</param>
            <param name="cmd">データベースコマンド</param>
            <param name="rows">実行する行オブジェクト</param>
            <param name="parameters">実行パラメータ</param>
            <param name="defaultValues">デフォルト値を表す辞書オブジェクト</param>
            <returns>影響を受けた行数</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.GetSelectedCommand(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            SELECTコマンドを実行し、実行した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand"/> を取得します。
            </summary>
            <param name="section">データべース接続セクション</param>
            <param name="query">SQLクエリ</param>
            <param name="dbParams">実行パラメータ</param>
            <param name="lockOp">ロック操作を表す <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation"/></param>
            <returns>実行した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand"/> </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.GetSelectedCommand(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            SELECTコマンドを実行し、実行した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand"/> を取得します。
            </summary>
            <param name="section">データべース接続セクション</param>
            <param name="name">コマンドの名前</param>
            <param name="query">SQLクエリ</param>
            <param name="dbParams">実行パラメータ</param>
            <param name="lockOp">ロック操作を表す <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation"/></param>
            <returns>実行した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand"/> </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.ExecuteCommand(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.String)">
            <summary>
            コマンドを実行し、実行した影響を受けたレコード数を取得します。
            </summary>
            <param name="section">データべース接続セクション</param>
            <param name="query">SQLクエリ</param>
            <param name="dbParams">実行パラメータ</param>
            <param name="queryName">コマンドの名前</param>
            <returns>影響を受けたレコード数</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.ExecuteCommand(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String)">
            <summary>
            コマンドを実行し、実行した影響を受けたレコード数を取得します。
            </summary>
            <param name="section">データべース接続セクション</param>
            <param name="query">SQLクエリ</param>
            <param name="queryName">コマンドの名前</param>
            <returns>影響を受けたレコード数</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            SELECTコマンドを実行し、実行した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> を取得します。
            </summary>
            <param name="section">データべース接続セクション</param>
            <param name="query">SQLクエリ</param>
            <param name="dbParams">実行パラメータ</param>
            <param name="lockOp">ロック操作を表す <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation"/></param>
            <returns>実行した結果を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> </returns>
            <remarks>
            戻り値の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> は呼び元でDisposeする必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            SELECTコマンドを実行し、実行した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> を取得します。
            </summary>
            <param name="section">データべース接続セクション</param>
            <param name="name">クエリ名</param>
            <param name="query">SQLクエリ</param>
            <param name="dbParams">実行パラメータ</param>
            <param name="lockOp">ロック操作を表す <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation"/></param>
            <returns>実行した結果を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> </returns>
            <remarks>
            戻り値の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> は呼び元でDisposeする必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.GetCurrentDate(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            データベースの現在日付を取得します。
            </summary>
            <param name="section">データべース接続セクション</param>
            <returns>データベースの現在日付</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.Dispose">
            <summary>
            リソースを破棄します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.ResultSet">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand.ExecParam">
            <inheritdoc/>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand.DEFAULT_UPDATE_ID_PARAMETER_NAME">
            <summary>
            更新者を表すパラメータ名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand.DEFAULT_UPDATE_DATE_PARAMETER_NAME">
            <summary>
            更新日付を表すパラメータ名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand.Exec(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand.SetArgument(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            ストアドプロシージャの引数をクリアします。
            </summary>
            <param name="section">データベース接続セクション</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand.ProcedureName">
            <summary>
            ストアドプロシージャ名を取得します。
            </summary>
            <value>ストアドプロシージャ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand.IsNotifyUserError">
            <summary>
            ユーザー操作エラーを通知するかどうかを取得、設定します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.UserDatabaseException"/>が発生した場合にスローする場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand.UserException">
            <summary>
            ユーザー操作エラーを表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.UserDatabaseException"/> を取得、設定します。
            </summary>
            <value>ユーザー操作エラーを表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.UserDatabaseException"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand.ErrorMessage">
            <summary>
            エラーメッセージを取得します。
            </summary>
            <value>エラーメッセージ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand.AllErrorInfoMessage">
            <summary>
            全てのエラーメッセージを取得します。
            </summary>
            <value>全てのエラーメッセージ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand.ErrorClass">
            <summary>
            クライアントエラー重大度を取得します。
            </summary>
            <value>クライアントエラー重大度</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand.ErrorState">
            <summary>
            サーバーエラー重大度を取得します。
            </summary>
            <value>サーバーエラー重大度</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand.UpdateIdParameterName">
            <summary>
            更新者を表すパラメータ名を取得します。
            </summary>
            <value>更新者を表すパラメータ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand.UpdateDateParameterName">
            <summary>
            更新日付を表すパラメータ名を取得します。
            </summary>
            <value>更新日付を表すパラメータ名</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.GenericProcedureCommand.#ctor(System.String,System.Object[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.GenericProcedureCommand"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="procedureName">プロシージャ名</param>
            <param name="values">パラメータの値</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.GenericProcedureCommand._procedureName">
            <summary>
            プロシージャ名です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.GenericProcedureCommand._parameterPrefix">
            <summary>
            パラメータ接頭辞です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.GenericProcedureCommand.Exec(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.GenericProcedureCommand.AddParameter(System.Object)">
            <summary>
            パラメータを追加します。
            </summary>
            <param name="value">パラメータの値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.GenericProcedureCommand.AddParameter(System.String,System.Object)">
            <summary>
            パラメータを追加します。
            </summary>
            <param name="name">パラメータ名</param>
            <param name="value">パラメータの値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.GenericProcedureCommand.AddParameter(System.String,System.Object,System.Data.ParameterDirection)">
            <summary>
            パラメータを追加します。
            </summary>
            <param name="name">パラメータ名</param>
            <param name="value">パラメータの値</param>
            <param name="direction">パラメータの入出力機能を表す<see cref="T:System.Data.ParameterDirection"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.GenericProcedureCommand.ClearParameter">
            <summary>
            設定されているパラメータをクリアします。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.GenericProcedureCommand.GetParameterValue(System.String)">
            <summary>
            パラメータの値を取得します。
            </summary>
            <param name="name">パラメータ名</param>
            <returns>パラメータの値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.GenericProcedureCommand.SetArgument(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.GenericProcedureCommand.ProcedureName">
            <summary>
            プロシージャ名を取得します。
            </summary>
            <value>プロシージャ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.GenericProcedureCommand.ParameterPrefix">
            <summary>
            パラメータ接頭辞を取得、設定します。
            </summary>
            <value>パラメータ接頭辞</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.GenericProcedureCommand.Parameters">
            <summary>
            パラメータ情報を取得します。
            </summary>
            <value>パラメータ情報</value>
            <remarks>
            各々の各要素は以下の通り設定されます。<br/>
            <see cref="P:System.Collections.Generic.KeyValuePair`2.Key"/> ... パラメータ名<br/>
            <see cref="P:System.Tuple`2.Item1"/> ... パラメータの値<br/>
            <see cref="P:System.Tuple`2.Item2"/> ... パラメータの入出力機能を表す<see cref="T:System.Data.ParameterDirection"/><br/>
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsert">
            <summary>
            SQL Serverで一括挿入を行うクラス
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsert.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlConnection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.DatabaseBulkInsertPriorityFlag)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsert"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="conn">データベース接続コネクション</param>
            <param name="priorityFlag">優先すべき処理を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.DatabaseBulkInsertPriorityFlag"/> </param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsert._options">
            <summary>
            一括挿入時のオプションを指定する<see cref="T:System.Data.SqlClient.SqlBulkCopyOptions"/> です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsert._timeout">
            <summary>
            タイムアウト時間(秒)です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsert._tableName">
            <summary>
            テーブル名です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsert.Exec(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsert.Exec(System.Data.SqlClient.SqlBulkCopy,System.Data.DataTable)">
            <summary>
            <see cref="T:System.Data.DataTable"/> を一括挿入します。
            </summary>
            <param name="sbc">一括挿入に利用する<see cref="T:System.Data.SqlClient.SqlBulkCopy"/></param>
            <param name="table">一括挿入するデータ</param>
            <returns>影響を受けた行数</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsert.CreateBulkCopyInstance(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            <see cref="T:System.Data.SqlClient.SqlBulkCopy"/> インスタンスを生成します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <returns>一括挿入に利用する<see cref="T:System.Data.SqlClient.SqlBulkCopy"/></returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsert.Options">
            <summary>
            一括挿入時のオプションを指定する<see cref="T:System.Data.SqlClient.SqlBulkCopyOptions"/> を取得、設定します。
            </summary>
            <value>一括挿入時のオプションを指定する<see cref="T:System.Data.SqlClient.SqlBulkCopyOptions"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsert.Timeout">
            <summary>
            タイムアウト時間(秒)を取得、設定します。
            </summary>
            <value>タイムアウト時間</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsert.TableName">
            <summary>
            テーブル名を取得、設定します。
            </summary>
            <value>テーブル名</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsertExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsert"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsertExtensions.Exec(Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsert,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            Entityのデータを一括で挿入します。
            </summary>
            <param name="sbi">一括挿入に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlBulkInsert"/></param>
            <param name="section">データベース接続セクション</param>
            <param name="entity">Entity</param>
            <returns>影響を受けた行数</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommandExtensions">
            <summary>
            ストアドプロシージャ実行用拡張メソッド
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommandExtensions.IsUpdateInfoParameterName(Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand,System.String)">
            <summary>
            指定した列名が更新情報列名かどうかを判断します。
            </summary>
            <param name="cmd"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand"/></param>
            <param name="name">列名</param>
            <returns><paramref name="name"/> が更新情報列名の場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="name"/> が更新者の列名、更新日付の列名のいずれかの場合は trueを返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommandExtensions.IsUpdateIdParameterName(Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand,System.String)">
            <summary>
            指定した列名が更新者の列名かどうかを判断します。
            </summary>
            <param name="cmd"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand"/></param>
            <param name="name">列名</param>
            <returns><paramref name="name"/> が更新者の列名の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommandExtensions.IsUpdateDateParameterName(Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand,System.String)">
            <summary>
            指定した列名が更新日付の列名かどうかを判断します。
            </summary>
            <param name="cmd"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlProcedureCommand"/></param>
            <param name="name">列名</param>
            <returns><paramref name="name"/> が更新日付の列名の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredHelper">
            <summary>
            データベース内のストアドプロシージャ、ファンクションをリスト化するためのクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredHelper.DEFAULT_PARAMETER_PREFIX">
            <summary>
            パラメータ接頭辞を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredHelper._storedInfos">
            <summary>
            ストアド情報です。
            </summary>
            <value>ストアド情報</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredHelper.CreateStoredInfos(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean)">
            <summary>
            ストアド情報をデータベースから取得します。
            </summary>
            <param name="dbSection">データベース接続セクション</param>
            <param name="refresh">再取得を行う場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredHelper.IsExists(System.String)">
            <summary>
            <paramref name="name"/> が存在するストアドかを判定します。
            </summary>
            <param name="name">判定するストアド名</param>
            <returns>ストアドが存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredHelper.IsProcedureExists(System.String)">
            <summary>
            <paramref name="name"/> が存在するストアドプロシージャかを判定します。
            </summary>
            <param name="name">ストアドプロシージャ名</param>
            <returns>ストアドプロシージャが存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredHelper.IsFunctionExists(System.String)">
            <summary>
            <paramref name="name"/> が存在するストアドファンクションかを判定します。
            </summary>
            <param name="name">ストアドファンクション名</param>
            <returns>ストアドファンクションが存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredHelper.IsScalarFunctionExists(System.String)">
            <summary>
            <paramref name="name"/> が存在するスカラー値ファンクションかを判定します。
            </summary>
            <param name="name">スカラー値ファンクション名</param>
            <returns>スカラー値ファンクションが存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredHelper.IsInlineTableFunctionExists(System.String)">
            <summary>
            <paramref name="name"/> が存在するテーブルファンクションかを判定します。
            </summary>
            <param name="name">テーブルファンクション名</param>
            <returns>テーブルファンクションが存在する場合は true。それ以外の場合は false。</returns>
            <remarks></remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredHelper.StoredInfos">
            <summary>
            ストアド情報を取得します。
            </summary>
            <remarks>
            <see cref="P:System.Collections.Generic.KeyValuePair`2.Key"/> はストアド名が設定されます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredInfo">
            <summary>
            ストアド情報を管理するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredInfo.PROCEDURE_TYPE">
            <summary>
            ストアドプロシージャ型値を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredInfo.SCALAR_FUNCTION_TYPE">
            <summary>
            スカラー値ファンクション型値を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredInfo.INLINE_TABLE_FUNCTION_TYPE">
            <summary>
            テーブルファンクション型値を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredInfo.#ctor(System.String,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">ストアド名</param>
            <param name="type">ストアドの型を表す文字列</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredInfo.Name">
            <summary>
            ストアド名を取得、設定します。
            </summary>
            <value>ストアド名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredInfo.Type">
            <summary>
            ストアドの型を表す文字列を取得、設定します。
            </summary>
            <value>ストアドの型を表す文字列</value>
            <remarks>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredInfo.PROCEDURE_TYPE"/>、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredInfo.SCALAR_FUNCTION_TYPE"/>、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredInfo.INLINE_TABLE_FUNCTION_TYPE"/> のいずれかが設定されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredInfo.IsProcedure">
            <summary>
            ストアドプロシージャかを取得します。
            </summary>
            <value>ストアドプロシージャの場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredInfo.IsFunction">
            <summary>
            ストアドファンクションかを取得します。
            </summary>
            <value>ストアドファンクションの場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredInfo.IsScalarFunction">
            <summary>
            スカラー値ファンクションかを取得します。
            </summary>
            <value>スカラー値ファンクションの場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.StoredInfo.IsInlineTableFunction">
            <summary>
            テーブルファンクションかを取得します。
            </summary>
            <value>テーブルファンクションの場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager">
            <summary>
            キャッシュを管理するクラスです。
            </summary>
            <remarks>
            キャッシュにキー名を付けて用途ごとにキャッシュを保持することが出来ます。
            キャッシュキーで取得される値は<see cref="T:System.Collections.Generic.Dictionary`2"/>になっているため、
            個々のキャッシュの取得、設定にはキャッシュキー、項目キー、項目値が必要になります。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager._caches">
            <summary> キャッシュを保持するためのディクショナリです。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager._instance">
            <summary> <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager"/>のインスタンスです。 </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager"/>クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager.Register``2(System.String)">
            <summary>
            指定キャッシュキーでキャッシュを登録します。
            </summary>
            <typeparam name="K">キャッシュキーの型</typeparam>
            <typeparam name="V">キャッシュ値の型</typeparam>
            <param name="name">キャッシュキー</param>
            <returns>
            キャッシュが登録できた場合、true。それ以外はfalse。
            キャッシュキーが同じ名前のキャッシュを登録しようとするとfalseを返す。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager.UnRegister(System.String)">
            <summary>
            指定キャッシュキーで管理しているキャッシュを全て削除します。
            </summary>
            <param name="name">キャッシュキー</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager.AddCache``2(System.String,System.Collections.Generic.KeyValuePair{``0,``1})">
            <summary>
            キャッシュに項目を追加します。
            </summary>
            <typeparam name="K">項目キーの型</typeparam>
            <typeparam name="V">項目値の型</typeparam>
            <param name="name">キャッシュキー</param>
            <param name="item">キャッシュに追加する項目であるキーと値のペア</param>
            <returns>
            キャッシュ項目が更新された場合は false。
            キャッシュ項目が追加された場合は true。
            </returns>
            <exception cref="T:System.InvalidOperationException">指定のキャッシュ名のキャッシュが存在しない場合にスローされる例外です。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager.AddCache``2(System.String,``0,``1)">
            <summary>
            キャッシュに項目を追加します。
            </summary>
            <typeparam name="K">項目キーの型</typeparam>
            <typeparam name="V">項目値の型</typeparam>
            <param name="name">キャッシュキー</param>
            <param name="key">項目キー</param>
            <param name="value">項目値</param>
            <returns>
            キャッシュ項目が更新された場合は false。
            キャッシュ項目が追加された場合は true。
            </returns>
            <exception cref="T:System.InvalidOperationException">指定のキャッシュ名のキャッシュが存在しない場合にスローされる例外です。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager.ClearCache(System.String)">
            <summary>
            キャッシュをクリアします。
            </summary>
            <param name="name">キャッシュキー</param>
            <exception cref="T:System.InvalidOperationException">指定のキャッシュキーのキャッシュが存在しない場合にスローされる例外です。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager.ContainsCache``2(System.String,System.Collections.Generic.KeyValuePair{``0,``1})">
            <summary>
            指定項目がキャッシュに存在するかどうかを確認します。
            </summary>
            <typeparam name="K">項目キーの型</typeparam>
            <typeparam name="V">項目値の型</typeparam>
            <param name="name">キャッシュキー</param>
            <param name="item">キャッシュに追加する項目であるキーと値のペア</param>
            <returns>指定項目が存在する場合、true。それ以外はfalse。</returns>
            <exception cref="T:System.InvalidOperationException">指定のキャッシュキーのキャッシュが存在しない場合にスローされる例外です。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager.ContainsKeyCache``1(System.String,``0)">
            <summary>
            指定項目キーがキャッシュに存在するかどうかを確認します。
            </summary>
            <typeparam name="K">項目キーの型</typeparam>
            <param name="name">キャッシュキー</param>
            <param name="key">項目キー</param>
            <returns>指定項目キーが存在する場合、true。それ以外はfalse。</returns>
            <exception cref="T:System.InvalidOperationException">指定のキャッシュキーのキャッシュが存在しない場合にスローされる例外です。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager.RemoveCache``2(System.String,``0)">
            <summary>
            項目キーを指定して項目を削除します。
            </summary>
            <typeparam name="K">項目キーの型</typeparam>
            <typeparam name="V">項目値の型</typeparam>
            <param name="name">キャッシュキー</param>
            <param name="key">項目キー</param>
            <returns>要素が見つかり、正常に削除された場合は true。それ以外の場合は false。</returns>
            <exception cref="T:System.InvalidOperationException">指定のキャッシュキーのキャッシュが存在しない場合にスローされる例外です。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager.GetCount(System.String)">
            <summary>
            登録されているキャッシュの項目数を取得します。
            </summary>
            <param name="name">キャッシュキー</param>
            <returns>登録されているキャッシュの項目数</returns>
            <exception cref="T:System.InvalidOperationException">指定のキャッシュキーのキャッシュが存在しない場合にスローされる例外です。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager.TryGetValue``2(System.String,``0,``1@)">
            <summary>
            項目が取得できるか試行します。
            </summary>
            <typeparam name="K">項目キーの型</typeparam>
            <typeparam name="V">項目値の型</typeparam>
            <param name="name">キャッシュキー</param>
            <param name="key">項目キー</param>
            <param name="value">値を格納する項目値</param>
            <returns>指定のキーで項目が取得できた場合、true。それ以外はfalse。</returns>
            <exception cref="T:System.InvalidOperationException">指定のキャッシュキーのキャッシュが存在しない場合にスローされる例外です。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager.GetItem``2(System.String,``0)">
            <summary>
            項目を取得します。
            </summary>
            <typeparam name="K">項目キーの型</typeparam>
            <typeparam name="V">項目値の型</typeparam>
            <param name="name">キャッシュキー</param>
            <param name="key">項目キー</param>
            <returns>項目値</returns>
            <exception cref="T:System.InvalidOperationException">指定のキャッシュキーのキャッシュが存在しない場合にスローされる例外です。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager.Instance">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager"/>のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager"/>のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionSaveData">
            <summary>
            条件設定保存データクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionSaveData.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionSaveData"/>クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionSaveData.ConditionValueItemCollection">
            <summary>
            条件値オブジェクトのコレクションを取得、設定します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem">
            <summary>
            条件値情報を格納するクラスです。
            </summary>
            <value></value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem"/>クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem._value1Display">
            <summary>
            値1の表記文字列です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem._value2Display">
            <summary>
            値2の表記文字列です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.GetConditionStringElements(Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItemCollection,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            条件文字列を生成するために必要な構成要素を取得します。
            </summary>
            <param name="parent">この条件値項目を含むコレクション</param>
            <param name="label">この条件項目のラベル</param>
            <param name="left">演算子の左辺に表示する文字列</param>
            <param name="right">演算子、及び、演算子の左辺に表示する文字列</param>
            <param name="full">演算子に関係なく、左辺から右辺までまたいだ文字列</param>
            <remarks>
            ・このメソッド内で、<paramref name="parent"/> の ToString メソッドは実行しないでください。
              スタックオーバーフローが発生する可能性があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.IsAutoLayoutValueRow(Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItemCollection)">
            <summary>
            アイテムがカスタム抽出条件の値項目であるかどうかをチェックします。
            </summary>
            <param name="parent">条件値を保持するコレクション</param>
            <returns>カスタム抽出条件の値項目である場合、true。それ以外はfalse。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.SetOldCondition(Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionSaveData)">
            <summary>
            指定の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionSaveData"/>から現在の値を退避させます。
            </summary>
            <param name="saveData">条件保存データを保持する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionSaveData"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.SendTmp">
            <summary>
            現在の値を退避します。
            </summary>
            <remarks>
            退避後、現在の値はnullに初期化されます。
            値を退避させることで保存する値と使用する値を使い分けます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.SendValue">
            <summary>
            退避値を現在の値に移動します。
            </summary>
            <remarks>
            復元後、退避値はnullに初期化されます。
            値を退避させることで保存する値と使用する値を使い分けます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.IsAutoLayout">
            <summary>
            カスタム抽出条件かどうかを表す値を取得、設定します。
            </summary>
            <value>カスタム抽出条件の場合、true。それ以外はfalse。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.IsKubun">
            <summary>
            区分タイプかどうかを表す値を取得、設定します。
            </summary>
            <value>区分タイプの場合、true。それ以外はfalse。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.IsDate">
            <summary>
            日付項目かどうかを表す値を取得、設定します。
            </summary>
            <value>日付項目の場合 true。それ以外はfalse。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.DefaultDateSetting1">
            <summary>
            デフォルト日付設定1を取得、設定します。
            </summary>
            <value>デフォルト日付設定1</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.DefaultDateSetting2">
            <summary>
            デフォルト日付設定2を取得、設定します。
            </summary>
            <value>デフォルト日付設定2</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.IsDisplay">
            <summary>
            表示のみの項目かどうかを表す値を取得、設定します。
            </summary>
            <value>区分や付箋などの表示のみを行うものの場合、true。それ以外はfalse。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.IsNumeric">
            <summary>
            数値項目か否かを表す値を取得、設定します。
            </summary>
            <value>数値項目の場合、true。それ以外はfalse。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.KeyName">
            <summary>
            キー名を取得、設定します。
            </summary>
            <value>キー名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.DisplayText">
            <summary>
            表示文字列を取得、設定します。
            </summary>
            <value>
            抽出条件の場合はラベルの名称。
            カスタム抽出条件の場合は表示名(簡易計算を含む)。
            </value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.ColumnName">
            <summary>
            条件列名を取得、設定します。
            </summary>
            <value>条件列名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.ValueName">
            <summary>
            実際の値の代わりに表示する文字列を取得、設定します。
            </summary>
            <value>
            条件文字列を構成する場合に値の代わりに表示する文字列。<br/>
            区分の場合は選択されている区分のラベル名。<br/>
            チェックボックスの場合はチェックボックスのラベル名。<br/>
            付箋の場合は付箋名。<br/>
            その他の項目はマスタ名称。
            </value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.Operator">
            <summary>
            演算子を取得、設定します。
            </summary>
            <value>演算子</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.Value1">
            <summary>
            値1を取得、設定します。
            </summary>
            <value>値、もしくは開始値。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.Value1Display">
            <summary>
            値1の表記文字列を取得、設定します。
            </summary>
            <value>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.Value1"/>の表記文字列。
            null を指定すると、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.Value1"/> の値(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.IsDate"/> が true の場合はその西暦日本語フォーマット) を返します。
            区分タイプ(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.IsKubun"/> が true) の場合は使用されません。
            </value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.Value2">
            <summary>
            値2を取得、設定します。
            </summary>
            <value>
            終了値。 ただし、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.Operator"/>が<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.OperatorType.Between"/>以外の場合は使用されません。
            </value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.Value2Display">
            <summary>
            値2の表記文字列を取得、設定します。
            </summary>
            <value>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.Value2"/>の表記文字列。
            null を指定すると、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.Value2"/> の値(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.IsDate"/> が true の場合はその西暦日本語フォーマット) を返します。
            区分タイプ(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.IsKubun"/> が true) の場合は使用されません。
            </value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.Visible">
            <summary>
            条件文字列として表示するかどうかを表す値を取得、設定します。
            </summary>
            <value>条件文字列として表示する場合、true。それ以外はfalse。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.IndividualFindItem">
            <summary>
            個別検索時の選択項目値を取得、設定します。
            </summary>
            <value>個別検索時の選択項目値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.TmpValue1">
            <summary>
            画面の入力値の退避(値1)値を取得、設定します。
            </summary>
            <value>画面の入力値の退避(値1)値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.TmpValue2">
            <summary>
            画面の入力値の退避(値2)値を取得、設定します。
            </summary>
            <value>画面の入力値の退避(値2)値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.TmpValueName">
            <summary>
            画面の表示値の退避値を取得、設定します。
            </summary>
            <value>画面の表示値の退避値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItem.IsSaveCondition">
            <summary>
            条件を保存するかどうかを表す値を取得、設定します。
            </summary>
            <value>条件を保存する場合、true。それ以外はfalse。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.DefaultDateSetting">
            <summary>
            デフォルトの日付設定情報を保持するクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.DefaultDateSetting.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.DefaultDateSetting.ToString(System.Boolean)">
            <summary>
            現在のオブジェクトの設定から日付を取得します。
            </summary>
            <returns>日付文字列</returns>>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DefaultDateSetting.BaseDate">
            <summary>
            年月日項目の基準日を取得、設定します。
            </summary>
            <value>年月日項目の基準日</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DefaultDateSetting.BaseMonth">
            <summary>
            年月項目の基準日を取得、設定します。
            </summary>
            <value>年月項目の基準日</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DefaultDateSetting.BaseAddYear">
            <summary>
            基準日からの加算年を取得、設定します。
            </summary>
            <value>基準日からの加算年</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DefaultDateSetting.BaseAddMonth">
            <summary>
            基準日からの加算月を取得、設定します。
            </summary>
            <value>基準日からの加算月</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DefaultDateSetting.BaseAddDay">
            <summary>
            基準日からの加算日を取得、設定します。
            </summary>
            <value>基準日からの加算日</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItemCollection">
            <summary>
            条件情報を保持する項目のコレクションクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItemCollection.GetMaxLength(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            指定の文字列列挙から最大文字数を取得します。
            </summary>
            <param name="strings">文字列の列挙</param>
            <returns>最大文字数</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItemCollection.GetMaxText(System.String,System.Int32)">
            <summary>
            最大文字数に合わせてスペースで埋めた文字列を取得します。
            </summary>
            <param name="value">文字列</param>
            <param name="length">最大文字数</param>
            <returns>スペース埋めを行った文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItemCollection.ToString">
            <inheritdoc cref="M:System.Object.ToString"/>
            <returns>WHERE句を表す文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItemCollection.SetOldCondition(Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionSaveData)">
            <summary>
            全ての項目に対して現在の値の退避を行います。
            </summary>
            <param name="saveData">退避値を設定する条件情報</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionValueItemCollection.RevertCondtion">
            <summary>
            全ての項目に対して退避値を現在の値に移動します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.CustomerVisiblePropertyAttribute">
            <summary>
            ユーザーに対してPropertyGrid 上で表示可能なプロパティであることを示すカスタム属性です。
            対象のPropertyGrid のBrowsableAttributes にこの属性を追加して使用してください。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.CustomerVisiblePropertyAttribute.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.CustomerVisiblePropertyAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Designer.CustomerVisiblePropertyAttribute._instance">
            <summary>
            既定のインスタンスです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.CustomerVisiblePropertyAttribute.Instance">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.CustomerVisiblePropertyAttribute"/> の既定のインスタンスを取得します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.DefaultDataManager">
            <summary>
            デフォルトデータを管理するオブジェクトクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1">
            <summary>
            OpenPropety毎に項目を管理する<see cref="T:System.Collections.Generic.IDictionary`2"/>クラスです。
            </summary>
            <typeparam name="T">管理対象項目タイプ</typeparam>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1._items">
            <summary>
            管理対象項目コレクションです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.Add(System.Type,System.String,`0)">
            <summary>
            コレクションに項目を追加します。
            </summary>
            <param name="t">親タイプ</param>
            <param name="name">プロパティ名</param>
            <param name="item">管理対象項目</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.GetEnumerator">
            <inheritdoc cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc cref="M:System.Collections.IEnumerable.GetEnumerator"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.Add(System.Collections.Generic.KeyValuePair{Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey,`0})">
            <inheritdoc cref="M:System.Collections.Generic.ICollection`1.Add(`0)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.AddRange(System.Collections.Generic.IDictionary{Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey,`0})">
            <summary>
            <see cref="T:System.Collections.Generic.ICollection{T}"/> に項目を追加します。
            </summary>
            <param name="items">追加する<see cref="T:System.Collections.Generic.ICollection{T}"/>オブジェクト。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.Clear">
            <inheritdoc cref="M:System.Collections.Generic.ICollection`1.Clear"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.Contains(System.Collections.Generic.KeyValuePair{Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey,`0})">
            <inheritdoc cref="M:System.Collections.Generic.ICollection`1.Contains(`0)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.CopyTo(System.Collections.Generic.KeyValuePair{Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey,`0}[],System.Int32)">
            <inheritdoc cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.Remove(System.Collections.Generic.KeyValuePair{Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey,`0})">
            <inheritdoc cref="M:System.Collections.Generic.ICollection`1.Remove(`0)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.ContainsKey(Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey)">
            <inheritdoc cref="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.Add(Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey,`0)">
            <inheritdoc cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.Remove(Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey)">
            <inheritdoc cref="M:System.Collections.Generic.IDictionary`2.Remove(`0)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.TryGetValue(Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey,`0@)">
            <inheritdoc cref="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.Count">
            <inheritdoc cref="P:System.Collections.Generic.ICollection`1.Count"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.IsReadOnly">
            <inheritdoc cref="P:System.Collections.Generic.ICollection`1.IsReadOnly"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.Item(Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagementKey)">
            <inheritdoc cref="P:System.Collections.Generic.IDictionary`2.Item(`0)"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.Item(System.Type,System.String)">
            <summary>
            指定した親タイプとプロパティ名のキーを持つ項目を取得または設定します。
            </summary>
            <param name="t">親タイプ</param>
            <param name="name">プロパティ名</param>
            <returns>指定したキーを持つ項目。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.Keys">
            <inheritdoc cref="P:System.Collections.Generic.IDictionary`2.Keys"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.PropertyItemManagerBase`1.Values">
            <inheritdoc cref="P:System.Collections.Generic.IDictionary`2.Values"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute">
            <summary>
            デザイナで使用する項目属性クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.BaseAttribute">
            <summary> 基準となる項目属性オブジェクト(<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute"/>)です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.BaseItemAttribute">
            <summary> 基準となる項目属性オブジェクト(<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute"/>)です。 </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute)">
            <summary>
            基準となる項目属性を指定して<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute"/>クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="baseItemAttribute">基準となる項目属性</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute._TagAttribute">
            <summary> 付箋属性オブジェクトです。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute._useMultiByteChar">
            <summary> 全角使用区分です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute._useNumber">
            <summary> 数値使用区分です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute._useAlphabet">
            <summary> 半角使用区分です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute._useKana">
            <summary> カナ使用区分です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute._useSymbol">
            <summary> 記号使用区分です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute._selectedSymbol">
            <summary> 指定記号です。 </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.CreateFilter">
            <summary>
            フィルタ文字を生成します。
            </summary>
            <returns>生成されたフィルタ文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.CheckCharacter(System.Char)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.CheckCharacter(System.Char)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.Format(System.String)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Format(System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.CheckFormatted(System.String)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.CheckFormatted(System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.CheckLength(System.String,System.Int32,System.Int32,System.String)">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.CheckLength(System.String,System.Int32,System.Int32,System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.Clone">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Clone"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.LabelFormat">
            <summary>
            ラベルフォーマットを取得、設定します。
            </summary>
            <value>ラベルフォーマット文字列</value>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このプロパティで値の取得を行うとスローされる例外です。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.Label">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Label"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.FindWindow">
            <summary>
            検索ウィンドウ名を設定します。
            </summary>
            <value>検索ウィンドウ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.Find">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Find"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.Jump">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Jump"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.ItemType">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.ItemType"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.InputMode">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.InputMode"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.GetNameAttribute">
            <summary>
            名称表示項目の設定名を設定します。
            </summary>
            <value>名称表示項目の設定名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.DisplayName">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DisplayName"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.ListType">
            <summary>
            区分リストを設定します。
            </summary>
            <value>区分リスト設定名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.List">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.List"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.UseMinus">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseMinus"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.DigitIntegerName">
            <summary>
            整数桁のシステム設定項目名を設定します。
            </summary>
            <value>整数桁のシステム設定項目名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.DigitInteger">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DigitInteger"/>
            <remarks>
            型区分が数値の場合に有効になります。
            整数桁と整数桁項目名から求めます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.DigitDecimalName">
            <summary>
            小数桁のシステム設定項目名を設定します。
            </summary>
            <value>小数桁のシステム設定項目名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.DigitDecimal">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DigitDecimal"/>
            <remarks>
            型区分が数値の場合に有効になります。
            小数桁と小数桁項目名から求めます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.DecimalDisplayType">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DecimalDisplayType"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.UseComma">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseComma"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.MaxLength">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.MaxLength"/>
            <remarks>
            マルチバイト文字を2桁として計算します。
            全角8桁=16桁
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.MultiLine">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.MultiLine"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.Necessary">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Necessary"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.UseFuzzy">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseFuzzy"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.DefaultValue">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.DefaultValue"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.TagAttribute">
            <summary>
            付箋属性オブジェクトを取得、設定します。
            </summary>
            <value>付箋属性オブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.UseMultiByteChar">
            <summary>
            全角使用区分を取得、設定します。
            </summary>
            <value>全角文字を使用する場合、true。それ以外はfalse。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.UseNumber">
            <summary>
            数値使用区分を取得、設定します。
            </summary>
            <value>数値を使用する場合、true。それ以外はfalse。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.UseAlphabet">
            <summary>
            半角使用区分を取得、設定します。
            </summary>
            <value>半角を使用する場合、true。それ以外はfalse。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.UseKana">
            <summary>
            カナ使用区分を取得、設定します。
            </summary>
            <value>カナを使用する場合、true。それ以外はfalse。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.UseSymbol">
            <summary>
            記号使用区分を取得、設定します。
            </summary>
            <value>記号を使用する場合、true。それ以外はfalse。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.SelectedSymbol">
            <summary>
            指定記号を取得、設定します。
            </summary>
            <value>指定記号</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.AlpahbetType">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.AlpahbetType"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.UseSurrogate">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UseSurrogate"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.Visible">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Visible"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.WhereVisible">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.WhereVisible"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.UIConverter">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.UIConverter"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.Perless">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Perless"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.DesignItemAttribute.Filter">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttribute.Filter"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.ICSharpScriptProvider">
            <summary>
            スクリプトプロバイダーインタフェースです。
            </summary>
            <remarks>
            通常の *.cs ファイルの場合、ファイルの内容だけでパースが出来ますが
            スクリプトの場合、コードの一部のみ表示するためパースが出来ません。
            その為、必要な箇所を埋めるための情報を取得するためのインタフェースです。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.ICSharpScriptProvider.ConvertRow(System.Int32)">
            <summary>
            指定の行NOをスクリプト上の行NOに変換します。
            </summary>
            <param name="row">行NO</param>
            <returns>スクリプト上の行NO。指定行が見えない行の場合、-1。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.ICSharpScriptProvider.PrepareCompletionDocument(System.String,System.Int32@)">
            <summary>
            ドキュメントの準備を行います。
            </summary>
            <param name="document">編集テキストドキュメント</param>
            <param name="offset">ドキュメントの最終オフセットを格納する値</param>
            <returns>コンパイル可能な形になったドキュメント</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.IInitConditionManager">
            <summary>
            画面起動時の条件を保存・読み込みするためのインタフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.IInitConditionManager.GetCondition">
            <summary>
            現在の入力情報から保存用の条件情報を取得します。
            </summary>
            <returns>取得した現在入力されている条件情報</returns>
            <remarks>
            条件保存処理にて現在の入力値を保存するために、コントロールの入力情報を収集し <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionSaveData"/> を作成します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.IInitConditionManager.RestoreCondition(Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionSaveData,System.Boolean)">
            <summary>
            指定の条件情報から条件値を復元します。
            </summary>
            <param name="data">復元対象条件情報</param>
            <param name="needResetOnNotSaveCondition">保存対象外の場合、リセットする必要があるかを指定します。</param>
            <returns>復元処理が成功した場合、true。それ以外はfalse。</returns>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionSaveData"/>からコントロールに対して入力値を復元します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.IInitConditionManager.ResetDefaultData(Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionSaveData,System.Boolean)">
            <summary>
            指定の条件情報をデフォルト値に設定します。
            </summary>
            <param name="data">条件情報</param>
            <param name="updateCurrentData">現在の入力値を更新するか</param>
            <remarks>
            <paramref name="data"/>にて指定された<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.ConditionSaveData"/>をデフォルト値に設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.IInitConditionManager.InitDefaultData">
            <summary>
            デフォルト値を初期状態に戻します。
            </summary>
            <remarks>
            デフォルト値を初期状態（保存データなしでの実行時時点）に戻します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.ItemAttributeManager">
            <summary>
            デザイナ用の項目属性の管理と保持を行うクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Designer.ItemAttributeManager.#ctor(System.Boolean)">
            <summary>
            リストの入力タイプを指定しして<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.ItemAttributeManager"/>クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="listInputFull">リストの入力タイプ</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ItemAttributeManager.ListInputFullMode">
            <summary>
            リストの入力タイプを<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListInputType.Full"/>とするかどうかの値を取得、設定します。
            </summary>
            <value>リストの入力タイプを<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListInputType.Full"/>とする場合、true。それ以外はfalse。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Designer.ItemAttributeManager.Item(System.Type,System.String)">
            <summary>
            対象オブジェクトのタイプとプロパティ名を指定して項目属性を取得、設定します。
            </summary>
            <param name="t">対象オブジェクトのタイプ</param>
            <param name="name">プロパティ名</param>
            <returns>項目属性</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData">
            <summary>
            デバッグ情報データクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData.Xmlns">
            <summary>
            シリアル化する際のXML名前空間を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData._values">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData.ObjectName"/> で指定されるオブジェクトから抽出、復元されるデータです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData._extensionData">
            <summary>
            追加データを格納する構造体データです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData.ObjectName">
            <summary>
            値を抽出、復元する対象となるオブジェクトの名前を取得、設定します。
            </summary>
            <value>値を抽出、復元する対象となるオブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData.ObjectType">
            <summary>
            値を抽出、復元する対象となるオブジェクトの型を取得、設定します。
            </summary>
            <value>値を抽出、復元する対象となるオブジェクトの型</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData.Values">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData.ObjectName"/> で指定されるオブジェクトから抽出、復元されるデータを取得、設定します。
            </summary>
            <value><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData.ObjectName"/> で指定されるオブジェクトから抽出、復元されるデータ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData.ExtensionData">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDataExtractor">
            <summary>
            デバッグ情報データのファイル入出力処理を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDataExtractor.DefaultFileEncoding">
            <summary>
            デバッグ情報データファイルの既定の文字エンコーディングです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDataExtractor.Extract(System.String,Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Interfaces.IAoDebuggable,System.Text.Encoding,Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate,Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver,System.Type[])">
            <summary>
            指定したパスに、対象オブジェクトのデバッグ情報データのファイルを出力します。
            </summary>
            <param name="path">出力先ファイルパス</param>
            <param name="obj">デバッグ情報を抽出するオブジェクト</param>
            <param name="encode">出力ファイルの文字エンコーディング。既定値は <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDataExtractor.DefaultFileEncoding"/> です。</param>
            <param name="surrogate">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> でシリアル化できない型を、シリアル化可能な代理(=surrogate)型に相互変換するための変換オブジェクト。<br/>
            省略された場合、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate"/> の既定のインスタンスが使用されます。
            </param>
            <param name="resolver">
            シリアル化、及び、逆シリアル化する際に型と xsi:type 表現との間の動的なマッピングを行うための変換オブジェクト。<br/>
            省略された場合、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver"/> の既定のインスタンスが使用されます。
            </param>
            <param name="knownTypes">出力するデバッグ情報データに含まれる型情報</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDataExtractor.Extract(System.IO.Stream,Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Interfaces.IAoDebuggable,System.Text.Encoding,Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate,Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver,System.Type[])">
            <summary>
            指定したストリームに、対象オブジェクトのデバッグ情報データを出力します。
            </summary>
            <param name="stream">出力先ストリーム</param>
            <param name="obj">デバッグ情報を抽出するオブジェクト</param>
            <param name="encode">出力ファイルの文字エンコーディング。既定値は <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDataExtractor.DefaultFileEncoding"/> です。</param>
            <param name="surrogate">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> でシリアル化できない型を、シリアル化可能な代理(=surrogate)型に相互変換するための変換オブジェクト。<br/>
            省略された場合、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate"/> の既定のインスタンスが使用されます。
            </param>
            <param name="resolver">
            シリアル化、及び、逆シリアル化する際に型と xsi:type 表現との間の動的なマッピングを行うための変換オブジェクト。<br/>
            省略された場合、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver"/> の既定のインスタンスが使用されます。
            </param>
            <param name="knownTypes">出力するデバッグ情報データに含まれる型情報</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDataExtractor.Extract(System.Xml.XmlWriter,Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Interfaces.IAoDebuggable,Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate,Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver,System.Type[])">
            <summary>
            指定したライターに対して、対象オブジェクトのデバッグ情報データを出力します。
            </summary>
            <param name="writer">XMLライター</param>
            <param name="obj">デバッグ情報を抽出するオブジェクト</param>
            <param name="surrogate">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> でシリアル化できない型を、シリアル化可能な代理(=surrogate)型に相互変換するための変換オブジェクト。<br/>
            省略された場合、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate"/> の既定のインスタンスが使用されます。
            </param>
            <param name="resolver">
            シリアル化、及び、逆シリアル化する際に型と xsi:type 表現との間の動的なマッピングを行うための変換オブジェクト。<br/>
            省略された場合、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver"/> の既定のインスタンスが使用されます。
            </param>
            <param name="knownTypes">出力するデバッグ情報データに含まれる型情報</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDataExtractor.Load(System.String,Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Interfaces.IAoDebuggable,Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate,Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver,System.Type[])">
            <summary>
            指定したパスのファイルからデバッグ情報データを読み込み、対象のオブジェクトに復元します。
            </summary>
            <param name="path">デバッグ情報データファイルのパス</param>
            <param name="obj">デバッグ情報を復元するオブジェクト</param>
            <param name="surrogate">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> でシリアル化できない型を、シリアル化可能な代理(=surrogate)型に相互変換するための変換オブジェクト。<br/>
            省略された場合、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate"/> の既定のインスタンスが使用されます。
            </param>
            <param name="resolver">
            シリアル化、及び、逆シリアル化する際に型と xsi:type 表現との間の動的なマッピングを行うための変換オブジェクト。<br/>
            省略された場合、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver"/> の既定のインスタンスが使用されます。
            </param>
            <param name="knownTypes">復元するデバッグ情報データに含まれる型情報</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDataExtractor.CreateAoDebugSerializer(Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate,Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver,System.Type[])">
            <summary>
            デバッグ情報データをシリアル化、及び、逆シリアル化するための <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> のインスタンスを生成します。
            </summary>
            <param name="surrogate">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> でシリアル化できない型を、シリアル化可能な代理(=surrogate)型に相互変換するための変換オブジェクト。<br/>
            省略された場合、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate"/> の既定のインスタンスが使用されます。
            </param>
            <param name="resolver">
            シリアル化、及び、逆シリアル化する際に型と xsi:type 表現との間の動的なマッピングを行うための変換オブジェクト。<br/>
            省略された場合、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver"/> の既定のインスタンスが使用されます。
            </param>
            <param name="knownTypes">デバッグ情報データに含まれる型情報</param>
            <returns><see cref="T:System.Runtime.Serialization.DataContractSerializer"/> の新しいインスタンス</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor">
            <summary>
            デバッグ用の詳細プロセス情報管理クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugMonitor">
            <summary>
            デバッグ用のプロセス情報管理クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugMonitor.process">
            <summary>
            カレントの<see cref="T:System.Diagnostics.Process"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugMonitor.Refresh">
            <summary>
            プロパティを初期化し、現在のプロセス情報に置き換えます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugMonitor.RefreshMain">
            <summary>
            プロセス情報を最新の情報に置き換えます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugMonitor.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugMonitor.GetMessageObject">
            <summary>
            メッセージに表示するオブジェクトを取得します。
            </summary>
            <returns>メッセージに表示するオブジェクト</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugMonitor.HandleCount">
            <summary>
            ハンドル数を取得します。
            </summary>
            <value>ハンドル数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugMonitor.WorkingSet">
            <summary>
            物理メモリ使用量を取得します。
            </summary>
            <value>物理メモリ使用量</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugMonitor.VirtualMemory">
            <summary>
            仮想メモリ使用量を取得します。
            </summary>
            <value>仮想メモリ使用量</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugMonitor.GdiCount">
            <summary>
            GDIオブジェクト数を取得します。
            </summary>
            <value>GDIオブジェクト数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugMonitor.UserObjectCount">
            <summary>
            ユーザーオブジェクト数を取得します。
            </summary>
            <value>ユーザーオブジェクト数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugMonitor.Time">
            <summary>
            プロセス情報を取得した日時を取得します。
            </summary>
            <value>プロセス情報を取得した日時</value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.CLR_MEMORY_CATEGORY">
            <summary>
            .NET CLR Memoryカテゴリを表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.RefreshMain">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.RefreshClrMemory">
            <summary>
            CLR Memory情報を最新の情報に置き換えます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.GetClrMemoryInstanceName">
            <summary>
            パフォーマンスモニタを利用するためのインスタンス名を取得します。
            </summary>
            <returns>インスタンス名</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.GetPerformanceCounterValue(System.String,System.String,System.String)">
            <summary>
            パフォーマンスモニタから値を取得します。
            </summary>
            <param name="category">カテゴリ</param>
            <param name="name">カウンタ名</param>
            <param name="instance">インスタンス名(exe名)</param>
            <returns>パフォーマンスモニタから取得した値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.RefreshNetwork">
            <summary>
            ネットワーク情報を最新の情報に置き換えます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.GetNetworkInterfaceStrings">
            <summary>
            ネットワーク情報の文字列を取得します。
            </summary>
            <returns>ネットワーク情報の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.RefreshModule">
            <summary>
            読み込まれているモジュール情報を最新の情報に置き換えます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.GetLoadModuleSrings">
            <summary>
            モジュール情報の文字列を取得します。
            </summary>
            <returns>モジュール情報の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.GetMessageObject">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.Export(System.String)">
            <summary>
            システム情報やモニタ情報をzipファイルとして出力します。
            </summary>
            <param name="path">出力するファイルのパス</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.Gen0Collections">
            <summary>
            パフォーマンスカウンタ「# Gen 0 Collections」を取得します。
            </summary>
            <value># Gen 0 Collections</value>
            <remarks>
            ジェネレーション 0 のオブジェクト(最後に割り当てられた、最も若いオブジェクト) がガベージ コレクションされた回数を表示します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.Gen1Collections">
            <summary>
            パフォーマンスカウンタ「# Gen 1 Collections」を取得します。
            </summary>
            <value># Gen 1 Collections</value>
            <remarks>
            アプリケーションの開始後にジェネレーション 1 のオブジェクトをガベージ コレクションした回数を表示します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.Gen2Collections">
            <summary>
            パフォーマンスカウンタ「# Gen 2 Collections」を取得します。
            </summary>
            <value># Gen 2 Collections</value>
            <remarks>
            アプリケーションの開始後にジェネレーション 2 のオブジェクトをガベージ コレクションした回数を表示します。 
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.Gen0HeapSize">
            <summary>
            パフォーマンスカウンタ「Gen 0 heap size」を取得します。
            </summary>
            <value>Gen 0 heap size</value>
            <remarks>
            ジェネレーション 0 に割り当てることができる最大バイト数を表示します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.Gen1HeapSize">
            <summary>
            パフォーマンスカウンタ「Gen 1 heap size」を取得します。
            </summary>
            <value>Gen 1 heap size</value>
            <remarks>
            ジェネレーション 1 の現在のバイト数を表示します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.Gen2HeapSize">
            <summary>
            パフォーマンスカウンタ「Gen 2 heap size」を取得します。
            </summary>
            <value>Gen 2 heap size</value>
            <remarks>
            ジェネレーション 2 の現在のバイト数を表示します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.NetworkInterfaces">
            <summary>
            ネットワーク情報を表す文字列を取得します。
            </summary>
            <value>ネットワーク情報を表す文字列</value>
            <remarks>
            NICカード分出力され、文字列は複数行に渡ります。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor.LoadModules">
            <summary>
            読み込まれているモジュール情報を表す文字列を取得します。
            </summary>
            <value>読み込まれているモジュール情報を表す文字列</value>
            <remarks>
            読み込まれているモジュール分出力され、文字列は複数行に渡ります。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver">
            <summary>
            デバッグ情報データのシリアル化、及び、逆シリアル化の際に型と xsi:type 表現との間の動的なマッピングを行う機構を提供します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
            <summary>
            逆シリアル化中に指定された xsi:type 名と名前空間を型にマップします。
            </summary>
            <param name="typeName">マップする xsi:type 名</param>
            <param name="typeNamespace">マップする xsi:type の名前空間</param>
            <param name="declaredType">データ コントラクト内で宣言された型</param>
            <param name="knownTypeResolver">既知の型リゾルバー</param>
            <returns>xsi:type 名および名前空間のマップ先の型</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
            <summary>
            シリアル化中に、型を xsi:type 名と名前空間にマップします。
            </summary>
            <param name="type">マップする型</param>
            <param name="declaredType">データ コントラクト内で宣言された型</param>
            <param name="knownTypeResolver">既知の型リゾルバー</param>
            <param name="typeName">xsi:type の名前(戻り値)</param>
            <param name="typeNamespace">xsi:type の名前空間(戻り値)</param>
            <returns>マッピングが成功した場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralResolver"/> の既定のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDataExtractor"/> によるデバッグ情報データの抽出(シリアライズ)、及び、復元(逆シリアライズ) 時に使用する
            <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> に適用する汎用の <see cref="T:System.Runtime.Serialization.IDataContractSurrogate"/> 実装クラス。
            シリアライズできない型を、シリアライズ可能な代理(=surrogate)型に相互変換します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate"/> の既定のインスタンス
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate.GetCustomDataToExport(System.Type,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate.GetDataContractType(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate.GetDeserializedObject(System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate.GetObjectToSerialize(System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugGeneralSurrogate"/> の既定のインスタンスを取得します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog">
            <summary>
            ログ出力クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <remarks>
            インスタンスを作成させないためにprivateで宣言しています。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.Error(System.Exception,System.String,System.String,System.Int32)">
            <summary>
            エラーログを出力します。
            </summary>
            <param name="ex">例外</param>
            <param name="name">メンバ名</param>
            <param name="file">ファイル名</param>
            <param name="line">行数</param>
            <remarks>
            <paramref name="name"/>、<paramref name="file"/>、<paramref name="line"/> は指定する必要がありません。
            それぞれ呼び出しメソッド名、ファイル名、行NOを自動で取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.Error(System.String,System.String,System.String,System.Int32)">
            <summary>
            エラーメッセージを出力します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="name">メンバ名</param>
            <param name="file">ファイル名</param>
            <param name="line">行数</param>
            <remarks>
            <paramref name="name"/>、<paramref name="file"/>、<paramref name="line"/> は指定する必要がありません。
            それぞれ呼び出しメソッド名、ファイル名、行NOを自動で取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.Query(System.String,System.String,System.String,System.Int32)">
            <summary>
            クエリログを出力します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="name">メンバ名</param>
            <param name="file">ファイル名</param>
            <param name="line">行数</param>
            <remarks>
            <paramref name="name"/>、<paramref name="file"/>、<paramref name="line"/> は指定する必要がありません。
            それぞれ呼び出しメソッド名、ファイル名、行NOを自動で取得します。
            メッセージは「SQL:」で始まるようにしてください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.Warn(System.Exception,System.String,System.String,System.Int32)">
            <summary>
            警告ログを出力します。
            </summary>
            <param name="ex">例外</param>
            <param name="name">メンバ名</param>
            <param name="file">ファイル名</param>
            <param name="line">行数</param>
            <remarks>
            <paramref name="name"/>、<paramref name="file"/>、<paramref name="line"/> は指定する必要がありません。
            それぞれ呼び出しメソッド名、ファイル名、行NOを自動で取得します。
            内部で例外が発生し、エラー通知を行わずに処理を続ける場合、このメソッドを呼び出して通知する必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.Warn(System.String,System.String,System.String,System.Int32)">
            <summary>
            警告メッセージを出力します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="name">メンバ名</param>
            <param name="file">ファイル名</param>
            <param name="line">行数</param>
            <remarks>
            <paramref name="name"/>、<paramref name="file"/>、<paramref name="line"/> は指定する必要がありません。
            それぞれ呼び出しメソッド名、ファイル名、行NOを自動で取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.Message(System.String,System.String,System.String,System.Int32)">
            <summary>
            メッセージログを出力します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="name">メンバ名</param>
            <param name="file">ファイル名</param>
            <param name="line">行数</param>
            <remarks>
            <paramref name="name"/>、<paramref name="file"/>、<paramref name="line"/> は指定する必要がありません。
            それぞれ呼び出しメソッド名、ファイル名、行NOを自動で取得します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.Monitor">
            <summary>
            プロセス情報を監視する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugMonitor"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.Infomation(System.String,System.String,System.Int32)">
            <summary>
            プロセス情報をログ出力します。
            </summary>
            <param name="name">メンバ名</param>
            <param name="file">ファイル名</param>
            <param name="line">行数</param>
            <remarks>
            引数の指定は不要です。
            <paramref name="name"/>、<paramref name="file"/>、<paramref name="line"/> は
            それぞれ呼び出しメソッド名、ファイル名、行NOを自動で取得します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.DetailMonitor">
            <summary>
            詳細なプロセス情報を監視する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugDetailMonitor"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.DetailInfomation(System.String,System.String,System.Int32)">
            <summary>
            詳細なプロセス詳細情報をログ出力します。
            </summary>
            <param name="name">メンバ名</param>
            <param name="file">ファイル名</param>
            <param name="line">行数</param>
            <remarks>
            引数の指定は不要です。
            <paramref name="name"/>、<paramref name="file"/>、<paramref name="line"/> は
            それぞれ呼び出しメソッド名、ファイル名、行NOを自動で取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.Trace(System.String,System.String,System.String,System.Int32)">
            <summary>
            トレースログを出力します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="name">メンバ名</param>
            <param name="file">ファイル名</param>
            <param name="line">行数</param>
            <remarks>
            <paramref name="name"/>、<paramref name="file"/>、<paramref name="line"/> は指定する必要がありません。
            それぞれ呼び出しメソッド名、ファイル名、行NOを自動で取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.StartTrace(Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs,Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs,System.String,System.String,System.Int32)">
            <summary>
            プロセス開始ログをトレースログ出力します。
            </summary>
            <param name="ca">画面作成引数</param>
            <param name="pa">POST引数</param>
            <param name="name">メンバ名</param>
            <param name="file">ファイル名</param>
            <param name="line">行数</param>
            <remarks>
            <paramref name="name"/>、<paramref name="file"/>、<paramref name="line"/> は指定する必要がありません。
            それぞれ呼び出しメソッド名、ファイル名、行NOを自動で取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.Debug(System.String,System.String,System.String,System.Int32)">
            <summary>
            デバッグログを出力します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="name">メンバ名</param>
            <param name="file">ファイル名</param>
            <param name="line">行数</param>
            <remarks>
            <paramref name="name"/>、<paramref name="file"/>、<paramref name="line"/> は指定する必要がありません。
            それぞれ呼び出しメソッド名、ファイル名、行NOを自動で取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.DebugError(System.Exception,System.String,System.String,System.Int32)">
            <summary>
            デバッグエラーログを出力します。
            </summary>
            <param name="ex">例外</param>
            <param name="name">メンバ名</param>
            <param name="file">ファイル名</param>
            <param name="line">行数</param>
            <remarks>
            <paramref name="name"/>、<paramref name="file"/>、<paramref name="line"/> は指定する必要がありません。
            それぞれ呼び出しメソッド名、ファイル名、行NOを自動で取得します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.scheduler">
            <summary>
            ログ出力スレッドを管理する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Tasks.LimitedConcurrencyLevelTaskScheduler"/> です。
            </summary>
            <remarks>
            起動するスレッド数を制御します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.LogEventAsync(Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogLevel,System.String,System.String,System.String,System.Int32)">
            <summary>
            ログ出力イベントを発生させます。
            </summary>
            <param name="level">ログ出力レベルを表す <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogLevel"/></param>
            <param name="message">メッセージ</param>
            <param name="name">メンバ名</param>
            <param name="file">ファイル名</param>
            <param name="line">行数</param>
            <remarks>
            <see cref="T:System.Threading.Tasks.Task"/> を利用し、ログイベントを発行する前にこのメソッドは終了します。
            非同期で <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.LogOutEvent"/> を発行します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.CustomLogEventAsync(Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog"/> で用意されている通常ログ以外のログを出力します。
            </summary>
            <param name="args">ログ出力に必要な情報を保持する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.LogEvent(Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogLevel,System.DateTime,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.Diagnostics.StackTrace)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.LogOutEvent"/> イベントを発生させます。
            </summary>
            <param name="level">ログ出力レベル</param>
            <param name="date">実行日付</param>
            <param name="assembly">アセンブリ名</param>
            <param name="main">メインスレッドのID</param>
            <param name="sub">サブスレッドのID</param>
            <param name="thread">スレッド名</param>
            <param name="message">メッセージ</param>
            <param name="name">メンバ名</param>
            <param name="file">ファイル名</param>
            <param name="line">行数</param>
            <param name="trace">スタックトレース</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.Instance">
            <summary>
            ログ出力インスタンスです。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.logOutEvent">
            <summary>
            ログ出力イベントハンドラです。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog.LogOutEvent">
            <summary>
            ログ出力の要求があった場合に発生します。
            </summary>
            <remarks>
            このイベントを処理することで、ログ出力を様々な出力形態で行うことができます。
            このイベントでグリッドへデータを表示する、このイベントでファイルへ出力する、といった制御を行います。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs">
            <summary>
            ログ出力イベントのデータを提供するイベント引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogLevel,System.DateTime,System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.Diagnostics.StackTrace)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="level">ログレベル</param>
            <param name="date">出力日付</param>
            <param name="assembly">アセンブリ名</param>
            <param name="main">メインスレッドのID</param>
            <param name="sub">サブスレッドのID</param>
            <param name="thread">スレッド名</param>
            <param name="file">ファイル名</param>
            <param name="line">行数</param>
            <param name="name">メンバ名</param>
            <param name="message">メッセージ</param>
            <param name="trace">スタックトレース</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs.Level">
            <summary>
            ログ出力レベルを表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogLevel"/> を取得します。
            </summary>
            <value>ログ出力レベルを表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogLevel"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs.File">
            <summary>
            ファイル名を取得します。
            </summary>
            <value>ファイル名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs.Line">
            <summary>
            行数を取得します。
            </summary>
            <value>行数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs.AssemblyName">
            <summary>
            アセンブリ名を取得します。
            </summary>
            <value>アセンブリ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs.MainThreadId">
            <summary>
            メインスレッドIDを取得します。
            </summary>
            <value>メインスレッドID</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs.SubThreadId">
            <summary>
            サブスレッドIDを取得します。
            </summary>
            <value>サブスレッドID</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs.ThreadName">
            <summary>
            スレッド名を取得します。
            </summary>
            <value>スレッド名</value>
            <remarks>
            この値はFormCheck値が設定されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs.MemberName">
            <summary>
            メンバ名を取得します。
            </summary>
            <value>メンバ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs.Date">
            <summary>
            ログ出力日付を取得します。
            </summary>
            <value>ログ出力日付</value>
            <remarks>
            ログ出力の要求を発行した日時を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs.Message">
            <summary>
            メッセージを取得します。
            </summary>
            <value>メッセージ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogEventArgs.StackTrace">
            <summary>
            スタックトレースを取得します。
            </summary>
            <value>スタックトレース</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogLevel">
            <summary>
            AOログ出力レベルを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogLevel.Non">
            <summary>
            ログ出力を行いません
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogLevel.Error">
            <summary>
            エラーログ
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogLevel.Query">
            <summary>
            SQLクエリ
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogLevel.Warn">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogLevel.Message">
            <summary>
            メッセージ
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogLevel.ProcessInfo">
            <summary>
            プロセス状態表示
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogLevel.Trace">
            <summary>
            トレースログ
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogLevel.Debug">
            <summary>
            デバッグログ
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogTraceListener">
            <summary>
            AoLogに出力するリスナです。
            <c>fw:3</c>
            </summary>
            <remarks>
            .NET Framework標準のログを<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog"/> を利用して発行します。
            ファイル出力を行わずにログ出力画面などで確認を行うことができます。
            </remarks>
            <example>
            例えば、「AONMENU.exe.config」ファイルの「configuration」配下に以下のようなタグを記述します。
            <code>
            &lt;configuration&gt;
              &lt;system.diagnostics&gt;
                &lt;sources&gt;
                  &lt;source name="AoLogSource" switchName="AoLogSwitch"&gt;
                    &lt;listeners&gt;
                      &lt;add name="AoLog"/&gt;
                    &lt;/listeners&gt;
                  &lt;/source&gt;
                  &lt;source name="System.Net.Sockets"      switchName="AoLogSwitch"&gt;&lt;listeners&gt;&lt;add name="AoLog" /&gt;&lt;/listeners&gt;&lt;/source&gt;
                  &lt;source name="System.Net"              switchName="AoLogSwitch"&gt;&lt;listeners&gt;&lt;add name="AoLog" /&gt;&lt;/listeners&gt;&lt;/source&gt;
                  &lt;source name="System.Net.HttpListener" switchName="AoLogSwitch"&gt;&lt;listeners&gt;&lt;add name="AoLog" /&gt;&lt;/listeners&gt;&lt;/source&gt;
                  &lt;source name="System.Net.Cache"        switchName="AoLogSwitch"&gt;&lt;listeners&gt;&lt;add name="AoLog" /&gt;&lt;/listeners&gt;&lt;/source&gt;
                &lt;/sources&gt;
                &lt;switches&gt;
                  &lt;add name="AoLogSwitch" value="Verbose" /&gt;
                &lt;/switches&gt;
                &lt;sharedListeners&gt;
                  &lt;add name="AoLog" type="Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogTraceListener, Ill.Incorporated.Aladdinoffice.Framework" /&gt;
                &lt;/sharedListeners&gt;
              &lt;/system.diagnostics&gt;
            &lt;/configuration&gt;
            </code>
            ネットワークログがログ出力画面にトレースログとして出力されます。
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogTraceListener.Write(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLogTraceListener.WriteLine(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Interfaces.IShowAoException">
            <summary>
            詳細ログ出力用インターフェースです。
            </summary>
            <remarks>
            エラーを何らかの形で出力する場合に詳細を出力するかどうかを判断できるようにします。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Interfaces.IShowAoException.UseDetailLogout">
            <summary>
            詳細ログを出力するかを取得します。
            </summary>
            <value>詳細ログを出力する場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Surrogates.SurrogatedType">
            <summary>
            <see cref="T:System.Type"/> 型を<see cref="T:System.Runtime.Serialization.DataContractSerializer"/> でシリアル化、及び、逆シリアル化するための代理型クラスです。
            </summary>
            <remarks>
            <see cref="T:System.Runtime.Serialization.DataContractAttribute"/> の Namespace は <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData"/> と合わせておきます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Surrogates.SurrogatedType.ConvertToSurrogate(System.Type)">
            <summary>
            <see cref="T:System.Type"/> 型のオブジェクトを、シリアル化可能な代理型である <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Surrogates.SurrogatedType"/> 型に変換します。
            </summary>
            <param name="self">シリアル化する <see cref="T:System.Type"/> 型のオブジェクト</param>
            <returns><paramref name="self"/> をシリアル化した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Surrogates.SurrogatedType"/> 型のオブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Surrogates.SurrogatedType.ConvertFromSurrogate(Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Surrogates.SurrogatedType)">
            <summary>
            逆シリアル化された <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Surrogates.SurrogatedType"/> 型のオブジェクトを、 <see cref="T:System.Type"/> 型のオブジェクト に変換します。
            </summary>
            <param name="surrogate">逆シリアル化する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Surrogates.SurrogatedType"/> 型のオブジェクト</param>
            <returns><paramref name="surrogate"/> を逆シリアル化した <see cref="T:System.Type"/> 型のオブジェクト</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Surrogates.SurrogatedType.AssemblyName">
            <summary>
            このインスタンスの元になった <see cref="T:System.Type"/> オブジェクトのアセンブリ名を取得、設定します。
            </summary>
            <value>このインスタンスの元になった <see cref="T:System.Type"/> オブジェクトのアセンブリ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Surrogates.SurrogatedType.TypeName">
            <summary>
            このインスタンスの元になった <see cref="T:System.Type"/> オブジェクトの型名を取得、設定します。
            </summary>
            <value>このインスタンスの元になった <see cref="T:System.Type"/> オブジェクトの型名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.Surrogates.SurrogatedType.GenericArgs">
            <summary>
            このインスタンスの元になった <see cref="T:System.Type"/> オブジェクトのジェネリックパラメータを取得、設定します。
            </summary>
            <value>このインスタンスの元になった <see cref="T:System.Type"/> オブジェクトのジェネリックパラメータ</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Drawing.CustomColorConverter`1">
            <summary>
            <see cref="T:System.Drawing.Color"/> を1つのデータ型に変換する<see cref="T:System.ComponentModel.TypeConverter"/> です。
            </summary>
            <typeparam name="T">カラーを取得するためのカスタム属性</typeparam>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Resources.AladdinColors"/> で宣言されている <typeparamref name="T"/> 属性が付与されたフィールドの
            <see cref="T:System.ComponentModel.DescriptionAttribute"/> 属性の <see cref="P:System.ComponentModel.DescriptionAttribute.Description"/> の文字列で相互変換を行います。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Drawing.CustomColorConverter`1.COLOR_NAME_DICTIONARY">
            <summary>
            アラジンオフィスカラーのリストキー名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Drawing.CustomColorConverter`1.#cctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Drawing.CustomColorConverter`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Drawing.CustomColorConverter`1.GetDictionary``1">
            <summary>
            指定のカスタム属性が付与されているカラーを取得します。
            </summary>
            <typeparam name="TDic">カラーを取得するためのカスタム属性</typeparam>
            <returns>カラー</returns>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Resources.AladdinColors"/> で宣言されている <typeparamref name="TDic"/>が付与されたフィールドの
            カラーと説明を取得し、説明をキーにしてカラーを設定します。<br/>
            <see cref="P:System.Collections.Generic.KeyValuePair`2.Key"/> ... カラーを表す文字列<br/>
            <see cref="P:System.Collections.Generic.KeyValuePair`2.Value"/> ... カラー<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Drawing.CustomColorConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Drawing.CustomColorConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Drawing.CustomColorConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Drawing.CustomColorConverter`1.Dictionary">
            <summary>
            <typeparamref name="T"/> のカスタム属性で定義されているカラーを取得します。
            </summary>
            <value>定義されているカラー</value>
            <remarks>
            <see cref="P:System.Collections.Generic.KeyValuePair`2.Key"/> ... カラーを表す文字列<br/>
            <see cref="P:System.Collections.Generic.KeyValuePair`2.Value"/> ... カラー<br/>
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Drawing.CustomFontConverter">
            <summary>
            縦書き<see cref="T:System.Drawing.Font"/> にも対応した<see cref="T:System.ComponentModel.TypeConverter"/> です。
            </summary>
            <remarks>
            <see cref="T:System.Drawing.FontConverter"/> と同様の使用ができます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Drawing.CustomFontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Drawing.CustomFontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Drawing.CustomFontConverter.GetVerticalFont(System.Drawing.Font)">
            <summary>
            縦書きの<see cref="T:System.Drawing.Font"/>を作成します。
            </summary>
            <param name="font">ベースとなる<see cref="T:System.Drawing.Font"/></param>
            <returns>縦書きの<see cref="T:System.Drawing.Font"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Drawing.CustomFontConverter.GetNormalFont(System.Drawing.Font)">
            <summary>
            縦書き<see cref="T:System.Drawing.Font"/> から通常の<see cref="T:System.Drawing.Font"/> を作成します。
            </summary>
            <param name="font">ベースとなる縦書きフォント</param>
            <returns>通常の<see cref="T:System.Drawing.Font"/></returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute">
            <summary>
            対象のプロパティがエンティティであることを示すためのカスタム属性クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.UseAllColumnsProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.UseAllColumns"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.AddColumnsProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.AddColumns"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.ColumnsProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.Columns"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.RowValidationTypeProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.RowValidationType"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.#ctor">
            <summary>
            バイナリ列以外のすべての列を必要な列として指定する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <remarks>
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.#ctor(System.Boolean,System.String[])">
            <summary>
            すべての列が必要かどうか、および、追加取得する必要があるバイナリ列名を指定して <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="useAll">すべての列が必要な場合は true。バイナリ列を省く場合は false。</param>
            <param name="addColumns">
            追加取得する必要があるバイナリ列名の一覧。<paramref name="useAll"/> が false の場合に有効です。
            </param>
            <remarks>
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.#ctor(System.String[])">
            <summary>
            必要な列のみを指定して <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="columns">必要な列名一覧</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.UseAllColumns">
            <summary>
            すべて列が必要かどうかを取得、設定します。
            </summary>
            <value>すべての列が必要な場合は true。それ以外の場合は false。</value>
            <remarks>
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.AddColumns">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.UseAllColumns"/> プロパティが false の場合に、追加取得するバイナリ列名の一覧を取得、設定します。
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.Columns"/> プロパティが null の場合のみ有効です。
            </summary>
            <value>追加取得するバイナリ列名の一覧</value>
            <remarks>
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.Columns">
            <summary>
            必要な列名一覧を取得、設定します。
            </summary>
            <value>必要な列名一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute.RowValidationType">
            <summary>
            エンティティ行の有効性を判定するための判定方法を取得、設定します。
            </summary>
            <value>エンティティ行の有効性を判定するための判定方法</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingDictionary">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject"/> 同士のメンバーのマッピング情報を管理するためのディクショナリクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingDictionary.GetDefaultValue">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingDictionary.Add(System.String,System.String,System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingDirection,Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter)">
            <summary>
            バインディング用オブジェクト同士のマッピングを指定します。
            </summary>
            <param name="sourceName">マッピング元のバインディング用オブジェクト名</param>
            <param name="sourceMemberName">マッピング元のバインディング用オブジェクトのメンバー名</param>
            <param name="targetName">マッピング先のバインディング用オブジェクト名</param>
            <param name="targetMemberName">マッピング先のバインディング用オブジェクトのメンバー名</param>
            <param name="direction">
            マッピング方向。<br/>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingDirection.OneWayToSource"/> が含まれる場合は、<paramref name="targetName"/> / <paramref name="targetMemberName"/> を
            キーとしたマッピングが指定されます。<br/>
            この時、<paramref name="converter"/> が null でなければ、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingTargetItem.Converter"/> には <paramref name="converter"/> の
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ReverseConverter"/> が設定されます。
            </param>
            <param name="converter">バインディング用の値の反映時に使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingDictionary.Add(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingItem,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingTargetItem)">
            <summary>
            バインディング用オブジェクト同士のマッピングを指定します。
            </summary>
            <param name="source">マッピング元</param>
            <param name="target">マッピング先</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingDictionary.Remove(System.String,System.String)">
            <summary>
            指定したバインディング用オブジェクト、及び、メンバーに関連するマッピング情報をすべて除去します。
            </summary>
            <param name="sourceName">バインディング用オブジェクト名</param>
            <param name="sourceMemberName">バインディング用オブジェクトのメンバー名</param>
            <returns>常に、true。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingDictionary.ContainsKey(System.String,System.String)">
            <summary>
            指定したバインディング用オブジェクト、及び、メンバーに関連するマッピング情報が存在するかどうかを返します。
            </summary>
            <param name="sourceName">バインディング用オブジェクト名</param>
            <param name="sourceMemberName">バインディング用オブジェクトのメンバー名</param>
            <returns>マッピング情報が存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingDictionary.Item(System.String,System.String)">
            <summary>
            指定したバインディング用オブジェクトのメンバーにマッピングされているオブジェクト、及び、メンバーの一覧を取得します。
            </summary>
            <param name="sourceName">バインディング用オブジェクト名</param>
            <param name="sourceMemberName">バインディング用オブジェクトのメンバー名</param>
            <value>マッピング先の一覧</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingDirection">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject"/> 同士のメンバーのマッピング方向を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingDirection.OneWay">
            <summary>
            ソース → ターゲット への反映のみ
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingDirection.OneWayToSource">
            <summary>
            ターゲット → ソース への反映のみ
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceMappingDirection.TwoWay">
            <summary>
            ソース ←→ ターゲット 相互反映
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException">
            <summary>
            データ変更イベント処理中のエラー情報を表すクラスです。
            </summary>
            <example>
            <code>
                var ex = new DataEventException("Error Message");
                ex.AddEventItem(this.Module, Module.PropertyNames.売上日付From, false); // DataEventItem.IsErrorTarget = falseの場合、UI上ではエラー表示されません。
                ex.AddEventItem(this.Module, Module.PropertyNames.売上日付To, truf);    // DataEventItem.IsErrorTarget = true の場合、UI上でエラー表示されます。
            </code>
            </example>
            <remarks>
            <seealso cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventItem"/> も参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException.#ctor(System.String,System.Object[])">
            <summary>
            指定したメッセージの、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="args">メッセージの引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException.#ctor(System.Object,System.String,System.String,System.Object[])">
            <summary>
            対象のオブジェクト、及び、プロパティに関する、指定したメッセージの、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="obj">対象オブジェクト</param>
            <param name="property">対象プロパティ名</param>
            <param name="message">メッセージ</param>
            <param name="args">メッセージの引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException.AddEventItem(System.Object,System.String,System.Boolean)">
            <summary>
            このエラーに関連するオブジェクト、及び、プロパティを指定します。
            </summary>
            <param name="obj">関連オブジェクト</param>
            <param name="property">関連プロパティ名</param>
            <param name="isErrorItem">エラー表示対象項目である場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException.AddEventItem(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventItem[])">
            <summary>
            このエラーに関連するデータ変更イベント処理関連項目を指定します。
            </summary>
            <param name="items">データ変更イベント処理関連項目</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException.HasErrorItem(System.Object,System.String)">
            <summary>
            指定したオブジェクト、及び、プロパティーが、このエラー情報のエラー表示対象として含まれているかどうかを返します。
            </summary>
            <param name="obj">対象オブジェクト</param>
            <param name="property">対象プロパティ名</param>
            <returns>このエラー情報のエラー表示対象として含まれている場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException.Find(System.Exception)">
            <summary>
            指定した例外が、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException"/> 由来のものである場合に、その <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException"/> を取得します。
            </summary>
            <param name="ex">対象の例外</param>
            <returns>
            <paramref name="ex"/> が <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException"/> 由来のものである場合はその <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException"/> を、
            他の場合は null を、
            それぞれ返します。
            </returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException.EventItems">
            <summary>
            このエラー情報に影響するデータ変更イベント項目の一覧を取得します。
            </summary>
            <value>このエラー情報に影響するデータ変更イベント項目の一覧</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary">
            <summary>
            データ変更イベントハンドラの管理を行うディクショナリクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary._flags">
            <summary>
            データ変更イベントハンドラの抽出用フラグを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary._customizedDataEventHandlerIdentifier">
            <summary>
            カスタマイズ版メソッドの抽出用識別子を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.ContainsKey(System.Type,System.String)">
            <summary>
            指定した型、及び、プロパティ名のデータ変更イベントのイベントハンドラが格納されているかどうかを返します。
            </summary>
            <param name="sourceType">イベントが発生する型</param>
            <param name="propertyName">イベントが発生するプロパティ名</param>
            <returns>t格納されている場合は true。格納されていない場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.Add(System.Type,System.String,System.Action{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs}[])">
            <summary>
            指定した型、及び、プロパティ名のデータ変更イベントのイベントハンドラを追加します。
            </summary>
            <param name="sourceType">イベントが発生する型</param>
            <param name="propertyName">イベントが発生するプロパティ名</param>
            <param name="values">データ変更イベントハンドラ</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.Remove(System.Type,System.String)">
            <summary>
            指定した型、及び、プロパティ名のデータ変更イベントのハンドラを削除します。
            </summary>
            <param name="sourceType">イベントが発生する型</param>
            <param name="propertyName">イベントが発生するプロパティ名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.RemoveKey(Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.ClearKeys">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.GetDefaultValue">
            <inheritdoc/>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary._paramTypes">
            <summary>
            データ変更イベントハンドラを検索するためのメソッド引数の配列です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.Initialize(System.Object)">
            <summary>
            指定したオブジェクトから、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Attributes.DataEventAttribute"/> が設定されているメソッドを
            データ変更イベントハンドラとして抽出し、ディクショナリの要素に追加してインスタンスを初期化します。
            </summary>
            <param name="obj">データ変更イベントハンドラ抽出対象オブジェクト</param>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.OnInitializing(System.ComponentModel.HandledEventArgs)"/> / <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.OnInitialized"/> の
            各メソッドを実行してイベントを発生させて下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.InitializeMain(System.Object)">
            <summary>
            指定したオブジェクトから、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.Attributes.DataEventAttribute"/> が設定されているメソッドを
            データ変更イベントハンドラとして抽出し、ディクショナリの要素に追加します。
            </summary>
            <param name="obj">データ変更イベントハンドラ抽出対象オブジェクト</param>
            <remarks>
            完適版とカスタマイズ版のメソッドが混在する場合、例えば、〇〇_Changed メソッド( = 完適版)と〇〇_Changed_Custom メソッド(カスタマイズ版)が存在
            する場合は、カスタマイズ版のみが優先して追加されます。<br/>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.Initialize(System.Object)"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行前後の
            適切なタイミングで、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.OnInitializing(System.ComponentModel.HandledEventArgs)"/> / <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.OnInitialized"/> の各メソッドを呼び出すようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.IsCustomizedMethodName(System.String)">
            <summary>
            指定したメソッド名がカスタマイズ版かどうかを返します。
            </summary>
            <param name="name">メソッド名</param>
            <returns>カスタマイズ版の場合は true。そうでない場合は false。</returns>
            <remarks>
            指定したメソッド名が <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary._customizedDataEventHandlerIdentifier"/> で終わるかどうかで判定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.GetCustomizedMethodName(System.String)">
            <summary>
            指定したメソッド名をカスタマイズ版メソッド名に変換します。
            </summary>
            <param name="name">メソッド名</param>
            <returns>カスタマイズ版メソッド名</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.OnInitializing(System.ComponentModel.HandledEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.Initializing"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.OnInitialized">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.Initialized"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.OnAddingDefaultHandler(Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerModifyingEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.AddingDefaultHandler"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.OnDefaultHandlerAdded(Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerModifiedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.DefaultHandlerAdded"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.AddItemEventHandler(Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList)">
            <summary>
            ディクショナリの値である <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList"/> のイベントハンドラを登録します。
            </summary>
            <param name="item">ディクショナリの値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.RemoveItemEventHandler(Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList)">
            <summary>
            ディクショナリの値である <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList"/> からイベントハンドラの登録を解除します。
            </summary>
            <param name="item">ディクショナリの値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.Item_AddingDefaultHandler(System.Object,System.ComponentModel.HandledEventArgs)">
            <summary>
            ディクショナリの値である <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList"/> の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList.AddingDefaultHandler"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            ディクショナリの値である <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList"/> からイベントが来た際に、自身の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.AddingDefaultHandler"/> イベントとして再通知を行います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.Item_DefaultHandlerAdded(System.Object,System.EventArgs)">
            <summary>
            ディクショナリの値である <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList"/> の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList.DefaultHandlerAdded"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            ディクショナリの値である <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerList"/> からイベントが来た際に、自身の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.DefaultHandlerAdded"/> イベントとして再通知を行います。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.Item(Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.Item(System.Type,System.String)">
            <summary>
            指定した型、及び、プロパティ名に関連付けられているデータ変更イベントハンドラを取得、設定します。
            </summary>
            <param name="sourceType">イベントが発生する型</param>
            <param name="propertyName">イベントが発生するプロパティ名</param>
            <value>データ変更イベントハンドラ</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.Initializing">
            <summary>
            インスタンスの初期化処理が開始されたときに発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.Initialized">
            <summary>
            インスタンスの初期化処理が完了したときに発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.AddingDefaultHandler">
            <summary>
            既定のデータ変更イベントハンドラ (<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.Action"/>) が追加される直前に発生します。
            </summary>
            <remarks>
            このイベントハンド内で、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.Action"/> の追加処理を行わないでください。
            <see cref="T:System.StackOverflowException"/> が発生する恐れがあります。
            </remarks>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataHandlerDictionary.DefaultHandlerAdded">
            <summary>
            既定のデータ変更イベントハンドラ (<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.Action"/>) が追加された後に発生します。
            </summary>
            <remarks>
            このイベントハンド内で、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.CheckAction.Action"/> の追加処理を行わないでください。
            <see cref="T:System.StackOverflowException"/> が発生する恐れがあります。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey">
            <summary>
            データ変更イベントハンドラ管理ディクショナリ用キークラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey.Create(System.Type,System.String)">
            <summary>
            指定した型、及び、プロパティ名の、新しい <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey"/> を作成します。
            </summary>
            <param name="sourceType">イベントが発生するオブジェクトの型</param>
            <param name="propertyName">イベントが発生するオブジェクトのプロパティ名</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey"/> の新しいインスタンス</returns>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey._sourceType">
            <summary>
            イベントが発生するオブジェクトの型です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey._propertyName">
            <summary>
            イベントが発生するオブジェクトのプロパティ名です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey.op_Equality(Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey,Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey)">
            <summary>
            オペランドの値が等しい場合に true が返され、それ以外の場合は false が返されます。
            </summary>
            <param name="a">比較元</param>
            <param name="b">比較先</param>
            <returns>オペランドの値が等しい場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey.op_Inequality(Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey,Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey)">
            <summary>
            オペランドの値が異なる場合に true が返され、それ以外の場合は false が返されます。
            </summary>
            <param name="a">比較元</param>
            <param name="b">比較先</param>
            <returns>オペランドの値が異なる場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey.SourceType">
            <summary>
            イベントが発生するオブジェクトの型を取得します。
            </summary>
            <value>イベントが発生するオブジェクトの型</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.BusinessLogics.DataEventKey.PropertyName">
            <summary>
            イベントが発生するオブジェクトのプロパティ名を取得します。
            </summary>
            <value>イベントが発生するオブジェクトのプロパティ名</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventExceptionCollection">
            <summary>
            データ変更イベント処理中のエラー情報のコレクションクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventExceptionCollection.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventExceptionCollection"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventExceptionCollection.#ctor(System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException})">
            <summary>
            指定したコレクションからコピーされる要素を格納する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventExceptionCollection"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="collection">要素のコピー元のコレクション</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventExceptionCollection.#ctor(System.Collections.Generic.List{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException})">
            <summary>
            指定したリストからコピーされた要素を格納する  <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventExceptionCollection"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="list">要素のコピー元のリスト</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventItem">
            <summary>
            データ変更イベント処理に関連するオブジェクト、及び、プロパティを設定するためのクラスです。
            </summary>
            <example>
            <code>
                var ex = new DataEventException("Error Message");
                ex.AddEventItem(new DataEventItem(this.Module, Module.PropertyNames.売上日付From, false));  // IsErrorTarget = falseの場合、UI上ではエラー表示されません。
                ex.AddEventItem(new DataEventItem(this.Module, Module.PropertyNames.売上日付To, true));     // IsErrorTarget = true の場合、UI上でエラー表示されます。
            </code>
            </example>
            <remarks>
            データ変更イベント処理内の各種チェックにおいて、エラー/警告 (<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException"/>) を設定する際に、
            そのチェック処理のトリガーとなる項目を指定するために使用します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventItem.#ctor(System.Object,System.String)">
            <summary>
            対象のオブジェクト、及び、プロパティの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventItem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="obj">処理関連オブジェクト</param>
            <param name="property">処理関連プロパティ名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventItem.#ctor(System.Object,System.String,System.Boolean)">
            <summary>
            対象のオブジェクト、及び、プロパティに対してエラー表示対象かどうかを指定した、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventItem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="obj">処理関連オブジェクト</param>
            <param name="property">処理関連プロパティ名</param>
            <param name="isError">エラー/警告表示対象である場合は true。それ以外の場合は false。</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventItem.EventObj">
            <summary>
            データ変更イベント処理関連オブジェクトを取得、設定します。
            </summary>
            <value>データ変更イベント処理関連オブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventItem.PropertyName">
            <summary>
            データ変更イベント処理関連プロパティ名を取得、設定します。
            </summary>
            <value>データ変更イベント処理関連プロパティ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventItem.IsErrorTarget">
            <summary>
            エラー/警告の表示対象かどうかを取得、設定します。
            </summary>
            <value>エラー/警告の表示対象である場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ItemAttributeEventArgs">
            <summary>
            項目属性情報が要求されたときに発生するイベントのデータを提供します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ItemAttributeEventArgs.BaseAttribute">
            <summary>
            既定の項目属性情報です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ItemAttributeEventArgs.attribute">
            <summary>
            現在設定されている項目属性情報です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ItemAttributeEventArgs.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IItemAttribute,System.String,System.String,System.String,System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ItemAttributeEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="attr">既定の項目属性</param>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="property">項目名</param>
            <param name="index">イベントが発生したオブジェクトを保持するコレクション内でのインデックス</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ItemAttributeEventArgs.Attribute">
            <summary>
            項目属性情報を取得、設定します。
            </summary>
            <value>項目属性情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ItemAttributeEventArgs.Table">
            <summary>
            項目属性(変換項目属性)を検索するためのテーブル名を取得します。
            </summary>
            <value>項目属性(変換項目属性)を検索するためのテーブル名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ItemAttributeEventArgs.Column">
            <summary>
            項目属性(変換項目属性)を検索するための列名を取得します。
            </summary>
            <value>項目属性(変換項目属性)を検索するための列名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ItemAttributeEventArgs.Property">
            <summary>
            項目属性(変換項目属性)を検索するための項目名を取得します。
            </summary>
            <value>項目属性(変換項目属性)を検索するための項目名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ItemAttributeEventArgs.Index">
            <summary>
            イベントが発生したオブジェクトを保持するコレクション内でのインデックスを取得します。
            </summary>
            <value>イベントが発生したオブジェクトを保持するコレクション内でのインデックス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyStackPropertyChanged.StackPropertyChanged"/> イベントの通知処理用ヘルパークラスです。
            </summary>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyStackPropertyChanged"/> を実装しているクラスで使用します。<br/>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyStackPropertyChanged"/> の実装クラスにおいて、 <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyStackPropertyChanged"/> の各要素を実装する際、
            このクラスの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyStackPropertyChanged"/> 要素を参照することで、イベント発行処理を肩代わりさせます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.#ctor(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyStackPropertyChanged)">
            <summary>
            対象のイベント発生元オブジェクトから処理を委譲される <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="eventSource">イベント発生元オブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.RaiseStackPropertyChanged(System.Object,System.String,System.Object,System.Object,System.Int32)">
            <summary>
            対象のオブジェクト、及び、プロパティの値の変更通知を行います。<br/>
            ただし、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.IsSuspended"/> プロパティが true の場合は、イベントを発生させず、プロパティ変更情報を蓄積します。
            </summary>
            <param name="item">変更が発生したオブジェクトインスタンス</param>
            <param name="propName">変更が発生したプロパティ名</param>
            <param name="oldValue">変更前の値</param>
            <param name="newValue">変更後の値</param>
            <param name="index">変更が発生したオブジェクトを保持するコレクション内でのインデックス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.RaiseStackPropertyErrorChanged(System.Object,System.String,System.Object,System.Int32)">
            <summary>
            対象のオブジェクト、及び、エラーの変更通知を行います。<br/>
            ただし、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.IsSuspended"/> プロパティが true の場合は、イベントを発生させず、プロパティ変更情報を蓄積します。
            </summary>
            <param name="item">変更が発生したオブジェクトインスタンス</param>
            <param name="propName">変更が発生したプロパティ名</param>
            <param name="currentValue">現在の値</param>
            <param name="index">変更が発生したオブジェクトを保持するコレクション内でのインデックス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.RaiseStackPropertyWarningChanged(System.Object,System.String,System.Object,System.Int32)">
            <summary>
            対象のオブジェクト、及び、プロパティの警告の変更通知を行います。<br/>
            ただし、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.IsSuspended"/> プロパティが true の場合は、イベントを発生させず、プロパティ変更情報を蓄積します。
            </summary>
            <param name="item">変更が発生したオブジェクトインスタンス</param>
            <param name="propName">変更が発生したプロパティ名</param>
            <param name="currentValue">現在の値</param>
            <param name="index">変更が発生したオブジェクトを保持するコレクション内でのインデックス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.RaiseStackPropertyChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem[])">
            <summary>
            対象のプロパティ変更情報の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.StackPropertyChanged"/> イベントを発生させます。<br/>
            ただし、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.IsSuspended"/> プロパティが true の場合は、イベントを発生させず、プロパティ変更情報を蓄積します。
            </summary>
            <param name="properties">プロパティ変更情報</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper._PropertyChangedEventArgs">
            <summary>
            プロパティ変更情報を蓄積させ、まとめてイベント発生させるためのイベント引数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.HoldStackPropertyChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem[])">
            <summary>
            プロパティ変更情報を蓄積し、イベント発生を保留します。
            </summary>
            <param name="properties">プロパティ変更情報</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.RaiseHeldStackPropertyChanged">
            <summary>
            蓄積されているプロパティ変更情報で、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.StackPropertyChanged"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.OnStackPropertyChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.StackPropertyChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.IsHoldingStackPropertyChanged">
            <inheritdoc/>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper._isRefreshNeeded">
            <summary>
            すべてのプロパティに変更があったものとして処理する必要があるかどうかを示す値です。
            </summary>
            <value>すべてのプロパティに変更があったものとして処理する必要がある場合は true。それ以外の場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.SetRefreshNeeded">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.BeginEdit">
            <inheritdoc/>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.BeginEdit"/> が呼び出された後、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.Commit"/>、もしくは、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.Rollback"/> がまだ呼び出されていない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.Rollback">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.Commit">
            <inheritdoc/>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.BeginEdit"/> がまだ呼び出されていない場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.EventSource">
            <summary>
            イベント発生元オブジェクトを取得します。
            </summary>
            <value>イベント発生元オブジェクト</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.StackPropertyChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedHelper.IsSuspended">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Win32ToColorConverter">
            <summary>
            Windows カラー値(<see cref="T:System.Int32"/>) ← → GDI+ <see cref="T:System.Drawing.Color"/> 構造体 の相互変換を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.Win32ToColorConverter._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Win32ToColorConverter"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.Win32ToColorConverter.Convert(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が <see cref="T:System.Int32"/> の場合は対応する GDI+ <see cref="T:System.Drawing.Color"/> 構造体を、
            他の場合は <see cref="F:System.Drawing.Color.Empty"/> を、
            それぞれ返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.Win32ToColorConverter.ConvertBack(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が GDI+ <see cref="T:System.Drawing.Color"/> 構造体の場合は対応する Windows カラー値(<see cref="T:System.Int32"/>) を、
            他の場合は -1 を、
            それぞれ返します。
            </returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.Win32ToColorConverter.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Win32ToColorConverter"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Win32ToColorConverter"/> の既定のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.OleToColorConverter">
            <summary>
            OLE カラー値(<see cref="T:System.Int32"/>) ← → GDI+ <see cref="T:System.Drawing.Color"/> 構造体 の相互変換を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.OleToColorConverter._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.OleToColorConverter"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.OleToColorConverter.Convert(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が <see cref="T:System.Int32"/> の場合は対応する GDI+ <see cref="T:System.Drawing.Color"/> 構造体を、
            他の場合は、<see cref="F:System.Drawing.Color.Empty"/> を、
            それぞれ返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.OleToColorConverter.ConvertBack(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が GDI+ <see cref="T:System.Drawing.Color"/> 構造体の場合は対応する OLE カラー値(<see cref="T:System.Int32"/>) を、
            他の場合は -1 を、
            それぞれ返します。
            </returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.OleToColorConverter.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.OleToColorConverter"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.OleToColorConverter"/> の既定のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.HtmlToColorConverter">
            <summary>
            HTML カラーの文字列形式(<see cref="T:System.String"/>) ← → GDI+ <see cref="T:System.Drawing.Color"/> 構造体 の相互変換を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.HtmlToColorConverter._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.HtmlToColorConverter"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.HtmlToColorConverter.Convert(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が <see cref="T:System.String"/> の場合は対応する GDI+ <see cref="T:System.Drawing.Color"/> 構造体を、
            他の場合は <see cref="F:System.Drawing.Color.Empty"/> を、
            それぞれ返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.HtmlToColorConverter.ConvertBack(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が GDI+ <see cref="T:System.Drawing.Color"/> 構造体の場合は対応する HTML カラーの文字列形式(<see cref="T:System.String"/>) を、
            他の場合は <see cref="F:System.String.Empty"/> を、
            それぞれ返します。<br/>
            通常、HTML カラーの文字列形式(<see cref="T:System.String"/>)とは "Red"、"Blue"、"Green" など、最もよく使用される色の名前であり、"FF33AA" などの数値によるカラー値ではありません。
            </returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.HtmlToColorConverter.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.HtmlToColorConverter"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.HtmlToColorConverter"/> の既定のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.HexToColorConverter">
            <summary>
            HTML カラーの16進数表記形式(# 始まりの<see cref="T:System.String"/>) ← → GDI+ <see cref="T:System.Drawing.Color"/> 構造体 の相互変換を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Converters.HexToColorConverter._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.HexToColorConverter"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.HexToColorConverter.Convert(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が # 始まりの <see cref="T:System.String"/> の場合は対応する GDI+ <see cref="T:System.Drawing.Color"/> 構造体を、
            他の場合は <see cref="F:System.Drawing.Color.Empty"/> を、
            それぞれ返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.HexToColorConverter.ConvertBack(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が GDI+ <see cref="T:System.Drawing.Color"/> 構造体の場合は対応する HTML カラーの16進数表記形式(# 始まりの<see cref="T:System.String"/>) を、
            他の場合は <see cref="F:System.String.Empty"/> を、
            それぞれ返します。
            </returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.HexToColorConverter.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.HexToColorConverter"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.HexToColorConverter"/> の既定のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.MultiConverter">
            <summary>
            複数の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスの変換・逆変換処理を連動させて使用するためのラッパークラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.MultiConverter.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter[])">
            <summary>
            指定した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスの処理を連動させる、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.MultiConverter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="converters">連動させる <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスの一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.MultiConverter.Convert(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> に対して、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.MultiConverter.Converters"/> プロパティで指定された <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスの
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter.Convert(System.Object)"/> メソッドを順に実行した値を返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.MultiConverter.ConvertBack(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> に対して、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.MultiConverter.Converters"/> プロパティで指定された <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスの
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter.ConvertBack(System.Object)"/> メソッドを逆順に実行した値を返します。
            </returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.MultiConverter.Converters">
            <summary>
            連動させる<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスの一覧を取得します。
            </summary>
            <value>連動させる<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスの一覧</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter`2">
            <summary>
            <see cref="T:System.Object"/> ← → <see cref="T:System.Boolean"/> の相互変換を行うクラスです。
            </summary>
            <typeparam name="T1">true と判断する場合の値の型</typeparam>
            <typeparam name="T2">false と判断する場合の値の型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter`2.#ctor(`0,`1)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="trueVal">true と判断する場合の値</param>
            <param name="falseVal">false と判断する場合の値</param>
            <remarks>
            <paramref name="trueVal"/> / <paramref name="falseVal"/> は通常、値型 / static なクラスのインスタンス / singleton のいずれかになると思われます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter`2.Convert(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter`2.TrueValue"/> プロパティと同値である場合は true を、
            <paramref name="value"/> が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter`2.FalseValue"/> プロパティと同値である場合は false を、
            他の場合は null を、
            それぞれ返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter`2.ConvertBack(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> が true の場合は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter`2.TrueValue"/> プロパティの値を、
            <paramref name="value"/> が false の場合は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter`2.FalseValue"/> プロパティの値を、
            他の場合は null を、
            それぞれ返します。
            </returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter`2.TrueValue">
            <summary>
            true と判断する場合の値を取得します。
            </summary>
            <value>true と判断する場合の値</value>
            <remarks>
            通常は、値型 / static なクラスのインスタンス / singleton のいずれかになると思われます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter`2.FalseValue">
            <summary>
            false と判断する場合の値を取得します。
            </summary>
            <value>false と判断する場合の値</value>
            <remarks>
            通常は、値型 / static なクラスのインスタンス / singleton のいずれかになると思われます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter`1">
            <summary>
            <see cref="T:System.Object"/> ← → <see cref="T:System.Boolean"/> の相互変換を行うクラスです。
            </summary>
            <typeparam name="T">true/false を判断する値の型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter`1.#ctor(`0,`0)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="trueVal">true と判断する場合の値</param>
            <param name="falseVal">false と判断する場合の値</param>
            <remarks>
            <paramref name="trueVal"/> / <paramref name="falseVal"/> は通常、値型 / static なクラスのインスタンス / singleton のいずれかになると思われます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter">
            <summary>
            <see cref="T:System.Object"/> ← → <see cref="T:System.Boolean"/> の相互変換を行うクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter.#ctor(System.Object,System.Object)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ObjectToBooleanConverter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="trueVal">true と判断する場合の値</param>
            <param name="falseVal">false と判断する場合の値</param>
            <remarks>
            <paramref name="trueVal"/> / <paramref name="falseVal"/> は通常、値型 / static なクラスのインスタンス / singleton のいずれかになると思われます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ReverseConverter">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスの変換・逆変換処理を逆転させて使用するためのラッパークラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.ReverseConverter.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter)">
            <summary>
            指定した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスの処理を逆転させる、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ReverseConverter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="converter">処理を逆転させる <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラス</param>
            <remarks>
            指定された <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスの変換・逆変換処理を逆転させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.ReverseConverter.Convert(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> に対して、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.ReverseConverter.Converter"/> プロパティで指定された <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスの
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter.ConvertBack(System.Object)"/> メソッドを実行した値を返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.ReverseConverter.ConvertBack(System.Object)">
            <inheritdoc/>
            <returns>
            <paramref name="value"/> に対して、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.ReverseConverter.Converter"/> プロパティで指定された <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスの
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter.Convert(System.Object)"/> メソッドを実行した値を返します。
            </returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Converters.ReverseConverter.Converter">
            <summary>
            変換・逆変換処理用の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスを取得します。
            </summary>
            <value>変換・逆変換処理用の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ReverseConverter`1">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスの変換・逆変換処理を逆転させて使用するためのジェネリックラッパークラスです。
            </summary>
            <typeparam name="T">変換・逆変換処理を逆転させたい <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> 実装クラスの型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.ReverseConverter`1.#ctor">
            <summary>
            引数なしで生成した <typeparamref name="T"/> クラスのインスタンスの処理を逆転させる、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ReverseConverter`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Converters.ReverseConverter`1.#ctor(System.Object[])">
            <summary>
            指定した引数で生成した <typeparamref name="T"/> クラスのインスタンスの処理を逆転させる、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.ReverseConverter`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="parameters"><typeparamref name="T"/> クラスの新しいインスタンスを生成するためのコンストラクタ引数</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseAliasFactory">
            <summary>
            データベースとの接続で利用するエイリアス名を作成するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseAliasFactory.ALIAS_COLUMN_NAME_SEPARATOR">
            <summary>
            エイリアス名を構成するのに利用するセパレータ文字列を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseAliasFactory.Create(System.String,System.String)">
            <summary>
            エイリアス名を作成します。
            </summary>
            <param name="columnName">構成する列名</param>
            <param name="prefixName">接頭辞</param>
            <returns>エイリアス名</returns>
            <remarks><paramref name="columnName"/>、<paramref name="prefixName"/>は角括弧「[]」が除かれます。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseAliasFactory.ToColumnName(System.String)">
            <summary>
            エイリアス名からテーブルの列名を作成します。
            </summary>
            <param name="aliasName">エイリアス名</param>
            <returns>列名</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseAliasFactory.IsAppendPrefix(System.String)">
            <summary>
            接頭辞が付いているか判定します。
            </summary>
            <param name="aliasName">エイリアス名</param>
            <returns>接頭辞がついている場合 true。それ以外の場合 false。</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeAttribute">
            <summary>
            データベース型への変換情報を保持するカスタム属性クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeAttribute.#ctor(System.Type)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="type">変換先の型</param>
            <remarks></remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeAttribute.Type">
            <summary>
            変換先の型を取得、設定します。
            </summary>
            <value>変換先の型</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign">
            <summary>
            比較演算子を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsEqual">
            <summary>
            等しい(＝)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsNotEqual">
            <summary>
            等しくない(＜＞)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsGreaterThan">
            <summary>
            真に大きい(＞)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsLessThan">
            <summary>
            真に小さい(＜)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsGreaterThanOrEqual">
            <summary>
            以上(≧)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsLessThanOrEqual">
            <summary>
            以下(≦)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsLike">
            <summary>
            Like
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsNotLike">
            <summary>
            Not Like
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsNone">
            <summary>
            なし
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSignExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSignExtensions.Invert(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign)">
            <summary>
            符号の反転を行います。
            </summary>
            <param name="sign">比較演算子</param>
            <returns>符号を反転した比較演算子</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo">
            <summary>
            Entityの結合情報を管理するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo._where">
            <summary>
            結合条件です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="left">左辺Entity</param>
            <param name="right">右辺Entity</param>
            <param name="join">Entityの結合を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.JoinState"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="left">左辺Entity</param>
            <param name="right">右辺Entity</param>
            <param name="where">結合条件</param>
            <param name="join">Entityの結合を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.JoinState"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState,System.String[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="sf">ストアドファンクションを表すEntity</param>
            <param name="apply">Entityの結合を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.JoinState"/></param>
            <param name="args">ストアドファンクションの引数</param>
            <remarks>
            <paramref name="apply"/> には<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.CROSS_APPLY"/>、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.OUTER_APPLY"/> のいずれかを指定します。
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.CROSS_APPLY"/>、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.OUTER_APPLY"/>以外を指定した場合は正しく動作しません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[],System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="left">左辺Entity</param>
            <param name="right">右辺Entity</param>
            <param name="args">ストアドファンクションの引数</param>
            <param name="where">結合条件</param>
            <param name="join">Entityの結合を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.JoinState"/></param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.AutoJoin">
            <summary>
            自動結合を行うかを取得、設定します。
            </summary>
            <value>自動結合を行う場合は true。それ以外の場合は false。</value>
            <remarks>
            trueが設定されている場合、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.RightEntity"/> のプライマリキーで結合条件を作成します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.LeftEntity">
            <summary>
            左辺Entityを取得、設定します。
            </summary>
            <value>左辺Entity</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.RightEntity">
            <summary>
            右辺Entityを取得、設定します。
            </summary>
            <value>右辺Entity</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.IsNullReplace">
            <summary>
            取得値がNULLの場合に置換処理を行うかどうかを取得、設定します。
            </summary>
            <value>ISNULL関数を使ってNULLの場合デフォルト値で置き換える場合は true。それ以外の場合は false。</value>
            <remarks>
            外部結合時にのみ有効です。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.JoinState">
            <summary>
            結合を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.JoinState"/>を取得、設定します。
            </summary>
            <value>結合を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.JoinState"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.Argument">
            <summary>
            ストアドファンクションの引数を取得、設定します。
            </summary>
            <value>ストアドファンクションの引数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.Where">
            <summary>
            結合条件を取得、設定します。
            </summary>
            <value>結合条件</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo.AutoJoin"/> がtrueの場合、自動作成されます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder">
            <summary>
            テーブルを作成するためのクエリを作成するためのクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder.#ctor(System.String)">
            <summary>
            コンストラクタ
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">クエリの名称</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder.Build(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            このメソッドは利用できません。
            </summary>
            <param name="entity">Entity</param>
            <returns>ブランク</returns>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IQueryBuilder"/> の実装のためにあります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder.Build(System.String,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder.DbColumnInfo},System.String[])">
            <summary>
            テーブル作成クエリを作成し、返します。
            </summary>
            <param name="tableName">テーブル名</param>
            <param name="columns">作成する列の情報</param>
            <param name="primaryKeys">主キーとする列名</param>
            <returns>テーブル作成クエリ</returns>
            <remarks>
            このメソッドを呼び出した場合 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder.Query"/> を作成したクエリで置き換えます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder.GetExistenceCheckQuery(System.String)">
            <summary>
            テーブルの存在確認チェッククエリを作成します。
            </summary>
            <param name="tableName">テーブル名</param>
            <returns>インデックス存在確認チェック用クエリ</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder.DbColumnInfo">
            <summary>
            テーブルの列情報を表すクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder.DbColumnInfo.#ctor(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute,System.Boolean)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder.DbColumnInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">列名</param>
            <param name="attr">列属性</param>
            <param name="temp">テーブルが一時テーブルの場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder.DbColumnInfo.ToString">
            <summary>
            テーブル作成時の列を宣言するための文字列を作成します。
            </summary>
            <returns>列宣言文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder.DbColumnInfo.Name">
            <summary>
            列名を取得、設定します。
            </summary>
            <value>列名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder.DbColumnInfo.Attribute">
            <summary>
            列属性を取得、設定します。
            </summary>
            <value>列属性</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CreateTableQueryBuilder.DbColumnInfo.IsTemplate">
            <summary>
            一時テーブルフラグを取得、設定します。
            </summary>
            <value>テーブルが一時テーブルの場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.MergeQueryBuilder">
            <summary>
            テーブルのレコードを登録、または更新するためのクエリを作成するためのクラスです。
            </summary>
            <remarks>
            このビルダークラスを利用すると、レコードが存在する場合は更新、存在しない場合は登録を行うクエリを作成することができます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.MergeQueryBuilder.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.MergeQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.MergeQueryBuilder.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.MergeQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">クエリ名称</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.MergeQueryBuilder.Build(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            テーブルのレコードを登録、更新するためのクエリを作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <returns>レコード登録、更新クエリ</returns>
            <remarks>
            このメソッドを呼び出した場合 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder.Query"/> を作成したクエリで置き換えます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.MergeQueryBuilder.WhereColumnNames">
            <summary>
            更新時のキーとなる列名を取得、設定します。
            </summary>
            <value>更新時のキーとなる列名</value>
            <remarks>
            nullの場合、プライマリキーで条件を作成します。
            このキー項目が存在する場合は更新、存在しない場合は登録を行うようになります。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Drawing.BackColorConverter">
            <summary>
            背景色の<see cref="T:System.Drawing.Color"/> を1つのデータ型に変換する<see cref="T:System.ComponentModel.TypeConverter"/> です。
            </summary>
            <remarks>
            アラジンオフィス独自のカラーと文字列を相互変換します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Drawing.ForeColorConverter">
            <summary>
            文字色の<see cref="T:System.Drawing.Color"/> を1つのデータ型に変換する<see cref="T:System.ComponentModel.TypeConverter"/> です。
            </summary>
            <remarks>
            アラジンオフィス独自のカラーと文字列を相互変換します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity">
            <summary>
            スキーマを動的に定義するエンティティクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.#ctor(System.String)">
            <summary>
            指定したテーブル名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="tableName">テーブル名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.#ctor(System.Boolean,System.String[])">
            <summary>
            空のテーブル名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="all">バイナリ列を含むすべての列を使用する場合は true。バイナリ列以外の列のみ使用する場合は false。</param>
            <param name="addColumns"><paramref name="all"/> が false の場合に、追加で使用するバイナリ列の一覧</param>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary"/> において、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute"/>を基にインスタンスを初期化するために使用するコンストラクタです。<br/>
            このクラスでは各引数は、意味を成しません。<br/>
            通常はこのコンストラクタは使用しないでください。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.allColumnAttributes">
            <summary>
            このエンティティで使用するすべての列と対応するデータベース列情報の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.columns">
            <summary>
            すべての列名の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.tableName">
            <summary>
            基本のテーブル名です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.SetTableName(System.String)">
            <summary>
            基本のテーブル名を指定した値で設定します。
            </summary>
            <param name="name">基本のテーブル名</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.primaryKeys">
            <summary>
            プライマリキーに対応する列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.AddColumn(System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            指定したデータベース型の列をこのエンティティに追加します。
            </summary>
            <param name="name">列名</param>
            <param name="databaseType">データベース上の型名</param>
            <param name="validDigit">有効桁数</param>
            <param name="digitDecimal">小数桁数</param>
            <param name="isPrimary">プライマリキーとして使用する場合は true。それ以外の場合は false。</param>
            <returns>追加された列のデータベース列情報</returns>
            <remarks>
            列名と、エンティティ行のプロパティ名が等しい列を追加します。<br />
            SELECT/INSERT/UPDATEのすべての対象列として追加します。<br />
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.AddColumn(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            指定したデータベース型の列をこのエンティティに追加します。
            </summary>
            <param name="name">列名</param>
            <param name="synonymName">シノニム名。空 を指定できます。</param>
            <param name="databaseType">データベース上の型名</param>
            <param name="validDigit">有効桁数</param>
            <param name="digitDecimal">小数桁数</param>
            <param name="isPrimary">プライマリキーとして使用する場合は true。それ以外の場合は false。</param>
            <returns>追加された列のデータベース列情報</returns>
            <remarks>
            列名と、エンティティ行のプロパティ名が等しい列を追加します。<br />
            SELECT/INSERT/UPDATEのすべての対象列として追加します。<br />
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.AddColumn(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            指定したデータベース列情報を持つ列をこのエンティティに追加します。
            </summary>
            <param name="columnName">列名</param>
            <param name="propertyName">エンティティ行のプロパティ名</param>
            <param name="synonymName">シノニム名。空 を指定できます。</param>
            <param name="databaseType">データベース上の型名</param>
            <param name="validDigit">有効桁数</param>
            <param name="digitDecimal">小数桁数</param>
            <param name="isPrimary">プライマリキーとして使用する場合は true。それ以外の場合は false。</param>
            <param name="isAllowNull">NULLを許可する場合は true。それ以外の場合は false。</param>
            <param name="defaultValue">デフォルト制約値</param>
            <returns>追加された列のデータベース列情報</returns>
            <remarks>
            SELECT/INSERT/UPDATEのすべての対象列として追加します。<br />
            <paramref name="defaultValue"/> が省略された場合、データベース上の型が文字列型ならブランク、数値型なら0、日時型ならシステム日付が自動的に設定されます。null を指定した場合は、何も設定されません。<br />
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.AddColumn(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute,System.Boolean)">
            <summary>
            指定したデータベース列情報を持つ列をこのエンティティに追加します。
            </summary>
            <param name="name">列名</param>
            <param name="attr">データベース列情報</param>
            <param name="isPrimary">プライマリキーとして使用する場合は true。それ以外の場合は false。</param>
            <returns>追加された列のデータベース列情報</returns>
            <remarks>
            SELECT/INSERT/UPDATEのすべての対象列として追加します。<br />
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.RemoveColumn(System.String)">
            <summary>
            指定した列をこのエンティティから除去します。
            </summary>
            <param name="name">列名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.CreateTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.CreateTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Reflection.PropertyInfo[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.AllColumns">
            <inheritdoc/>
            <remarks>
            このクラスでは <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectionColumns"/> と等価です。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.AllColumnAttributes">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.Columns">
            <summary>
            すべての列名の一覧を取得します。
            </summary>
            <value>すべての列名の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.BaseTableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.CustomEntity.PrimaryKeys">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase">
            <summary>
            複数のエンティティを結合し、まとめて操作するための基底クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN">
            <summary>
            クエリ文字列内でメインテーブル名と置き換えるためのプレースホルダーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB">
            <summary>
            クエリ文字列内でサブテーブル名と置き換えるためのプレースホルダーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SINGLE_KEY_JOIN_FORMAT">
            <summary>
            クエリ文字列内でメインテーブルとサブテーブルを単一キーで結合する条件文のフォーマットを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase._name">
            <summary>
            このインスタンスの識別名です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.NameMaker">
            <summary>
            クエリで使用するデータベースパラメータの名前が重複しないよう、一意なパラメータ名を生成するためのオブジェクトです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddInner(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            指定したエンティティをメインテーブルとプライマリキー同士でINNER JOINする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するエンティティ</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddInner(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            指定した2つのエンティティをプライマリキー同士でINNER JOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddInner(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.String)">
            <summary>
            指定したエンティティをメインテーブルと指定した列でINNER JOINする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するエンティティ</param>
            <param name="mainKeyName">メインテーブルの列名</param>
            <param name="joinKeyName">結合するエンティティの列名</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddInner(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[],System.String[])">
            <summary>
            指定したエンティティをメインテーブルと指定した列でINNER JOINする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するエンティティ</param>
            <param name="mainKeyNames">メインテーブルの列名一覧</param>
            <param name="joinKeyNames">結合するエンティティの列名の一覧</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddInner(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.String)">
            <summary>
            指定した2つのエンティティを指定した列でINNER JOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ</param>
            <param name="leftKeyName">左辺エンティティの列名</param>
            <param name="rightKeyName">右辺エンティティの列名</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddInner(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[],System.String[])">
            <summary>
            指定した2つのエンティティを指定した列でINNER JOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ</param>
            <param name="leftKeyNames">左辺エンティティの列名の一覧</param>
            <param name="rightKeyNames">右辺エンティティの列名の一覧</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddInnerFormat(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.Object[])">
            <summary>
            指定したエンティティをメインテーブルと指定した条件でINNER JOINする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するエンティティ</param>
            <param name="whereFormat">
            結合条件を指定する書式指定文字列。<br/>
            空 が指定された場合は、対象エンティティのプライマリキーで自動結合します。<br/>
            また、下記キーワードを指定すると、<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN"/>...メインテーブルの名前<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB"/>...結合するエンティティの名前<br/>
            にそれぞれ変換されます。<br/>
            </param>
            <param name="formatArgs">結合条件引数</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddInnerFormat(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.Object[])">
            <summary>
            指定した2つのエンティティを指定した条件でINNER JOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ</param>
            <param name="whereFormat">
            結合条件を指定する書式指定文字列。<br/>
            空白の場合は、対象エンティティのプライマリキーで自動結合します。<br/>
            また、下記キーワードを指定すると、<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN"/>...左辺エンティティの名前<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB"/>...右辺エンティティの名前<br/>
            にそれぞれ変換されます。<br/>
            </param>
            <param name="formatArgs">結合条件引数</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddInnerFormat(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[],System.String,System.Object[])">
            <summary>
            指定したストアドファンクションエンティティをメインテーブルと指定した条件でINNER JOINする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するストアドファンクション</param>
            <param name="arguments">ストアドファンクションの引数</param>
            <param name="whereFormat">
            結合条件を指定する書式指定文字列。<br/>
            空 が指定された場合は、対象エンティティのプライマリキーで自動結合します。<br/>
            また、下記キーワードを指定すると、<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN"/>...メインテーブルの名前<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB"/>...結合するエンティティの名前<br/>
            にそれぞれ変換されます。<br/>
            </param>
            <param name="formatArgs">結合条件引数</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddInnerFormat(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[],System.String,System.Object[])">
            <summary>
            指定した2つのエンティティ(一方はストアドファンクション)を指定した条件でINNER JOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ(ストアドファンクション)</param>
            <param name="arguments">ストアドファンクションの引数</param>
            <param name="whereFormat">
            結合条件を指定する書式指定文字列。<br/>
            空白の場合は、対象エンティティのプライマリキーで自動結合します。<br/>
            また、下記キーワードを指定すると、<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN"/>...左辺エンティティの名前<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB"/>...右辺エンティティの名前<br/>
            にそれぞれ変換されます。<br/>
            </param>
            <param name="formatArgs">結合条件引数</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddLeft(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            指定したエンティティをメインテーブルとプライマリキー同士でLEFT OUTER JOINする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するエンティティ</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddLeft(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            指定した2つのエンティティをプライマリキー同士でLEFT OUTER JOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddLeft(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.String)">
            <summary>
            指定したエンティティをメインテーブルと指定した列でLEFT OUTER JOINする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するエンティティ</param>
            <param name="mainKeyName">メインテーブルの列名</param>
            <param name="joinKeyName">結合するエンティティの列名</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddLeft(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[],System.String[])">
            <summary>
            指定したエンティティをメインテーブルと指定した列でLEFT OUTER JOINする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するエンティティ</param>
            <param name="mainKeyNames">メインテーブルの列名一覧</param>
            <param name="joinKeyNames">結合するエンティティの列名の一覧</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddLeft(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.String)">
            <summary>
            指定した2つのエンティティを指定した列でLEFT OUTER JOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ</param>
            <param name="leftKeyName">左辺エンティティの列名</param>
            <param name="rightKeyName">右辺エンティティの列名</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddLeft(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[],System.String[])">
            <summary>
            指定した2つのエンティティを指定した列でLEFT OUTER JOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ</param>
            <param name="leftKeyNames">左辺エンティティの列名の一覧</param>
            <param name="rightKeyNames">右辺エンティティの列名の一覧</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddLeftFormat(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.Object[])">
            <summary>
            指定したエンティティをメインテーブルと指定した条件でLEFT OUTER JOINする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するエンティティ</param>
            <param name="whereFormat">
            結合条件を指定する書式指定文字列。<br/>
            空 が指定された場合は、対象エンティティのプライマリキーで自動結合します。<br/>
            また、下記キーワードを指定すると、<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN"/>...メインテーブルの名前<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB"/>...結合するエンティティの名前<br/>
            にそれぞれ変換されます。<br/>
            </param>
            <param name="formatArgs">結合条件引数</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddLeftFormat(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.Object[])">
            <summary>
            指定した2つのエンティティを指定した条件でLEFT OUTER JOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ</param>
            <param name="whereFormat">
            結合条件を指定する書式指定文字列。<br/>
            空白の場合は、対象エンティティのプライマリキーで自動結合します。<br/>
            また、下記キーワードを指定すると、<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN"/>...左辺エンティティの名前<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB"/>...右辺エンティティの名前<br/>
            にそれぞれ変換されます。<br/>
            </param>
            <param name="formatArgs">結合条件引数</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddLeftFormat(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[],System.String,System.Object[])">
            <summary>
            指定したストアドファンクションエンティティをメインテーブルと指定した条件でLEFT OUTER JOINする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するストアドファンクション</param>
            <param name="arguments">ストアドファンクションの引数</param>
            <param name="whereFormat">
            結合条件を指定する書式指定文字列。<br/>
            空 が指定された場合は、対象エンティティのプライマリキーで自動結合します。<br/>
            また、下記キーワードを指定すると、<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN"/>...メインテーブルの名前<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB"/>...結合するエンティティの名前<br/>
            にそれぞれ変換されます。<br/>
            </param>
            <param name="formatArgs">結合条件引数</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddLeftFormat(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[],System.String,System.Object[])">
            <summary>
            指定した2つのエンティティ(一方はストアドファンクション)を指定した条件でLEFT OUTER JOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ(ストアドファンクション)</param>
            <param name="arguments">ストアドファンクションの引数</param>
            <param name="whereFormat">
            結合条件を指定する書式指定文字列。<br/>
            空白の場合は、対象エンティティのプライマリキーで自動結合します。<br/>
            また、下記キーワードを指定すると、<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN"/>...左辺エンティティの名前<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB"/>...右辺エンティティの名前<br/>
            にそれぞれ変換されます。<br/>
            </param>
            <param name="formatArgs">結合条件引数</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddFull(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            指定したエンティティをメインテーブルとプライマリキー同士でFULL OUTER JOINする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するエンティティ</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddFull(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            指定した2つのエンティティをプライマリキー同士でFULL OUTER JOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddFull(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.String)">
            <summary>
            指定したエンティティをメインテーブルと指定した列でFULL OUTER JOINする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するエンティティ</param>
            <param name="mainKeyName">メインテーブルの列名</param>
            <param name="joinKeyName">結合するエンティティの列名</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddFull(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[],System.String[])">
            <summary>
            指定したエンティティをメインテーブルと指定した列でFULL OUTER JOINする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するエンティティ</param>
            <param name="mainKeyNames">メインテーブルの列名一覧</param>
            <param name="joinKeyNames">結合するエンティティの列名の一覧</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddFull(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.String)">
            <summary>
            指定した2つのエンティティを指定した列でFULL OUTER JOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ</param>
            <param name="leftKeyName">左辺エンティティの列名</param>
            <param name="rightKeyName">右辺エンティティの列名</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddFull(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[],System.String[])">
            <summary>
            指定した2つのエンティティを指定した列でFULL OUTER JOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ</param>
            <param name="leftKeyNames">左辺エンティティの列名の一覧</param>
            <param name="rightKeyNames">右辺エンティティの列名の一覧</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddFullFormat(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.Object[])">
            <summary>
            指定したエンティティをメインテーブルと指定した条件でFULL OUTER JOINする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するエンティティ</param>
            <param name="whereFormat">
            結合条件を指定する書式指定文字列。<br/>
            空 が指定された場合は、対象エンティティのプライマリキーで自動結合します。<br/>
            また、下記キーワードを指定すると、<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN"/>...メインテーブルの名前<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB"/>...結合するエンティティの名前<br/>
            にそれぞれ変換されます。<br/>
            </param>
            <param name="formatArgs">結合条件引数</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddFullFormat(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.Object[])">
            <summary>
            指定した2つのエンティティを指定した条件でFULL OUTER JOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ</param>
            <param name="whereFormat">
            結合条件を指定する書式指定文字列。<br/>
            空白の場合は、対象エンティティのプライマリキーで自動結合します。<br/>
            また、下記キーワードを指定すると、<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN"/>...左辺エンティティの名前<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB"/>...右辺エンティティの名前<br/>
            にそれぞれ変換されます。<br/>
            </param>
            <param name="formatArgs">結合条件引数</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddFullFormat(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[],System.String,System.Object[])">
            <summary>
            指定したストアドファンクションエンティティをメインテーブルと指定した条件でFULL OUTER JOINする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するストアドファンクション</param>
            <param name="arguments">ストアドファンクションの引数</param>
            <param name="whereFormat">
            結合条件を指定する書式指定文字列。<br/>
            空 が指定された場合は、対象エンティティのプライマリキーで自動結合します。<br/>
            また、下記キーワードを指定すると、<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN"/>...メインテーブルの名前<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB"/>...結合するエンティティの名前<br/>
            にそれぞれ変換されます。<br/>
            </param>
            <param name="formatArgs">結合条件引数</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddFullFormat(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[],System.String,System.Object[])">
            <summary>
            指定した2つのエンティティ(一方はストアドファンクション)を指定した条件でFULL OUTER JOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ(ストアドファンクション)</param>
            <param name="arguments">ストアドファンクションの引数</param>
            <param name="whereFormat">
            結合条件を指定する書式指定文字列。<br/>
            空白の場合は、対象エンティティのプライマリキーで自動結合します。<br/>
            また、下記キーワードを指定すると、<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN"/>...左辺エンティティの名前<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB"/>...右辺エンティティの名前<br/>
            にそれぞれ変換されます。<br/>
            </param>
            <param name="formatArgs">結合条件引数</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddCrossApply(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[])">
            <summary>
            指定したストアドファンクションエンティティをCROSS APPLYする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するストアドファンクション</param>
            <param name="args">ストアドファンクションへの引数群</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddOuterApply(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[])">
            <summary>
            指定したストアドファンクションエンティティをOUTER APPLYする結合情報を登録します。
            </summary>
            <param name="joinEntity">結合するストアドファンクション</param>
            <param name="args">ストアドファンクションへの引数群</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddFormat(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState,System.String,System.Object[])">
            <summary>
            指定した2つのエンティティを指定した条件とテーブル接続子でJOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ</param>
            <param name="join">テーブル接続子</param>
            <param name="whereFormat">
            結合条件を指定する書式指定文字列。<br/>
            空白の場合は、対象エンティティのプライマリキーで自動結合します。<br/>
            また、下記キーワードを指定すると、<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN"/>...左辺エンティティの名前<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB"/>...右辺エンティティの名前<br/>
            にそれぞれ変換されます。<br/>
            </param>
            <param name="formatArgs">結合条件引数</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddFormat(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState,System.String[],System.String,System.Object[])">
            <summary>
            指定した2つのエンティティ(一方はストアドファンクション)を指定した条件とテーブル接続子でJOINする結合情報を登録します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ(ストアドファンクション)</param>
            <param name="join">テーブル接続子</param>
            <param name="arguments">ストアドファンクションの引数</param>
            <param name="whereFormat">
            結合条件を指定する書式指定文字列。<br/>
            空白の場合は、対象エンティティのプライマリキーで自動結合します。<br/>
            また、下記キーワードを指定すると、<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN"/>...左辺エンティティの名前<br/>
            ・<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB"/>...右辺エンティティの名前<br/>
            にそれぞれ変換されます。<br/>
            </param>
            <param name="formatArgs">結合条件引数</param>
            <returns>登録された結合情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddEntity(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            指定したエンティティを<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AppendEntities"/>に登録します。
            </summary>
            <param name="entity">登録するエンティティ</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddDbParameter(System.String,System.Object)">
            <summary>
            SELECT処理で使用する抽出条件パラメータを登録します。
            </summary>
            <param name="name">パラメータ名</param>
            <param name="value">パラメータ値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddRangeDbParameters(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            SELECT処理で使用する抽出条件パラメータを登録します。
            </summary>
            <param name="dbParameters">パラメータの名前と値の組の一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhere(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Object)">
            <summary>
            メインテーブルの指定した列を、単一の条件値で絞り込む標準の抽出条件を登録します。
            </summary>
            <param name="column">列名</param>
            <param name="compSign">比較演算子</param>
            <param name="value">条件値</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsEqual"/>、もしくは、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsNotEqual"/> のWHERE句用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhere(System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Object)">
            <summary>
            対象のテーブルの指定した列を、単一の条件値で絞り込む標準の抽出条件を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="compSign">比較演算子</param>
            <param name="value">条件値</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsEqual"/>、もしくは、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsNotEqual"/> のWHERE句用です。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException">
            <paramref name="compSign"/> に <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsEqual"/>、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsNotEqual"/> 以外の値が指定されている
            場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhereBetween(System.String,System.Object,System.Object)">
            <summary>
            メインテーブルの指定した列の値を、指定範囲内に絞り込む標準の抽出条件を登録します。
            </summary>
            <param name="column">列名</param>
            <param name="valueFrom">開始値</param>
            <param name="valueTo">終了値</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            BETWEEN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhereBetween(System.String,System.String,System.Object,System.Object)">
            <summary>
            対象のテーブルの指定した列の値を、指定範囲内に絞り込む標準の抽出条件を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="valueFrom">開始値</param>
            <param name="valueTo">終了値</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            BETWEEN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhereNotBetween(System.String,System.Object,System.Object)">
            <summary>
            メインテーブルの指定した列の値を、指定範囲外に絞り込む標準の抽出条件を登録します。
            </summary>
            <param name="column">列名</param>
            <param name="valueFrom">開始値</param>
            <param name="valueTo">終了値</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            NOT BETWEEN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhereNotBetween(System.String,System.String,System.Object,System.Object)">
            <summary>
            対象のテーブルの指定した列の値を、指定範囲外に絞り込む標準の抽出条件を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="valueFrom">開始値</param>
            <param name="valueTo">終了値</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            NOT BETWEEN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhereBetween(System.String,System.Object,System.Object,System.Boolean)">
            <summary>
            メインテーブルの指定した列の値を、指定範囲で絞り込む標準の抽出条件を登録します。
            </summary>
            <param name="column">列名</param>
            <param name="valueFrom">開始値</param>
            <param name="valueTo">終了値</param>
            <param name="isNot">NOT BETWEENで絞り込む場合は true。BETWEENで絞り込む場合は false。</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhereBetween(System.String,System.String,System.Object,System.Object,System.Boolean)">
            <summary>
            対象のテーブルの指定した列の値を、指定範囲で絞り込む標準の抽出条件を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="valueFrom">開始値</param>
            <param name="valueTo">終了値</param>
            <param name="isNot">NOT BETWEENで絞り込む場合は true。BETWEENで絞り込む場合は false。</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhereINClause(System.String,System.Object[])">
            <summary>
            メインテーブルの指定した列を、複数の条件値に一致するように絞り込む標準の抽出条件を登録します。
            </summary>
            <param name="column">列名</param>
            <param name="values">条件値の一覧</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            IN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhereINClause(System.String,System.String,System.Object[])">
            <summary>
            対象のテーブルの指定した列を、複数の条件値に一致するように絞り込む標準の抽出条件を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="values">条件値の一覧</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            IN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhereNotINClause(System.String,System.Object[])">
            <summary>
            メインテーブルの指定した列を、複数の条件値に一致しないように絞り込む標準の抽出条件を登録します。
            </summary>
            <param name="column">列名</param>
            <param name="values">条件値の一覧</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            NOT IN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhereNotINClause(System.String,System.String,System.Object[])">
            <summary>
            対象のテーブルの指定した列を、複数の条件値に一致しないように絞り込む標準の抽出条件を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="values">条件値の一覧</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            NOT IN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhereINClause(System.String,System.Boolean,System.Object[])">
            <summary>
            メインテーブルの指定した列を、複数の条件値で絞り込む標準の抽出条件を登録します。
            </summary>
            <param name="column">列名</param>
            <param name="isNot">NOT INで絞り込む場合は true。INで絞り込む場合は false。</param>
            <param name="values">条件値の一覧</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhereINClause(System.String,System.String,System.Boolean,System.Object[])">
            <summary>
            対象のテーブルの指定した列を、複数の条件値で絞り込む標準の抽出条件を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="isNot">NOT INで絞り込む場合は true。INで絞り込む場合は false。</param>
            <param name="values">条件値の一覧</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhere(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery)">
            <summary>
            指定したWHERE句を標準の抽出条件に登録します。
            </summary>
            <param name="where">WHERE句オブジェクト</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddNewWhere(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection)">
            <summary>
            指定したWHERE句を標準の抽出条件に登録します。
            </summary>
            <param name="wheres">WHERE句オブジェクト</param>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.NewWheres"/> と結合文字列(AND、もしくは、OR)が異なる場合は、括弧付きで追加されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhere(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Object)">
            <summary>
            メインテーブルの指定した列を、単一の条件値で絞り込む追加の抽出条件を登録します。
            </summary>
            <param name="column">列名</param>
            <param name="compSign">比較演算子</param>
            <param name="value">条件値</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsEqual"/>、もしくは、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsNotEqual"/> のWHERE句用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhere(System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Object)">
            <summary>
            対象のテーブルの指定した列を、単一の条件値で絞り込む追加の抽出条件を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="compSign">比較演算子</param>
            <param name="value">条件値</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsEqual"/>、もしくは、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsNotEqual"/> のWHERE句用です。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseException">
            <paramref name="compSign"/> に <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsEqual"/>、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsNotEqual"/> 以外の値が指定されている
            場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhereBetween(System.String,System.Object,System.Object)">
            <summary>
            メインテーブルの指定した列の値を、指定範囲内に絞り込む追加の抽出条件を登録します。
            </summary>
            <param name="column">列名</param>
            <param name="valueFrom">開始値</param>
            <param name="valueTo">終了値</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            BETWEEN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhereBetween(System.String,System.String,System.Object,System.Object)">
            <summary>
            対象のテーブルの指定した列の値を、指定範囲内に絞り込む追加の抽出条件を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="valueFrom">開始値</param>
            <param name="valueTo">終了値</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            BETWEEN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhereNotBetween(System.String,System.Object,System.Object)">
            <summary>
            メインテーブルの指定した列の値を、指定範囲外に絞り込む追加の抽出条件を登録します。
            </summary>
            <param name="column">列名</param>
            <param name="valueFrom">開始値</param>
            <param name="valueTo">終了値</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            NOT BETWEEN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhereNotBetween(System.String,System.String,System.Object,System.Object)">
            <summary>
            対象のテーブルの指定した列の値を、指定範囲外に絞り込む追加の抽出条件を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="valueFrom">開始値</param>
            <param name="valueTo">終了値</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            NOT BETWEEN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhereBetween(System.String,System.Object,System.Object,System.Boolean)">
            <summary>
            メインテーブルの指定した列の値を、指定範囲で絞り込む追加の抽出条件を登録します。
            </summary>
            <param name="column">列名</param>
            <param name="valueFrom">開始値</param>
            <param name="valueTo">終了値</param>
            <param name="isNot">NOT BETWEENで絞り込む場合は true。BETWEENで絞り込む場合は false。</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhereBetween(System.String,System.String,System.Object,System.Object,System.Boolean)">
            <summary>
            対象のテーブルの指定した列の値を、指定範囲で絞り込む追加の抽出条件を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="valueFrom">開始値</param>
            <param name="valueTo">終了値</param>
            <param name="isNot">NOT BETWEENで絞り込む場合は true。BETWEENで絞り込む場合は false。</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhereINClause(System.String,System.Object[])">
            <summary>
            メインテーブルの指定した列を、複数の条件値に一致するように絞り込む追加の抽出条件を登録します。
            </summary>
            <param name="column">列名</param>
            <param name="values">条件値の一覧</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            IN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhereINClause(System.String,System.String,System.Object[])">
            <summary>
            対象のテーブルの指定した列を、複数の条件値に一致するように絞り込む追加の抽出条件を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="values">条件値の一覧</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            IN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhereNotINClause(System.String,System.Object[])">
            <summary>
            メインテーブルの指定した列を、複数の条件値に一致しないように絞り込む追加の抽出条件を登録します。
            </summary>
            <param name="column">列名</param>
            <param name="values">条件値の一覧</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            NOT IN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhereNotINClause(System.String,System.String,System.Object[])">
            <summary>
            対象のテーブルの指定した列を、複数の条件値に一致しないように絞り込む追加の抽出条件を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="values">条件値の一覧</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
            <remarks>
            NOT IN 指定用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhereINClause(System.String,System.Boolean,System.Object[])">
            <summary>
            メインテーブルの指定した列を、複数の条件値で絞り込む追加の抽出条件を登録します。
            </summary>
            <param name="column">列名</param>
            <param name="isNot">NOT INで絞り込む場合は true。INで絞り込む場合は false。</param>
            <param name="values">条件値の一覧</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhereINClause(System.String,System.String,System.Boolean,System.Object[])">
            <summary>
            対象のテーブルの指定した列を、複数の条件値で絞り込む追加の抽出条件を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="isNot">NOT INで絞り込む場合は true。INで絞り込む場合は false。</param>
            <param name="values">条件値の一覧</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhere(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery)">
            <summary>
            指定したWHERE句を追加の抽出条件に登録します。
            </summary>
            <param name="where">WHERE句オブジェクト</param>
            <returns>登録されたWHERE句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddWhere(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection)">
            <summary>
            指定したWHERE句を追加の抽出条件に登録します。
            </summary>
            <param name="wheres">WHERE句オブジェクト</param>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AppendWheres"/> と結合文字列(AND、もしくは、OR)が異なる場合は、括弧付きで追加されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddOrderBy(System.String,System.Boolean)">
            <summary>
            指定した列で並び替えるORDER BY句を登録します。
            </summary>
            <param name="name">列名</param>
            <param name="isAscending">昇順で並び替える場合は true。降順で並び替える場合は false。</param>
            <returns>登録されたORDER BY句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddOrderBy(System.String,System.String,System.Boolean)">
            <summary>
            指定したテーブルの指定した列で並び替えるORDER BY句を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="isAscending">昇順で並び替える場合は true。降順で並び替える場合は false。</param>
            <returns>登録されたORDER BY句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ClearOrderBys">
            <summary>
            ORDER BY句の設定をクリアします。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SetPrimaruKeyOrderBys">
            <summary>
            ORDER BY句をメインテーブルのプライマリキーで設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SetOrderBys(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumnCollection)">
            <summary>
            ORDER BY句を指定した内容に変更します。
            </summary>
            <param name="orderBys">ORDER BY句</param>
            <remarks>
            null が設定された場合はメインテーブルのプライマリキーによるソートを行います。<br />
            空 のコレクションが設定された場合はソートしません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.CreateInstanceOrderBys">
            <summary>
            空のORDER BY句を設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddGroupBy(System.String)">
            <summary>
            指定した列でグループ化するGROUP BY句を登録します。
            </summary>
            <param name="name">列名</param>
            <returns>登録されたGROUP BY句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddGroupBy(System.String,System.String)">
            <summary>
            指定したテーブルの指定した列でグループ化するGROUP BY句を登録します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns>登録されたGROUP BY句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ClearGroupBys">
            <summary>
            GROUP BY句の設定をクリアします。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            メインテーブルのプライマリキーを指定した条件で絞り込んでSELECTした結果のエンティティ行の配列を列挙します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>エンティティ行の配列の列挙(キャンセル時はnull)</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            指定した列を指定した条件で絞り込んでSELECTした結果のエンティティ行の配列を列挙します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>エンティティ行の配列の列挙(キャンセル時はnull)</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定したデータベースパラメータを用いてSELECTした結果のエンティティ行の配列を列挙します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="dbParams">データベースパラメータの一覧</param>
            <returns>エンティティ行の配列の列挙(キャンセル時はnull)</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定したクエリでSELECTした結果のエンティティ行の配列を列挙します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="selectQuery">クエリ生成オブジェクト</param>
            <param name="dbParams">データベースパラメータの一覧</param>
            <returns>エンティティ行の配列の列挙(キャンセル時はnull)</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            メインテーブルのプライマリキーを指定した条件で絞り込んでSELECTした結果を取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            指定した列を指定した条件で絞り込んでSELECTした結果を取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定したデータベースパラメータを用いてSELECTした結果を取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="dbParams">データベースパラメータの一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定したクエリでSELECTした結果を取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="selectQuery">クエリ生成オブジェクト</param>
            <param name="dbParams">データベースパラメータの一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            メインテーブルのプライマリキーが指定した値以前のレコードをSELECTした結果のエンティティ行の配列を列挙します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>エンティティ行の配列の列挙(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の前頁等のSELECT処理に関連します。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            指定した列の値が指定した条件以前のレコードをSELECTした結果のエンティティ行の配列を列挙します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>エンティティ行の配列の列挙(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の前頁等のSELECT処理に関連します。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectPrevResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            メインテーブルのプライマリキーが指定した値以前のレコードをSELECTした結果を取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の前頁等のSELECT処理に関連します。<br/>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectPrevResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            指定した列の値が指定した条件以前のレコードをSELECTした結果を取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の前頁等のSELECT処理に関連します。<br/>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectFixedPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            メインテーブルのプライマリキーが指定した値以前のレコードをSELECTした結果のエンティティ行の配列を列挙します。<br/>
            SELECTされたレコード数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/> に満たない場合は、条件値以降のレコードも含めて補います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>エンティティ行の配列の列挙(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の前頁等のSELECT処理に関連します。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectFixedPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            指定した列の値が指定した条件以前のレコードをSELECTした結果のエンティティ行の配列を列挙します。<br/>
            SELECTされたレコード数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/> に満たない場合は、条件値以降のレコードも含めて補います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>エンティティ行の配列の列挙(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の前頁等のSELECT処理に関連します。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectFixedPrevResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            メインテーブルのプライマリキーが指定した値以前のレコードをSELECTした結果を取得します。<br/>
            SELECTされたレコード数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/> に満たない場合は、条件値以降のレコードも含めて補います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の前頁等のSELECT処理に関連します。<br/>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectFixedPrevResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            指定した列の値が指定した条件以前のレコードをSELECTした結果を取得します。<br/>
            SELECTされたレコード数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/> に満たない場合は、条件値以降のレコードも含めて補います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の前頁等のSELECT処理に関連します。<br/>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            メインテーブルのプライマリキーが指定した値以降のレコードをSELECTした結果のエンティティ行の配列を列挙します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>エンティティ行の配列の列挙(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の次頁等のSELECT処理に関連します。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            指定した列の値が指定した条件以降のレコードをSELECTした結果のエンティティ行の配列を列挙します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>エンティティ行の配列の列挙(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の次頁等のSELECT処理に関連します。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectNextResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            メインテーブルのプライマリキーが指定した値以降のレコードをSELECTした結果を取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の次頁等のSELECT処理に関連します。<br/>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectNextResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            指定した列の値が指定した条件以降のレコードをSELECTした結果を取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の次頁等のSELECT処理に関連します。<br/>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectFixedNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            メインテーブルのプライマリキーが指定した値以降のレコードをSELECTした結果のエンティティ行の配列を列挙します。<br/>
            SELECTされたレコード数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/> に満たない場合は、条件値以前のレコードも含めて補います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>エンティティ行の配列の列挙(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の次頁等のSELECT処理に関連します。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectFixedNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            指定した列の値が指定した条件以降のレコードをSELECTした結果のエンティティ行の配列を列挙します。<br/>
            SELECTされたレコード数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/> に満たない場合は、条件値以前のレコードも含めて補います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>エンティティ行の配列の列挙(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の次頁等のSELECT処理に関連します。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectFixedNextResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            メインテーブルのプライマリキーが指定した値以降のレコードをSELECTした結果を取得します。<br/>
            SELECTされたレコード数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/> に満たない場合は、条件値以前のレコードも含めて補います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の次頁等のSELECT処理に関連します。<br/>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectFixedNextResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            指定した列の値が指定した条件以降のレコードをSELECTした結果を取得します。<br/>
            SELECTされたレコード数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/> に満たない場合は、条件値以前のレコードも含めて補います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の次頁等のSELECT処理に関連します。<br/>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.SelectNextPrevResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.String[],System.Object[])">
            <summary>
            指定した列の値が指定した条件以前、もしくは、以降のレコードをSELECTした結果を取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="fixedCount">条件に合うレコード数が<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/>に満たない場合に条件外のレコードで補う場合は true。それ以外の場合は false。</param>
            <param name="compSign">抽出条件の比較演算子</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            マスタ一覧の前頁/次頁等のSELECT処理に関連します。<br/>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            <paramref name="compSign"/> で指定できる値については <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.MakeNextPrevWheres(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.String[])"/> を参照してください。
            </remarks>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectNextPrevQuery(System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.String[],System.Object[])"/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.MakeNextPrevWheres(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.String[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExistsRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            メインテーブルのプライマリキーが指定した値に一致するレコードが存在するかどうかを返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>存在する場合は true。しない場合はfalse。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExistsRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            指定した列が指定した値に一致するレコードが存在するかどうかを返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>存在する場合は true。しない場合はfalse。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExistsRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定したデータベースパラメータの条件に一致するレコードが存在するかどうかを返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="dbParams">データベースパラメータの一覧</param>
            <returns>存在する場合は true。しない場合はfalse。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExistsRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定したクエリでSELECTされるレコードが存在するかどうかを返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="selectQuery">クエリ生成オブジェクト</param>
            <param name="dbParams">データベースパラメータの一覧</param>
            <returns>存在する場合は true。しない場合はfalse。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExistsRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            指定した条件のレコードが存在するかどうかを返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="newWheres">WHERE句生成オブジェクトの一覧</param>
            <param name="params">抽出条件パラメータ(パラメータ名と値の組)</param>
            <returns>存在する場合は true。しない場合はfalse。</returns>
            <remarks>
            <paramref name="params"/> のキーには、エンティティの列名が使用されている必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExistsRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery},System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定した条件のレコードが存在するかどうかを返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="newWheres">WHERE句生成オブジェクトの一覧</param>
            <param name="dbParams">データベースパラメータの一覧</param>
            <returns>存在する場合は true。しない場合はfalse。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddLock(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Object[])">
            <summary>
            対象のエンティティのプライマリキーを指定した値でロックするための条件を登録します。
            </summary>
            <param name="entity">ロック対象のエンティティ</param>
            <param name="values">ロック条件値の一覧</param>
            <returns>登録されたロック用WHERE句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddLock(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo)">
            <summary>
            対象のロック条件を登録します。
            </summary>
            <param name="item">ロック条件</param>
            <returns>登録されたロック用WHERE句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddRangeLock(System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo})">
            <summary>
            対象のロック条件を登録します。
            </summary>
            <param name="items">ロック条件の一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddExistenceCheck(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Object[])">
            <summary>
            対象のエンティティのプライマリキーが指定した値に一致するレコードの存在確認するための条件を登録します。
            </summary>
            <param name="entity">存在確認対象のエンティティ</param>
            <param name="values">存在確認条件値の一覧</param>
            <returns>登録された存在確認用WHERE句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddExistenceCheck(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo)">
            <summary>
            対象のエンティティレコード存在確認条件を登録します。
            </summary>
            <param name="item">存在確認条件</param>
            <returns>登録された存在確認用WHERE句生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AddRangeExistenceCheck(System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo})">
            <summary>
            対象のエンティティレコード存在確認条件を登録します。
            </summary>
            <param name="items">存在確認条件の一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExecLock(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            ロック処理を行います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <returns>ロックできた場合は true。できなかった場合は false。</returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.LockInfos"/> で指定した各エンティティに対応するテーブルに対してロックを行います。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.LockInfos"/> が空の場合は、true が返されます。<br/>
            このメソッドでは、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.LockInfos"/> で条件が指定されていない分についてはロックされません。<br/>
            必要に応じて、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExecLock(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean)"/> オーバーロードの使用を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExecLock(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean)">
            <summary>
            ロック処理を行います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="all"><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.LockInfos"/> で条件を指定していないもの(テーブルロック)も含める場合は true。含めない場合は false。</param>
            <returns>ロックできた場合は true。できなかった場合は false。</returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.LockInfos"/> で指定した各エンティティに対応するテーブルに対してロックを行います。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.LockInfos"/> が空の場合は、true が返されます。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.LockInfos"/> で条件が指定されている分についてはその条件に応じたロックを行います。<br/>
            条件が指定されていない分については <paramref name="all"/> が true の場合はテーブルロックを行いますが、false の場合はロックしません。<br/>
            すべてテーブルロックする場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExecTableLock(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)"/> メソッドの使用を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExecTableLock(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            テーブルロック処理を行います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <returns>ロックできた場合は true。できなかった場合は false。</returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.LockInfos"/> で指定した各エンティティに対応するテーブルに対してロックを行います。<br/>
            このメソッドでは、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.LockInfos"/> で指定されている条件については無視され、すべてテーブルロックされます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExecExistenceCheck(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            エンティティのレコードの存在確認処理を行います。
            </summary>
            <param name="section">データベース接続セクション</param>
            <returns>レコードが存在する場合は true。しない場合は false。</returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExistenceCheckInfos"/> で指定した各エンティティのレコードの存在確認を行います。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExistenceCheckInfos"/> が空の場合は、true が返されます。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExistenceCheckInfos"/> で条件が指定されている分についてはその条件に一致するレコードの存在確認を行います。<br/>
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.ExistenceCheckException">
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExistenceCheckInfos"/>で指定したいずれかのエンティティのレコードが存在しない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetEntities">
            <summary>
            使用するすべてのエンティティを取得します。
            </summary>
            <returns>使用するエンティティの列挙</returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.MainEntity"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.JoinEntities"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AppendEntities"/> が順に返されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectQuery(System.Object[])">
            <summary>
            メインテーブルのプライマリキーを指定した値で絞り込んでSELECTするクエリの生成オブジェクトを取得します。
            </summary>
            <param name="values">抽出条件値の一覧</param>
            <returns>クエリ生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectQuery(System.String[],System.Object[])">
            <summary>
            指定した列を指定した値で絞り込んでSELECTするクエリの生成オブジェクトを取得します。
            </summary>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>クエリ生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectPrevQuery(System.Object[])">
            <summary>
            メインテーブルのプライマリキーが指定した値以前のレコードをSELECTするクエリの生成オブジェクトを取得します。
            </summary>
            <param name="values">抽出条件値の一覧</param>
            <returns>クエリ生成オブジェクト</returns>
            <remarks>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectPrevQuery(System.String[],System.Object[])">
            <summary>
            指定した列の値が指定した条件以前のレコードをSELECTするクエリの生成オブジェクトを取得します。
            </summary>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>クエリ生成オブジェクト</returns>
            <remarks>
            マスタ一覧の前頁等のSELECT処理に関連します。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectFixedPrevQuery(System.Object[])">
            <summary>
            メインテーブルのプライマリキーが指定した値以前のレコードをSELECTするクエリの生成オブジェクトを取得します。<br/>
            レコード数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/> に満たない場合は、条件値以降のレコードも含めて補います。
            </summary>
            <param name="values">抽出条件値の一覧</param>
            <returns>クエリ生成オブジェクト</returns>
            <remarks>
            マスタ一覧の前頁等のSELECT処理に関連します。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectFixedPrevQuery(System.String[],System.Object[])">
            <summary>
            指定した列の値が指定した条件以前のレコードをSELECTするクエリの生成オブジェクトを取得します。<br/>
            レコード数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/> に満たない場合は、条件値以降のレコードも含めて補います。
            </summary>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>クエリ生成オブジェクト</returns>
            <remarks>
            マスタ一覧の前頁等のSELECT処理に関連します。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectNextQuery(System.Object[])">
            <summary>
            メインテーブルのプライマリキーが指定した値以降のレコードをSELECTするクエリの生成オブジェクトを取得します。
            </summary>
            <param name="values">抽出条件値の一覧</param>
            <returns>クエリ生成オブジェクト</returns>
            <remarks>
            マスタ一覧の次頁等のSELECT処理に関連します。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectNextQuery(System.String[],System.Object[])">
            <summary>
            指定した列の値が指定した条件以降のレコードをSELECTするクエリの生成オブジェクトを取得します。
            </summary>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>クエリ生成オブジェクト</returns>
            <remarks>
            マスタ一覧の次頁等のSELECT処理に関連します。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectFixedNextQuery(System.Object[])">
            <summary>
            メインテーブルのプライマリキーが指定した値以降のレコードをSELECTするクエリの生成オブジェクトを取得します。<br/>
            レコード数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/> に満たない場合は、条件値以前のレコードも含めて補います。
            </summary>
            <param name="values">抽出条件値の一覧</param>
            <returns>クエリ生成オブジェクト</returns>
            <remarks>
            マスタ一覧の次頁等のSELECT処理に関連します。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectFixedNextQuery(System.String[],System.Object[])">
            <summary>
            指定した列の値が指定した条件以降のレコードをSELECTするクエリの生成オブジェクトを取得します。<br/>
            レコード数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/> に満たない場合は、条件値以前のレコードも含めて補います。
            </summary>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>クエリ生成オブジェクト</returns>
            <remarks>
            マスタ一覧の次頁等のSELECT処理に関連します。<br/>
            指定した条件に一致するレコードが結果に含まれるかどうかは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue"/> の設定に従います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectNextPrevQuery(System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.String[],System.Object[])">
            <summary>
            対象の列の値が指定した条件以前、もしくは、以降のレコードをSELECTするクエリの生成オブジェクトを取得します。
            </summary>
            <param name="fixedCount">条件に合うレコード数が<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/>に満たない場合に条件外のレコードで補う場合は true。それ以外の場合は false。</param>
            <param name="compSign">抽出条件の比較演算子</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>クエリ生成オブジェクト</returns>
            <remarks>
            マスタ一覧の前頁/次頁等のSELECT処理に関連します。<br/>
            <paramref name="compSign"/> で指定できる値については <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.MakeNextPrevWheres(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.String[])"/> を参照してください。
            </remarks>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.MakeNextPrevWheres(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.String[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectQuery(System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Object[])">
            <summary>
            メインテーブルのプライマリキーを指定した値で絞り込んでSELECTするクエリの生成オブジェクトを取得します。
            </summary>
            <param name="fixedCount">条件に合うレコード数が<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/>に満たない場合に条件外のレコードで補う場合は true。それ以外の場合は false。</param>
            <param name="compSign">抽出条件の比較演算子</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>クエリ生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectQuery(System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.String[],System.Object[])">
            <summary>
            指定した列の値を指定した条件で絞り込んでSELECTするクエリの生成オブジェクトを取得します。
            </summary>
            <param name="fixedCount">条件に合うレコード数が<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/>に満たない場合に条件外のレコードで補う場合は true。それ以外の場合は false。</param>
            <param name="compSign">抽出条件の比較演算子</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>クエリ生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectQuery(System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo},System.Boolean)">
            <summary>
            対象の条件ごとに作成したクエリを結合したクエリ文字列を取得します。<br/>
            ロック処理、及び、エンティティのレコード存在確認処理で使用します。
            </summary>
            <param name="items">クエリ作成対象となる条件一覧</param>
            <param name="lock">ロックを行う場合は true。行わない場合は false。</param>
            <returns>クエリ文字列</returns>
            <remarks>
            このメソッドでは、<paramref name="items"/> に条件が指定されていない分はクエリに含まれません。<br/>
            必要に応じて、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectQuery(System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo},System.Boolean,System.Boolean)"/> オーバーロードの使用を検討してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectQuery(System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo},System.Boolean,System.Boolean)">
            <summary>
            対象の条件ごとに作成したクエリを結合したクエリ文字列を取得します。<br />
            ロック処理、及び、エンティティのレコード存在確認処理で使用します。
            </summary>
            <param name="items">クエリ作成対象となる条件一覧</param>
            <param name="lock">ロックを行う場合は true。行わない場合は false。</param>
            <param name="all"><paramref name="items"/> で条件を指定していないものも含める場合は true。含めない場合は false。</param>
            <returns>クエリ文字列</returns>
            <remarks>
            <paramref name="items"/> で指定した各エンティティに対応するテーブルに対するクエリを生成します。<br />
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ConvertFixedQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Boolean)">
            <summary>
            対象のクエリから、取得件数が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/> に満たない場合に条件外のレコードも含めて補うクエリに変換します。
            </summary>
            <param name="basicQuery">元となるクエリ生成オブジェクト</param>
            <param name="isNext">
            条件値以降のレコードを取得するクエリに変換する場合は true。
            条件値以前のレコードを取得するクエリに変換する場合は false。
            </param>
            <returns>変換後のクエリ生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ConvertOrderReverseQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Boolean)">
            <summary>
            対象のクエリから、順序を反転したレコードを取得するクエリに変換します。
            </summary>
            <param name="basicQuery">元となるクエリ生成オブジェクト</param>
            <param name="isNext">
            条件値以降のレコードを取得するクエリに変換する場合は true。
            条件値以前のレコードを取得するクエリに変換する場合は false。
            </param>
            <returns>変換後のクエリ生成オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.CreateDbParameters(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            データベースパラメータを生成します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">メインテーブルのプライマリキーに対する抽出条件値の一覧</param>
            <returns>生成したデータベースパラメータの一覧</returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.NewWheres"/> が設定されている場合、<paramref name="values"/> の設定は無視されます。<br/>
            詳細は <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.CreateDbParameters(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])"/> メソッドを参照してください。
            </remarks>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.CreateDbParameters(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.CreateDbParameters(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <summary>
            データベースパラメータを生成します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>生成したデータベースパラメータの一覧</returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.NewWheres"/> が設定されている場合、<paramref name="columns"/>、及び、<paramref name="values"/> の設定は無視されます。<br/>
            以下の順で生成、列挙されます。<br/>
            ・<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.NewWheres"/> に含まれる <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryWithConditionValue"/> の分。<br/>
            ・<paramref name="columns"/>、及び、<paramref name="values"/> の分。(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.NewWheres"/> が設定されていない場合のみ。)<br/>
            ・<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AppendWheres"/> に含まれる <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryWithConditionValue"/> の分。<br/>
            ・<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AppendDbParameters"/> の分。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.CreateDbParameters(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.WhereInfo})">
            <summary>
            指定した条件のデータベースパラメータを作成します。<br />
            ロック処理、及び、エンティティのレコード存在確認処理で使用します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="items">クエリ作成対象となる条件一覧</param>
            <returns>生成したデータベースパラメータの一覧</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.MakeParameterName(System.String,System.String)">
            <summary>
            指定した列のデータベースパラメータ名を作成します。
            </summary>
            <param name="name">列名</param>
            <param name="table">テーブル名</param>
            <returns>データベースパラメータ名</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.InitNameMaker">
            <summary>
            一意なデータベースパラメータ名の生成オブジェクトを初期化して、WHERE句やデータベースパラメータの編集を開始します。
            </summary>
            <remarks>
            他のオブジェクトからWHERE句やデータベースパラメータを直接編集されたときに、データベースパラメータ名を重複させないよう
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.NameMaker"/> を初期化するため、WHERE句やデータベースパラメータの編集前に必ずこのメソッドを呼び出します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.CommitNameMaker">
            <summary>
            WHERE句やデータベースパラメータの編集を確定させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExecSelectQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.Object[])">
            <summary>
            メインテーブルのプライマリキーを指定した値で絞り込むSELECT処理を実行して、結果を取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="fixedCount">条件に合うレコード数が<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/>に満たない場合に条件外のレコードで補う場合は true。それ以外の場合は false。</param>
            <param name="compSign">抽出条件の比較演算子</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExecSelectQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.String[],System.Object[])">
            <summary>
            対象の列の値を指定した条件で絞り込むSELECT処理を実行して、結果を取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="fixedCount">条件に合うレコード数が<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count"/>に満たない場合に条件外のレコードで補う場合は true。それ以外の場合は false。</param>
            <param name="compSign">抽出条件の比較演算子</param>
            <param name="columns">抽出条件列の一覧</param>
            <param name="values">抽出条件値の一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExecSelectQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>
            指定したクエリでSELECT処理を実行して、結果を取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="query">クエリ生成オブジェクト</param>
            <param name="dbParams">データベースパラメータの一覧</param>
            <returns>SELECT処理の結果セット(キャンセル時はnull)</returns>
            <remarks>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetEntitiesRows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <summary>
            SELECT処理の結果セットをエンティティ行ごとに分割して、列挙します。
            </summary>
            <param name="resultSet">SELECT処理の結果セット</param>
            <returns>エンティティ行の配列の列挙(キャンセル時はnull)</returns>
            <remarks>
            戻り値の型は <see cref="T:System.Collections.IEnumerable"/> ですが、実体は配列です。すなわち、対応するレコードはすべて読み込まれています。<br/>
            読み込みが完了していない = <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>が開いたままの状態で、再度データベースへのアクセスが行われるとエラーになってしまうため、
            配列化して<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>からの読み込みを完了させ、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>を閉じるようにしています。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetSelectedCommand(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定したクエリを実行します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="query">クエリ文字列</param>
            <param name="dbParams">データベースパラメータの一覧</param>
            <returns>実行したデータベースコマンドオブジェクト</returns>
            <remarks>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetBatchCommand(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定したクエリをバッチ実行します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="lockOp">ロック操作</param>
            <param name="query">クエリ文字列</param>
            <param name="dbParams">データベースパラメータの一覧</param>
            <returns>実行したデータベースコマンドオブジェクト</returns>
            <remarks>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GetCommand(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation,System.Data.StatementType,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            指定した種類のクエリを実行します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="lockOp">ロック操作</param>
            <param name="statementType">クエリの種類</param>
            <param name="query">クエリ文字列</param>
            <param name="dbParams">データベースパラメータの一覧</param>
            <returns>実行したデータベースコマンドオブジェクト</returns>
            <remarks>
            戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand"/> が不要になった時点で <see cref="M:System.IDisposable.Dispose"/> を実行してオブジェクトを破棄してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ReplaceKeyword(System.String,System.String,System.String)">
            <summary>
            対象の書式指定文字列内の、指定された箇所をエンティティ名で置換します。
            </summary>
            <param name="mainName">メイン側のエンティティ名</param>
            <param name="subName">サブ側のエンティティ名</param>
            <param name="format">置換する書式指定文字列</param>
            <returns>置換後の文字列</returns>
            <remarks>
            <paramref name="format"/> 内の、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_MAIN"/> で指定された箇所を <paramref name="mainName"/>、
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.REPLACE_KEYWORD_SUB"/> で指定された箇所を <paramref name="subName"/> にそれぞれ置換します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.MakeNextPrevWheres(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.String[])">
            <summary>
            指定した条件以前、もしくは、以降のレコードを取得するためのWHERE句生成オブジェクトを作成します。
            </summary>
            <param name="compSign">抽出条件の比較演算子</param>
            <param name="columns">抽出条件列の一覧</param>
            <returns>WHERE句生成オブジェクト</returns>
            <remarks>
            マスタ一覧の前頁/次頁等のSELECT処理に関連します。<br/>
            <paramref name="compSign"/> には以下のいずれかが指定できます。<br/>
            ・指定した条件より前 =&gt; <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsLessThan"/><br/>
            ・指定した条件以前   =&gt; <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsLessThanOrEqual"/><br/>
            ・指定した条件以降   =&gt; <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsGreaterThanOrEqual"/><br/>
            ・指定した条件より後 =&gt; <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsGreaterThan"/><br/>
            </remarks>
            <example>
            下記の様な条件が作成されます。<br/>
            <br/>
            ・指定した条件より前の場合<br/>
              ([商品コード] = @商品コード AND [ロットNO] &gt; @ロットNO) OR ([商品コード] &gt; @商品コード)
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.MakeMultipleKeyWhere(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String[],System.String[])">
            <summary>
            指定した2つのエンティティを指定した列でJOINするための結合条件文字列を作成します。
            </summary>
            <param name="leftEntity">左辺のエンティティ</param>
            <param name="rightEntity">右辺のエンティティ</param>
            <param name="leftKeyNames">左辺エンティティの列名の一覧</param>
            <param name="rightKeyNames">右辺エンティティの列名の一覧</param>
            <returns>結合条件文字列</returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <paramref name="leftKeyNames"/>と<paramref name="rightKeyNames"/>の要素の数が揃っていない場合にスローします。
            </exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.CommittedNewWhereCount">
            <summary>
            WHERE句やデータベースパラメータの編集完了時点での <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.NewWheres"/> の数を取得、設定します。
            </summary>
            <value>WHERE句やデータベースパラメータの編集完了時点での <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.NewWheres"/> の数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.CommittedAppendWhereCount">
            <summary>
            WHERE句やデータベースパラメータの編集完了時点での <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AppendWheres"/> の数を取得、設定します。
            </summary>
            <value>WHERE句やデータベースパラメータの編集完了時点での <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AppendWheres"/> の数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.CommittedParamaterCount">
            <summary>
            WHERE句やデータベースパラメータの編集完了時点での <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AppendDbParameters"/> の数を取得、設定します。
            </summary>
            <value>WHERE句やデータベースパラメータの編集完了時点での <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AppendDbParameters"/> の数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Name">
            <summary>
            このインスタンスの識別名を取得、設定します。
            </summary>
            <value>インスタンスの識別名</value>
            <remarks>
            null を設定した場合、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.MainEntity"/> の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.TableName"/> が返されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.MainEntity">
            <summary>
            メインテーブルとなるエンティティを取得します。
            </summary>
            <value>メインテーブルとなるエンティティ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Joins">
            <summary>
            エンティティ間の結合情報の一覧を取得します。
            </summary>
            <value>エンティティ間の結合情報の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.LockInfos">
            <summary>
            エンティティのロック処理を行うときの、対象の指定条件の一覧を取得します。
            </summary>
            <value>ロック処理を行うときの、対象の指定条件の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.ExistenceCheckInfos">
            <summary>
            エンティティのレコードの存在確認を行うときの、対象の指定条件の一覧を取得します。
            </summary>
            <value>レコードの存在確認を行うときの、対象の指定条件の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.JoinEntities">
            <summary>
            結合対象となるサブエンティティの一覧を取得します。
            </summary>
            <value>結合対象となるサブエンティティの一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.Count">
            <summary>
            SELECT処理を行うときの取得件数を取得、設定します。
            </summary>
            <value>SELECT処理を行うときの取得件数。既定値は 負数 です。</value>
            <remarks>
            SELECT句の TOP で指定する値です。全件取得する場合は 負数 を設定します。
            </remarks>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.Count"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IsAscending">
            <summary>
            SELECT処理を行うときの並び替えの方向を取得、設定します。
            </summary>
            <value>昇順で並び替える場合は true。降順で並び替える場合は false。既定値は true です。</value>
            <remarks>
            ORDER BY句を指定する際に参照されます。
            </remarks>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.IsAscending"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IncludeSameValue">
            <summary>
            指定条件以前、もしくは、以降のレコードのSELECT処理において、指定条件に該当するレコードも含めるかどうかを取得、設定します。
            </summary>
            <value>指定条件に該当するレコードも含める場合は true。含めない場合は false。既定値は false です。</value>
            <remarks>
            マスタ一覧の前頁/次頁等のSELECT処理に関連します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.IsMainQueryOnly">
            <summary>
            クエリの作成時、メインとなるクエリのみ作成するかどうかを取得、設定します。
            </summary>
            <value>メインとなるクエリのみ作成する場合は true。それ以外の場合は false。既定値は false です。</value>
            <remarks>
            このプロパティがtrueの場合、順序反転クエリや固定数レコード取得クエリといった特殊なクエリを作成せず、
            メインとなるクエリのみを作成するようになります。
            </remarks>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.IsMainQueryOnly"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.NewWheres">
            <summary>
            標準の抽出条件の一覧を取得、設定します。
            </summary>
            <value>標準の抽出条件の一覧</value>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.NewWheres"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AppendWheres">
            <summary>
            追加の抽出条件の一覧を取得、設定します。
            </summary>
            <value>追加の抽出条件の一覧</value>
            <remarks>
            標準の抽出条件<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.NewWheres"/> とは別に追加される抽出条件です。
            </remarks>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.AppendWheres"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.GroupBys">
            <summary>
            GROUP BY句の一覧を取得、設定します。
            </summary>
            <value>GROUP BY句の一覧</value>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GroupBys"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.OrderBys">
            <summary>
            ORDER BY句の一覧を取得、設定します。
            </summary>
            <value>ORDER BY句の一覧</value>
            <remarks>
            null が設定された場合はメインテーブルのプライマリキーによるソートを行います。<br/>
            空 のコレクションが設定された場合はソートしません。
            </remarks>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.OrderBys"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AppendDbParameters">
            <summary>
            追加の抽出条件パラメータの一覧を取得、設定します。
            </summary>
            <value>パラメータ名と値と組</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase.AppendEntities">
            <summary>
            結合せずに値を取得するエンティティの一覧を取得、設定します。
            </summary>
            <value>結合せずに値を取得するエンティティの一覧</value>
            <remarks>
            スカラーエンティティ(<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.Interfaces.IScalarEntity"/>)などを指定します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase`1">
            <summary>
            複数のエンティティを結合し、まとめて操作するための基底のジェネリッククラスです。
            </summary>
            <typeparam name="T">メインテーブルとなるエンティティの型</typeparam>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase`1._mainEntity">
            <summary>
            メインテーブルとなるエンティティです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase`1.#ctor(`0)">
            <summary>
            指定したエンティティをメインテーブルとして持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="mainEntity">メインテーブルとなるエンティティ</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase`1.MainEntity">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity">
            <summary>
            汎用エンティティクラスです。
            </summary>
            <remarks>
            単一のテーブルではなく、インラインビューをメインテーブルとするような場合に使用します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.DEFAULT_NAME">
            <summary>
            既定のインスタンス識別名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.#ctor(System.String[])">
            <summary>
            指定した列を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="columns">列名の一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.SetSubQuery(System.String,System.Object[])">
            <summary>
            対象のクエリ文字列をサブクエリ(インラインビュー)として設定します。
            </summary>
            <param name="queryFormat">サブクエリ(インラインビュー)を定義する書式指定文字列</param>
            <param name="formatArgs"><paramref name="queryFormat"/>のフォーマット用引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.SetSubQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery)">
            <summary>
            対象のクエリ生成オブジェクトをサブクエリ(インラインビュー)として設定します。
            </summary>
            <param name="query">サブクエリ(インラインビュー)化するクエリ生成オブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.ToSubQuery(System.String)">
            <summary>
            対象のクエリ文字列をサブクエリ(インラインビュー)を表す文字列に変換します。
            </summary>
            <param name="query">クエリ文字列</param>
            <returns>サブクエリ(インラインビュー)文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.IsSubQueryStyle(System.String)">
            <summary>
            指定されたクエリ文字列がサブクエリ形式かどうかを返します。
            </summary>
            <param name="query">クエリ文字列</param>
            <returns>サブクエリ形式になっている場合は true。それ以外の場合は false。</returns>
            <remarks>
            先頭文字が ( かどうかで判定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AddColumn(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery)">
            <summary>
            指定したサブクエリのSELECT句に対応する列を追加します。
            </summary>
            <param name="query">サブクエリの生成用オブジェクト</param>
            <returns>追加できた場合は true。できなかった場合は false。</returns>
            <remarks>
            以下のいずれかの書式のサブクエリに対応しています。<br />
            ・エイリアス名 = クエリ式<br />
            ・クエリ式 AS エイリアス名<br />
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AddColumn(System.String,System.Object[])">
            <summary>
            指定したサブクエリのSELECT句に対応する列を追加します。
            </summary>
            <param name="queryFormat">サブクエリを定義する書式指定文字列</param>
            <param name="formatArgs"><paramref name="queryFormat"/>のフォーマット用引数</param>
            <returns>追加できた場合は true。できなかった場合は false。</returns>
            <remarks>
            以下のいずれかの書式のサブクエリに対応しています。<br/>
            ・エイリアス名 = クエリ式<br/>
            ・クエリ式 AS エイリアス名<br/>
            </remarks>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AddColumn(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AddColumn(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery)">
            <summary>
            指定したサブクエリのSELECT句に対応する列を、指定した列名で追加します。
            </summary>
            <param name="columnName">列名</param>
            <param name="query">サブクエリの生成用オブジェクト</param>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AddColumn(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AddColumn(System.String,System.String,System.Object[])">
            <summary>
            指定したサブクエリのSELECT句に対応する列を、指定した列名で追加します。
            </summary>
            <param name="columnName">列名</param>
            <param name="queryFormat">サブクエリを定義する書式指定文字列</param>
            <param name="formatArgs"><paramref name="queryFormat"/>のフォーマット用引数</param>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AddColumn(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AddColumn(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn[])">
            <summary>
            指定したSELECT句に対応する列を追加します。
            </summary>
            <param name="columns">追加する列のSELECT句生成用オブジェクト</param>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectionColumns"/> 、及び、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AppendSelectColumns"/> に追加します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.allColumnAttributes">
            <summary>
            このエンティティで使用するすべての列と、対応するデータベース列情報の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.tableName">
            <summary>
            基本となるテーブル名です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.SetTableName(System.String)">
            <summary>
            指定したテーブル名をこのエンティティの基本のテーブル名として設定します。
            </summary>
            <param name="name">テーブル名</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.primaryKeys">
            <summary>
            プライマリキーに対応する列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.SetPrimaryKeys(System.String[])">
            <summary>
            指定した列をプライマリキーとして設定します。
            </summary>
            <param name="keys">プライマリキーとして使用する列名の一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.SetColumns(System.String[],System.String[])">
            <summary>
            このエンティティの列設定を、指定した列で置き換えます。
            </summary>
            <param name="columnNames">列名の一覧</param>
            <param name="columnTypes">各列のデータベース型の一覧</param>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.SetColumns(System.String[],System.String[],System.String[])"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.SetColumns(System.String[],System.String[],System.String[])">
            <summary>
            このエンティティの列設定を、指定した列で置き換えます。
            </summary>
            <param name="columnNames">列名の一覧</param>
            <param name="propertyNames">各列に対応するエンティティ行のプロパティ名の一覧</param>
            <param name="columnTypes">各列のデータベース型の一覧</param>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectionColumns"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.InsertColumns"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.UpdateColumns"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.AllColumnAttributes"/>
            をすべて再設定します。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectionColumns"/> については、<paramref name="columnNames"/> で指定した列の他に、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AppendSelectColumns"/> の列も保持します。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AppendSelectColumns"/> は再設定されません。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <paramref name="columnNames"/>、<paramref name="propertyNames"/>、<paramref name="columnTypes"/>の数がそろっていない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.GetSelectColumns(System.Boolean,System.Boolean)">
            <inheritdoc/>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AppendSelectColumns"/> で指定されている列が優先的に返されます。<br/>
            その後、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectionColumns"/> で指定されている列を順に返します。<br/>
            <paramref name="isNullReplace"/> に true が設定されているとき、null の場合の代替値には以下が指定されます。<br/>
            ・文字列型の列の場合、空 の文字列。<br/>
            ・他の列の場合、0。<br/>
            ただし、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AppendSelectColumns"/> で指定されている列については、<paramref name="addPrefixName"/>、<paramref name="isNullReplace"/>
            の各設定は適用されません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.GetSelectFroms(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.GetSelectFroms(System.Boolean,System.Boolean)">
            <inheritdoc/>
            <remarks>
            テーブル名が指定されていない場合は、空が返されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.SubQuery">
            <summary>
            サブクエリ(インラインビュー)として使用するクエリ生成オブジェクトを取得します。
            </summary>
            <value>サブクエリ(インラインビュー)のクエリ生成オブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AppendSelectColumns">
            <summary>
            テーブルのSELECT処理で使用するため、個別に追加された列の一覧を取得します。
            </summary>
            <value>SELECT処理用に個別に追加された列の一覧</value>
            <remarks>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AddColumn(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn[])"/> メソッド、及び、そのオーバロードで追加された列を保持します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AllColumns">
            <inheritdoc/>
            <remarks>
            このクラスでは <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.SelectionColumns"/> と等価です。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.AllColumnAttributes">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.BaseTableName">
            <inheritdoc/>
            <remarks>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.SetTableName(System.String)"/> によってテーブル名(空でない文字列)が設定されている場合は、そのテーブル名を返します。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.SubQuery"/>が設定されている場合は、そのクエリ文字列をインラインビューとして返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.GenericEntity.PrimaryKeys">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.Interfaces.IScalarEntity">
            <summary>
            スカラ値を取得するエンティティを示すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.Interfaces.IScalarEntity.GetSelectColumn(System.Boolean,System.String[])">
            <summary>
            スカラ値をSELECTするため <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn"/> オブジェクトを取得します。
            </summary>
            <param name="isSimple">対象のエンティティ単体からの呼出の場合は true。<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntitiesBase"/>経由での呼出の場合は false。</param>
            <param name="argNames">SELECT句のフォーマット用引数の一覧</param>
            <returns>スカラ値をSELECTするための <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn"/>オブジェクト</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity">
            <summary>
            スカラー値を返すストアドファンクションに対応するエンティティクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`1">
            <summary>
            指定した型のスカラー値を返すストアドファンクションに対応するエンティティクラスです。
            </summary>
            <typeparam name="TResult">戻り値の型</typeparam>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`2">
            <summary>
            指定した型のスカラー値を返すストアドファンクションに対応するエンティティクラスです。
            </summary>
            <typeparam name="T">エンティティ行の型</typeparam>
            <typeparam name="TResult">戻り値の型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`2.#ctor(System.String,System.String,System.String[])">
            <summary>
            指定したストアドファンクションの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`2"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="functionName">ストアドファンクション名</param>
            <param name="returnName">ストアドファンクションの戻り値名</param>
            <param name="argNames">ストアドファンクションの引数名の一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`2.GetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <summary>
            指定した引数でストアドファンクションを実行し、データベースから値を取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="values">ストアドファンクションの引数値</param>
            <returns>ストアドファンクションの戻り値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`2.CreateQuery(System.String[])">
            <summary>
            ストアドファンクションを実行するクエリの生成用オブジェクトを取得します。
            </summary>
            <param name="argNames">ストアドファンクションの引数名</param>
            <returns>クエリの生成用オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`2.GetSelectColumn(System.Boolean,System.String[])">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`2.PrimaryKeys">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`2.BaseTableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`2.ArgumentNames">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`2.ReturnName">
            <summary>
            ストアドファンクションの戻り値名を取得します。
            </summary>
            <value>ストアドファンクションの戻り値名</value>
            <remarks>
            クエリのSELECT句のエイリアスに相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`2.AllColumns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`2.AllColumnAttributes">
            <inheritdoc/>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`1.DEFAULT_RETURN_COLUMN_NAME">
            <summary>
            ストアドファンクションの既定の戻り値名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`1.#ctor(System.String,System.String[])">
            <summary>
            指定したストアドファンクションの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="functionName">ストアドファンクション名</param>
            <param name="argNames">ストアドファンクションの引数名の一覧</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity.#ctor(System.String,System.String[])">
            <summary>
            指定したストアドファンクションの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.ScalarEntity"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="functionName">ストアドファンクション名</param>
            <param name="argNames">ストアドファンクションの引数名の一覧</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.ConcurrencyRow">
            <summary>
            同時実行できないプログラムのセッション情報を保持するクラスです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.ConcurrencyRow.SessionId">
            <summary>
            セッションIDを取得、設定します。
            </summary>
            <value>セッションID</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.ConcurrencyRow.HostName">
            <summary>
            ホスト名を取得、設定します。
            </summary>
            <value>ホスト名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.ConcurrencyRow.LoginName">
            <summary>
            ログインユーザ名を取得、設定します。
            </summary>
            <value>ログインユーザ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.ConcurrencyRow.FormCheck">
            <summary>
            プログラムのFORMCHK文字列を取得、設定します。
            </summary>
            <value>プログラムのFORMCHK文字列</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency">
            <summary>
            プログラムの同時実行制御を行うためにデータベースのセッション情報を参照するクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            指定したデータベース接続セクションでアクセスする <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency.Create(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            対象のデータベース接続セクションに応じた <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency"/> クラスの新しいインスタンスを生成します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency"/>オブジェクト</returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">対象のデータベースが SQL Server でない場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency.Select(System.String)">
            <summary>
            指定したFORMCHK文字列のプログラムと同時実行できないプログラムのセッション情報を取得します。
            </summary>
            <param name="frmchk">同時実行制御対象のプログラムのFORMCHK文字列</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency.Add">
            <summary>
            新しいコレクション要素を一つ生成し、コレクションの末尾に追加します。
            </summary>
            <returns>新しく追加したコレクションの要素</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency.GetQuery">
            <summary>
            同時実行制御を行う対象のFORMCHK文字列を指定して、同時実行できないプログラムのセッション情報を取得するためのクエリ文字列を取得します。
            </summary>
            <returns>同時実行できないプログラムのセッション情報を取得するためのクエリ文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency.Section">
            <summary>
            データベース接続セクションを取得します。
            </summary>
            <value>データベース接続セクション</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency.ParamName">
            <summary>
            セッション情報を取得するクエリ内で、プログラムのFORMCHK文字列を指定するためのデータベースパラメータ名を取得します。
            </summary>
            <value>FORMCHK文字列を指定するためのデータベースパラメータ名</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency.SqlConcurrency">
            <summary>
            SQL Server 環境に対応した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency"/> の実装クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency.SqlConcurrency.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            指定したデータベース接続セクションでアクセスする <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency.SqlConcurrency"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Concurrency.SqlConcurrency.GetQuery">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Security">
            <summary>
            プログラムの実行権限設定を参照するクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Security.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            指定したデータベース接続セクションでアクセスする <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Security"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Security.Create(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            対象のデータベース接続セクションに応じた <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Security"/> クラスの新しいインスタンスを生成します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Security"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Security.Get(System.String)">
            <summary>
            システム設定に設定されているログインIDの、指定したFORMCHK文字列のプログラムに対する実行権限設定を取得します。
            </summary>
            <param name="formchk">対象プログラムのFORMCHK文字列</param>
            <returns>実行権限設定</returns>
            <value>
            システム設定でセキュリティ管理が採用されていない場合は、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.SecurityFlags.All"/> が返されます。<br/>
            システム設定でセキュリティ管理が採用されている場合は、セキュリティマスタを参照した結果が返されます。<br/>
            </value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Security.GetQuery">
            <summary>
            FORMCHK文字列とログインIDを指定して、実行権限設定を取得するためのクエリ文字列を取得します。
            </summary>
            <returns>実行権限設定を取得するためのクエリ文字列</returns>
            <remarks>
            セキュリティマスタのレコードを取得します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Security.Section">
            <summary>
            データベース接続セクションを取得します。
            </summary>
            <value>データベース接続セクション</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Security.LoginId">
            <summary>
            プログラムの実行権限設定を取得するクエリ内で、ログインIDを指定するためのデータベースパラメータ名を取得します。
            </summary>
            <value>ログインIDを指定するためのデータベースパラメータ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.Security.ParamName">
            <summary>
            プログラムの実行権限設定を取得するクエリ内で、プログラムのFORMCHK文字列を指定するためのデータベースパラメータ名を取得します。
            </summary>
            <value>FORMCHK文字列を指定するためのデータベースパラメータ名</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns">
            <summary>
            システムテーブル [sys.columns] に対応するエンティティクラスです。
            </summary>
            <remarks>
            ビューやテーブルなど、列を持つオブジェクトの列ごとに 1 行のデータを返します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.TABLE_NAME">
            <summary>
            テーブル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.object_id">
            <summary>
            sys.columns の列 [object_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.name">
            <summary>
            sys.columns の列 [name] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.column_id">
            <summary>
            sys.columns の列 [column_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.system_type_id">
            <summary>
            sys.columns の列 [system_type_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.user_type_id">
            <summary>
            sys.columns の列 [user_type_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.max_length">
            <summary>
            sys.columns の列 [max_length] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.precision">
            <summary>
            sys.columns の列 [precision] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.scale">
            <summary>
            sys.columns の列 [scale] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.collation_name">
            <summary>
            sys.columns の列 [collation_name] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.is_nullable">
            <summary>
            sys.columns の列 [is_nullable] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.is_ansi_padded">
            <summary>
            sys.columns の列 [is_ansi_padded] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.is_rowguidcol">
            <summary>
            sys.columns の列 [is_rowguidcol] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.is_identity">
            <summary>
            sys.columns の列 [is_identity] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.is_computed">
            <summary>
            sys.columns の列 [is_computed] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.is_filestream">
            <summary>
            sys.columns の列 [is_filestream] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.is_replicated">
            <summary>
            sys.columns の列 [is_replicated] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.is_non_sql_subscribed">
            <summary>
            sys.columns の列 [is_non_sql_subscribed] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.is_merge_published">
            <summary>
            sys.columns の列 [is_merge_published] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.is_dts_replicated">
            <summary>
            sys.columns の列 [is_dts_replicated] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.is_xml_document">
            <summary>
            sys.columns の列 [is_xml_document] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.xml_collection_id">
            <summary>
            sys.columns の列 [xml_collection_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.default_object_id">
            <summary>
            sys.columns の列 [default_object_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.rule_object_id">
            <summary>
            sys.columns の列 [rule_object_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.is_sparse">
            <summary>
            sys.columns の列 [is_sparse] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.is_column_set">
            <summary>
            sys.columns の列 [is_column_set] の列名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.#ctor(System.Boolean,System.String[])">
            <summary>
            バイナリ列を使用するかどうかを指定して、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="all">バイナリ列を含むすべての列を使用する場合は true。それ以外の場合は false。</param>
            <param name="addColumns">使用するバイナリ列名</param>
            <remarks>
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。<br/>
            <paramref name="all"/> に false を指定したとき、特定のバイナリ列を使用する場合に <paramref name="addColumns"/> を指定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.#ctor(System.String[])">
            <summary>
            対象の列を使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="columns">使用する列名の一覧</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.PRIMARY_KEY">
            <summary>
            プライマリキーに対応する列名の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.ALL_SELECTION_COLUMNS">
            <summary>
            このエンティティのすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.ALL_SELECTION_COLUMNS_WITHOUT_BINARY">
            <summary>
            このエンティティのバイナリ列以外のすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            <br />
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.ALL_COLUMN_ATTRIBUTES">
            <summary>
            このエンティティのすべての列と、対応するデータベース列情報の一覧を取得します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.MakeInsertAndUpdateColumns">
            <summary>
            テーブルのINSERT処理、及び、UPDATE処理で使用する列の設定を初期化します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.InsertColumns"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.UpdateColumns"/> を設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32})">
            <summary>
            対象のプライマリキーに対応する先頭のレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <returns>レコードが存在する場合は変換されたエンティティ行。存在しない場合は null。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            対象のプライマリキーに対応するレコードをデータベース上のテーブルからSELECTし、保持しているエンティティ行を上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.SelectPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.SelectFixedPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以降のレコードで補います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.SelectNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.SelectFixedNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以前のレコードで補います。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.PrimaryKeys">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.BaseTableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.AllColumns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns.AllColumnAttributes">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行">
            <summary>
            システムテーブル [sys.columns] に対応するエンティティ行クラスです。
            </summary>
            <remarks>
            ビューやテーブルなど、列を持つオブジェクトの列ごとに 1 行のデータを返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.object_id">
            <summary>
            [object_id] を取得、設定します。
            </summary>
            <value>object_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.name">
            <summary>
            [name] を取得、設定します。
            </summary>
            <value>name</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.column_id">
            <summary>
            [column_id] を取得、設定します。
            </summary>
            <value>column_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.system_type_id">
            <summary>
            [system_type_id] を取得、設定します。
            </summary>
            <value>system_type_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.user_type_id">
            <summary>
            [user_type_id] を取得、設定します。
            </summary>
            <value>user_type_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.max_length">
            <summary>
            [max_length] を取得、設定します。
            </summary>
            <value>max_length</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.precision">
            <summary>
            [precision] を取得、設定します。
            </summary>
            <value>precision</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.scale">
            <summary>
            [scale] を取得、設定します。
            </summary>
            <value>scale</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.collation_name">
            <summary>
            [collation_name] を取得、設定します。
            </summary>
            <value>collation_name</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.is_nullable">
            <summary>
            [is_nullable] を取得、設定します。
            </summary>
            <value>is_nullable</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.is_ansi_padded">
            <summary>
            [is_ansi_padded] を取得、設定します。
            </summary>
            <value>is_ansi_padded</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.is_rowguidcol">
            <summary>
            [is_rowguidcol] を取得、設定します。
            </summary>
            <value>is_rowguidcol</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.is_identity">
            <summary>
            [is_identity] を取得、設定します。
            </summary>
            <value>is_identity</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.is_computed">
            <summary>
            [is_computed] を取得、設定します。
            </summary>
            <value>is_computed</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.is_filestream">
            <summary>
            [is_filestream] を取得、設定します。
            </summary>
            <value>is_filestream</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.is_replicated">
            <summary>
            [is_replicated] を取得、設定します。
            </summary>
            <value>is_replicated</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.is_non_sql_subscribed">
            <summary>
            [is_non_sql_subscribed] を取得、設定します。
            </summary>
            <value>is_non_sql_subscribed</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.is_merge_published">
            <summary>
            [is_merge_published] を取得、設定します。
            </summary>
            <value>is_merge_published</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.is_dts_replicated">
            <summary>
            [is_dts_replicated] を取得、設定します。
            </summary>
            <value>is_dts_replicated</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.is_xml_document">
            <summary>
            [is_xml_document] を取得、設定します。
            </summary>
            <value>is_xml_document</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.xml_collection_id">
            <summary>
            [xml_collection_id] を取得、設定します。
            </summary>
            <value>xml_collection_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.default_object_id">
            <summary>
            [default_object_id] を取得、設定します。
            </summary>
            <value>default_object_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.rule_object_id">
            <summary>
            [rule_object_id] を取得、設定します。
            </summary>
            <value>rule_object_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.is_sparse">
            <summary>
            [is_sparse] を取得、設定します。
            </summary>
            <value>is_sparse</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_columns行.is_column_set">
            <summary>
            [is_column_set] を取得、設定します。
            </summary>
            <value>is_column_set</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes">
            <summary>
            システムテーブル [sys.indexes] に対応するエンティティクラスです。
            </summary>
            <remarks>
            テーブル、ビュー、テーブル値関数など、テーブル オブジェクトのインデックスまたはヒープごとに 1 行のデータを格納します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.TABLE_NAME">
            <summary>
            テーブル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.object_id">
            <summary>
            sys.indexes の列 [object_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.name">
            <summary>
            sys.indexes の列 [name] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.index_id">
            <summary>
            sys.indexes の列 [index_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.type">
            <summary>
            sys.indexes の列 [type] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.type_desc">
            <summary>
            sys.indexes の列 [type_desc] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.is_unique">
            <summary>
            sys.indexes の列 [is_unique] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.data_space_id">
            <summary>
            sys.indexes の列 [data_space_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.ignore_dup_key">
            <summary>
            sys.indexes の列 [ignore_dup_key] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.is_primary_key">
            <summary>
            sys.indexes の列 [is_primary_key] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.is_unique_constraint">
            <summary>
            sys.indexes の列 [is_unique_constraint] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.fill_factor">
            <summary>
            sys.indexes の列 [fill_factor] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.is_padded">
            <summary>
            sys.indexes の列 [is_padded] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.is_disabled">
            <summary>
            sys.indexes の列 [is_disabled] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.is_hypothetical">
            <summary>
            sys.indexes の列 [is_hypothetical] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.allow_row_locks">
            <summary>
            sys.indexes の列 [allow_row_locks] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.allow_page_locks">
            <summary>
            sys.indexes の列 [allow_page_locks] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.has_filter">
            <summary>
            sys.indexes の列 [has_filter] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.filter_definition">
            <summary>
            sys.indexes の列 [filter_definition] の列名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.#ctor(System.Boolean,System.String[])">
            <summary>
            バイナリ列を使用するかどうかを指定して、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="all">バイナリ列を含むすべての列を使用する場合は true。それ以外の場合は false。</param>
            <param name="addColumns">使用するバイナリ列名</param>
            <remarks>
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。<br/>
            <paramref name="all"/> に false を指定したとき、特定のバイナリ列を使用する場合に <paramref name="addColumns"/> を指定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.#ctor(System.String[])">
            <summary>
            対象の列を使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="columns">使用する列名の一覧</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.PRIMARY_KEY">
            <summary>
            プライマリキーに対応する列名の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.ALL_SELECTION_COLUMNS">
            <summary>
            このエンティティのすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.ALL_SELECTION_COLUMNS_WITHOUT_BINARY">
            <summary>
            このエンティティのバイナリ列以外のすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            <br />
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.ALL_COLUMN_ATTRIBUTES">
            <summary>
            このエンティティのすべての列と、対応するデータベース列情報の一覧を取得します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.MakeInsertAndUpdateColumns">
            <summary>
            テーブルのINSERT処理、及び、UPDATE処理で使用する列の設定を初期化します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.InsertColumns"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.UpdateColumns"/> を設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            対象のプライマリキーに対応する先頭のレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="index_id">index_id</param>
            <returns>レコードが存在する場合は変換されたエンティティ行。存在しない場合は null。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            対象のプライマリキーに対応するレコードをデータベース上のテーブルからSELECTし、保持しているエンティティ行を上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="index_id">index_id</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.SelectPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="index_id">index_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.SelectFixedPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="index_id">index_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以降のレコードで補います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.SelectNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="index_id">index_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.SelectFixedNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="index_id">index_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以前のレコードで補います。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.PrimaryKeys">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.BaseTableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.AllColumns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes.AllColumnAttributes">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行">
            <summary>
            システムテーブル [sys.indexes] に対応するエンティティ行クラスです。
            </summary>
            <remarks>
            テーブル、ビュー、テーブル値関数など、テーブル オブジェクトのインデックスまたはヒープごとに 1 行のデータを格納します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.object_id">
            <summary>
            [object_id] を取得、設定します。
            </summary>
            <value>object_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.name">
            <summary>
            [name] を取得、設定します。
            </summary>
            <value>name</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.index_id">
            <summary>
            [index_id] を取得、設定します。
            </summary>
            <value>index_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.type">
            <summary>
            [type] を取得、設定します。
            </summary>
            <value>type</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.type_desc">
            <summary>
            [type_desc] を取得、設定します。
            </summary>
            <value>type_desc</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.is_unique">
            <summary>
            [is_unique] を取得、設定します。
            </summary>
            <value>is_unique</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.data_space_id">
            <summary>
            [data_space_id] を取得、設定します。
            </summary>
            <value>data_space_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.ignore_dup_key">
            <summary>
            [ignore_dup_key] を取得、設定します。
            </summary>
            <value>ignore_dup_key</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.is_primary_key">
            <summary>
            [is_primary_key] を取得、設定します。
            </summary>
            <value>is_primary_key</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.is_unique_constraint">
            <summary>
            [is_unique_constraint] を取得、設定します。
            </summary>
            <value>is_unique_constraint</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.fill_factor">
            <summary>
            [fill_factor] を取得、設定します。
            </summary>
            <value>fill_factor</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.is_padded">
            <summary>
            [is_padded] を取得、設定します。
            </summary>
            <value>is_padded</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.is_disabled">
            <summary>
            [is_disabled] を取得、設定します。
            </summary>
            <value>is_disabled</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.is_hypothetical">
            <summary>
            [is_hypothetical] を取得、設定します。
            </summary>
            <value>is_hypothetical</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.allow_row_locks">
            <summary>
            [allow_row_locks] を取得、設定します。
            </summary>
            <value>allow_row_locks</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.allow_page_locks">
            <summary>
            [allow_page_locks] を取得、設定します。
            </summary>
            <value>allow_page_locks</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.has_filter">
            <summary>
            [has_filter] を取得、設定します。
            </summary>
            <value>has_filter</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_indexes行.filter_definition">
            <summary>
            [filter_definition] を取得、設定します。
            </summary>
            <value>filter_definition</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.IndexType">
            <summary>
            データベースのインデックスの種類を指定します。
            </summary>
            <remarks>
            sys.indexes.type の値です。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.IndexType.Heap">
            <summary>
            ヒープ
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.IndexType.Clustered">
            <summary>
            クラスター化 インデックス
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.IndexType.NonClustered">
            <summary>
            非クラスター化 インデックス
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.IndexType.XML">
            <summary>
            XML インデックス
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.IndexType.Space">
            <summary>
            空間 インデックス
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.IndexType.ClusteredStore">
            <summary>
            クラスター化列ストア インデックス
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.IndexType.NonClusteredStore">
            <summary>
            非クラスター化列ストア インデックス
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.IndexType.NonClusteredHash">
            <summary>
            非クラスター化ハッシュ インデックス
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns">
            <summary>
            システムテーブル [sys.index_columns] に対応するエンティティクラスです。
            </summary>
            <remarks>
            テーブル、ビュー、テーブル値関数など、テーブル オブジェクトのインデックスまたはヒープごとに 1 行のデータを格納します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.TABLE_NAME">
            <summary>
            テーブル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.object_id">
            <summary>
            sys.index_columns の列 [object_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.index_id">
            <summary>
            sys.index_columns の列 [index_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.index_column_id">
            <summary>
            sys.index_columns の列 [index_column_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.column_id">
            <summary>
            sys.index_columns の列 [column_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.key_ordinal">
            <summary>
            sys.index_columns の列 [key_ordinal] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.partition_ordinal">
            <summary>
            sys.index_columns の列 [partition_ordinal] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.is_descending_key">
            <summary>
            sys.index_columns の列 [is_descending_key] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.is_included_column">
            <summary>
            sys.index_columns の列 [is_included_column] の列名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.#ctor(System.Boolean,System.String[])">
            <summary>
            バイナリ列を使用するかどうかを指定して、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="all">バイナリ列を含むすべての列を使用する場合は true。それ以外の場合は false。</param>
            <param name="addColumns">使用するバイナリ列名</param>
            <remarks>
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。<br/>
            <paramref name="all"/> に false を指定したとき、特定のバイナリ列を使用する場合に <paramref name="addColumns"/> を指定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.#ctor(System.String[])">
            <summary>
            対象の列を使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="columns">使用する列名の一覧</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.PRIMARY_KEY">
            <summary>
            プライマリキーに対応する列名の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.ALL_SELECTION_COLUMNS">
            <summary>
            このエンティティのすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.ALL_SELECTION_COLUMNS_WITHOUT_BINARY">
            <summary>
            このエンティティのバイナリ列以外のすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            <br />
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.ALL_COLUMN_ATTRIBUTES">
            <summary>
            このエンティティのすべての列と、対応するデータベース列情報の一覧を取得します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.MakeInsertAndUpdateColumns">
            <summary>
            テーブルのINSERT処理、及び、UPDATE処理で使用する列の設定を初期化します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.InsertColumns"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.UpdateColumns"/> を設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            対象のプライマリキーに対応する先頭のレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="index_id">index_id</param>
            <param name="index_column_id">index_column_id</param>
            <returns>レコードが存在する場合は変換されたエンティティ行。存在しない場合は null。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            対象のプライマリキーに対応するレコードをデータベース上のテーブルからSELECTし、保持しているエンティティ行を上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="index_id">index_id</param>
            <param name="index_column_id">index_column_id</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.SelectPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="index_id">index_id</param>
            <param name="index_column_id">index_column_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.SelectFixedPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="index_id">index_id</param>
            <param name="index_column_id">index_column_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以降のレコードで補います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.SelectNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="index_id">index_id</param>
            <param name="index_column_id">index_column_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.SelectFixedNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="index_id">index_id</param>
            <param name="index_column_id">index_column_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以前のレコードで補います。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.PrimaryKeys">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.BaseTableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.AllColumns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns.AllColumnAttributes">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns行">
            <summary>
            システムテーブル [sys.index_columns] に対応するエンティティ行クラスです。
            </summary>
            <remarks>
            テーブル、ビュー、テーブル値関数など、テーブル オブジェクトのインデックスまたはヒープごとに 1 行のデータを格納します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns行.object_id">
            <summary>
            [object_id] を取得、設定します。
            </summary>
            <value>object_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns行.index_id">
            <summary>
            [index_id] を取得、設定します。
            </summary>
            <value>index_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns行.index_column_id">
            <summary>
            [index_column_id] を取得、設定します。
            </summary>
            <value>index_column_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns行.column_id">
            <summary>
            [column_id] を取得、設定します。
            </summary>
            <value>column_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns行.key_ordinal">
            <summary>
            [key_ordinal] を取得、設定します。
            </summary>
            <value>key_ordinal</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns行.partition_ordinal">
            <summary>
            [partition_ordinal] を取得、設定します。
            </summary>
            <value>partition_ordinal</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns行.is_descending_key">
            <summary>
            [is_descending_key] を取得、設定します。
            </summary>
            <value>is_descending_key</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_index_columns行.is_included_column">
            <summary>
            [is_included_column] を取得、設定します。
            </summary>
            <value>is_included_column</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects">
            <summary>
            システムテーブル [sys.objects] に対応するエンティティクラスです。
            </summary>
            <remarks>
            データベース内で作成されるユーザー定義のスキーマ スコープ オブジェクトごとに 1 行のデータを格納します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.TABLE_NAME">
            <summary>
            テーブル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.name">
            <summary>
            sys.objects の列 [name] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.object_id">
            <summary>
            sys.objects の列 [object_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.principal_id">
            <summary>
            sys.objects の列 [principal_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.schema_id">
            <summary>
            sys.objects の列 [schema_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.parent_object_id">
            <summary>
            sys.objects の列 [parent_object_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.type">
            <summary>
            sys.objects の列 [type] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.type_desc">
            <summary>
            sys.objects の列 [type_desc] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.create_date">
            <summary>
            sys.objects の列 [create_date] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.modify_date">
            <summary>
            sys.objects の列 [modify_date] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.is_ms_shipped">
            <summary>
            sys.objects の列 [is_ms_shipped] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.is_published">
            <summary>
            sys.objects の列 [is_published] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.is_schema_published">
            <summary>
            sys.objects の列 [is_schema_published] の列名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.#ctor(System.Boolean,System.String[])">
            <summary>
            バイナリ列を使用するかどうかを指定して、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="all">バイナリ列を含むすべての列を使用する場合は true。それ以外の場合は false。</param>
            <param name="addColumns">使用するバイナリ列名</param>
            <remarks>
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。<br/>
            <paramref name="all"/> に false を指定したとき、特定のバイナリ列を使用する場合に <paramref name="addColumns"/> を指定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.#ctor(System.String[])">
            <summary>
            対象の列を使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="columns">使用する列名の一覧</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.PRIMARY_KEY">
            <summary>
            プライマリキーに対応する列名の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.ALL_SELECTION_COLUMNS">
            <summary>
            このエンティティのすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.ALL_SELECTION_COLUMNS_WITHOUT_BINARY">
            <summary>
            このエンティティのバイナリ列以外のすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            <br />
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.ALL_COLUMN_ATTRIBUTES">
            <summary>
            このエンティティのすべての列と、対応するデータベース列情報の一覧を取得します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.MakeInsertAndUpdateColumns">
            <summary>
            テーブルのINSERT処理、及び、UPDATE処理で使用する列の設定を初期化します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.InsertColumns"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.UpdateColumns"/> を設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32})">
            <summary>
            対象のプライマリキーに対応する先頭のレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <returns>レコードが存在する場合は変換されたエンティティ行。存在しない場合は null。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String[])">
            <summary>
            対象のオブジェクトに対応する先頭のレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="name">オブジェクトの名前</param>
            <param name="types">オブジェクトの種類</param>
            <returns>レコードが存在する場合は変換されたエンティティ行。存在しない場合は null。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.PrimaryKeys">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.BaseTableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.AllColumns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects.AllColumnAttributes">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects行">
            <summary>
            システムテーブル [sys.objects] に対応するエンティティ行クラスです。
            </summary>
            <remarks>
            データベース内で作成されるユーザー定義のスキーマ スコープ オブジェクトごとに 1 行のデータを格納します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects行.name">
            <summary>
            [name] を取得、設定します。
            </summary>
            <value>name</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects行.object_id">
            <summary>
            [object_id] を取得、設定します。
            </summary>
            <value>object_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects行.principal_id">
            <summary>
            [principal_id] を取得、設定します。
            </summary>
            <value>principal_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects行.schema_id">
            <summary>
            [schema_id] を取得、設定します。
            </summary>
            <value>schema_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects行.parent_object_id">
            <summary>
            [parent_object_id] を取得、設定します。
            </summary>
            <value>parent_object_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects行.type">
            <summary>
            [type] を取得、設定します。
            </summary>
            <value>type</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects行.type_desc">
            <summary>
            [type_desc] を取得、設定します。
            </summary>
            <value>type_desc</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects行.create_date">
            <summary>
            [create_date] を取得、設定します。
            </summary>
            <value>create_date</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects行.modify_date">
            <summary>
            [modify_date] を取得、設定します。
            </summary>
            <value>modify_date</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects行.is_ms_shipped">
            <summary>
            [is_ms_shipped] を取得、設定します。
            </summary>
            <value>is_ms_shipped</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects行.is_published">
            <summary>
            [is_published] を取得、設定します。
            </summary>
            <value>is_published</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_objects行.is_schema_published">
            <summary>
            [is_schema_published] を取得、設定します。
            </summary>
            <value>is_schema_published</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas">
            <summary>
            システムテーブル [sys.schemas] に対応するエンティティクラスです。
            </summary>
            <remarks>
            データベース スキーマごとに 1 行のデータを保持します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.TABLE_NAME">
            <summary>
            テーブル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.name">
            <summary>
            sys.schemas の列 [name] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.schema_id">
            <summary>
            sys.schemas の列 [schema_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.principal_id">
            <summary>
            sys.schemas の列 [principal_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.#ctor(System.Boolean,System.String[])">
            <summary>
            バイナリ列を使用するかどうかを指定して、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="all">バイナリ列を含むすべての列を使用する場合は true。それ以外の場合は false。</param>
            <param name="addColumns">使用するバイナリ列名</param>
            <remarks>
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。<br/>
            <paramref name="all"/> に false を指定したとき、特定のバイナリ列を使用する場合に <paramref name="addColumns"/> を指定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.#ctor(System.String[])">
            <summary>
            対象の列を使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="columns">使用する列名の一覧</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.PRIMARY_KEY">
            <summary>
            プライマリキーに対応する列名の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.ALL_SELECTION_COLUMNS">
            <summary>
            このエンティティのすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.ALL_SELECTION_COLUMNS_WITHOUT_BINARY">
            <summary>
            このエンティティのバイナリ列以外のすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            <br />
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.ALL_COLUMN_ATTRIBUTES">
            <summary>
            このエンティティのすべての列と、対応するデータベース列情報の一覧を取得します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.MakeInsertAndUpdateColumns">
            <summary>
            テーブルのINSERT処理、及び、UPDATE処理で使用する列の設定を初期化します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.InsertColumns"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.UpdateColumns"/> を設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32})">
            <summary>
            対象のプライマリキーに対応する先頭のレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="schema_id">schema_id</param>
            <returns>レコードが存在する場合は変換されたエンティティ行。存在しない場合は null。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            対象のプライマリキーに対応するレコードをデータベース上のテーブルからSELECTし、保持しているエンティティ行を上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="schema_id">schema_id</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.SelectPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="schema_id">schema_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.SelectFixedPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="schema_id">schema_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以降のレコードで補います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.SelectNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="schema_id">schema_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.SelectFixedNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="schema_id">schema_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以前のレコードで補います。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.PrimaryKeys">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.BaseTableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.AllColumns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas.AllColumnAttributes">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas行">
            <summary>
            システムテーブル [sys.schemas] に対応するエンティティ行クラスです。
            </summary>
            <remarks>
            データベース スキーマごとに 1 行のデータを保持します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas行.name">
            <summary>
            [name] を取得、設定します。
            </summary>
            <value>name</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas行.schema_id">
            <summary>
            [schema_id] を取得、設定します。
            </summary>
            <value>schema_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_schemas行.principal_id">
            <summary>
            [principal_id] を取得、設定します。
            </summary>
            <value>principal_id</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules">
            <summary>
            システムテーブル [sys.sql_modules] に対応するエンティティクラスです。
            </summary>
            <remarks>
            SQL Server の SQL 言語で定義されるモジュールであるオブジェクトごとに 1 行のデータを返します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.TABLE_NAME">
            <summary>
            テーブル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.object_id">
            <summary>
            sys.sql_modules の列 [object_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.definition">
            <summary>
            sys.sql_modules の列 [definition] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.uses_ansi_nulls">
            <summary>
            sys.sql_modules の列 [uses_ansi_nulls] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.uses_quoted_identifier">
            <summary>
            sys.sql_modules の列 [uses_quoted_identifier] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.is_schema_bound">
            <summary>
            sys.sql_modules の列 [is_schema_bound] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.uses_database_collation">
            <summary>
            sys.sql_modules の列 [uses_database_collation] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.is_recompiled">
            <summary>
            sys.sql_modules の列 [is_recompiled] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.null_on_null_input">
            <summary>
            sys.sql_modules の列 [null_on_null_input] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.execute_as_principal_id">
            <summary>
            sys.sql_modules の列 [execute_as_principal_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.uses_native_compilation">
            <summary>
            sys.sql_modules の列 [uses_native_compilation] の列名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.#ctor(System.Boolean,System.String[])">
            <summary>
            バイナリ列を使用するかどうかを指定して、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="all">バイナリ列を含むすべての列を使用する場合は true。それ以外の場合は false。</param>
            <param name="addColumns">使用するバイナリ列名</param>
            <remarks>
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。<br/>
            <paramref name="all"/> に false を指定したとき、特定のバイナリ列を使用する場合に <paramref name="addColumns"/> を指定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.#ctor(System.String[])">
            <summary>
            対象の列を使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="columns">使用する列名の一覧</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.PRIMARY_KEY">
            <summary>
            プライマリキーに対応する列名の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.ALL_SELECTION_COLUMNS">
            <summary>
            このエンティティのすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.ALL_SELECTION_COLUMNS_WITHOUT_BINARY">
            <summary>
            このエンティティのバイナリ列以外のすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            <br />
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.ALL_COLUMN_ATTRIBUTES">
            <summary>
            このエンティティのすべての列と、対応するデータベース列情報の一覧を取得します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.MakeInsertAndUpdateColumns">
            <summary>
            テーブルのINSERT処理、及び、UPDATE処理で使用する列の設定を初期化します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.InsertColumns"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.UpdateColumns"/> を設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32})">
            <summary>
            対象のプライマリキーに対応する先頭のレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <returns>レコードが存在する場合は変換されたエンティティ行。存在しない場合は null。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            対象のプライマリキーに対応するレコードをデータベース上のテーブルからSELECTし、保持しているエンティティ行を上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.SelectPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.SelectFixedPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以降のレコードで補います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.SelectNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.SelectFixedNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以前のレコードで補います。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.PrimaryKeys">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.BaseTableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.AllColumns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules.AllColumnAttributes">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules行">
            <summary>
            システムテーブル [sys.sql_modules] に対応するエンティティ行クラスです。
            </summary>
            <remarks>
            SQL Server の SQL 言語で定義されるモジュールであるオブジェクトごとに 1 行のデータを返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules行.object_id">
            <summary>
            [object_id] を取得、設定します。
            </summary>
            <value>object_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules行.definition">
            <summary>
            [definition] を取得、設定します。
            </summary>
            <value>definition</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules行.uses_ansi_nulls">
            <summary>
            [uses_ansi_nulls] を取得、設定します。
            </summary>
            <value>uses_ansi_nulls</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules行.uses_quoted_identifier">
            <summary>
            [uses_quoted_identifier] を取得、設定します。
            </summary>
            <value>uses_quoted_identifier</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules行.is_schema_bound">
            <summary>
            [is_schema_bound] を取得、設定します。
            </summary>
            <value>is_schema_bound</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules行.uses_database_collation">
            <summary>
            [uses_database_collation] を取得、設定します。
            </summary>
            <value>uses_database_collation</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules行.is_recompiled">
            <summary>
            [is_recompiled] を取得、設定します。
            </summary>
            <value>is_recompiled</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules行.null_on_null_input">
            <summary>
            [null_on_null_input] を取得、設定します。
            </summary>
            <value>null_on_null_input</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules行.execute_as_principal_id">
            <summary>
            [execute_as_principal_id] を取得、設定します。
            </summary>
            <value>execute_as_principal_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_sql_modules行.uses_native_compilation">
            <summary>
            [uses_native_compilation] を取得、設定します。
            </summary>
            <value>uses_native_compilation</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types">
            <summary>
            システムテーブル [sys.types] に対応するエンティティクラスです。
            </summary>
            <remarks>
            システム型とユーザー定義の型ごとに 1 行のデータを格納します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.TABLE_NAME">
            <summary>
            テーブル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.name">
            <summary>
            sys.types の列 [name] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.system_type_id">
            <summary>
            sys.types の列 [system_type_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.user_type_id">
            <summary>
            sys.types の列 [user_type_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.schema_id">
            <summary>
            sys.types の列 [schema_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.principal_id">
            <summary>
            sys.types の列 [principal_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.max_length">
            <summary>
            sys.types の列 [max_length] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.precision">
            <summary>
            sys.types の列 [precision] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.scale">
            <summary>
            sys.types の列 [scale] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.collation_name">
            <summary>
            sys.types の列 [collation_name] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.is_nullable">
            <summary>
            sys.types の列 [is_nullable] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.is_user_defined">
            <summary>
            sys.types の列 [is_user_defined] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.is_assembly_type">
            <summary>
            sys.types の列 [is_assembly_type] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.default_object_id">
            <summary>
            sys.types の列 [default_object_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.rule_object_id">
            <summary>
            sys.types の列 [rule_object_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.is_table_type">
            <summary>
            sys.types の列 [is_table_type] の列名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.#ctor(System.Boolean,System.String[])">
            <summary>
            バイナリ列を使用するかどうかを指定して、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="all">バイナリ列を含むすべての列を使用する場合は true。それ以外の場合は false。</param>
            <param name="addColumns">使用するバイナリ列名</param>
            <remarks>
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。<br/>
            <paramref name="all"/> に false を指定したとき、特定のバイナリ列を使用する場合に <paramref name="addColumns"/> を指定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.#ctor(System.String[])">
            <summary>
            対象の列を使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="columns">使用する列名の一覧</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.PRIMARY_KEY">
            <summary>
            プライマリキーに対応する列名の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.ALL_SELECTION_COLUMNS">
            <summary>
            このエンティティのすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.ALL_SELECTION_COLUMNS_WITHOUT_BINARY">
            <summary>
            このエンティティのバイナリ列以外のすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            <br />
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.ALL_COLUMN_ATTRIBUTES">
            <summary>
            このエンティティのすべての列と、対応するデータベース列情報の一覧を取得します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.MakeInsertAndUpdateColumns">
            <summary>
            テーブルのINSERT処理、及び、UPDATE処理で使用する列の設定を初期化します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.InsertColumns"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.UpdateColumns"/> を設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32})">
            <summary>
            対象のプライマリキーに対応する先頭のレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="user_type_id">user_type_id</param>
            <returns>レコードが存在する場合は変換されたエンティティ行。存在しない場合は null。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            対象のプライマリキーに対応するレコードをデータベース上のテーブルからSELECTし、保持しているエンティティ行を上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="user_type_id">user_type_id</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.SelectPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="user_type_id">user_type_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.SelectFixedPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="user_type_id">user_type_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以降のレコードで補います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.SelectNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="user_type_id">user_type_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.SelectFixedNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="user_type_id">user_type_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以前のレコードで補います。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.PrimaryKeys">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.BaseTableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.AllColumns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types.AllColumnAttributes">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行">
            <summary>
            システムテーブル [sys.types] に対応するエンティティ行クラスです。
            </summary>
            <remarks>
            システム型とユーザー定義の型ごとに 1 行のデータを格納します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行.name">
            <summary>
            [name] を取得、設定します。
            </summary>
            <value>name</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行.system_type_id">
            <summary>
            [system_type_id] を取得、設定します。
            </summary>
            <value>system_type_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行.user_type_id">
            <summary>
            [user_type_id] を取得、設定します。
            </summary>
            <value>user_type_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行.schema_id">
            <summary>
            [schema_id] を取得、設定します。
            </summary>
            <value>schema_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行.principal_id">
            <summary>
            [principal_id] を取得、設定します。
            </summary>
            <value>principal_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行.max_length">
            <summary>
            [max_length] を取得、設定します。
            </summary>
            <value>max_length</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行.precision">
            <summary>
            [precision] を取得、設定します。
            </summary>
            <value>precision</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行.scale">
            <summary>
            [scale] を取得、設定します。
            </summary>
            <value>scale</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行.collation_name">
            <summary>
            [collation_name] を取得、設定します。
            </summary>
            <value>collation_name</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行.is_nullable">
            <summary>
            [is_nullable] を取得、設定します。
            </summary>
            <value>is_nullable</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行.is_user_defined">
            <summary>
            [is_user_defined] を取得、設定します。
            </summary>
            <value>is_user_defined</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行.is_assembly_type">
            <summary>
            [is_assembly_type] を取得、設定します。
            </summary>
            <value>is_assembly_type</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行.default_object_id">
            <summary>
            [default_object_id] を取得、設定します。
            </summary>
            <value>default_object_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行.rule_object_id">
            <summary>
            [rule_object_id] を取得、設定します。
            </summary>
            <value>rule_object_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_types行.is_table_type">
            <summary>
            [is_table_type] を取得、設定します。
            </summary>
            <value>is_table_type</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views">
            <summary>
            システムテーブル [sys.views] に対応するエンティティクラスです。
            </summary>
            <remarks>
            ビュー オブジェクトごとに 1 行のデータを格納します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.TABLE_NAME">
            <summary>
            テーブル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.name">
            <summary>
            sys.views の列 [name] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.object_id">
            <summary>
            sys.views の列 [object_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.principal_id">
            <summary>
            sys.views の列 [principal_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.schema_id">
            <summary>
            sys.views の列 [schema_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.parent_object_id">
            <summary>
            sys.views の列 [parent_object_id] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.type">
            <summary>
            sys.views の列 [type] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.type_desc">
            <summary>
            sys.views の列 [type_desc] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.create_date">
            <summary>
            sys.views の列 [create_date] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.modify_date">
            <summary>
            sys.views の列 [modify_date] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.is_ms_shipped">
            <summary>
            sys.views の列 [is_ms_shipped] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.is_published">
            <summary>
            sys.views の列 [is_published] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.is_schema_published">
            <summary>
            sys.views の列 [is_schema_published] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.is_replicated">
            <summary>
            sys.views の列 [is_replicated] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.has_replication_filter">
            <summary>
            sys.views の列 [has_replication_filter] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.has_opaque_metadata">
            <summary>
            sys.views の列 [has_opaque_metadata] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.has_unchecked_assembly_data">
            <summary>
            sys.views の列 [has_unchecked_assembly_data] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.with_check_option">
            <summary>
            sys.views の列 [with_check_option] の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.is_date_correlation_view">
            <summary>
            sys.views の列 [is_date_correlation_view] の列名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.#ctor(System.Boolean,System.String[])">
            <summary>
            バイナリ列を使用するかどうかを指定して、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="all">バイナリ列を含むすべての列を使用する場合は true。それ以外の場合は false。</param>
            <param name="addColumns">使用するバイナリ列名</param>
            <remarks>
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。<br/>
            <paramref name="all"/> に false を指定したとき、特定のバイナリ列を使用する場合に <paramref name="addColumns"/> を指定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.#ctor(System.String[])">
            <summary>
            対象の列を使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="columns">使用する列名の一覧</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.PRIMARY_KEY">
            <summary>
            プライマリキーに対応する列名の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.ALL_SELECTION_COLUMNS">
            <summary>
            このエンティティのすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.ALL_SELECTION_COLUMNS_WITHOUT_BINARY">
            <summary>
            このエンティティのバイナリ列以外のすべての列と、エンティティ行クラスの対応するプロパティ名の一覧です。
            </summary>
            <remarks>
            key   : 列名<br />
            value : エンティティ行のプロパティ名<br />
            <br />
            有効桁数がMAX(ex. nvarchar(max) etc.)の列もバイナリ列と同等に扱われます。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.ALL_COLUMN_ATTRIBUTES">
            <summary>
            このエンティティのすべての列と、対応するデータベース列情報の一覧を取得します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.MakeInsertAndUpdateColumns">
            <summary>
            テーブルのINSERT処理、及び、UPDATE処理で使用する列の設定を初期化します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.InsertColumns"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.UpdateColumns"/> を設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.GetSelectRow(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32})">
            <summary>
            対象のプライマリキーに対応する先頭のレコードをデータベース上のテーブルからSELECTし、エンティティ行に変換して返します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <returns>レコードが存在する場合は変換されたエンティティ行。存在しない場合は null。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.Select(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            対象のプライマリキーに対応するレコードをデータベース上のテーブルからSELECTし、保持しているエンティティ行を上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="lock">レコードのロックを行う場合は true。それ以外の場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.SelectPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.SelectFixedPrev(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以前のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以降のレコードで補います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.SelectNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件に合う分だけ取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.SelectFixedNext(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            対象のプライマリキー以降のレコードをデータベース上のテーブルからSELECTし、このエンティティを上書きします。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="object_id">object_id</param>
            <param name="includeSameValue">対象のプライマリキーのレコードも取得結果に含める場合は true。含めない場合は false。</param>
            <param name="isAsc">レコードの並び替えの方向を昇順にする場合は true。降順にする場合は false。</param>
            <returns>1件以上のレコードを取得できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            コレクションに保持しているエンティティ行数(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>)分のレコードを取得します。<br/>
            条件に合うレコード数がコレクションに保持しているエンティティ行数に満たない場合は、条件以前のレコードで補います。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.PrimaryKeys">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.BaseTableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.AllColumns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views.AllColumnAttributes">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行">
            <summary>
            システムテーブル [sys.views] に対応するエンティティ行クラスです。
            </summary>
            <remarks>
            ビュー オブジェクトごとに 1 行のデータを格納します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.name">
            <summary>
            [name] を取得、設定します。
            </summary>
            <value>name</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.object_id">
            <summary>
            [object_id] を取得、設定します。
            </summary>
            <value>object_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.principal_id">
            <summary>
            [principal_id] を取得、設定します。
            </summary>
            <value>principal_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.schema_id">
            <summary>
            [schema_id] を取得、設定します。
            </summary>
            <value>schema_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.parent_object_id">
            <summary>
            [parent_object_id] を取得、設定します。
            </summary>
            <value>parent_object_id</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.type">
            <summary>
            [type] を取得、設定します。
            </summary>
            <value>type</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.type_desc">
            <summary>
            [type_desc] を取得、設定します。
            </summary>
            <value>type_desc</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.create_date">
            <summary>
            [create_date] を取得、設定します。
            </summary>
            <value>create_date</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.modify_date">
            <summary>
            [modify_date] を取得、設定します。
            </summary>
            <value>modify_date</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.is_ms_shipped">
            <summary>
            [is_ms_shipped] を取得、設定します。
            </summary>
            <value>is_ms_shipped</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.is_published">
            <summary>
            [is_published] を取得、設定します。
            </summary>
            <value>is_published</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.is_schema_published">
            <summary>
            [is_schema_published] を取得、設定します。
            </summary>
            <value>is_schema_published</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.is_replicated">
            <summary>
            [is_replicated] を取得、設定します。
            </summary>
            <value>is_replicated</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.has_replication_filter">
            <summary>
            [has_replication_filter] を取得、設定します。
            </summary>
            <value>has_replication_filter</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.has_opaque_metadata">
            <summary>
            [has_opaque_metadata] を取得、設定します。
            </summary>
            <value>has_opaque_metadata</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.has_unchecked_assembly_data">
            <summary>
            [has_unchecked_assembly_data] を取得、設定します。
            </summary>
            <value>has_unchecked_assembly_data</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.with_check_option">
            <summary>
            [with_check_option] を取得、設定します。
            </summary>
            <value>with_check_option</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.System.SQLServer.sys_views行.is_date_correlation_view">
            <summary>
            [is_date_correlation_view] を取得、設定します。
            </summary>
            <value>is_date_correlation_view</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1">
            <summary>
            ビューに対応するエンティティクラスです。
            </summary>
            <typeparam name="T">エンティティ行の型</typeparam>
            <remarks>
            対象がビューであるため、このクラスではテーブルの更新処理はすべて無効化されています。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.IsChangedDatabaseValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.Insert(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.Insert(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.BulkInsert(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.BulkInsert(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.DatabaseBulkInsertPriorityFlag)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.Update(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.Update(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.MergeUpdate(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.MergeUpdate(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.Update(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.GetUpdateEntity(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.Delete(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Object[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.Delete(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.Delete(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Boolean)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.AllDelete(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.ExecBatch(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.CreateTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.CreateTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Reflection.PropertyInfo[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.CreateTempTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.CreateTempTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[])">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.DropTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.ViewEntityBase`1.TruncateTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
            <remarks>このクラスでは、このメソッドは使用できません。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">このメソッドが使用された場合に必ずスローします。</exception>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PageSettingsExtensions">
            <summary>
            <see cref="T:System.Drawing.Printing.PageSettings"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PageSettingsExtensions.CopyTo(System.Drawing.Printing.PageSettings,System.Drawing.Printing.PageSettings)">
            <summary>
            対象のページ設定を、指定したコピー先にコピーします。
            </summary>
            <param name="from">コピー元のページ設定</param>
            <param name="to">コピー先のページ設定</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PaperSizeExtensions">
            <summary>
            <see cref="T:System.Drawing.Printing.PaperSize"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PaperSizeExtensions.Clone(System.Drawing.Printing.PaperSize)">
            <summary>
            対象の用紙サイズを複製した新しい用紙サイズオブジェクトを生成します。
            </summary>
            <param name="original">複製元の用紙サイズ</param>
            <returns>複製された新しい用紙サイズ</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PaperSourceExtensions">
            <summary>
            <see cref="T:System.Drawing.Printing.PaperSource"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PaperSourceExtensions.Clone(System.Drawing.Printing.PaperSource)">
            <summary>
            対象の用紙トレイを複製した新しい用紙トレイオブジェクトを生成します。
            </summary>
            <param name="original">複製元の用紙トレイ</param>
            <returns>複製された新しい用紙トレイ</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterResolutionExtensions">
            <summary>
            <see cref="T:System.Drawing.Printing.PrinterResolution"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterResolutionExtensions.Clone(System.Drawing.Printing.PrinterResolution)">
            <summary>
            対象のプリンタ解像度を複製した新しいプリンタ解像度オブジェクトを生成します。
            </summary>
            <param name="original">複製元のプリンタ解像度</param>
            <returns>複製された新しいプリンタ解像度</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.IO.TextReaderExtensions">
            <summary>
            <see cref="T:System.IO.TextReader"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.IO.TextReaderExtensions.ReadLines(System.IO.TextReader)">
            <summary>
            対象のリーダーから、1行ずつ文字を読み取って返します。
            </summary>
            <param name="reader">テキストリーダー</param>
            <returns>読み取った行の列挙</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AbstractSequentialReaderExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialReader"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AbstractSequentialReaderExtensions.SequentialRead(Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialReader,System.String,System.Boolean,System.Boolean)">
            <summary>
            対象のファイル読込用オブジェクトを使用して、指定したパスのファイルの内容を順に読み込みます。
            </summary>
            <param name="reader">ファイル読込用オブジェクト</param>
            <param name="filePath">読込ファイルパス</param>
            <param name="skipEmptyRow">空行をスキップする場合は true。空行も読み込む場合は false。</param>
            <param name="useTemp">対象のファイルを一時フォルダにコピーしてから読み込む場合は true。直接読み込む場合は false。</param>
            <returns>読み込んだファイルの各行データ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AbstractSequentialReaderExtensions.SequentialRead(Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialReader,System.IO.FileInfo,System.Boolean,System.Boolean)">
            <summary>
            対象のファイル読込用オブジェクトを使用して、指定したパスのファイルの内容を順に読み込みます。
            </summary>
            <param name="reader">ファイル読込用オブジェクト</param>
            <param name="file">読込ファイル</param>
            <param name="skipEmptyRow">空行をスキップする場合は true。空行も読み込む場合は false。</param>
            <param name="useTemp">対象のファイルを一時フォルダにコピーしてから読み込む場合は true。直接読み込む場合は false。</param>
            <returns>読み込んだファイルの各行データ</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.ArrayExtensions">
            <summary>
            <see cref="T:System.Array"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.ArrayExtensions.IndexOf``1(``0[],``0)">
            <summary>
            対象の配列から指定したオブジェクトを検索し、インデックス番号の最も小さい要素のインデックスを返します。
            </summary>
            <typeparam name="T">配列の要素の型</typeparam>
            <param name="array">配列</param>
            <param name="item">検索するオブジェクト</param>
            <returns>指定したオブジェクトが配列内に見つかった場合はその最も小さいインデックス。見つからなかった場合は -1。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.ArrayExtensions.LastIndexOf``1(``0[],``0)">
            <summary>
            対象の配列から指定したオブジェクトを検索し、インデックス番号の最も大きい要素のインデックスを返します。
            </summary>
            <typeparam name="T">配列の要素の型</typeparam>
            <param name="array">配列</param>
            <param name="item">検索するオブジェクト</param>
            <returns>指定したオブジェクトが配列内に見つかった場合はその最も大きいインデックス。見つからなかった場合は -1。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.ArrayExtensions.IsNullOrEmpty``1(``0[])">
            <summary>
            対象の配列が null、もしくは、要素が空の配列であるかどうかを返します。
            </summary>
            <typeparam name="T">配列の要素の型</typeparam>
            <param name="array">配列</param>
            <returns>null、もしくは、要素が空の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.ArrayExtensions.Replace``1(``0[],``0,``0)">
            <summary>
            対象の配列の指定した値に一致する要素を、すべて新しい値に置換します。
            </summary>
            <typeparam name="T">配列の要素の型</typeparam>
            <param name="array">配列</param>
            <param name="oldValue">置換対象の値</param>
            <param name="newValue">置換後の値</param>
            <returns>置換された配列</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailCollectionExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailCollectionExtensions.GetDetailFromKey(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetailCollection,System.String)">
            <summary>
            対象のカスタム抽出条件の明細コレクションから、指定したキー名の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail"/> 検索して取得します。
            </summary>
            <param name="collection">カスタム抽出条件の明細コレクション</param>
            <param name="key">キー名</param>
            <returns>キー名の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail"/>が見つかった場合はその<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail"/>オブジェクト。見つからなかった場合は null。</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.IsListType(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細が、区分項目かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>区分項目の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.IsCodeType(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細が、単一値入力項目かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>単一値入力項目の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.IsDateType(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細が、日付項目かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>日付項目の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.Exists(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細が条件項目として追加されているかどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>条件項目として追加されている場合は true。未追加の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetUnaryValue(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細の単一値入力時の入力値を取得します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>単一値入力時の入力値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.SetUnaryValue(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail,System.String)">
            <summary>
            対象のカスタム抽出条件明細の単一値入力時の入力値として、指定した値を設定します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <param name="value">入力値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetNameValue(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細の複数値入力時の入力値を取得します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>複数値入力時の入力値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.SetNameValue(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail,System.String)">
            <summary>
            対象のカスタム抽出条件明細の複数値入力時の入力値として、指定した値を設定します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <param name="value">入力値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetFromValue(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細の範囲指定の開始値を取得します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>範囲指定の開始値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.SetFromValue(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail,System.String)">
            <summary>
            対象のカスタム抽出条件明細の範囲指定の開始値として、指定した値を設定します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <param name="value">開始値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetToValue(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細の範囲指定の終了値を取得します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>範囲指定の終了値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.SetToValue(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail,System.String)">
            <summary>
            対象のカスタム抽出条件明細の範囲指定の終了値として、指定した値を設定します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <param name="value">終了値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetBlankRowLabelVisible(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細で、空行ラベルが表示可能(有効)かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>空行ラベルが表示可能(有効)な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetLabelVisible(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細で、ラベルが表示可能(有効)かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>ラベルが表示可能(有効)な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetCodeVisible(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細で、単一値入力項目が表示可能(有効)かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>単一値入力項目が表示可能(有効)な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetCodeNameVisible(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細で、単一値入力時の名称項目が表示可能(有効)かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>単一値入力時の名称項目が表示可能(有効)な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetFromToCodeVisible(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細で、範囲指定項目が表示可能(有効)かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>範囲指定項目が表示可能(有効)な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetNameVisible(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細で、複数値入力項目が表示可能(有効)かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>複数値入力項目が表示可能(有効)な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetYMVisible(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細で、年月の単一指定項目が表示可能(有効)かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>年月の単一指定項目が表示可能(有効)な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetFromToYMVisible(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細で、年月の範囲指定項目が表示可能(有効)かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>年月の範囲指定項目が表示可能(有効)な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetDateVisible(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細で、日付の単一指定項目が表示可能(有効)かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>日付の単一指定項目が表示可能(有効)な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetFromToDateVisible(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細で、日付の範囲指定項目が表示可能(有効)かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>日付の範囲指定項目が表示可能(有効)な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetKubunVisible(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細で、区分項目が表示可能(有効)かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>区分項目が表示可能(有効)な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetListVisible(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Attributes.ListType[])">
            <summary>
            対象のカスタム抽出条件明細で、指定した位置の区分値が、指定した入力方法のときに表示可能(有効)かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <param name="index">区分値の位置</param>
            <param name="types">入力方法</param>
            <returns>区分値が表示可能(有効)な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.GetIndividualFindVisible(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細で個別検索を表示可能(有効)かどうかを返します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>個別検索を表示可能(有効)な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.AutoLayoutDetailExtensions.ValueOpenProperies(Ill.Incorporated.Aladdinoffice.Framework.AutoLayout.AutoLayoutDetail)">
            <summary>
            対象のカスタム抽出条件明細から、値を格納する公開プロパティを列挙します。
            </summary>
            <param name="detail">カスタム抽出条件の明細行</param>
            <returns>値を格納する公開プロパティの列挙</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.ColorExtensions">
            <summary>
            <see cref="T:System.Drawing.Color"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.ColorExtensions.ToRgbHexString(System.Drawing.Color)">
            <summary>
            対象の色を、対応する16進文字列に変換します。
            </summary>
            <param name="color">カラー</param>
            <returns>RGBの各16進文字列</returns>
            <remarks>
            <see cref="M:System.Drawing.ColorTranslator.ToHtml(System.Drawing.Color)"/> を使用すると 赤 であれば Red という文字列が返ってきてしまうため、
            このメソッドでRGBの各16進値を結合して返します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DbParameterExtensions">
            <summary>
            <see cref="T:System.Data.Common.DbParameter"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DbParameterExtensions.GetRealValue(System.Data.Common.DbParameter)">
            <summary>
            対象のデータベースパラメータの値を、SQL文中で記述する際の文字列を取得します。
            </summary>
            <param name="prm">データベースパラメータ</param>
            <returns>
            パラメータ値のSQL表現。<br />
            文字列型や日付型など、SQL文中でシングルクォートで囲む必要がある場合はシングルクォートで囲った文字列、
            数値型などシングルクォートで囲む必要がない場合はそのままの文字列 をそれぞれ返します。
            </returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DelegateExtensions">
            <summary>
            <see cref="T:System.Delegate"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DelegateExtensions.IsExists(System.Delegate,System.Delegate)">
            <summary>
            対象のデリゲートの呼出対象に、指定したデリゲートが登録されているかどうかを返します。
            </summary>
            <param name="self">呼出元のデリゲート</param>
            <param name="hander">呼出対象のデリゲート</param>
            <returns>登録されている場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="self"/> をイベントや<see cref="T:System.Action"/>、<paramref name="hander"/> をイベントハンドラとして指定します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DictionaryExtensions">
            <summary>
            <see cref="T:System.Collections.IDictionary"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DictionaryExtensions.AddRange``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{``1},System.Func{``1,``0})">
            <summary>
            対象のディクショナリに、指定した要素を追加します。
            </summary>
            <typeparam name="TKey">キーの型</typeparam>
            <typeparam name="TValue">値の型</typeparam>
            <param name="dic">要素を追加するディクショナリ</param>
            <param name="list">追加する要素の値となるオブジェクトの一覧</param>
            <param name="func">値として追加するオブジェクトからキーを抽出するためのデリゲート</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumExtensions">
            <summary>
            <see cref="T:System.Enum"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumExtensions.ConvertToEnumValue``1(``0)">
            <summary>
            対象の列挙型の値を、その定義値に変換します。
            </summary>
            <typeparam name="T">列挙型 もしくは Null許容列挙型</typeparam>
            <param name="value">列挙型の値</param>
            <returns>
            <paramref name="value"/> の <typeparamref name="T"/> 内の定義値。<br/>
            通常は整数値です。<br/>
            <typeparamref name="T"/> がNull許容型で<paramref name="value"/> が null の場合は null が返されます。<br/>
            </returns>
            <exception cref="T:System.ArgumentException">
            <typeparamref name="T"/> が 列挙型 もしくは Null許容列挙型 でない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumExtensions.ToEnumValueString``1(``0)">
            <summary>
            対象の列挙型の値を、その定義値の文字列に変換します。
            </summary>
            <typeparam name="T">列挙型 もしくは Null許容列挙型</typeparam>
            <param name="value">列挙型の値</param>
            <returns>
            <paramref name="value"/> の <typeparamref name="T"/> 内の定義値の文字列。<br />
            通常は整数を表す文字列です。<br />
            <typeparamref name="T"/> がNull許容型で<paramref name="value"/> が null の場合は 空 の文字列が返されます。<br />
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumExtensions.ParseEquals``1(``0,System.Object)">
            <summary>
            指定した値が、対象の列挙型の値に変換可能かどうかを返します。
            </summary>
            <typeparam name="T">列挙型 もしくは Null許容列挙型</typeparam>
            <param name="value1">列挙型の値</param>
            <param name="value2">変換可能かを判定する値</param>
            <returns>変換可能な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumExtensions.GetValues``1">
            <summary>
            対象の列挙型の値を列挙します。
            </summary>
            <typeparam name="T">列挙型</typeparam>
            <returns>列挙型 <typeparamref name="T"/> の値の一覧</returns>
            <remarks>
            <see cref="M:System.Enum.GetValues(System.Type)"/> で返される配列の各要素を <typeparamref name="T"/> にキャストして列挙します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.ExceptionExtensions">
            <summary>
            <see cref="T:System.Exception"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.ExceptionExtensions.Is``1(System.Exception)">
            <summary>
            対象の例外、もしくは、その原因となる例外が指定した型の例外かどうかを返します。
            </summary>
            <typeparam name="T">原因となる例外の型</typeparam>
            <param name="ex">例外</param>
            <returns>指定した型の例外が原因である場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.ExceptionExtensions.Is(System.Exception,System.Type[])">
            <summary>
            対象の例外、もしくは、その原因となる例外が、指定したいずれかの型の例外かどうかを返します。
            </summary>
            <param name="ex">例外</param>
            <param name="exceptions">原因となる例外</param>
            <returns>指定したいずれかの型の例外が原因である場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.ExceptionExtensions.Find``1(System.Exception)">
            <summary>
            対象の例外、もしくは、その原因となる例外から指定した型の例外を検索します。
            </summary>
            <typeparam name="T">原因となる例外の型</typeparam>
            <param name="ex">例外</param>
            <returns>指定した型の例外が原因である場合はその例外。それ以外の場合は null。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.ExceptionExtensions.AsEnumerable(System.Exception)">
            <summary>
            対象の例外、及び、その原因となる例外を列挙します。
            </summary>
            <param name="ex">例外</param>
            <returns>原因となる例外の列挙</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.IListExtensions">
            <summary>
            <see cref="T:System.Collections.Generic.IList`1"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.IListExtensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            対象のリストの末尾に、指定した要素を順に追加します。
            </summary>
            <typeparam name="T">要素の型</typeparam>
            <param name="list">リスト</param>
            <param name="items">追加する要素の列挙</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.IListExtensions.Swap``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)">
            <summary>
            対象のリストの指定した位置の要素を入れ替えます。
            </summary>
            <typeparam name="T">要素の型</typeparam>
            <param name="source">リスト</param>
            <param name="index1">入れ替え元の要素の位置</param>
            <param name="index2">入れ替え先の要素の位置</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.IListExtensions.GetSwapped``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            対象のリストの指定した位置の要素を入れ替えて列挙します。
            </summary>
            <typeparam name="T">要素の型</typeparam>
            <param name="source">リスト</param>
            <param name="index1">入れ替え元の要素の位置</param>
            <param name="index2">入れ替え先の要素の位置</param>
            <returns>指定した位置の要素を入れ替えた列挙子</returns>
            <remarks>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.IListExtensions.Swap``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)"/> と異なり、<paramref name="source"/> で指定したリスト自体の要素の位置は変更されません。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.IListAttributeExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListAttribute"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.IListAttributeExtensions.ToFormat(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListAttribute,System.Object,Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayListType)">
            <summary>
            対象の区分項目の区分値を、指定した表示方法でフォーマットして返します。
            </summary>
            <param name="attr">区分項目</param>
            <param name="value">区分値</param>
            <param name="displayType">表示方法</param>
            <returns>フォーマットされた文字列</returns>
            <remarks>
            区分値、及び、区分名(ラベル)を用いてフォーマットします。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.IListAttributeExtensions.ToFormatWithTag(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListAttribute,System.Object,Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayListType)">
            <summary>
            対象の区分項目の区分値を、付箋を考慮して、指定した表示方法でフォーマットして返します。
            </summary>
            <param name="attr">区分項目</param>
            <param name="value">区分値</param>
            <param name="displayType">表示方法</param>
            <returns>フォーマットされた文字列</returns>
            <remarks>
            対象の区分項目が付箋項目でない場合は、区分値、及び、区分名(ラベル)を用いてフォーマットします。<br />
            対象の区分項目が付箋項目の場合は、区分値、及び、付箋名を用いてフォーマットします。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.IListAttributeExtensions.GetValueAttribute(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListAttribute,System.Object)">
            <summary>
            対象の区分項目の、指定した区分値の属性情報を取得します。
            </summary>
            <param name="attr">区分項目</param>
            <param name="value">区分値</param>
            <returns>区分値の属性情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.IListAttributeExtensions.ToFormat(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListValueAttribute,Ill.Incorporated.Aladdinoffice.Framework.Attributes.DisplayListType,System.Boolean)">
            <summary>
            対象の区分値を、表示方法でフォーマットして返します。
            </summary>
            <param name="attr">区分値の属性情報</param>
            <param name="displayType">表示方法</param>
            <param name="withoutTag">
            対象の区分値が付箋の場合でも区分名(ラベル)を用いてフォーマットする場合は true。
            それ以外の場合は false。
            </param>
            <returns>フォーマットされた文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.IListAttributeExtensions.ToFullValue(Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IListAttribute)">
            <summary>
            対象の区分項目の区分値を、すべて結合して返します。
            </summary>
            <param name="attr">区分項目</param>
            <returns>結合された区分値</returns>
            <remarks>
            タブ区切りで結合します。<br />
            チェックボックスなどで使用します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.QueueExtensions">
            <summary>
            <see cref="T:System.Collections.Queue"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.QueueExtensions.Dequeues``1(System.Collections.Generic.Queue{``0})">
            <summary>
            対象のキューの要素を先頭から順に削除し、返します。
            </summary>
            <typeparam name="T">要素の型</typeparam>
            <param name="queue">キュー</param>
            <returns>要素の列挙</returns>
            <see cref="M:System.Collections.Generic.Queue`1.Dequeue"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SizeExtensions">
            <summary>
            <see cref="T:System.Drawing.Size"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SizeExtensions.Multiplication(System.Drawing.Size,System.Drawing.Size)">
            <summary>
            対象のサイズを指定した拡大率で拡大、もしくは、縮小した新しいサイズを返します。
            </summary>
            <param name="size">元のサイズ</param>
            <param name="factor">拡大率を表すサイズ</param>
            <returns>拡大、もしくは、縮小されたサイズ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SizeExtensions.Multiplication(System.Drawing.Size,System.Drawing.SizeF)">
            <summary>
            対象のサイズを指定した拡大率で拡大、もしくは、縮小した新しいサイズを返します。
            </summary>
            <param name="size">元のサイズ</param>
            <param name="factor">拡大率を表すサイズ</param>
            <returns>拡大、もしくは、縮小されたサイズ</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions">
            <summary>
            <see cref="T:System.String"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.GreaterThan(System.String,System.String)">
            <summary>
            対象の文字列が、指定した比較対象文字列より(順序的に)大きいかどうかを返します。
            </summary>
            <param name="val">比較元文字列</param>
            <param name="target">比較対象文字列</param>
            <returns>
            比較元文字列が、比較対象文字列より(順序的に)大きい場合は true。それ以外の場合は false。
            </returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.Compare(System.String,System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.GreaterThanOrEqual(System.String,System.String)">
            <summary>
            対象の文字列が、指定した比較対象文字列より(順序的に)大きいか、もしくは、等しいかどうかを返します。
            </summary>
            <param name="val">比較元文字列</param>
            <param name="target">比較対象文字列</param>
            <returns>
            比較元文字列が、比較対象文字列より(順序的に)大きいか等しい場合は true。それ以外の場合は false。
            </returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.Compare(System.String,System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.LessThan(System.String,System.String)">
            <summary>
            対象の文字列が、指定した比較対象文字列より(順序的に)若いかどうかを返します。
            </summary>
            <param name="val">比較元文字列</param>
            <param name="target">比較対象文字列</param>
            <returns>
            比較元文字列が、比較対象文字列より(順序的に)若い場合は true。それ以外の場合は false。
            </returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.Compare(System.String,System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.LessThanOrEqual(System.String,System.String)">
            <summary>
            対象の文字列が、指定した比較対象文字列より(順序的に)若いか、もしくは、等しいかどうかを返します。
            </summary>
            <param name="val">比較元文字列</param>
            <param name="target">比較対象文字列</param>
            <returns>
            比較元文字列が、比較対象文字列より(順序的に)若いか等しい場合は true。それ以外の場合は false。
            </returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.Compare(System.String,System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.Compare(System.String,System.String)">
            <summary>
            指定した 2 つの <see cref="T:System.String"/> オブジェクトを比較し、2 つの文字列の大小関係を並べ替え順序で示す整数を返します。<br/>
            このメソッドは通常の <see cref="M:System.String.CompareTo(System.String)"/> よりも、なるべくSQLソートに近づけるように実装されています。
            </summary>
            <param name="x">比較する最初の文字列です。</param>
            <param name="y">比較する 2 番目の文字列です。</param>
            <returns>
            <paramref name="x"/> と <paramref name="y"/> の大小関係を示す符号付き整数。<br/>
            <br/>
            0 より小さい値 =&gt; <paramref name="x"/> が <paramref name="y"/> より小さい。<br/>
            0              =&gt; <paramref name="x"/> と <paramref name="y"/> が等しい。<br/>
            0 より大きい値 =&gt; <paramref name="x"/> が <paramref name="y"/> より大きい。<br/>
            </returns>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.ESCAPE_SETS">
            <summary>
            ファイルに使用できない文字と対応する全角文字の組の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.EscapeForPath(System.String)">
            <summary>
            対象の文字列に含まれる文字の内、ファイル名に使えない文字を全角変換して返します。
            </summary>
            <param name="val">対象文字列</param>
            <returns>
            ファイル名に使えない文字を全角変換した文字列
            </returns>
            <remarks>
            \/:,;*?"&lt;&gt;| を全角化します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.EscapeForCSV(System.String)">
            <summary>
            対象の文字列をCSVレコードの要素として出力するために必要なエスケープ処理を施して返します。
            </summary>
            <param name="value">対象文字列</param>
            <returns>
            エスケープが必要な場合はエスケープされた文字列。
            不要な場合は元の文字列。
            </returns>
            <remarks>
            カンマ、改行、ダブルクォート が含まれる場合に ダブルクォートで囲みます。<br />
            また、囲まれた内部にダブルクォートがある場合は、ダブルクォートを重ねてエスケープします。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.EscapeForCSV(System.String,System.Boolean)">
            <summary>
            対象の文字列をCSVレコードの要素として出力するために必要なエスケープ処理を施して返します。
            </summary>
            <param name="value">対象文字列</param>
            <param name="forceToEscape">
            エスケープが不要でも強制的にエスケープする(ダブルクォートで囲む)場合は true。
            必要な場合だけエスケープする場合は false。
            </param>
            <returns>
            エスケープが必要な場合、もしくは、<paramref name="forceToEscape"/> が true の場合はエスケープされた文字列。
            他の場合は元の文字列。
            </returns>
            <remarks>
            カンマ、改行、ダブルクォート が含まれる場合に ダブルクォートで囲みます。<br />
            また、囲まれた内部にダブルクォートがある場合は、ダブルクォートを重ねてエスケープします。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.EscapeForTSV(System.String)">
            <summary>
            対象の文字列をTSVレコードの要素として出力するために必要なエスケープ処理を施して返します。
            </summary>
            <param name="value">対象文字列</param>
            <returns>
            エスケープが必要な場合はエスケープされた文字列。
            不要な場合は元の文字列。
            </returns>
            <remarks>
            タブ、改行、ダブルクォート が含まれる場合に ダブルクォートで囲みます。<br />
            また、囲まれた内部にダブルクォートがある場合は、ダブルクォートを重ねてエスケープします。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.EscapeForTSV(System.String,System.Boolean)">
            <summary>
            対象の文字列をTSVレコードの要素として出力するために必要なエスケープ処理を施して返します。
            </summary>
            <param name="value">対象文字列</param>
            <param name="forceToEscape">
            エスケープが不要でも強制的にエスケープする(ダブルクォートで囲む)場合は true。
            必要な場合だけエスケープする場合は false。
            </param>
            <returns>
            エスケープが必要な場合、もしくは、<paramref name="forceToEscape"/> が true の場合はエスケープされた文字列。
            他の場合は元の文字列。
            </returns>
            <remarks>
            タブ、改行、ダブルクォート が含まれる場合に ダブルクォートで囲みます。<br />
            また、囲まれた内部にダブルクォートがある場合は、ダブルクォートを重ねてエスケープします。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.EscapeForCommandLineArgs(System.String)">
            <summary>
            対象の文字列をコマンドライン引数用にエスケープします。
            <c>rev.1063</c>
            </summary>
            <param name="value">対象文字列</param>
            <returns>
            エスケープが必要な場合はエスケープされた文字列。
            不要な場合は元の文字列。
            </returns>
            <remarks>
            ダブルクォートが含まれる場合に、ダブルクォートを3つ重ねてエスケープします。<br />
            また、スペースが含まれる場合はダブルクォートで囲みます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.EscapeForQuery(System.String)">
            <summary>
            対象の文字列をクエリ用にエスケープ処理して返します。
            </summary>
            <param name="val">対象文字列</param>
            <returns>
            クエリ用にエスケープ処理した文字列
            </returns>
            <remarks>
            シングルクォートが含まれる場合に、シングルクォートを重ねてエスケープします。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.FormatForQuery(System.String,Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType)">
            <summary>
            対象の文字列をクエリ用の固定文字列にするため、指定した型区分に応じてシングルクォートで値を囲んで返します。<br/>
            なお、内部で <paramref name="val"/> に対して <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.EscapeForQuery(System.String)"/> メソッドによる
            エスケープ処理が呼ばれるため、事前にエスケープする必要はありません。
            </summary>
            <param name="val">対象文字列</param>
            <param name="type">型区分</param>
            <returns>クエリ用の固定文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.RemoveOuterSingleQuotation(System.String)">
            <summary>
            シングルクォートで囲まれている文字列の内部の文字列のみを返します。
            </summary>
            <param name="val">対象文字列</param>
            <returns>
            シングルクォートで囲まれている場合は、その内部の文字列。
            シングルクォートで囲まれていない場合(前後のどちらかにのみシングルクォートがある場合も含む)は、元の文字列。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.SubstringEX(System.String,System.Int32)">
            <summary>
            対象の文字列から部分文字列を取得します。検索は、指定した文字位置から開始されます。<br/>
            通常の <see cref="M:System.String.Substring(System.Int32)"/> と異なり、開始位置が文字列長を超える場合でも例外は発生せず、ブランクを返します。
            </summary>
            <param name="val">対象文字列</param>
            <param name="startIndex">部分文字列の 0 から始まる開始文字位置</param>
            <returns>部分文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.SubstringEX(System.String,System.Int32,System.Int32)">
            <summary>
            対象の文字列から部分文字列を取得します。この部分文字列は、指定した文字位置から開始し、指定した文字数の文字列です。<br/>
            通常の <see cref="M:System.String.Substring(System.Int32,System.Int32)"/> と異なり、開始位置や取得範囲が文字列長を超える場合でも例外は発生せず、取得できる分を返します。
            </summary>
            <param name="val">対象文字列</param>
            <param name="startIndex">部分文字列の 0 から始まる開始文字位置</param>
            <param name="length">部分文字列の最大文字数</param>
            <returns>部分文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.PadRightEx(System.String,System.Int32,System.Char)">
            <summary>
            指定された文字数になるまで右側に指定された Unicode 文字を埋め込むことで、対象の文字列内の文字を左寄せした新しい文字列を返します。<br/>
            通常の <see cref="M:System.String.PadRight(System.Int32)"/>、<see cref="M:System.String.PadRight(System.Int32,System.Char)"/> と異なり、マルチバイト文字が混在する場合に対応します。
            </summary>
            <param name="val">元の文字列</param>
            <param name="totalWidth">結果として生成される文字列の文字数(半角桁数)</param>
            <param name="paddingChar">Unicode 埋め込み文字</param>
            <returns>左寄せした新しい文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.PadLeftEx(System.String,System.Int32,System.Char)">
            <summary>
            指定された文字数になるまで左側に指定された Unicode 文字を埋め込むことで、対象の文字列内の文字を右寄せした新しい文字列を返します。<br/>
            通常の <see cref="M:System.String.PadLeft(System.Int32)"/>、<see cref="M:System.String.PadLeft(System.Int32,System.Char)"/> と異なり、マルチバイト文字が混在する場合に対応します。
            </summary>
            <param name="val">元の文字列</param>
            <param name="totalWidth">結果として生成される文字列の文字数(半角桁数)</param>
            <param name="paddingChar">Unicode 埋め込み文字</param>
            <returns>右寄せした新しい文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.ToNormalDateFormat(System.String)">
            <summary>
            対象の日付文字列を通常フォーマットに整形します。
            </summary>
            <param name="dateStr">yyyyMMdd形式の日付文字列</param>
            <returns>yyyy/MM/dd形式の文字列</returns>
            <remarks>
            8桁、及び、6桁の数字にのみ対応します。それ以外の文字列の場合は整形せずにそのまま返します。
            </remarks>
            <example>
            ・20180401       → 2018/04/01<br />
            ・201804         → 2018/04/<br />
            ・20184          → 20184<br />
            ・2018年04月01日 → 2018年04月01日<br />
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.ToJpDateFormat(System.String)">
            <summary>
            対象の日付文字列を西暦日本語フォーマットに整形します。
            </summary>
            <param name="dateStr">yyyyMMdd形式の日付文字列</param>
            <returns>yyyy年MM月dd日形式の文字列</returns>
            <remarks>
            8桁、及び、6桁の数字にのみ対応します。それ以外の文字列の場合は整形せずにそのまま返します。
            </remarks>
            <example>
            ・20180401       → 2018年04月01日<br />
            ・201804         → 2018年04月<br />
            ・20184          → 20184<br />
            ・2018/04/01     → 2018/04/01<br />
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.Encrypt(System.String,System.String)">
            <summary>
            対象の文字列を暗号化して返します。
            </summary>
            <param name="source">暗号化する文字列</param>
            <param name="password">暗号化に使用するパスワード</param>
            <returns>暗号化した文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.Decrypt(System.String,System.String)">
            <summary>
            暗号化された対象の文字列を復号化して返します。
            </summary>
            <param name="source">暗号化された文字列</param>
            <param name="password">暗号化に使用したパスワード</param>
            <returns>復号化した文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.ToMd5(System.String)">
            <summary>
            対象の文字列をUTF8でエンコードした際のMD5ハッシュ値を取得します。
            </summary>
            <param name="source">ハッシュ化する文字列</param>
            <returns>MD5ハッシュ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.ToMd5(System.String,System.Text.Encoding)">
            <summary>
            対象の文字列のMD5ハッシュ値を取得します。
            </summary>
            <param name="source">ハッシュ化する文字列</param>
            <param name="encoding">文字エンコーディング</param>
            <returns>MD5ハッシュ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.Count(System.String,System.Char)">
            <summary>
            対象の文字列に含まれる、指定した文字の数を返します。
            </summary>
            <param name="source">検索対象文字列</param>
            <param name="character">数を数える文字</param>
            <returns><paramref name="source"/>中に含まれる<paramref name="character"/>の数</returns>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions._encoderFallback">
            <summary>
            文字列のバイト長算出時に、文字をエンコードできない場合のエラー処理プロシージャを提供するオブジェクトです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions._decoderFallback">
            <summary>
            文字列のバイト長算出時に、バイト シーケンスをデコードできない場合のエラー処理プロシージャを提供するオブジェクトです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions._sjis">
            <summary>
            文字列のバイト長算出用の文字エンコーディングです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.GetByteLength(System.String)">
            <summary>
            対象の文字列のバイト長を取得します。
            </summary>
            <param name="text">対象文字列</param>
            <returns>バイト長</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.GetPixelSizeF(System.String,System.Drawing.Font)">
            <summary>
            対象の文字列を指定したフォントで描画した際のピクセルサイズを取得します。
            </summary>
            <param name="text">対象文字列</param>
            <param name="font">フォント</param>
            <returns>対象文字列のピクセルサイズ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.GetPixelSize(System.String,System.Drawing.Font)">
            <summary>
            対象の文字列を指定したフォントで描画した際のピクセルサイズを取得します。
            </summary>
            <param name="text">対象文字列</param>
            <param name="font">フォント</param>
            <returns>対象文字列のピクセルサイズ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.GetInchSizeF(System.String,System.Drawing.Font)">
            <summary>
            対象の文字列を指定したフォントで描画した際のインチサイズを取得します。
            </summary>
            <param name="text">対象文字列</param>
            <param name="font">フォント</param>
            <returns>対象文字列のインチサイズ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.GetInchSize(System.String,System.Drawing.Font)">
            <summary>
            対象の文字列を指定したフォントで描画した際のインチサイズを取得します。
            </summary>
            <param name="text">対象文字列</param>
            <param name="font">フォント</param>
            <returns>対象文字列のインチサイズ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.CheckDateSpan(System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.SpanType,System.Int32)">
            <summary>
            対象の開始日から指定した終了日までの期間が、指定した期限未満かどうかをチェックします。
            </summary>
            <param name="fromDays">対象開始日</param>
            <param name="toDays">対象終了日</param>
            <param name="checkSpanType">期間種別</param>
            <param name="limitSpan">期限</param>
            <returns>期限未満の場合は true。期限以上の場合は false。</returns>
            <remarks>
            <paramref name="fromDays"/> が空の場合は <see cref="F:System.DateTime.MinValue"/> を開始日として算出します。<br/>
            <paramref name="toDays"/> が空の場合は <see cref="F:System.DateTime.MaxValue"/> を終了日として算出します。<br/>
            <paramref name="fromDays"/>、及び、<paramref name="toDays"/> は yyyyMMdd形式、もしくは yyyyMM形式 の日付文字列に対応します。
            </remarks>
            <exception cref="T:System.ArgumentException">
            以下のいずれかの場合にスローします。<br/>
            ・<paramref name="fromDays"/>、及び、<paramref name="toDays"/> のいずれかが <see cref="T:System.DateTime"/> に変換できない場合。<br/>
            ・<paramref name="fromDays"/> で指定された日付が <paramref name="toDays"/> で指定された日付より大きい場合。<br/>
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.RemoveFolderPathPrefix(System.String)">
            <summary>
            対象のパス文字列の先頭のディレクトリセパレータを除去したパス文字列を返します。
            </summary>
            <param name="path">対象パス文字列</param>
            <returns>先頭のディレクトリセパレータを除去したパス文字列</returns>
            <remarks>
            対象のパス文字列がディレクトリセパレータで始まる場合にこれを除去します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.RemoveFolderPathPostfix(System.String)">
            <summary>
            対象のパス文字列の末尾のディレクトリセパレータを除去したパス文字列を返します。
            </summary>
            <param name="path">対象パス文字列</param>
            <returns>末尾のディレクトリセパレータを除去したパス文字列</returns>
            <remarks>
            対象のパス文字列がディレクトリセパレータで終わる場合にこれを除去します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.SetFolderPathPostfix(System.String)">
            <summary>
            対象のパス文字列をフォルダパスとして整形します。
            </summary>
            <param name="path">対象パス文字列</param>
            <returns>整形されたフォルダパ文字列</returns>
            <remarks>
            対象のパス文字列の末尾がディレクトリセパレータでない場合に付与します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.SpanType">
            <summary>
            期間種別を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.SpanType.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.SpanType.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.StringExtensions.SpanType.Day">
            <summary>
            日
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.objectExtensions">
            <summary>
            <see cref="T:System.Object"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.objectExtensions.Contained(System.Object,System.Object[])">
            <summary>
            指定したオブジェクトの一覧内に、対象のオブジェクトが含まれているかどうかを返します。
            </summary>
            <param name="obj">対象オブジェクト</param>
            <param name="objects">オブジェクトの一覧</param>
            <returns>含まれている場合は true。含まれていない場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.objectExtensions.Contained``1(``0,``0[])">
            <summary>
            指定したオブジェクトの一覧内に、対象のオブジェクトが含まれているかどうかを返します。
            </summary>
            <typeparam name="T">対象オブジェクトの型</typeparam>
            <param name="obj">対象オブジェクト</param>
            <param name="objects">オブジェクトの一覧</param>
            <returns>含まれている場合は true。含まれていない場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.objectExtensions.ArraysEqual(System.Object[],System.Object[])">
            <summary>
            対象の配列のすべての要素が等しいかどうかを返します。
            </summary>
            <param name="a1">比較元の配列</param>
            <param name="a2">比較先の配列</param>
            <returns>すべての要素が等しい場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.objectExtensions.EqualsEx(System.Object,System.Object)">
            <summary>
            対象のオブジェクトが等しいかどうかを返します。
            </summary>
            <param name="a">比較元のオブジェクト</param>
            <param name="b">比較先のオブジェクト</param>
            <returns>等しい場合は true。異なる場合は false。</returns>
            <remarks>
            <paramref name="a"/>と<paramref name="b"/>が共にコレクションの場合は、コレクションの各要素が等しいかどうかを返します。<br />
            この場合、<paramref name="a"/>と<paramref name="b"/>が異なる型であっても、すべての要素が等しければ true が返されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.objectExtensions.CreateDelegate``1(System.Object,System.Reflection.MethodInfo)">
            <summary>
            対象のオブジェクトの指定したメソッドを実行する、引数が1つの <see cref="T:System.Action"/> オブジェクトを生成します。
            </summary>
            <typeparam name="TEvent">引数の型</typeparam>
            <param name="target">対象オブジェクト</param>
            <param name="method">メソッド情報</param>
            <returns>指定したメソッドを実行する、引数が1つの <see cref="T:System.Action"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.objectExtensions.CreateDelegate``2(System.Object,System.Reflection.MethodInfo)">
            <summary>
            対象のオブジェクトの指定したメソッドを実行する、引数が2つの <see cref="T:System.Action"/> オブジェクトを生成します。
            </summary>
            <typeparam name="TEvent1">第1引数の型</typeparam>
            <typeparam name="TEvent2">第2引数の型</typeparam>
            <param name="target">対象オブジェクト</param>
            <param name="method">メソッド情報</param>
            <returns>指定したメソッドを実行する、引数が2つの <see cref="T:System.Action"/>オブジェクト</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DbCommandExtensions">
            <summary>
            <see cref="T:System.Data.Common.DbCommand"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DbCommandExtensions.RealSQL(System.Data.Common.DbCommand,System.Boolean)">
            <summary>
            対象のデータベースコマンドで、実際に発行されると思われるSQL文を返します。
            </summary>
            <param name="cmd">データベースコマンド</param>
            <param name="convertSingleLine">SQL文の改行を除去して1行にする場合は true。改行を保持する場合は false。</param>
            <returns>実際に発行されると思われるSQL文</returns>
            <remarks>
            <paramref name="cmd"/> に指定されているクエリ文字列のデータベースパラメータ部分を、パラメータ値に置換して返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DbCommandExtensions.GetParameters(System.Data.Common.DbCommand)">
            <summary>
            対象のデータベースコマンドに設定されているデータベースパラメータを列挙します。
            </summary>
            <param name="cmd">データベースコマンド</param>
            <returns>データベースパラメータの列挙</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.AssemblyExtensions">
            <summary>
            <see cref="T:System.Reflection.Assembly"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.AssemblyExtensions.IsDebugBuild(System.Reflection.Assembly)">
            <summary>
            対象のアセンブリがデバッグモードでビルドされているかどうかを返します。
            </summary>
            <param name="assembly">アセンブリ</param>
            <returns>デバッグビルドされている場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.AssemblyExtensions.GetIncludingAssemblies(System.Reflection.Assembly)">
            <summary>
            対象のアセンブリ、及び、そのアセンブリが参照しているすべてのアセンブリを列挙します。
            </summary>
            <param name="assembly">アセンブリ</param>
            <returns>対象のアセンブリ、及び、そのアセンブリが参照しているすべてのアセンブリの列挙</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.AssemblyExtensions.FindAssembly(System.String)">
            <summary>
            現在のアプリケーションが参照しているすべてのアセンブリから指定した名前のアセンブリを検索します。
            </summary>
            <param name="assemblyName">アセンブリ名</param>
            <returns>アセンブリが見つかった場合はその<see cref="T:System.Reflection.Assembly"/>オブジェクト。見つからなかった場合は null。</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.ObjectExtensions">
            <summary>
            <see cref="T:System.Object"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.ObjectExtensions.GetValue(System.Object,System.String,System.Attribute[],System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            対象のオブジェクトから指定した名前のプロパティの値を取得します。
            </summary>
            <param name="instance">対象オブジェクト</param>
            <param name="name">プロパティ名</param>
            <param name="attrs">プロパティを検索するための属性</param>
            <param name="context">コンテキスト情報</param>
            <returns>プロパティの値</returns>
            <remarks>
            以下の優先順位で値を取得します。<br/>
            ・対象のオブジェクトの型コンバーターからプロパティ(<see cref="T:System.ComponentModel.PropertyDescriptor"/>)が見つかった場合は、その<see cref="T:System.ComponentModel.PropertyDescriptor"/>から値を取得します。<br/>
            ・対象のオブジェクトの型から読み取り可能なプロパティ(<see cref="T:System.Reflection.PropertyInfo"/>)が見つかった場合は、その<see cref="T:System.Reflection.PropertyInfo"/>から値を取得します。<br/>
            ・対象のオブジェクトの型からフィールド(<see cref="T:System.Reflection.FieldInfo"/>)が見つかった場合は、その<see cref="T:System.Reflection.FieldInfo"/>から値を取得します。<br/>
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">対象のオブジェクトに指定した名前のプロパティが見つからない場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.ObjectExtensions.SetValue(System.Object,System.String,System.Object,System.Attribute[],System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            対象のオブジェクトの指定した名前のプロパティに値を設定します。
            </summary>
            <param name="instance">対象オブジェクト</param>
            <param name="name">プロパティ名</param>
            <param name="value">設定する値</param>
            <param name="attrs">プロパティを検索するための属性</param>
            <param name="context">コンテキスト情報</param>
            <remarks>
            以下の優先順位で値を取得します。<br/>
            ・対象のオブジェクトの型コンバーターからプロパティ(<see cref="T:System.ComponentModel.PropertyDescriptor"/>)が見つかった場合は、その<see cref="T:System.ComponentModel.PropertyDescriptor"/>から値を設定します。<br/>
            ・対象のオブジェクトの型から書き込み可能なプロパティ(<see cref="T:System.Reflection.PropertyInfo"/>)が見つかった場合は、その<see cref="T:System.Reflection.PropertyInfo"/>から値を設定します。<br/>
            ・対象のオブジェクトの型からフィールド(<see cref="T:System.Reflection.FieldInfo"/>)が見つかった場合は、その<see cref="T:System.Reflection.FieldInfo"/>から値を設定します。<br/>
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">対象のオブジェクトに指定した名前のプロパティが見つからない場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.ObjectExtensions.GetDescriptor(System.Object,System.String,System.ComponentModel.ITypeDescriptorContext,System.Attribute[])">
            <summary>
            対象のオブジェクトの型コンバーターから、指定した名前のプロパティ情報を取得します。
            </summary>
            <param name="instance">対象オブジェクト</param>
            <param name="name">プロパティ名</param>
            <param name="context">コンテキスト情報</param>
            <param name="attrs">プロパティを検索するための属性</param>
            <returns>プロパティが見つかった場合はそのプロパティ情報。見つからなかった場合は null。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.ObjectExtensions.GetProperties(System.Object,System.ComponentModel.ITypeDescriptorContext,System.Attribute[])">
            <summary>
            対象のオブジェクトの型コンバーターから、指定したコンテキストと属性を使用してプロパティのコレクションを取得します。
            </summary>
            <param name="instance">対象オブジェクト</param>
            <param name="context">コンテキスト情報</param>
            <param name="attrs">プロパティを検索するための属性</param>
            <returns>型コンバーターから検索したプロパティのコレクション</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Threading.IAsyncResultExtensions">
            <summary>
            <see cref="T:System.IAsyncResult"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Threading.IAsyncResultExtensions.Async(System.IAsyncResult,System.Action{System.IAsyncResult})">
            <summary>
            対象の <see cref="T:System.IAsyncResult"/> の完了時に終了メソッド アクションを実行する <see cref="T:System.Threading.Tasks.Task"/> を作成します。
            </summary>
            <param name="result">完了時に <paramref name="end"/> の処理が開始される <see cref="T:System.IAsyncResult"/></param>
            <param name="end">完了した <paramref name="result"/> を処理するアクションデリゲート</param>
            <returns>非同期操作を表す <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Threading.IAsyncResultExtensions.Async``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0})">
            <summary>
            指定された <see cref="T:System.IAsyncResult"/> の完了時に終了メソッド 関数を実行する <see cref="T:System.Threading.Tasks.Task`1"/> を作成します。
            </summary>
            <typeparam name="T"><see cref="T:System.Threading.Tasks.Task`1"/>を通じて取得できる結果の型</typeparam>
            <param name="result">完了時に <paramref name="end"/> の処理が開始される <see cref="T:System.IAsyncResult"/></param>
            <param name="end">完了した <paramref name="result"/> を処理する関数デリゲート</param>
            <returns>非同期操作を表す <see cref="T:System.Threading.Tasks.Task`1"/></returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader">
            <summary>
            CSV(Comma-Separeted-Values)データ読込を行うクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialReader">
            <summary>
            リソースからの順次読み込み機能を実装する基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialAccessor">
            <summary>
            リソースへの順次アクセス機能を実装する基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.ISequentialAccessor">
            <summary>
            リソースへの順次アクセス機能を提供するインターフェースです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.ISequentialAccessor.RowNumber">
            <summary>
            現在位置の行番号を取得します。
            </summary>
            <value>現在位置の行番号</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.ISequentialAccessor.ColumnNumber">
            <summary>
            現在位置の列番号を取得します。
            </summary>
            <value>現在位置の列番号</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.ISequentialAccessor.RowValueCount">
            <summary>
            現在行の列数を取得します。
            </summary>
            <value>現在行の列数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.ISequentialAccessor.AutoTrimming">
            <summary>
            値の読み書き時に自動的にトリミングを行うかどうかを取得、設定します。
            </summary>
            <value>自動的にトリミングを行う場合は true。それ以外の場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialAccessor.Open(System.String)">
            <summary>
            指定したパスのファイルリソースを開きます。
            </summary>
            <param name="path">ファイルパス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialAccessor.Open(System.IO.Stream)">
            <summary>
            ストリームを指定してリソースを開きます。
            </summary>
            <param name="stream">ストリーム</param>
            <remarks>ストリームはこのオブジェクトが閉じられる場合に自動で閉じられます。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialAccessor.Open(System.IO.Stream,System.Boolean)">
            <summary>
            ストリームを指定してリソースを開きます。
            </summary>
            <param name="stream">ストリーム</param>
            <param name="autoClose">このオブジェクトが閉じられる場合にストリームも自動で閉じる場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialAccessor.Close">
            <summary>
            開いているリソースを閉じます。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialAccessor.RowNumber">
            <inheritdoc />
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialAccessor.ColumnNumber">
            <inheritdoc />
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialAccessor.RowValueCount">
            <inheritdoc />
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialAccessor.AutoTrimming">
            <inheritdoc />
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.ISequentialReader">
            <summary>
            リソースからの順次読み込み機能を提供するインターフェースです。
            </summary>
            <example>
            <code>
            using(var csv = new CsvSequentialReader(Encoding.UTF8))
            {
                csv.Open(path);
                
                if(!csv.EndOfRow)
                    while(csv.Next)
                    {
                        MessageBox.Show(csv.ReadRow().Join('\n'));
                    }
            }
            </code>
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.ISequentialReader.Read">
            <summary>
            現在の行で、次に格納されている値を取得します。
            </summary>
            <returns>格納されている値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.ISequentialReader.Next">
            <summary>
            次の行へ移動します。
            </summary>
            <returns>次の行が存在し、移動できた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.ISequentialReader.ReadRow">
            <summary>
            現在の行に格納されている値を纏めて取得します。
            </summary>
            <returns>現在の行に格納されている値</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.ISequentialReader.SkipEmptyRow">
            <summary>
            空行を自動的にスキップするかどうかを取得、設定します。
            </summary>
            <value>空行を自動的にスキップする場合は true。それ以外の場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialReader.Read">
            <inheritdoc />
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialReader.Next">
            <inheritdoc />
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialReader.ReadRow">
            <inheritdoc />
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialReader.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialReader.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialReader.Dispose">
            <inheritdoc />
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.AbstractSequentialReader.SkipEmptyRow">
            <inheritdoc />
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.OPEN_ERROR_ALREADY_OPEN">
            <summary>
            多重オープン実行時のエラーメッセージを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.DefaultBufferSize">
            <summary>
            既定の読み込みバッファサイズを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader._streamEncoding">
            <summary>
            使用する文字エンコーディングです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader._textReader">
            <summary>
            データの読込を行うためのリーダーオブジェクトです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader._currentLine">
            <summary>
            現在行のデータです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader._isQuotedField">
            <summary>
            現在読み込んでいるフィールドがダブルクォートで囲まれたフィールドかどうかを示す値です。
            </summary>
            <value>現在読み込んでいるフィールドがダブルクォートで囲まれたフィールドの場合は true。それ以外の場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.#ctor(System.Text.Encoding)">
            <summary>
            指定した文字エンコーディングを用いる <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="encoding">ファイルのエンコーディング</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.Open(System.String)">
            <inheritdoc/>
            <exception cref="T:System.IO.FileNotFoundException">ファイルが見つからない場合にスローします。</exception>
            <exception cref="T:System.InvalidOperationException">既に開かれている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.Open(System.IO.Stream)">
            <inheritdoc />
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.Open(System.IO.Stream,System.Boolean)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentException"><paramref name="stream"/> が null の場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.InitFields">
            <summary>
            このクラスの各メンバーフィールドを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.Close">
            <inheritdoc />
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader._currentRowNo">
            <summary>
            現在位置の行番号を示す値です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader._currentColumnNumber">
            <summary>
            現在位置の列番号を示す値です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader._endOfValue">
            <summary>
            現在行の終わりまで読み込んだかどうかを示す値です。
            </summary>
            <value>現在行の終わりまで読み込んでいる場合は true。それ以外の場合は false。</value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader._endOfRow">
            <summary>
            最終行まで読み込んだかどうかを示す値です。
            </summary>
            <value>最終行まで読み込んでいる場合は true。それ以外の場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.Read">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException">行が進められていない場合にスローします。。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.Next">
            <inheritdoc />
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.IsEmptyRow(System.Collections.Generic.List{System.String})">
            <summary>
            対象の行が 空(値が1つも含まれない) かどうかを返します。
            </summary>
            <param name="rowData">行データ</param>
            <returns>対象の行が 空(値が1つも含まれない) 場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.ReadRow">
            <inheritdoc />
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.ReadAndParseLineData">
            <summary>
            1行分のデータを読み込みます。
            </summary>
            <returns>1行分のデータ</returns>
            <remarks>
            改行が含まれる場合は複数行読み進められます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.ReadToEnd">
            <summary>
            現在行から末尾までのすべてのデータを読み込みます。
            </summary>
            <returns>ストリームの現在行から末尾までの残り部分。現在の位置がストリームの末尾である場合は、空のリストが返されます。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.Dispose">
            <inheritdoc />
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.RowNumber">
            <inheritdoc />
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.ColumnNumber">
            <inheritdoc />
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.RowValueCount">
            <inheritdoc />
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.AutoTrimming">
            <inheritdoc />
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.SkipEmptyRow">
            <inheritdoc />
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.EndOfValue">
            <summary>
            現在行の終わりまで読み込んだかどうかを取得します。
            </summary>
            <value>現在行の終わりまで読み込んでいる場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvSequentialReader.EndOfRow">
            <summary>
            最終行まで読み込んだかどうかを取得します。
            </summary>
            <value>最終行まで読み込んでいる場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueTextWriter">
            <summary>
            ライターを使用した文字区切りデータの書き込みを行う抽象クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueWriter">
            <summary>
            文字区切りデータの書き込み機能を提供するインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueWriter.WriteValue(System.String)">
            <summary>
            対象の文字列を現在のレコード行に追記します。
            </summary>
            <param name="value">書き込む文字列。必要に応じて、予めエスケープ処理を施した値を指定してください。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueWriter.EndLine">
            <summary>
            現在のレコード行の書き込みを完了し、次の行に移動します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueWriter.Delimiter">
            <summary>
            出力する文字列レコードの各文字列を区切るための文字を取得します。
            </summary>
            <value>区切り文字</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueTextWriter.#ctor(System.String)">
            <summary>
            指定した区切り文字を使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueTextWriter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="delimiter">区切り文字</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueTextWriter.CreateWriter">
            <summary>
            文字区切りデータの書き込みを行うためのライターを生成します。
            </summary>
            <returns>文字区切りデータの書き込みを行うためのライター</returns>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueTextWriter._isNewLine">
            <summary>
            値を書き込もうとしている行が新規行かどうかを表します。
            </summary>
            <value>新規行の場合は true。既存行の場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueTextWriter.WriteValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueTextWriter.EndLine">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueTextWriter.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueTextWriter.Writer">
            <summary>
            文字区切りデータの書き込みを行うためのライターを取得します。
            </summary>
            <value>文字区切りデータの書き込みを行うためのライター</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueTextWriter.Delimiter">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.IO.DelimiterSeparatedValueFileWriter">
            <summary>
            文字区切りデータのファイルへの書き込みを行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.DelimiterSeparatedValueFileWriter.DefaultFileEncoding">
            <summary>
            ファイルの既定の文字エンコーディングです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.DelimiterSeparatedValueFileWriter.#ctor(System.String,System.String,System.Text.Encoding)">
            <summary>
            指定したファイルへ、指定した文字エンコーディングで書き込みを行う <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.IO.DelimiterSeparatedValueFileWriter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="delimiter">区切り文字</param>
            <param name="path">書き込みを行うファイルへのフルパス</param>
            <param name="encoding">書き込みを行うファイルの文字エンコード</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.DelimiterSeparatedValueFileWriter.CreateWriter">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.DelimiterSeparatedValueFileWriter.Path">
            <summary>
            書き込みを行うファイルへのフルパスを取得します。
            </summary>
            <value>書き込みを行うファイルへのフルパス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.DelimiterSeparatedValueFileWriter.Encoding">
            <summary>
            書き込みを行うファイルの文字エンコーディングを取得します。
            </summary>
            <value>書き込みを行うファイルの文字エンコーディング</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.IO.DelimiterSeparatedValueStringWriter">
            <summary>
            文字区切りデータの文字列への書き込みを行うクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.DelimiterSeparatedValueStringWriter.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.IO.DelimiterSeparatedValueStringWriter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="delimiter">区切り文字</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.DelimiterSeparatedValueStringWriter.CreateWriter">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.DelimiterSeparatedValueStringWriter.ToString">
            <inheritdoc/>
            <returns>
            書き込まれた文字区切りデータを格納している文字列を返します。
            </returns>
            <remarks>
            <see cref="M:System.IDisposable.Dispose"/> を実行する前に呼び出してください。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService">
            <summary>
            参照する型の解決を行う <see cref="T:System.ComponentModel.Design.ITypeResolutionService"/> インタフェースの実行クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService.nameTable">
            <summary> すべての型を管理するためのコレクションです。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService._typeAsmNameTable">
            <summary> 型とアセンブリ名の紐づけを行うコレクションです。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService._assemblies">
            <summary> ロードしたアセンブリを保持するコレクションです。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService._hitDictionary">
            <summary> 読み込んだことがあるタイプをキャッシュしておくコレクションです。 </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService.AppendReferenceAssembly(System.Reflection.Assembly)">
            <summary>
            参照するアセンブリを追加します。
            </summary>
            <param name="asm">追加するアセンブリ</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService.GetResolveType(System.String,System.Boolean,System.Boolean)">
            <summary>
            指定の型名からタイプを取得します。
            </summary>
            <param name="name">対象の型名</param>
            <param name="throwOnError">名前の解決ができなかった場合、例外をスローする場合、true。それ以外はfalse。</param>
            <param name="ignoreCase">指定の型名の大文字小文字を区別せずに検索を行う場合、true。それ以外はfales。</param>
            <returns>対象の型名の型</returns>
            <exception cref="T:System.Exception"><paramref name="throwOnError"/>がtrueの場合に名前の解決ができなかったときにスローされる例外です。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService.#cctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService"/>クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService.GetAssembly(System.Reflection.AssemblyName)">
            <inheritdoc />
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)">
            <inheritdoc />
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService.GetType(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService.GetType(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Designer.TypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)">
            <inheritdoc />
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.ExifOrientation">
            <summary>
            Exif情報の回転情報を指定します。
            <c>fw:3</c>
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.ExifOrientation.TopLeft">
            <summary>
            上-左からイメージを設定します。
            通常です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.ExifOrientation.TopRight">
            <summary>
            上-右からイメージを設定します。
            水平方向反転です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.ExifOrientation.BottomRight">
            <summary>
            下-右からイメージを設定します。
            180度回転です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.ExifOrientation.BottomLeft">
            <summary>
            下-左からイメージを設定します。
            垂直方向反転です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.ExifOrientation.LeftTop">
            <summary>
            左-上からイメージを設定します。
            270度回転垂直方向反転です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.ExifOrientation.RightTop">
            <summary>
            右-上からイメージを設定します。
            90度回転です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.ExifOrientation.RightBottom">
            <summary>
            右-下からイメージを設定します。
            90度回転垂直方向反転です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.ExifOrientation.LeftBottom">
            <summary>
            左-下からイメージを設定します。
            270度回転です。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.ImageLoader">
            <summary>
            イメージを読み込むためのクラスです。
            <c>fw:3</c>
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.ImageLoader.LoadBytes(System.String,System.Boolean)">
            <summary>
            イメージ読み込み、<see cref="T:System.Byte"/> 配列として返します。
            </summary>
            <param name="path">ファイルパス</param>
            <param name="edit">ファイルを編集して読み込む場合は true。それ以外の場合は false。</param>
            <returns>イメージの<see cref="T:System.Byte"/> 配列</returns>
            <remarks>
            <paramref name="edit"/>がtureの場合、かつ、Jpeg画像でExifの回転情報が存在する場合、画像の回転を行い、編集した情報を返します。
            <paramref name="edit"/>がfalse、または、Exif情報に回転情報がない場合、ファイルの内容をそのまま返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.ImageLoader.LoadBytes(System.Byte[],System.Boolean)">
            <summary>
            イメージ読み込み、<see cref="T:System.Byte"/> 配列として返します。
            </summary>
            <param name="bytes">イメージを表す<see cref="T:System.Byte"/> 配列</param>
            <param name="edit">ファイルを編集して読み込む場合は true。それ以外の場合は false。</param>
            <returns>イメージの<see cref="T:System.Byte"/> 配列</returns>
            <remarks>
            <paramref name="edit"/>がtureの場合、かつ、Jpeg画像でExifの回転情報が存在する場合、画像の回転を行い、編集した情報を返します。
            <paramref name="edit"/>がfalse、または、Exif情報に回転情報がない場合、ファイルの内容をそのまま返します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.AladdinFormattedException">
            <summary>
            文字列をフォーマットした後にエラーがある場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.AladdinFormattedException.#ctor(System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinException})">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.AladdinFormattedException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="innerExceptions">この例外の原因となる詳細な例外</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.AladdinFormattedException.InnerExceptions">
            <summary>
            エラーの詳細内容を取得します。
            </summary>
            <value>エラーの詳細内容</value>
            <remarks>
            この内容を参照することで、どんなエラーが発生したかを確認することができます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.AladdinOfficeAlreadyInUseException">
            <summary>
            アプリケーションが多重起動された場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.AladdinOfficeAlreadyInUseException.#ctor(System.String,System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.AladdinOfficeAlreadyInUseException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="innerException">この例外の原因となる例外</param>
            <remarks>
            <paramref name="message"/> を省略すると<see cref="T:Ill.Incorporated.Aladdinoffice.Resources.SystemMessage"/>.<see cref="F:Ill.Incorporated.Aladdinoffice.Resources.SystemMessage.APPLICATION_IS_ALREADY_IN_USE"/> が指定されます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.AladdinOutOfMemoryException">
            <summary>
            利用するメモリが確保できなかった場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.AladdinOutOfMemoryException.#ctor(System.Exception,System.String,System.Object[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.AladdinOutOfMemoryException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="innerException">この例外の原因となる例外</param>
            <param name="message">メッセージ</param>
            <param name="args">メッセージの引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.AladdinOutOfMemoryException.#ctor(System.String,System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.AladdinOutOfMemoryException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="innerException">この例外の原因となる例外</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.ControlCharacterInputException">
            <summary>
            制御コードが入力された場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.ControlCharacterInputException.#ctor(System.Char[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.ControlCharacterInputException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="characters">入力された制御コードの<see cref="T:System.Char"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.ControlCharacterInputException.Join(System.Char[])">
            <summary>
            制御コードの<see cref="T:System.Char"/> を文字列化してカンマ区切りで返します。
            </summary>
            <param name="characters">制御コードを表す<see cref="T:System.Char"/></param>
            <returns>制御コードを文字列化してカンマ区切りされた文字列</returns>
            <remarks>
            ソートを行い、重複文字を除いた一覧を返します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.FtpWebException">
            <summary>
            FTPサーバーにアクセス失敗した場合にスローされる例外です。
            <c>fw:3</c>
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.FtpWebException.#ctor(System.Exception,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.FtpWebException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="ex">この例外の原因となる例外</param>
            <param name="url">URL</param>
            <remarks>
            「URL[<paramref name="url"/>]のアクセスに失敗しました。」メッセージが設定されます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.HttpWebException">
            <summary>
            HTTPサーバーにアクセス失敗した場合にスローされる例外です。
            <c>fw:3</c>
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.HttpWebException.#ctor(System.Exception,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.HttpWebException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="ex">この例外の原因となる例外</param>
            <param name="url">URL</param>
            <remarks>
            「URL[<paramref name="url"/>]のアクセスに失敗しました。」メッセージが設定されます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.MailAddressFormatException">
            <summary>
            メールアドレスと判定できない文字列が設定された場合にスローされる例外です。
            <c>fw:3</c>
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.MailAddressFormatException.#ctor(System.Exception,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.MailAddressFormatException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="ex">この例外の原因となる例外</param>
            <param name="address">メールアドレス文字列</param>
            <remarks>
            「メールアドレスが認識できない形式です。[<paramref name="address"/>]」メッセージが設定されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.MailAddressFormatException.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.MailAddressFormatException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="address">メールアドレス文字列</param>
            <remarks>
            「メールアドレスが認識できない形式です。[<paramref name="address"/>]」メッセージが設定されます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.MinusInputException">
            <summary>
            負数が入力できない場合にマイナス文字が入力された場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.MinusInputException.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.MinusInputException"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SimpleExpressionException">
            <summary>
            簡易計算式の計算でエラーが発生した場合にスローされる例外です。
            </summary>
            <remarks>
            簡易計算式は<see cref="T:System.Data.DataTable"/>.<see cref="M:System.Data.DataTable.Compute(System.String,System.String)"/> を利用して行われています。
            <see cref="T:System.Data.DataTable"/>.<see cref="M:System.Data.DataTable.Compute(System.String,System.String)"/> の計算以外でエラーが発生した場合はこのエラーがスローされます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SimpleExpressionException.#ctor(System.String,System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SimpleExpressionException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="expression">エラーが発生した簡易計算式</param>
            <param name="innerException">この例外の原因となる例外</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SimpleExpressionComputeException">
            <summary>
            簡易計算式の計算中にエラーが発生した場合にスローされる例外です。
            </summary>
            <remarks>
            簡易計算式は<see cref="T:System.Data.DataTable"/>.<see cref="M:System.Data.DataTable.Compute(System.String,System.String)"/> を利用して行われています。
            計算できない式が指定された場合はこの例外がスローされます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SimpleExpressionComputeException.#ctor(System.String,System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SimpleExpressionComputeException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="expression">エラーが発生した簡易計算式</param>
            <param name="innerException">計算中に発生した例外</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpFailedAddressException">
            <summary>
            メールの送信に失敗し、宛先アドレスに問題がある場合にスローされる例外です。
            <c>fw:3</c>
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpWebException">
            <summary>
            メールの送信に失敗した場合にスローされる例外です。
            <c>fw:3</c>
            </summary>
            <remarks>
            このエラーはSMTP接続に問題がある場合にスローされます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpWebException.#ctor(System.Exception,System.String,System.Object[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpWebException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="ex">この例外の原因となる例外</param>
            <param name="format">メッセージフォーマット</param>
            <param name="args">フォーマット文字列に対する引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpWebException.#ctor(System.Exception,System.Net.Mail.SmtpClient)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpWebException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="ex">この例外の原因となる例外</param>
            <param name="client">利用した<see cref="T:System.Net.Mail.SmtpClient"/></param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpFailedAddressException.toAddresses">
            <summary>
            失敗した宛先アドレスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpFailedAddressException.bccAddresses">
            <summary>
            失敗した非表示コピー先アドレスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpFailedAddressException.#ctor(System.Net.Mail.SmtpFailedRecipientException,System.Net.Mail.SmtpClient,System.Net.Mail.MailMessage)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpFailedAddressException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="ex">この例外の原因となる例外</param>
            <param name="client">利用した<see cref="T:System.Net.Mail.SmtpClient"/></param>
            <param name="message">送信時の<see cref="T:System.Net.Mail.MailMessage"/></param>
            <remarks>
            「メールの送信に失敗しました。[&lt;カンマ区切り宛先メールアドレス&gt;]」メッセージが設定されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpFailedAddressException.Any(System.Net.Mail.MailAddressCollection,System.String)">
            <summary>
            <paramref name="addresses"/> に<paramref name="address"/> が含まれるか確認します。
            </summary>
            <param name="addresses">アドレス群</param>
            <param name="address">アドレス</param>
            <returns><paramref name="addresses"/> に<paramref name="address"/> が含まれる場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpFailedAddressException.GetFailedRecipientAddresses(System.Net.Mail.SmtpFailedRecipientException)">
            <summary>
            <see cref="T:System.Net.Mail.SmtpFailedRecipientException"/> に含まれるメールアドレスを切り出します。
            </summary>
            <param name="ex">メール送信失敗時にスローされた<see cref="T:System.Net.Mail.SmtpFailedRecipientException"/></param>
            <returns>メールアドレス</returns>
            <remarks>
            <see cref="T:System.Net.Mail.SmtpFailedRecipientException"/> には表示名などが添付されています。それらの文字列を切り出し、メールアドレスのみを切り出します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpFailedAddressException.GetFailedRecipients(System.Net.Mail.SmtpFailedRecipientException)">
            <summary>
            <see cref="T:System.Net.Mail.SmtpFailedRecipientException"/> に含まれる例外すべてを取得します。
            </summary>
            <param name="ex">メール送信失敗時にスローされた<see cref="T:System.Net.Mail.SmtpFailedRecipientException"/></param>
            <returns>すべての<see cref="T:System.Net.Mail.SmtpFailedRecipientException"/></returns>
            <remarks>
            <paramref name="ex"/> が<see cref="T:System.Net.Mail.SmtpFailedRecipientsException"/> の場合、複数の<see cref="T:System.Net.Mail.SmtpFailedRecipientException"/> を含んでいる場合があります。
            複数の例外が含まれていた場合、そのすべてを列挙します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpFailedAddressException.ToAddresses">
            <summary>
            失敗した宛先アドレスを取得します。
            </summary>
            <value>失敗した宛先アドレス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpFailedAddressException.BccAddresses">
            <summary>
            失敗した非表示コピー先アドレスを取得します。
            </summary>
            <value>失敗した非表示コピー先アドレス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SurrogatePairException">
            <summary>
            サロゲートペア文字列が入力された場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SurrogatePairException.#ctor(System.Char[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SurrogatePairException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="characters">入力されたサロゲートペアの<see cref="T:System.Char"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SurrogatePairException.Join(System.Char[])">
            <summary>
            サロゲートペアの<see cref="T:System.Char"/> を文字列化して結合します。
            </summary>
            <param name="characters">サロゲートペアを表す<see cref="T:System.Char"/></param>
            <returns>結合サロゲートペア文字列</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchNumberFormatedException">
            <summary>
            文字列が数値に変換できなかった場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchNumberFormatedException.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchNumberFormatedException"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchPrinterDriverVersionException">
            <summary>
            指定されたプリンタ情報と現在のプリンタのドライババージョンが一致しなかった場合にスローされる例外です。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.PrinterSettingsException">
            <summary>
            プリンタに関するエラーが発生した場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.PrinterSettingsException.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.PrinterSettingsException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.PrinterSettingsException.#ctor(System.String,System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.PrinterSettingsException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="innerException">この例外の原因となる例外</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchPrinterDriverVersionException.#ctor(System.Byte[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchPrinterDriverVersionException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="devmode">復元しようとしたDEVMODE構造体の<see cref="T:System.Byte"/>配列</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchPrinterDriverVersionException.#ctor(System.Byte[],System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchPrinterDriverVersionException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="devmode">復元しようとしたDEVMODE構造体の<see cref="T:System.Byte"/>配列</param>
            <param name="message">メッセージ</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchPrinterDriverVersionException.#ctor(System.Byte[],System.String,System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchPrinterDriverVersionException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="devmode">復元しようとしたDEVMODE構造体の<see cref="T:System.Byte"/>配列</param>
            <param name="message">メッセージ</param>
            <param name="innerException">この例外の原因となる例外</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchPrinterDriverVersionException.DevmodeBinary">
            <summary>
            復元しようとしたDEVMODE構造体の<see cref="T:System.Byte"/>配列 を取得します。
            </summary>
            <value>復元しようとしたDEVMODE構造体の<see cref="T:System.Byte"/>配列</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.ZeroInputException">
            <summary>
            前ゼロ項目で0が入力された場合にスローされる例外です。
            </summary>
            <remarks>
            前ゼロ項目は0が入力できません。
            例えば3桁項目の場合「000」はエラーとなります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.ZeroInputException.#ctor(System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.ZeroInputException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="length">前ゼロ項目の桁数</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter">
            <summary>
            文字区切りデータ出力を行う抽象クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueDataExporter">
            <summary>
            文字区切りデータの出力機能を提供するインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueDataExporter.GetFileWriter(System.String,System.Text.Encoding)">
            <summary>
            文字区切りデータをファイルへ書き込むためのライターを取得します。
            </summary>
            <param name="path">出力先ファイルパス(フルパス)</param>
            <param name="encoding">出力ファイルの文字エンコーディング</param>
            <returns>ファイルへの書き込みを行うライター</returns>
            <remarks>
            using 等を使用して、適切なタイミングで <see cref="M:System.IDisposable.Dispose"/> を実行して下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueDataExporter.GetStringWriter">
            <summary>
            文字区切りデータを文字列へ書き込むためのライターを取得します。
            </summary>
            <returns>文字列への書き込みを行うライター</returns>
            <remarks>
            using 等を使用して、適切なタイミングで <see cref="M:System.IDisposable.Dispose"/> を実行して下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueDataExporter.WriteValue(Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueWriter,System.String)">
            <summary>
            対象の文字列に必要に応じてエスケープ処理を施し、指定したライターを用いて追記します。
            </summary>
            <param name="writer">書き込みを行うライター</param>
            <param name="value">文字列レコードに含まれる個別の文字列</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueDataExporter.WriteValue(Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueWriter,System.String,System.Boolean)">
            <summary>
            対象の文字列に必要に応じてエスケープ処理を施し、指定したライターを用いて追記します。
            </summary>
            <param name="writer">書き込みを行うライター</param>
            <param name="value">文字列レコードに含まれる個別の文字列</param>
            <param name="forceToEscape">強制的にエスケープする場合は true。必要な場合だけエスケープする場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueDataExporter.EndLine(Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueWriter)">
            <summary>
            1行分の文字列レコードの書き込みを完了させ、指定したライターを次の行に移動させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueDataExporter.WriteTo(Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueWriter,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)">
            <summary>
            指定した文字列レコードのコレクションを使用して、指定したライターに順に書き込みます。
            </summary>
            <param name="writer">書き込みを行うライター</param>
            <param name="records">出力する文字列レコードのコレクション</param>
            <param name="fixedLength">
            <paramref name="records"/> の各レコードに含まれる文字列の数が不定の場合に、固定長に整えて出力する必要がある場合は true。<br />
            固定長にする必要がない場合は false。<br />
            各レコードに含まれる文字列の数が揃っていることが予めわかっている場合は false を指定してください。
            </param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueDataExporter.ExportToFile(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}},System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            指定した文字列レコードのコレクションを、指定したファイルパスに出力します。
            </summary>
            <param name="records">出力する文字列レコードのコレクション</param>
            <param name="path">出力先ファイルパス(フルパス)</param>
            <param name="encoding">出力ファイルの文字エンコーディング</param>
            <param name="fixedLength">
            <paramref name="records"/> の各レコードに含まれる文字列の数が不定の場合に、固定長に整えて出力する必要がある場合は true。<br />
            固定長にする必要がない場合は false。<br />
            各レコードに含まれる文字列の数が揃っていることが予めわかっている場合は false を指定してください。
            </param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueDataExporter.ExportToString(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)">
            <summary>
            指定した文字列レコードのコレクションを、すべて結合した文字列にして出力します。
            クリップボード貼り付け等に使用します。
            </summary>
            <param name="records">出力する文字列レコードのコレクション</param>
            <param name="fixedLength">
            <paramref name="records"/> の各レコードに含まれる文字列の数が不定の場合に、固定長に整えて出力する必要がある場合は true。<br />
            固定長にする必要がない場合は false。<br />
            各レコードに含まれる文字列の数が揃っていることが予めわかっている場合は false を指定してください。
            </param>
            <returns>文字列レコードのコレクションをすべて結合した文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueDataExporter.ExportToFile(System.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}}},System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            指定したデリゲートにより抽出された文字列レコードのコレクションを、指定したファイルパスに出力します。
            </summary>
            <param name="func">出力する文字列レコードを取得するためのデリゲート</param>
            <param name="path">出力先ファイルパス(フルパス)</param>
            <param name="encoding">出力ファイルの文字エンコード</param>
            <param name="fixedLength">
            <paramref name="func"/> で取得される各レコードに含まれる文字列の数が不定の場合に、固定長に整えて出力する必要がある場合は true。<br />
            固定長にする必要がない場合は false。<br />
            各レコードに含まれる文字列の数が揃っていることが予めわかっている場合は false を指定してください。
            </param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueDataExporter.ExportToString(System.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}}},System.Boolean)">
            <summary>
            指定したデリゲートにより抽出された文字列レコードのコレクションを、すべて結合した文字列にして出力します。
            クリップボード貼り付け等に使用します。
            </summary>
            <param name="func">出力する文字列レコードを取得するためのデリゲート</param>
            <param name="fixedLength">
            <paramref name="func"/> で取得される各レコードに含まれる文字列の数が不定の場合に、固定長に整えて出力する必要がある場合は true。<br />
            固定長にする必要がない場合は false。<br />
            各レコードに含まれる文字列の数が揃っていることが予めわかっている場合は false を指定してください。
            </param>
            <returns>文字列レコードのコレクションをすべて結合した文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueDataExporter.Delimiter">
            <summary>
            出力する文字列レコードの各文字列を区切るための文字を取得します。
            </summary>
            <value>区切り文字</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.GetFileWriter(System.String,System.Text.Encoding)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.GetStringWriter">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.WriteValue(Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueWriter,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.WriteValue(Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueWriter,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.EndLine(Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueWriter)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.WriteTo(Ill.Incorporated.Aladdinoffice.Framework.IO.Interfaces.IDelimiterSeparatedValueWriter,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.ExportToFile(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}},System.String,System.Text.Encoding,System.Boolean)">
            <inheritdoc/>
            <remarks>
            各レコードに含まれる個々の文字列値は <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.Escape(System.String)"/> でエスケープ処理されて、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.Delimiter"/> で区切られます。
            <paramref name="records"/> の各レコードに含まれる文字列の数が揃っていると予めわかっている場合は、<paramref name="fixedLength"/> に false を指定することで、パフォーマンスを改善できます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.ExportToString(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)">
            <inheritdoc/>
            <remarks>
            各レコードに含まれる個々の文字列値は <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.Escape(System.String)"/> でエスケープ処理されて、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.Delimiter"/> で区切られます。
            <paramref name="records"/> の各レコードに含まれる文字列の数が揃っていると予めわかっている場合は、<paramref name="fixedLength"/> に false を指定することで、パフォーマンスを改善できます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.ExportToFile(System.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}}},System.String,System.Text.Encoding,System.Boolean)">
            <inheritdoc/>
            <remarks>
            各レコードに含まれる個々の文字列値は <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.Escape(System.String)"/> でエスケープ処理されて、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.Delimiter"/> で区切られます。
            <paramref name="func"/> で取得される各レコードに含まれる文字列の数が揃っていると予めわかっている場合は、<paramref name="fixedLength"/> にfalse を指定することで、パフォーマンスを改善できます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.ExportToString(System.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}}},System.Boolean)">
            <inheritdoc/>
            <remarks>
            各レコードに含まれる個々の文字列値は <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.Escape(System.String)"/> でエスケープ処理されて、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.Delimiter"/> で区切られます。
            <paramref name="func"/> で取得される各レコードに含まれる文字列の数が揃っていると予めわかっている場合は、<paramref name="fixedLength"/> にfalse を指定することで、パフォーマンスを改善できます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.Escape(System.String)">
            <summary>
            出力する文字列レコードに含まれる個別の文字列に対して、必要なエスケープ処理を行います。
            </summary>
            <param name="value">出力する文字列レコードに含まれる個別の文字列</param>
            <returns>エスケープされた文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.Escape(System.String,System.Boolean)">
            <summary>
            出力する文字列レコードに含まれる個別の文字列に対して、必要なエスケープ処理を行います。
            </summary>
            <param name="value">出力する文字列レコードに含まれる個別の文字列</param>
            <param name="forceToEscape">強制的にエスケープする場合 true、必要な場合だけエスケープする場合 false</param>
            <returns>エスケープされた文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.AbstractDelimiterSeparatedValueDataExporter.Delimiter">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvDataExporter">
            <summary>
            CSV(Comma-Separeted-Values)データ出力を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvDataExporter.SEPARATOR">
            <summary>
            出力する文字列レコードの各文字列を区切るための区切り文字を表す定数です。(このクラスでは カンマ文字 です。)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvDataExporter._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvDataExporter"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvDataExporter.Escape(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvDataExporter.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvDataExporter"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvDataExporter"/> の既定のインスタンス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.CsvDataExporter.Delimiter">
            <inheritdoc/>
            <remarks>
            このクラスでは カンマ文字 です。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.FilePath">
            <summary>
            ファイルパスを管理するためのクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.FilePath.GetInfo(System.String)">
            <summary>
            ファイル情報<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.FilePath.FilePathInfo"/> を取得します。
            </summary>
            <param name="path">ファイルパス</param>
            <returns>ファイル情報<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.FilePath.FilePathInfo"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.FilePath.CheckLength(System.String)">
            <summary>
            ファイルパスの超過チェックを行います。
            </summary>
            <param name="path">ファイルパス</param>
            <returns>ファイルパスが超過していない場合は true。それ以外の場合は false。</returns>
            <remarks>
            Windows10から260以上のファイルパスを利用する場合はレジストリの操作が必要になった。
            この場合<see cref="T:System.IO.Path"/>.<see cref="M:System.IO.Path.GetFullPath(System.String)"/> を実行すると<see cref="T:System.IO.PathTooLongException"/> がスローされる。
            <see cref="T:System.IO.PathTooLongException"/> をキャッチした場合はfalseを返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.FilePath.MakeTempPath(System.String,System.Boolean)">
            <summary>
            一時ファイルのファイル名が超過していた場合、超過を解消するファイルパスを作成します。
            </summary>
            <param name="path">ファイルパス</param>
            <param name="noExists">存在しないファイルを返す場合は true。それ以外の場合は false。</param>
            <returns>ファイルパス超過が解消されたパス</returns>
            <remarks>
            「6桁~連番.拡張子」ファイルを作成します。
            連番ファイルが既に存在した場合、<paramref name="noExists"/> がfalseの場合はそのまま返します。
            <paramref name="noExists"/> がtrueの場合は連番をカウントアップして存在しないファイルパスを返します。
            ただし、連番のカウントアップは99までしか行いません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.FilePath.GetDirectoryName(System.String)">
            <summary>
            ディレクトリのパスを取得します。
            </summary>
            <param name="path">ファイルパス</param>
            <returns>ディレクトリパス</returns>
            <remarks>
            <see cref="T:System.IO.Path"/>.<see cref="M:System.IO.Path.GetDirectoryName(System.String)"/>はシステムによっては260バイトを超えるパスを扱えません。
            このメソッドは260バイトを超えていても利用できます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.FilePath.FilePathInfo">
            <summary>
            ファイル情報を管理するためのクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.FilePath.FilePathInfo.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.FilePath.FilePathInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.FilePath.FilePathInfo.DirectoryName">
            <summary>
            ディレクトリ名を取得します。
            </summary>
            <value>ディレクトリ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.FilePath.FilePathInfo.Extension">
            <summary>
            拡張子を取得します。
            </summary>
            <value>拡張子</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.FilePath.FilePathInfo.NameWithoutExtension">
            <summary>
            拡張子を除いたファイル名を取得します。
            </summary>
            <value>拡張子を除いたファイル名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.FilePath.FilePathInfo.Name">
            <summary>
            ファイル名を取得します。
            </summary>
            <value>ファイル名</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser">
            <summary>
            iniファイルを解析するためのクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.#ctor(System.String,System.Text.Encoding)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="path">iniファイルのパス</param>
            <param name="enc">iniファイルのエンコードルール</param>
            <remarks>
            <paramref name="enc"/>がnullの場合、sift-jis(<see cref="T:Ill.Incorporated.Aladdinoffice.Resources.DefaultObjects"/>.<see cref="F:Ill.Incorporated.Aladdinoffice.Resources.DefaultObjects.TEXT_CODE_SHIFT_JIS"/>を利用)でファイルを読み込みます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.#ctor(System.IO.StreamReader)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="reader">iniファイルが読み込みできる<see cref="T:System.IO.StreamReader"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.ContainsSection(System.String)">
            <summary>
            アプリケーションキが存在するか確認します。
            </summary>
            <param name="section">アプリケーションキー</param>
            <returns>存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.GetSections">
            <summary>
            アプリケーションキーを取得します。
            </summary>
            <returns>アプリケーションキー</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.ContainsKey(System.String,System.String)">
            <summary>
            アプリケーションキー、キーの組み合わせが存在するか確認します。
            </summary>
            <param name="section">アプリケーションキー</param>
            <param name="key">キー</param>
            <returns>アプリケーションキー、キーの組み合わせが存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.GetKeys(System.String)">
            <summary>
            アプリケーションキーに割当たっているキーを取得します。
            </summary>
            <param name="section">アプリケーションキー</param>
            <returns>アプリケーションキーに割当たっているキー</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.Find(System.String,System.String)">
            <summary>
            値の検索を行います。
            </summary>
            <param name="section">アプリケーションキー</param>
            <param name="key">キー</param>
            <returns>アプリケーションキーとキーから取得できる値</returns>
            <remarks>
            キーの大文字小文字を無視して値を検索します
            アプリケーションキーとキーの組み合わせが存在しない場合はnullを返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.Parse(System.IO.StreamReader)">
            <summary>
            <see cref="T:System.IO.StreamReader"/> から文字列を読み込んでParseします。
            </summary>
            <param name="reader">文字列を読み込むための<see cref="T:System.IO.StreamReader"/></param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.Dictionary">
            <summary>
            iniファイルをParseした結果を取得します。
            </summary>
            <value>iniファイルをParseした結果</value>
            <remarks>
            各要素は以下の通りです。<br/>
            <see cref="P:System.Collections.Generic.KeyValuePair`2.Key"/> ... アプリケーションキー
            <see cref="P:System.Collections.Generic.IDictionary`2.Values"/> ... <see cref="P:System.Collections.Generic.KeyValuePair`2.Key"/> = キー / <see cref="P:System.Collections.Generic.KeyValuePair`2.Value"/> = 値
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.Item(System.String,System.String)">
            <summary>
            値を取得します。
            </summary>
            <value>アプリケーションキーとキーから取得できる値</value>
            <remarks>
            アプリケーションキーとキーの組み合わせが存在しない場合はnullを返します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.IniReader">
            <summary>
            iniファイル解析するためのprivateクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.IniReader.reader">
            <summary>
            文字列を読み込む<see cref="T:System.IO.StreamReader"/>
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.IniReader.#ctor(System.IO.StreamReader)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.IniReader"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="reader">文字列を読み込む<see cref="T:System.IO.StreamReader"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.IniReader.Read">
            <summary>
            次のKey/Valueが取得できるまで読み込みます。
            </summary>
            <returns>Key/Valueが存在した場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.IniReader.Section">
            <summary>
            現在のアプリケーションキーを取得します。
            </summary>
            <value>現在のアプリケーションキー</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.IniReader.Key">
            <summary>
            現在のキーを取得します。
            </summary>
            <value>現在のキー</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Files.IniFileParser.IniReader.Value">
            <summary>
            現在の値を取得します。
            </summary>
            <value>現在の値</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.IO.TsvDataExporter">
            <summary>
            TSV(Tab-Separeted-Values)データ出力を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.TsvDataExporter.SEPARATOR">
            <summary>
            出力する文字列レコードの各文字列を区切るための区切り文字を表す定数です。(このクラスでは タブ文字 です。)
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.IO.TsvDataExporter._default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.IO.TsvDataExporter"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.IO.TsvDataExporter.Escape(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.TsvDataExporter.Default">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.IO.TsvDataExporter"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.IO.TsvDataExporter"/> の既定のインスタンス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.IO.TsvDataExporter.Delimiter">
            <inheritdoc/>
            <remarks>
            このクラスでは タブ文字 です。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession">
            <summary>
            Webセッションを管理する基底クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.GetRequest">
            <summary>
            <see cref="T:System.Net.WebRequest"/> を取得します。
            </summary>
            <returns><see cref="T:System.Net.WebRequest"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.SetProxy(System.Net.WebRequest)">
            <summary>
            <see cref="T:System.Net.WebRequest"/> にプロキシ設定を行います。
            </summary>
            <param name="request">リクエストを表す<see cref="T:System.Net.WebRequest"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.SetPassword(System.Net.WebRequest)">
            <summary>
            <see cref="T:System.Net.WebRequest"/> にユーザID、パスワードの設定を行います。
            </summary>
            <param name="request">リクエストを表す<see cref="T:System.Net.WebRequest"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.SetTimeout(System.Net.WebRequest)">
            <summary>
            <see cref="T:System.Net.WebRequest"/> にタイムアウトの設定を行います。
            </summary>
            <param name="request">リクエストを表す<see cref="T:System.Net.WebRequest"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Open">
            <summary>
            Web接続を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.CheckOpen">
            <summary>
            すでにWeb接続が行われているか確認を行います。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">Web接続されていない場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.ReadByte">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Stream"/> から1バイト読み込みます。
            </summary>
            <returns>読み込んだ<see cref="T:System.Byte"/></returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Stream"/> が末端の場合は負数を返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Stream"/> から指定のバイト数読み込みます。
            </summary>
            <param name="buffer">バッファ</param>
            <param name="offset">バッファの開始位置</param>
            <param name="count">取得バイト数</param>
            <returns>読み込んだバイト数</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.CopyTo(System.IO.Stream)">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Stream"/> の内容をコピーします。
            </summary>
            <param name="destination">コピー先の<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Stream"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.CopyTo(System.IO.Stream,System.Int32)">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Stream"/> の内容を指定のバイト数コピーします。
            </summary>
            <param name="destination">コピー先の<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Stream"/></param>
            <param name="bufferSize">ストリームに書き込めるバイト数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.GetCopyStream">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Stream"/> をコピーした<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Stream"/> を取得します。
            </summary>
            <returns>コピーした<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Stream"/></returns>
            <remarks>取得した<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Stream"/>は必ずDisposeを行ってください。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Close">
            <summary>
            Web切断を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.OnServerCertificateValidation(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            <see cref="T:System.Net.ServicePointManager"/>の<see cref="P:System.Net.ServicePointManager.ServerCertificateValidationCallback"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="certificate">証明書</param>
            <param name="chain">チェーン</param>
            <param name="sslPolicyErrors">SSLポリシーエラー</param>
            <returns><paramref name="sender"/> と<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Request"/>が同じ場合は true。それ以外の場合は false。</returns>
            <remarks>
            このオブジェクトで処理が行われている場合は証明を回避します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Url">
            <summary>
            接続URLを取得、設定します。
            </summary>
            <value>接続URL</value>
            <remarks>
            「http://localhost:80/」のような形式で設定
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Proxy">
            <summary>
            プロキシを取得、設定します。
            </summary>
            <value>プロキシ</value>
            <remarks>
            「http://localhost:8080/」のような形式で設定
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.User">
            <summary>
            ユーザIDを取得、設定します。
            </summary>
            <value>ユーザID</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Password">
            <summary>
            パスワードを取得、設定します。
            </summary>
            <value>パスワード</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Timeout">
            <summary>
            タイムアウトを取得、設定します。
            </summary>
            <value>タイムアウト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.UseThroughSecurity">
            <summary>
            SSL接続を行う場合に自己証明を許可するかを取得、設定します。
            </summary>
            <value>SSL接続を行う場合に自己証明を許可する場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Request">
            <summary>
            リクエストを表す<see cref="T:System.Net.WebRequest"/> を取得、設定します。
            </summary>
            <value>リクエストを表す<see cref="T:System.Net.WebRequest"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Response">
            <summary>
            レスポンスを表す<see cref="T:System.Net.WebResponse"/> を取得、設定します。
            </summary>
            <value>レスポンスを表す<see cref="T:System.Net.WebResponse"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Stream">
            <summary>
            レスポンスを取得するための<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Stream"/>を取得します。
            </summary>
            <value>レスポンスを取得するための<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession.Stream"/></value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail">
            <summary>
            メール送信を行うクラスです。
            </summary>
            <remarks>
            このクラスを利用しないでください。このクラスは互換性のために存在します。
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession"/> を利用して発行して下さい。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.DEFAULT_TIMEOUT">
            <summary>
            デフォルトタイムアウトをミリ秒で表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.DEFAULT_PORT_NUMBER">
            <summary>
            デフォルト送信ポート番号を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SEND_MAIL_CHAR_SET">
            <summary>
            メール送信時キャラクタセットを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.AO_DEFAULT_MAIL_ENCODE">
            <summary>
            標準のエンコードです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.#ctor(System.Boolean)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="async">非同期でメール送信する場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Send">
            <summary>
            メールを送信します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Send(System.String,System.String)">
            <summary>
            メールを送信します。
            </summary>
            <param name="subject">件名</param>
            <param name="body">本文</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Send(System.String,System.String,System.String,System.String)">
            <summary>
            メールを送信します。
            </summary>
            <param name="from">送信元アドレス</param>
            <param name="to">送信先アドレス</param>
            <param name="subject">件名</param>
            <param name="body">本文</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Send(System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            メールを送信します。
            </summary>
            <param name="from">送信元アドレス</param>
            <param name="to">送信先アドレス</param>
            <param name="ssl">SSLで暗号化通信を行う場合は true。それ以外の場合は false。</param>
            <param name="subject">件名</param>
            <param name="body">本文</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Send(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            SMTP認証を行い、メールを送信します。
            </summary>
            <param name="smtpAccount">SMTPアカウント名</param>
            <param name="smtpPassword">SMTPパスワード</param>
            <param name="from">送信元アドレス</param>
            <param name="to">送信先アドレス</param>
            <param name="ssl">SSLで暗号化通信を行う場合は true。それ以外の場合は false。</param>
            <param name="subject">件名</param>
            <param name="body">本文</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Send(System.String,System.Int32,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            メールを送信します。
            </summary>
            <param name="host">送信サーバー名</param>
            <param name="port">ポート番号</param>
            <param name="from">送信元アドレス</param>
            <param name="to">送信先アドレス</param>
            <param name="ssl">SSLで暗号化通信を行う場合は true。それ以外の場合は false。</param>
            <param name="subject">件名</param>
            <param name="body">本文</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Send(System.String,System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            メールを送信します。
            </summary>
            <param name="host">送信サーバー名</param>
            <param name="port">ポート番号</param>
            <param name="smtpAccount">SMTPアカウント名</param>
            <param name="smtpPassword">SMTPパスワード</param>
            <param name="from">送信元アドレス</param>
            <param name="to">送信先アドレス</param>
            <param name="ssl">SSLで暗号化通信を行う場合は true。それ以外の場合は false。</param>
            <param name="subject">件名</param>
            <param name="body">本文</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SendAsyncCancel">
            <summary>
            非同期でメール送信を行った場合に、送信処理をキャンセルします。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Preparation">
            <summary>
            メール送信準備を行います。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SmtpClient"/> の各プロパティを初期化します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SetSmtpAuthentication">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SmtpClient"/> にSMTP認証の設定を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SetAddress">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.MailMessage"/> にメールアドレスの設定を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SetSubject">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.MailMessage"/> に件名の設定を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SetBody">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.MailMessage"/> にメール本文の設定を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SetAttachments">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.MailMessage"/> に添付ファイルの設定を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.OnServerCertificateValidation(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            <see cref="T:System.Net.ServicePointManager"/>の<see cref="P:System.Net.ServicePointManager.ServerCertificateValidationCallback"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="certificate">証明書</param>
            <param name="chain">チェーン</param>
            <param name="sslPolicyErrors">SSLポリシーエラー</param>
            <returns><paramref name="sender"/> と<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SmtpClient"/>が同じ場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SmtpClient">
            <summary>
            メール送信に使用する<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SmtpClient"/> を取得、設定します。
            </summary>
            <value>メール送信に使用する<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SmtpClient"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.MailMessage">
            <summary>
            メール送信に使用する<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.MailMessage"/> を取得、設定します。
            </summary>
            <value>メール送信に使用する<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.MailMessage"/></value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SendCompleted">
            <summary>
            メール送信が完了した場合に発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Timeout">
            <summary>
            タイムアウト値をミリ秒で取得、設定します。
            </summary>
            <value>タイムアウト値(ミリ秒)</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Async">
            <summary>
            非同期フラグを取得、設定します。
            </summary>
            <value>非同期でメール送信を行う場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Host">
            <summary>
            SMTPサーバー名を取得、設定します。
            </summary>
            <value>SMTPサーバー名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Port">
            <summary>
            ポート番号を取得、設定します。
            </summary>
            <value>ポート番号</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.FromAddress">
            <summary>
            送信元の<see cref="T:System.Net.Mail.MailAddress"/> を取得、設定します。
            </summary>
            <value>送信元の<see cref="T:System.Net.Mail.MailAddress"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.ToAddress">
            <summary>
            送信先の<see cref="T:System.Net.Mail.MailAddress"/> を取得します。
            </summary>
            <value>送信先の<see cref="T:System.Net.Mail.MailAddress"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.CCAddress">
            <summary>
            コピーを送信する送信先の<see cref="T:System.Net.Mail.MailAddress"/> を取得します。
            </summary>
            <value>コピーを送信する送信先の<see cref="T:System.Net.Mail.MailAddress"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.BccAddress">
            <summary>
            送信先を隠してコピーを送信する送信先の<see cref="T:System.Net.Mail.MailAddress"/> を取得します。
            </summary>
            <value>送信先を隠してコピーを送信する送信先の<see cref="T:System.Net.Mail.MailAddress"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Subject">
            <summary>
            件名を取得、設定します。
            </summary>
            <value>件名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Body">
            <summary>
            本文を取得、設定します。
            </summary>
            <value>本文</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.EnableSsl">
            <summary>
            SSLで暗号化通信フラグを取得、設定します。
            </summary>
            <value>SSLで暗号化通信を行う場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.EnableSmtpAuthentication">
            <summary>
            SMTP認証フラグを取得、設定します。
            </summary>
            <value>SMTP認証を行う場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SmtpAccount">
            <summary>
            SMTPアカウント名を取得、設定します。
            </summary>
            <value>SMTPアカウント名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.SmtpPassword">
            <summary>
            SMTPパスワードを取得、設定します。
            </summary>
            <value>SMTPパスワード</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.AttachedFilePathNames">
            <summary>
            添付ファイルパスを取得します。
            </summary>
            <value>添付ファイルパス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Encoding">
            <summary>
            エンコードルールを表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Encoding"/> を取得、設定します。
            </summary>
            <value>エンコードルールを表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AoSendMail.Encoding"/></value>
            <remarks>
            件名、本文、添付ファイル名のエンコードルールとして利用されます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.CachingHttpSession">
            <summary>
            読み込んだ内容をキャッシュする<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.HttpSession"/> クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.HttpSession">
            <summary>
            HTTP接続の管理を行うクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.HttpSession.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.HttpSession"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.HttpSession.CheckOpend">
            <summary>
            HTTP接続を行っているかを判定します。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">HTTP接続を行っている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.HttpSession.GetRequest">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.HttpSession.Open">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.HttpSession.Url">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.HttpSession.Proxy">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.HttpSession.User">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.HttpSession.Password">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.HttpSession.Timeout">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.HttpSession.UseThroughSecurity">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.CachingHttpSession.Open">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.CachingHttpSession.GetCopyStream">
            <summary>
            キャッシュした<see cref="T:System.IO.Stream"/> を取得します。
            </summary>
            <returns>キャッシュした<see cref="T:System.IO.Stream"/></returns>
            <remarks>
            取得した<see cref="T:System.IO.Stream"/> のDisposeは不要です。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession">
            <summary>
            FTP接続の管理を行うクラスです。
            <c>fw:3</c>
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.CheckOpendForUrl(System.String)">
            <summary>
            URLの変更ができるかどうかを判定します。
            </summary>
            <param name="value">変更URL</param>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">FTP接続を行っており、別のサーバーに移動しようとした場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.CheckOpend">
            <summary>
            FTP接続を行っているかを判定します。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">FTP接続を行っている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.CheckOpen">
            <summary>
            FTP接続を行っているかを判定します。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">FTP接続を行っていない場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Suspend">
            <summary>
            FTP操作を行う場合にオブジェクトを復元するためのオブジェクトを取得します。
            </summary>
            <returns>IDisposableを実装したオブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.GetRequest">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.GetResponse">
            <summary>
            FTPレスポンスを取得します。
            </summary>
            <returns>FTPレスポンスを表す<see cref="T:System.Net.FtpWebResponse"/></returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.FtpWebException">ネットワークエラーが発生した場合、認証に失敗した場合にスローします。</exception>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Url"/> に誤りがある場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Open">
            <inheritdoc/>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.FtpWebException">ネットワークエラーが発生した場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Close">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Connect">
            <summary>
            FTPサーバーへ接続を行います。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">すでに接続済みの場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Disconnect">
            <summary>
            FTPサーバーとの切断を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.GetdirectoryUrl">
            <summary>
            ディレクトリURLを算出します。
            </summary>
            <returns>ディレクトリURL</returns>
            <remarks>「/」で終わるURLを算出します。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Connect(System.String,System.Boolean)">
            <summary>
            接続/切断処理を行います。
            </summary>
            <param name="directory">アクセスするディレクトリ</param>
            <param name="connect">接続を行う場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.CreateWebRequest(System.String)">
            <summary>
            FTPリクエストを表す<see cref="T:System.Net.FtpWebRequest"/> を作成します。
            </summary>
            <param name="url">URL</param>
            <returns>FTPリクエストを表す<see cref="T:System.Net.FtpWebRequest"/></returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Url"/> に誤りがある場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.ReadByte">
            <summary>
            このメソッドはサポートされていません。
            </summary>
            <remarks>処理内容が<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession"/> から大幅に変更されているためこのプロパティはサポートされていません。</remarks>
            <exception cref="T:System.NotSupportedException">常にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            このメソッドはサポートされていません。
            </summary>
            <param name="buffer">バッファ</param>
            <param name="offset">バッファの開始位置</param>
            <param name="count">取得バイト数</param>
            <remarks>処理内容が<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession"/> から大幅に変更されているためこのプロパティはサポートされていません。</remarks>
            <exception cref="T:System.NotSupportedException">常にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.CopyTo(System.IO.Stream,System.Int32)">
            <summary>
            このメソッドはサポートされていません。
            </summary>
            <param name="destination">コピー先の<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Stream"/></param>
            <param name="bufferSize">ストリームに書き込めるバイト数</param>
            <remarks>処理内容が<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession"/> から大幅に変更されているためこのプロパティはサポートされていません。</remarks>
            <exception cref="T:System.NotSupportedException">常にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.CopyTo(System.IO.Stream)">
            <inheritdoc/>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">ディレクトリが指定されている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.List">
            <summary>
            ファイル/フォルダのリストを取得します。
            </summary>
            <returns>ファイル、フォルダのリスト</returns>
            <remarks>ftp lsコマンド相当の動作を行います。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">ファイルが指定されている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.List(System.String)">
            <summary>
            ファイル/フォルダのリストを取得します。
            </summary>
            <param name="pattern">ファイル名のパターン(ワイルドカード指定)</param>
            <returns>ファイル、フォルダのリスト</returns>
            <remarks>ftp lsコマンド相当の動作を行います。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">ファイルが指定されている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.GetFile(System.String,System.String)">
            <summary>
            ファイルをダウンロードします。
            </summary>
            <param name="fromName">ファイル名</param>
            <param name="toPath">保存するフルパス</param>
            <remarks>ftp getコマンド相当の動作を行います。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">ファイルが指定されている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.GetFiles(System.String,System.String)">
            <summary>
            ファイルをダウンロードします。
            </summary>
            <param name="pattern">ファイル名のパターン</param>
            <param name="toPath">保存するフォルダパス</param>
            <remarks>
            <paramref name="pattern"/> にはワイルドカードを指定します。
            ftp mgetコマンド相当の動作を行います。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">ファイルが指定されている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.PutFile(System.String,System.String)">
            <summary>
            ファイルをアップロードします。
            </summary>
            <param name="fromPath">アップロードするファイルパス</param>
            <param name="toName">アップロードファイル名</param>
            <remarks>ftp putコマンド相当の動作を行います。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">ファイルが指定されている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.PutFiles(System.String[])">
            <summary>
            ファイルをアップロードします。
            </summary>
            <param name="fromNames">アップロードするファイルパス</param>
            <remarks>
            ftp mputコマンド相当の動作を行います。
            ファイル名は必ず被らないように設定する必要があります。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">ファイルが指定されている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.DeleteFile(System.String)">
            <summary>
            ファイルを削除します。
            </summary>
            <param name="name">ファイル名</param>
            <remarks>ftp delコマンド相当の動作を行います。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">ファイルが指定されている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.DeleteFiles(System.String[])">
            <summary>
            ファイルを削除します。
            </summary>
            <param name="names">ファイル名</param>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">ファイルが指定されている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.RemoveDirectory(System.String)">
            <summary>
            フォルダを削除します。
            </summary>
            <param name="name">フォルダ名</param>
            <remarks>ftp rmdirコマンド相当の動作を行います。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">ファイルが指定されている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Rename(System.String,System.String)">
            <summary>
            ファイル名を変更します。
            </summary>
            <param name="oldName">変更するファイル名</param>
            <param name="newName">新しいファイル名</param>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">ファイルが指定されている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.MakeDirectory(System.String)">
            <summary>
            ディレクトリを作成します。
            </summary>
            <param name="name">ディレクトリ名</param>
            <remarks>ftp mkdirコマンド相当の動作を行います。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">ファイルが指定されている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.GetCopyStream(System.String)">
            <summary>
            指定したファイルを<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Stream"/> にコピーし、取得します。
            </summary>
            <param name="name">ファイル名</param>
            <returns>コピーした<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Stream"/></returns>
            <remarks>取得した<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Stream"/> は必ずDisposeを行ってください。</remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">ファイルが指定されている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.GetCopyTextReader(System.String,System.Text.Encoding)">
            <summary>
            指定したファイルを<see cref="T:System.IO.TextReader"/> にコピーし、取得します。
            </summary>
            <param name="name">ファイル名</param>
            <param name="encoding">ファイルのエンコーディングルール</param>
            <returns>コピーした<see cref="T:System.IO.TextReader"/></returns>
            <remarks>取得した<see cref="T:System.IO.TextReader"/> は必ずDisposeを行ってください。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.ChangeDirectory(System.String)">
            <summary>
            ディレクトリの移動を行います。
            </summary>
            <param name="path">相対パス</param>
            <remarks>
            「/」から始めた場合はルートからのパスへ移動します。
            「..」は1つ上のディレクトリを表します。
            「.」はカレントディレクトリを表します。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">ファイルが指定されている場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Url">
            <summary>
            接続URLを取得、設定します。
            </summary>
            <value>接続URL</value>
            <remarks>
            「ftp://localhost:80/」のような形式で設定します。
            SSLアクセスを行う場合は「ftps://localhost:80/」のような形式で「ftps」で開始してください。
            ディレクトリへのアクセスは必ず「/」で終了するようにしてください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Proxy">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.User">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Password">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Timeout">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.UseThroughSecurity">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.ServerEncoding">
            <summary>
            サーバーのエンコーディングを表す<see cref="T:System.Text.Encoding"/> を取得、設定します。
            </summary>
            <value>サーバーのエンコーディングを表す<see cref="T:System.Text.Encoding"/></value>
            <remarks>
            デフォルトではUTF-8でエンコードを行います。
            ファイル名、ディレクトリ名にASCII文字しか利用しない場合は特に設定しなくても問題ありません。
            ASCII以外(日本語)を利用する場合は設定が必要です。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.DirectoryUrl">
            <summary>
            接続中のURLフォルダを取得します。
            </summary>
            <value>接続中のURLフォルダ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Request">
            <summary>
            リクエストを表す<see cref="T:System.Net.FtpWebRequest"/> を取得、設定します。
            </summary>
            <value>リクエストを表す<see cref="T:System.Net.FtpWebRequest"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.Stream">
            <summary>
            このプロパティはサポートされていません。
            </summary>
            <remarks>処理内容が<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession"/> から大幅に変更されているためこのプロパティはサポートされていません。</remarks>
            <exception cref="T:System.NotSupportedException">常にスローします。</exception>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.UrlBackup">
            <summary>
            URLバックアップクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.UrlBackup.session">
            <summary>
            FTPセッション管理オブジェクトです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.UrlBackup.url">
            <summary>
            バックアップ対象のURLです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.UrlBackup.request">
            <summary>
            FTPの<see cref="T:System.Net.FtpWebRequest"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.UrlBackup.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.UrlBackup"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="session">FTPセッション管理オブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.FtpSession.UrlBackup.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession">
            <summary>
            SMTP接続を行いメール送信を行うクラスです。
            <c>fw:3</c>
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.ReadByte">
            <summary>
            このメソッドはサポートされていません。
            </summary>
            <returns>常に負数</returns>
            <remarks>
            処理内容が<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession"/> から大幅に変更されているためこのプロパティはサポートされていません。
            常に負数を返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            このメソッドはサポートされていません。
            </summary>
            <param name="buffer">バッファ</param>
            <param name="offset">バッファの開始位置</param>
            <param name="count">取得バイト数</param>
            <returns>常に負数</returns>
            <remarks>
            処理内容が<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession"/> から大幅に変更されているためこのプロパティはサポートされていません。
            常に負数を返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.CopyTo(System.IO.Stream)">
            <summary>
            このメソッドはサポートされていません。
            </summary>
            <param name="destination">コピー先の<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Stream"/></param>
            <exception cref="T:System.NotSupportedException">常にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.CopyTo(System.IO.Stream,System.Int32)">
            <summary>
            このメソッドはサポートされていません。
            </summary>
            <param name="destination">コピー先の<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Stream"/></param>
            <param name="bufferSize">ストリームに書き込めるバイト数</param>
            <exception cref="T:System.NotSupportedException">常にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.GetCopyStream">
            <summary>
            このメソッドはサポートされていません。
            </summary>
            <exception cref="T:System.NotSupportedException">常にスローします。</exception>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.DisposeItems">
            <summary>
            破棄するオブジェクトです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Open">
            <summary>
            SMTP接続準備を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.SetFromAddress(System.String,System.String)">
            <summary>
            送信元アドレスを設定します。
            </summary>
            <param name="address">送信元メールアドレス</param>
            <param name="display">名前</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.AddToAddress(System.String,System.String)">
            <summary>
            送信先アドレスを追加します。
            </summary>
            <param name="address">送信先メールアドレス</param>
            <param name="display">名前</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.AddBccAddress(System.String)">
            <summary>
            送信先を隠してコピーを送信する送信先アドレスを追加します。
            </summary>
            <param name="address">アドレス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.GetMailAddress(System.String,System.String)">
            <summary>
            メールアドレスを表す<see cref="T:System.Net.Mail.MailAddress"/> を作成します。
            </summary>
            <param name="address">メールアドレス</param>
            <param name="display">表示名</param>
            <returns>メールアドレスを表す<see cref="T:System.Net.Mail.MailAddress"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.SetSubject(System.String)">
            <summary>
            件名を設定します。
            </summary>
            <param name="subject">件名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.SetBody(System.String)">
            <summary>
            本文を設定します。
            </summary>
            <param name="body">本文</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.AddFile(System.String,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            添付ファイルを追加します。
            </summary>
            <param name="name">ファイル名</param>
            <param name="media">ファイルのタイプ</param>
            <param name="stream">添付ファイルを表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Stream"/></param>
            <param name="noReUse">ストリームを再利用する場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Send">
            <summary>
            メールの送信を行います。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpFailedAddressException">送信先に何らかの理由で送信できなかった場合にスローします。送信先メールアドレスに誤りがある場合もスローします。</exception>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SmtpWebException">ネットワークエラーなど送信先ではなく、環境に問題がある場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Close">
            <summary>
            メール送信の後片付けを行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.OnServerCertificateValidation(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Host">
            <summary>
            ホスト名を取得、設定します。
            </summary>
            <value>ホスト名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Port">
            <summary>
            ポートNOを取得、設定します。
            </summary>
            <value>ポートNO</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.UseSsl">
            <summary>
            SSLで暗号化通信フラグを取得、設定します。
            </summary>
            <value>SSLで暗号化通信を行う場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Url">
            <summary>
            HostのIP、またはサーバー名を取得、設定します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Proxy">
            <summary>
            このプロパティはサポートされていません。
            </summary>
            <remarks>処理内容が<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession"/> から大幅に変更されているためこのプロパティはサポートされていません。</remarks>
            <exception cref="T:System.NotSupportedException">常にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Stream">
            <summary>
            このプロパティはサポートされていません。
            </summary>
            <remarks>処理内容が<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.AbstractWebSession"/> から大幅に変更されているためこのプロパティはサポートされていません。</remarks>
            <exception cref="T:System.NotSupportedException">常にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Client">
            <summary>
            SMTPクライアントを表す<see cref="T:System.Net.Mail.SmtpClient"/> を取得、設定します。
            </summary>
            <value>SMTPクライアントを表す<see cref="T:System.Net.Mail.SmtpClient"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Message">
            <summary>
            メッセージを表す<see cref="T:System.Net.Mail.MailMessage"/> を取得、設定します。
            </summary>
            <value>メッセージを表す<see cref="T:System.Net.Mail.MailMessage"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Encoding">
            <summary>
            エンコードルールを表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Encoding"/> を取得、設定します。
            </summary>
            <value>エンコードルールを表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Net.SmtpSession.Encoding"/></value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple">
            <summary>
            値を無限に設定できるように拡張した <see cref="T:System.Tuple"/> の代替クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.Create(System.Object[])">
            <summary>
            指定した要素で構成される新しい組を生成します。
            </summary>
            <param name="values">組の構成要素</param>
            <returns>指定された要素で構成される組</returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="values"/> が null 、もしくは、空 の場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.#ctor(System.Object[])">
            <summary>
            指定した構成要素からなる <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="values">構成要素</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.GetValues">
            <summary>
            この組の構成要素を取得します。
            </summary>
            <returns>この組の構成要素</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.CombineHashCodes(System.Int32,System.Int32)">
            <summary>
            指定したハッシコードを結合した新たなハッシュコードを返します。
            </summary>
            <param name="h1">1つ目のハッシュコード</param>
            <param name="h2">2つ目のハッシュコード</param>
            <returns>結合したハッシュコード</returns>
            <remarks>
            <see cref="T:System.Tuple"/> のソースコードから借りてきました。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.GetHashCode(System.Object[])">
            <summary>
            既定の比較子を用いて、対象の配列のハッシュコードを計算して返します。
            </summary>
            <param name="values">ハッシュコードを計算する配列</param>
            <returns>対象の配列のハッシュコード</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.GetHashCode(System.Object[],System.Collections.IEqualityComparer)">
            <summary>
            指定した比較子を用いて、対象の配列のハッシュコードを計算して返します。
            </summary>
            <param name="values">ハッシュコードを計算する配列</param>
            <param name="comparer">比較子</param>
            <returns>対象の配列のハッシュコード</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.GetHashCode(System.Collections.IEqualityComparer)">
            <summary>
            指定した比較子を用いて、自身の構成要素からハッシュコードを計算します。
            </summary>
            <param name="comparer">比較子</param>
            <returns>ハッシュコード</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.Equals(System.Object[],System.Object[],System.Collections.IEqualityComparer)">
            <summary>
            指定した比較子を用いて、対象の 2 つの配列を比較し、各配列の要素が等しいかどうかを判断します。
            </summary>
            <param name="xs">比較元の配列</param>
            <param name="ys">比較先の配列</param>
            <param name="comparer">比較子</param>
            <returns>指定した配列の要素がすべて等しい場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.Equals(System.Object,System.Collections.IEqualityComparer)">
            <summary>
            指定した比較子を用いて、自身と比較対象のオブジェクトが等しいかどうかを判断します。
            </summary>
            <param name="obj">比較対象オブジェクト</param>
            <param name="comparer">比較子</param>
            <returns>自身と <paramref name="obj"/> とが等しい場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.CompareTo(System.Object[],System.Object[],System.Collections.IComparer)">
            <summary>
            指定した比較子を用いて、対象の 2 つの配列を比較し、一方が他方より小さいか、等しいか、大きいかを示す値を返します。
            </summary>
            <param name="xs">比較元の配列</param>
            <param name="ys">比較先の配列</param>
            <param name="comparer">比較子</param>
            <returns>
            0 より小さい : <paramref name="xs"/> が <paramref name="ys"/> より小さい。<br />
            0            : <paramref name="xs"/> と <paramref name="ys"/> が等しい。<br />
            0 より大きい : <paramref name="xs"/> が <paramref name="ys"/> より大きい。<br />
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.CompareTo(System.Object,System.Collections.IComparer)">
            <summary>
            自身の並べ替え順序での位置が、比較対象のオブジェクトと比べて前か、後か、または同じかを示す整数を返します。
            </summary>
            <param name="obj">比較対象オブジェクト</param>
            <param name="comparer">比較子</param>
            <returns>
            0 より小さい : 自身の方が <paramref name="obj"/> より前。<br />
            0            : 自身と <paramref name="obj"/> が等しい。<br />
            0 より大きい : 自身の方が <paramref name="obj"/> より後。<br />
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.System#IComparable#CompareTo(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.Values">
            <summary>
            この組の構成要素を取得します。
            </summary>
            <value>この組の構成要素</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.Length">
            <summary>
            この組の構成要素の数を取得します。
            </summary>
            <value>この組の構成要素の数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.Item(System.Int32)">
            <summary>
            この組の構成要素の内、指定した位置の値を取得します。
            </summary>
            <param name="index">構成要素の位置</param>
            <value>構成要素の、指定した位置の値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTuple.Hash">
            <summary>
            この組のハッシュコードを取得します。
            </summary>
            <value>この組のハッシュコード</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTupleDictionary`1">
            <summary>
            複数のキーからなる汎用ディクショナリクラスです。
            </summary>
            <typeparam name="T">ディクショナリ内の値の型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTupleDictionary`1.GetValue(System.Object[])">
            <summary>
            指定したキーに関連付けられている値を取得します。
            </summary>
            <param name="keys">キー</param>
            <returns>指定したキーに関連付けられている値。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTupleDictionary`1.ContainsKeyValues(System.Object[])">
            <summary>
            指定したキーが <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTupleDictionary`1"/> に格納されているかどうかを判断します。
            </summary>
            <param name="keys">キー</param>
            <returns>指定したキーを持つ要素が <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomTupleDictionary`1"/> に格納されている場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.ObjectTransfer">
            <summary>
            オブジェクトのシリアル化、及び、逆シリアル化を行うための変換クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.TypeTransfer">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.TypeTransfer.Type"/> のシリアル化、及び、逆シリアル化を行うための変換クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.TypeTransfer.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.TypeTransfer"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.TypeTransfer.#ctor(System.Type)">
            <summary>
            対象の型情報をシリアル化、及び、逆シリアル化するための <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.TypeTransfer"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="type">対象の型</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.TypeTransfer.SetObjectType(System.Type)">
            <summary>
            対象の型情報をシリアル化するために必要な設定を行います。
            </summary>
            <param name="value">対象の型</param>
            <remarks>
            対象の型名と、対象の型が定義されているアセンブリの簡易名を保持します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.TypeTransfer.GetObjectType">
            <summary>
            現在の設定を基に、対象の型情報を取得します。
            </summary>
            <returns>対象の型</returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.TypeTransfer.Assembly"/> で指定されたアセンブリから、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.TypeTransfer.Type"/> で指定された型を取得します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.TypeTransfer.Assembly">
            <summary>
            シリアル化、及び、逆シリアル化する型情報が定義されているアセンブリの簡易名を取得、設定します。
            </summary>
            <value>型情報が定義されているアセンブリの簡易名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.TypeTransfer.Type">
            <summary>
            シリアル化、及び、逆シリアル化する型名を取得、設定します。
            </summary>
            <value>型名</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.ObjectTransfer.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.ObjectTransfer"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.ObjectTransfer.#ctor(System.Object)">
            <summary>
            対象のオブジェクトをシリアル化、及び、逆シリアル化する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.ObjectTransfer"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="value">対象オブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.ObjectTransfer.SetObject(System.Object)">
            <summary>
            対象のオブジェクトをシリアル化して保持します。
            </summary>
            <param name="value">対象オブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.ObjectTransfer.GetObject">
            <summary>
            逆シリアル化したオブジェクトを取得します。
            </summary>
            <returns>逆シリアル化したオブジェクト</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.ObjectTransfer.Data">
            <summary>
            シリアル化されたオブジェクトデータを取得、設定します。
            </summary>
            <value>シリアル化されたオブジェクトデータ</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar">
            <summary>
            プロパティを展開するためのクラスです。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.Value"/> プロパティにプロパティを展開したいオブジェクトを設定してください。
            このインスタンスをPropertyGrid に設定することにより、
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.Value"/> に設定したプロパティを参照することができます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.value">
            <summary>
            参照する値です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.showDisplayType">
            <summary>
            表示方法です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.OnShowDisplayTypeChanged(System.EventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ShowDisplayTypeChanged"/> を発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.OnValueChanged(System.EventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ValueChanged"/> を発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.IsCollection(System.ComponentModel.PropertyDescriptor)">
            <summary>
            配列を表す<see cref="T:System.ComponentModel.PropertyDescriptor"/> かを判定します。
            </summary>
            <param name="descriptor"><see cref="T:System.ComponentModel.PropertyDescriptor"/></param>
            <returns>配列を表す<see cref="T:System.ComponentModel.PropertyDescriptor"/> の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.Value">
            <summary>
            参照する値を取得、設定します。
            </summary>
            <value>参照する値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.PropertyFilter">
            <summary>
            プロパティフィルタを取得、設定します。
            </summary>
            <value>プロパティフィルタ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ValueType">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.Value"/>の型を取得します。
            </summary>
            <value><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.Value"/>の型</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.Value"/> がnullの場合はnullを返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ShowDisplayType">
            <summary>
            表示方法を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DisplayType"/> 取得、設定します。
            </summary>
            <value>表示方法を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DisplayType"/></value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ShowDisplayTypeChanged">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ShowDisplayType"/> プロパティが変更された場合に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ValueChanged">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.Value"/> プロパティが変更された場合に発生します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DisplayType">
            <summary>
            表示タイプを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DisplayType.Property">
            <summary>プロパティ</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DisplayType.NonPublicProperty">
            <summary>パブリック以外プロパティ</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DisplayType.Method">
            <summary>メソッド</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DisplayType.NonPublicMethod">
            <summary>パブリック以外メソッド</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DisplayType.Tree">
            <summary>階層ツリー表示</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DisplayType.NonPublicTree">
            <summary>パブリック以外階層ツリー</summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.PropertyTransfarConverter">
            <summary>
            プロパティを展開するための<see cref="T:System.ComponentModel.TypeConverter"/> です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.PropertyTransfarConverter.Editor">
            <summary>
            <see cref="T:System.Drawing.Design.UITypeEditor"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.PropertyTransfarConverter.GetCustomPropertiesSupported(System.Type)">
            <summary>
            再展開を行うか判定を行います。
            </summary>
            <param name="type"><see cref="T:System.Type"/></param>
            <returns>true:展開/false:展開しない</returns>
            <returns>展開が必要な場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.PropertyTransfarConverter.GetCustomProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            展開を行うプロパティのリストを取得します。
            </summary>
            <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext"/></param>
            <param name="value">値</param>
            <param name="attributes">属性</param>
            <returns>プロパティのリスト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.PropertyTransfarConverter.GetCustomFullPropertis(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            展開を行うすべてのプロパティのリストを取得します。
            </summary>
            <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext"/></param>
            <param name="value">値</param>
            <param name="attributes">属性</param>
            <returns>プロパティのリスト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.PropertyTransfarConverter.GetCustomTreePropertis(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Type,System.Attribute[])">
            <summary>
            ツリー展開値を取得します。
            </summary>
            <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext"/></param>
            <param name="value">値</param>
            <param name="type"><see cref="T:System.Type"/></param>
            <param name="attributes">属性</param>
            <returns>プロパティのリスト</returns>
            <exception cref="T:System.NotImplementedException">常にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.PropertyTransfarConverter.GetCustomTreeFullPropertis(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Type,System.Attribute[])">
            <summary>
            全ツリー展開値を取得します。
            </summary>
            <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext"/></param>
            <param name="value">値</param>
            <param name="type"><see cref="T:System.Type"/></param>
            <param name="attributes">属性</param>
            <returns>プロパティのリスト</returns>
            <exception cref="T:System.NotImplementedException">常にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.PropertyTransfarConverter.GetCustomMethods(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            メソッド用の<see cref="T:System.ComponentModel.TypeDescriptor"/> の取得します。
            </summary>
            <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext"/></param>
            <param name="value">値</param>
            <param name="attributes">属性</param>
            <returns>メソッドのリスト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.PropertyTransfarConverter.GetCustomFullMethods(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            メソッド用の<see cref="T:System.ComponentModel.TypeDescriptor"/> をすべて取得します。
            </summary>
            <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext"/></param>
            <param name="value">値</param>
            <param name="attributes">属性</param>
            <returns>メソッドのリスト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.PropertyTransfarConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.PropertyTransfarConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.RootValueTypeDescriptor">
            <summary>
            自分自身の値を表示させるための<see cref="T:System.ComponentModel.TypeDescriptor"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.RootValueTypeDescriptor.#ctor(System.Type)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.RootValueTypeDescriptor"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="type">使用される<see cref="T:System.Type"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.RootValueTypeDescriptor.GetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.RootValueTypeDescriptor.GetEditor(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.RootValueTypeDescriptor.CanResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.RootValueTypeDescriptor.ResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.RootValueTypeDescriptor.SetValue(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.RootValueTypeDescriptor.ShouldSerializeValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.RootValueTypeDescriptor.MainType">
            <summary>
            使用される<see cref="T:System.Type"/> を取得します。
            </summary>
            <value>使用される<see cref="T:System.Type"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.RootValueTypeDescriptor.ComponentType">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.RootValueTypeDescriptor.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.RootValueTypeDescriptor.PropertyType">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor">
            <summary>
            通常の<see cref="T:System.ComponentModel.PropertyDescriptor"/> を修飾するDecoratorクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="descriptor"><see cref="T:System.ComponentModel.PropertyDescriptor"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.GetConverter(System.ComponentModel.TypeConverter,System.Type)">
            <summary>
            <see cref="T:System.ComponentModel.TypeConverter"/> を作成します。
            </summary>
            <param name="converter">デフォルトの<see cref="T:System.ComponentModel.TypeConverter"/></param>
            <param name="type"><see cref="T:System.Type"/></param>
            <returns><see cref="T:System.ComponentModel.TypeConverter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.GetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.GetEditor(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.CanResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.ResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.SetValue(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.ShouldSerializeValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.MainDescriptor">
            <summary>
            メインの<see cref="T:System.ComponentModel.PropertyDescriptor"/> を取得します。
            </summary>
            <value>メインの<see cref="T:System.ComponentModel.PropertyDescriptor"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.Converter">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.MainConverter">
            <summary>
            メインの<see cref="T:System.ComponentModel.TypeConverter"/> を取得します。
            </summary>
            <value>メインの<see cref="T:System.ComponentModel.TypeConverter"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.Category">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.DisplayName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.Description">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.ComponentType">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarTypeDescriptor.PropertyType">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.FullTransfarTypeDescriptor">
            <summary>
            全展開を行う<see cref="T:System.ComponentModel.PropertyDescriptor"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.FullTransfarTypeDescriptor.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.FullTransfarTypeDescriptor"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="descriptor"><see cref="T:System.ComponentModel.PropertyDescriptor"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.FullTransfarTypeDescriptor.GetConverter(System.ComponentModel.TypeConverter,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeTransfarTypeDescriptor">
            <summary>
            階層展開を行う<see cref="T:System.ComponentModel.PropertyDescriptor"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeTransfarTypeDescriptor.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeTransfarTypeDescriptor"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="descriptor"><see cref="T:System.ComponentModel.PropertyDescriptor"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeTransfarTypeDescriptor.GetConverter(System.ComponentModel.TypeConverter,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeFullTransfarTypeDescriptor">
            <summary>
            全階層展開を行う<see cref="T:System.ComponentModel.PropertyDescriptor"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeFullTransfarTypeDescriptor.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeFullTransfarTypeDescriptor"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="descriptor"><see cref="T:System.ComponentModel.PropertyDescriptor"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeFullTransfarTypeDescriptor.GetConverter(System.ComponentModel.TypeConverter,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor">
            <summary>
            辞書型を展開する<see cref="T:System.ComponentModel.PropertyDescriptor"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor.#ctor(System.Object,System.Type,System.Attribute[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="key">キー</param>
            <param name="valueType">値</param>
            <param name="attributes">属性</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor.GetName(System.Object)">
            <summary>
            名称取得を取得します。
            </summary>
            <param name="key">キー</param>
            <returns>名称</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor.#ctor(System.Object,System.String,System.Type,System.Attribute[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="key">キー</param>
            <param name="name">名称</param>
            <param name="valueType">値</param>
            <param name="attributes">属性</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor.GetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor.CanResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor.ResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor.SetValue(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor.ShouldSerializeValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor.Converter">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor.MainConverter">
            <summary>
            メインの<see cref="T:System.ComponentModel.TypeConverter"/> を取得します。
            </summary>
            <value>メインの<see cref="T:System.ComponentModel.TypeConverter"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor.Key">
            <summary>
            キーを取得します。
            </summary>
            <value>キー</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor.ValueType">
            <summary>
            値の型を取得します。
            </summary>
            <value>値の型</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor.ComponentType">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.DictionaryTransfarDescriptor.PropertyType">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.EnumerableTransfarDescriptor">
            <summary>
            IEnumerable型を展開する<see cref="T:System.ComponentModel.PropertyDescriptor"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.EnumerableTransfarDescriptor.#ctor(System.Int32,System.String,System.Type,System.Attribute[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.EnumerableTransfarDescriptor"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="index">インデックス</param>
            <param name="format">フォーマット</param>
            <param name="valueType">型</param>
            <param name="attributes">属性</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.EnumerableTransfarDescriptor.GetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.EnumerableTransfarDescriptor.CanResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.EnumerableTransfarDescriptor.ResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.EnumerableTransfarDescriptor.SetValue(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.EnumerableTransfarDescriptor.ShouldSerializeValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.EnumerableTransfarDescriptor.Converter">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.EnumerableTransfarDescriptor.MainConverter">
            <summary>
            メインで使用する<see cref="T:System.ComponentModel.TypeConverter"/> 取得します。
            </summary>
            <value>メインで使用する<see cref="T:System.ComponentModel.TypeConverter"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.EnumerableTransfarDescriptor.ValueType">
            <summary>
            値の型を取得します。
            </summary>
            <value>値の型</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.EnumerableTransfarDescriptor.Index">
            <summary>
            インデックスを取得します。
            </summary>
            <value>インデックス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.EnumerableTransfarDescriptor.ComponentType">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.EnumerableTransfarDescriptor.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.EnumerableTransfarDescriptor.PropertyType">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ListSourceTransfarDescriptor">
            <summary>
            IListSource型展開する<see cref="T:System.ComponentModel.PropertyDescriptor"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ListSourceTransfarDescriptor.#ctor(System.Attribute[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ListSourceTransfarDescriptor"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="attributes">属性</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ListSourceTransfarDescriptor.GetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ListSourceTransfarDescriptor.CanResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ListSourceTransfarDescriptor.ResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ListSourceTransfarDescriptor.SetValue(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ListSourceTransfarDescriptor.ShouldSerializeValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ListSourceTransfarDescriptor.Converter">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ListSourceTransfarDescriptor.MainConverter">
            <summary>
            メインで使用する<see cref="T:System.ComponentModel.TypeConverter"/> を取得します。
            </summary>
            <value>メインで使用する<see cref="T:System.ComponentModel.TypeConverter"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ListSourceTransfarDescriptor.DisplayName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ListSourceTransfarDescriptor.Description">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ListSourceTransfarDescriptor.ComponentType">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ListSourceTransfarDescriptor.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.ListSourceTransfarDescriptor.PropertyType">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.MethodDescriptor">
            <summary>
            メソッドを展開する<see cref="T:System.ComponentModel.PropertyDescriptor"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.MethodDescriptor.#ctor(System.Reflection.MethodInfo)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.MethodDescriptor"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="method">メソッド</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.MethodDescriptor.GetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.MethodDescriptor.GetEditor(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.MethodDescriptor.CanResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.MethodDescriptor.ResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.MethodDescriptor.SetValue(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.MethodDescriptor.ShouldSerializeValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.MethodDescriptor.MainMethod">
            <summary>
            メインの<see cref="T:System.Reflection.MethodInfo"/>を取得します。
            </summary>
            <value>メインの<see cref="T:System.Reflection.MethodInfo"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.MethodDescriptor.Description">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.MethodDescriptor.ComponentType">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.MethodDescriptor.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.MethodDescriptor.PropertyType">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor">
            <summary>
            カスタム用<see cref="T:System.ComponentModel.PropertyDescriptor"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.#ctor(System.ComponentModel.PropertyDescriptor,System.Boolean)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="descriptor"><see cref="T:System.ComponentModel.PropertyDescriptor"/></param>
            <param name="public">publicメンバの場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.#ctor(System.Reflection.MemberInfo,System.Boolean,System.ComponentModel.PropertyDescriptor)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="member"><see cref="T:System.Reflection.MemberInfo"/></param>
            <param name="public">publicメンバの場合は true。それ以外の場合は false。</param>
            <param name="descriptor"><see cref="T:System.ComponentModel.PropertyDescriptor"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.GetPrefix">
            <summary>
            表示用プレフィックス文字列を取得します。
            </summary>
            <returns>表示用プレフィックス文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.GetPublicPrefix">
            <summary>
            publicプレフィックス文字列を取得します。
            </summary>
            <returns>publicプレフィックス文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.GetDisplayName">
            <summary>
            プレフィックス文字列を取得します。
            </summary>
            <returns>publicプレフィックス文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.GetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.GetEditor(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.CanResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.ResetValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.SetValue(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.ShouldSerializeValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.IsPublic">
            <summary>
            public属性かを取得します。
            </summary>
            <value>publicメンバの場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.ProperrtyInfo">
            <summary>
            プロパティ属性の<see cref="T:System.Reflection.PropertyInfo"/> を取得します。
            </summary>
            <value>プロパティ属性の<see cref="T:System.Reflection.PropertyInfo"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.FieldInfo">
            <summary>
            フィールド属性の<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.FieldInfo"/> を取得します。
            </summary>
            <value>フィールド属性の<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.FieldInfo"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.Category">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.Description">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.DisplayName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.MainDescriptor">
            <summary>
            メインの<see cref="T:System.ComponentModel.PropertyDescriptor"/> を取得します。
            </summary>
            <value>メインの<see cref="T:System.ComponentModel.PropertyDescriptor"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.MainConverter">
            <summary>
            メインの<see cref="T:System.ComponentModel.TypeConverter"/> を取得します。
            </summary>
            <value>メインの<see cref="T:System.ComponentModel.TypeConverter"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.Converter">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.PropertyType">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.ComponentType">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.CustomTypeDescriptor.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarConverter">
            <summary>
            サブ展開を行う<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarConverter"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarConverter.#ctor(System.ComponentModel.TypeConverter,System.Type)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarConverter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="converter"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarConverter"/></param>
            <param name="type"><see cref="T:System.Type"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarConverter.MainConverter">
            <summary>
            メインの<see cref="T:System.ComponentModel.TypeConverter"/> を取得、設定します。
            </summary>
            <value>メインの<see cref="T:System.ComponentModel.TypeConverter"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarConverter.MainType">
            <summary>
            メインの<see cref="T:System.Type"/> を取得、設定します。
            </summary>
            <value>メインの<see cref="T:System.Type"/></value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.FullTransfarConverter">
            <summary>
            全サブ展開する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TransfarConverter"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.FullTransfarConverter.#ctor(System.ComponentModel.TypeConverter,System.Type)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.FullTransfarConverter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="converter"><see cref="T:System.ComponentModel.TypeConverter"/></param>
            <param name="type"><see cref="T:System.Type"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.FullTransfarConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeTransfarConverter">
            <summary>
            ツリー展開用<see cref="T:System.ComponentModel.TypeConverter"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeTransfarConverter.#ctor(System.ComponentModel.TypeConverter,System.Type)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeTransfarConverter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="converter"><see cref="T:System.ComponentModel.TypeConverter"/></param>
            <param name="type"><see cref="T:System.Type"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeTransfarConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeFullTransfarConverter">
            <summary>
            ツリーをすべて展開する<see cref="T:System.ComponentModel.TypeConverter"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeFullTransfarConverter.#ctor(System.ComponentModel.TypeConverter,System.Type)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeFullTransfarConverter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="converter"><see cref="T:System.ComponentModel.TypeConverter"/></param>
            <param name="type"><see cref="T:System.Type"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.TreeFullTransfarConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.FilterClear">
            <summary>
            フィルタクリア用<see cref="T:System.Drawing.Design.UITypeEditor"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.FilterClear.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.PropertyTransfar.FilterClear.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomStringComparer">
            <summary>
            SQLソートに近い並び替え順序で文字列の比較を行うための <see cref="T:System.Collections.Generic.IComparer`1"/> 実装クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomStringComparer.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomStringComparer"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomStringComparer._instance">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomStringComparer"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomStringComparer.Compare(System.String,System.String)">
            <summary>
            指定した 2 つの <see cref="T:System.String"/> オブジェクトを比較し、2 つの文字列の大小関係を並べ替え順序で示す整数を返します。<br/>
            </summary>
            <param name="x">比較する最初の文字列です。</param>
            <param name="y">比較する 2 番目の文字列です。</param>
            <returns>
            <paramref name="x"/> と <paramref name="y"/> の大小関係を示す符号付き整数。<br/>
            <br/>
            0 より小さい値 : <paramref name="x"/> が <paramref name="y"/> より小さい。<br/>
            0              : <paramref name="x"/> と <paramref name="y"/> が等しい。<br/>
            0 より大きい値 : <paramref name="x"/> が <paramref name="y"/> より大きい。<br/>
            </returns>
            <remarks>
            このメソッドは通常の <see cref="M:System.String.CompareTo(System.String)"/> よりも、なるべくSQLソートに近づけるように実装しています。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomStringComparer.System#Collections#Generic#IComparer{System#String}#Compare(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomStringComparer.Instance">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomStringComparer"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.CustomStringComparer"/> の既定のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter">
            <summary>
            制御文字を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.NUL">
            <summary>空白</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.SOH">
            <summary>ヘッディング開始</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.STX">
            <summary>テキスト開始</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.ETX">
            <summary>テキスト終結</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.EOT">
            <summary>伝送終了</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.ENQ">
            <summary>問い合わせ</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.ACK">
            <summary>肯定応答</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.BEL">
            <summary>ベル</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.BS">
            <summary>後退</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.VT">
            <summary>垂直タブ</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.FF">
            <summary>書式送り</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.SO">
            <summary>シフトアウト</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.SI">
            <summary>シフトイン</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.DLE">
            <summary>伝送制御拡張</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.DC1">
            <summary>装置制御1</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.DC2">
            <summary>装置制御2</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.DC3">
            <summary>装置制御3</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.DC4">
            <summary>装置制御4</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.NAK">
            <summary>否定応答</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.SYN">
            <summary>同期信号</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.ETB">
            <summary>伝送ブロック終結</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.CAN">
            <summary>取り消し</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.EM">
            <summary>媒体終結</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.SUB">
            <summary>置換</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.ESC">
            <summary>エスケープシーケンス</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.FS">
            <summary>ファイル分離</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.GS">
            <summary>グループ分離</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.RS">
            <summary>レコード分離</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.US">
            <summary>ユニット分離</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.ControlCharacter.DEL">
            <summary>抹消</summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.QueryExpressionFormatter">
            <summary>
            クエリ式をフォーマットするためのクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.QueryExpressionFormatter._regexToReplaceSystemValue">
            <summary>
            システム設定/ユーザー情報/項目名の各ファイルの参照個所を式内から特定するための正規表現です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.QueryExpressionFormatter.ReplaceSystemValues(System.String,System.Boolean)">
            <summary>
            クエリ式のシステム設定/ユーザー情報/項目名の各値変換を行います。
            </summary>
            <param name="expression">クエリ式</param>
            <param name="useEscape">シングルコーテーションをエスケープする場合は true。それ以外の場合は false。</param>
            <returns>置換した後のクエリ式</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedItemInfo">
            <summary>
            データ変更イベント処理のエラーが発生したオブジェクト、及び、プロパティを設定するためのクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedItemInfo.NOT_USED_INDEX">
            <summary>
            変更が発生したオブジェクトがコレクションの要素ではないことを表すインデックス値の定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedItemInfo.#ctor(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IValidationErrorHolder,System.String,System.Int32)">
            <summary>
            対象のオブジェクト、及び、プロパティの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedItemInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="item">エラーが発生したオブジェクトインスタンス</param>
            <param name="name">エラーが発生したプロパティ名</param>
            <param name="index">エラーが発生したオブジェクトを保持するコレクション内でのインデックス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedItemInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedItemInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedItemInfo.Item">
            <summary>
            エラーが発生したオブジェクトインスタンスを取得します。
            </summary>
            <value>エラーが発生したオブジェクトインスタンス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedItemInfo.Name">
            <summary>
            エラーが発生したプロパティ名を取得します。
            </summary>
            <value>エラーが発生したプロパティ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedItemInfo.Index">
            <summary>
            エラーが発生したオブジェクトを保持するコレクション内でのインデックスを取得します。
            </summary>
            <value>エラーが発生したオブジェクトを保持するコレクション内でのインデックス</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedItemInfo.Item"/> プロパティが <see cref="T:System.Collections.ICollection"/> に含まれている場合にのみ有効です。<br/>
            含まれていない場合は <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedItemInfo.NOT_USED_INDEX"/> が設定されます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver">
            <summary>
            データ変更イベント処理中のエラー発生を監視するためのヘルパークラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver.#ctor(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged)">
            <summary>
            対象のオブジェクトを監視する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="target">監視対象オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver._observingTarget">
            <summary>
            監視対象オブジェクトです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver._observingCount">
            <summary>
            データ変更イベントエラー発生の監視開始処理呼出回数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver._errorsOnObservaion">
            <summary>
            データ変更イベントエラーの発生監視中に新たに発生したエラー情報の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver.Target_ValidationErrorChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <summary>
            監視対象オブジェクトの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            追加、あるいは、除去されたエラー情報を <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver._errorsOnObservaion"/> に対して追加、もしくは、除去します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver.BeginErrorObservation">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver.EndErrorObservation">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver.GetErrorsOnObservation">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver.Dispose">
            <inheritdoc/>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver._backup">
            <summary>
            新規発生エラー情報の編集開始時点のエラー情報です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver.BeginEdit">
            <inheritdoc/>
            <summary>
            新規発生エラー情報の編集を開始します。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver.BeginEdit"/> が呼び出された後、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver.Commit"/>、もしくは、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver.Rollback"/> がまだ呼び出されていない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver.Rollback">
            <inheritdoc/>
            <summary>
            新規発生エラー情報の編集を取り消して、以前の状態に戻します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver.Commit">
            <inheritdoc/>
            <summary>
            新規発生エラー情報の編集を確定します。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver.BeginEdit"/> がまだ呼び出されていない場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver.IsObserving">
            <summary>
            データ変更イベントエラーの発生を監視中かどうかを取得します。
            </summary>
            <value>監視中の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorObserver.IsSuspended">
            <inheritdoc/>
            <summary>
            新規発生エラー情報の編集中かどうかを取得します。
            </summary>
            <value>新規発生エラー情報の編集中である場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter">
            <summary>
            文字列をコンバートするクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter.instance">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter"/> のインスタンスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter.Convert(System.String,Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverterFlag)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverterFlag"/> に従って文字列をコンバートします。
            </summary>
            <param name="text">文字列</param>
            <param name="flag">コンバート指定する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverterFlag"/></param>
            <returns>コンバート後の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter.ConvertToWide(System.String)">
            <summary>
            半角文字を全角文字に変換します。
            </summary>
            <param name="text">文字列</param>
            <returns>コンバート後の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter.ConvertToNarrow(System.String)">
            <summary>
            全角文字を半角文字に変換します。
            </summary>
            <param name="text">文字列</param>
            <returns>コンバート後の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter.ConvertToKatakana(System.String)">
            <summary>
            ひらがなをカタカナに変換します。
            </summary>
            <param name="text">文字列</param>
            <returns>コンバート後の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter.ConvertToHiragana(System.String)">
            <summary>
            カタカナをひらがなに変換します。
            </summary>
            <param name="text">文字列</param>
            <returns>コンバート後の文字列</returns>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter.NumberCharactors">
            <summary>
            全角数字です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter.KanjiNumberCharactors">
            <summary>
            漢数字です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter.ConvertToKanjiNumber(System.String)">
            <summary>
            全角数字を漢数字に変換します。
            </summary>
            <param name="text">文字列</param>
            <returns>コンバート後の文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter.Item">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter"/> のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverter"/> のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverterFlag">
            <summary>
            文字列の変換フラグを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverterFlag.None">
            <summary>
            変換を行いません
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverterFlag.Wide">
            <summary>
            半角文字を全角文字に変換します
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverterFlag.Narrow">
            <summary>
            全角文字を半角文字に変換します
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverterFlag.Katakana">
            <summary>
            ひらがなをカタカナに変換します
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextConverterFlag.Hiragana">
            <summary>
            カタカナをひらがなに変換します
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker">
            <summary>
            一意の文字列を作成するためのクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker.DEFAULT_FORMAT">
            <summary>
            デフォルトの採番フォーマットです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker.DEFAULT_MAX_COUNT">
            <summary>
            デフォルトの採番最大値です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker.#ctor(System.String,System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="format">採番フォーマット</param>
            <param name="max">採番最大値</param>
            <remarks>
            <paramref name="format"/> は<see cref="T:System.String"/>.<see cref="M:System.String.Format(System.String,System.Object[])"/> で利用されるフォーマットを指定します。
            第1引数は名称、第2引数はインデックスが渡ります。通常は"{0}_{1}"が利用されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker.Contains(System.String)">
            <summary>
            キーが存在するか確認します。
            </summary>
            <param name="key">キー</param>
            <returns><paramref name="key"/> が存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker.Remove(System.String)">
            <summary>
            採番キーを削除します。
            </summary>
            <param name="key">削除キー</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker.Clear">
            <summary>
            採番したキーのクリアを行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker.Add(System.String)">
            <summary>
            採番キーを追加します。
            </summary>
            <param name="key">キー</param>
            <returns>キーが追加できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            採番を行わずにキーを追加します。
            すでにキーが追加されている場合はfalseを返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker.Make(System.String)">
            <summary>
            一意となるキーを採番します。
            </summary>
            <param name="base">ベースとなる名称</param>
            <returns>採番キー</returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">採番カウントが<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker.MaxCount"/> に達した場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker.System#Collections#Generic#IEnumerable{System#String}#GetEnumerator">
            <inheritdoc cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc cref="M:System.Collections.IEnumerable.GetEnumerator"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker.Hash">
            <summary>
            内部のハッシュテーブルを取得、設定します。
            </summary>
            <value>内部のハッシュテーブル</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker.Format">
            <summary>
            採番フォーマットを取得します。
            </summary>
            <value>採番フォーマット</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker.MaxCount">
            <summary>
            採番最大値を取得します。
            </summary>
            <value>採番最大値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.UniqueStringMaker.Count">
            <summary>
            件数を取得します。
            </summary>
            <value>件数</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.GenericLocker">
            <summary>
            ミューテックスでロックを行うための汎用クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.MutexLocker">
            <summary>
            ミューテックスでロックを行うための基底クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.MutexLocker.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.MutexLocker"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.MutexLocker.CreateMutex">
            <summary>
            ミューテックスを作成します。
            </summary>
            <returns>ミューテックス</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.MutexLocker.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.MutexLocker.LockObject">
            <summary>
            ロック用のミューテックスを取得、設定します。
            </summary>
            <value>ロック用のミューテックス</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.GenericLocker.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.GenericLocker"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="lockid">ロックID</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.GenericLocker.#ctor(System.String,System.Boolean)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.GenericLocker"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="lockid">ロックID</param>
            <param name="global">グローバルでMutexを作成するか場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.GenericLocker.CreateMutex">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.GenericLocker.Lock(System.String,System.Boolean)">
            <summary>
            ロックを行い、ロックを解除するためのオブジェクトを返します。
            </summary>
            <param name="lockid">ロックID</param>
            <param name="global">グローバルでMutexを作成するか場合は true。それ以外の場合は false。</param>
            <returns>ロックを解除するための<see cref="T:System.IDisposable"/> オブジェクト</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.GenericLocker.LockId">
            <summary>
            ロックIDを取得、設定します。
            </summary>
            <value>ロックID</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationArgs">
            <summary>
            AladdinOffice外プログラム → AladdinOffice 間連携で、起動する AladdinOffice プログラムを指定するための引数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationArgs.#ctor(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String,System.String[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="postParams">
            起動する AladdinOffice プログラムに渡す引数。<br/>
            null を指定できます。<br/>
            </param>
            <param name="formCheck">
            起動する AladdinOffice プログラムの FORMCHECK。
            </param>
            <param name="execName">
            起動する AladdinOffice プログラムの EXE名。<br/>
            メニューマスタに登録されていないプログラム(<paramref name="formCheck"/>)を指定する場合にのみ有効です。
            </param>
            <param name="parameters">
            起動する AladdinOffice プログラムの 起動引数。<br/>
            <paramref name="execName"/> を指定する場合にのみ有効です。
            </param>
            <exception cref="T:System.InvalidOperationException"><paramref name="formCheck"/> が空の場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationArgs.PostParams">
            <summary>
            起動する AladdinOffice プログラムに渡す引数 を取得します。<br />
            文字列にのみ対応します。
            </summary>
            <value>起動する AladdinOffice プログラムに渡す引数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationArgs.FormCheck">
            <summary>
            起動する AladdinOffice プログラムの FORMCHECK を取得します。
            </summary>
            <value>起動する AladdinOffice プログラムの FORMCHECK</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationArgs.ExecName">
            <summary>
            起動する AladdinOffice プログラムの EXE名 を取得します。
            </summary>
            <value>起動する AladdinOffice プログラムの EXE名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationArgs.Params">
            <summary>
            起動する AladdinOffice プログラムの 起動引数 を取得します。
            </summary>
            <value>起動する AladdinOffice プログラムの 起動引数</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationFailedException">
            <summary>
            AladdinOffice外プログラム から AladdinOffice側プログラム への処理要求が失敗した場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationFailedException.#ctor(System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationFailedException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="innerException">原因となる例外</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceClientHelper">
            <summary>
            AladdinOffice外プログラム から AladdinOffice側プログラム へ特定の処理の実行要求を行うためのヘルパクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceClientHelper.DEFAULT_RETRY_COUNT">
            <summary>
            WCF連携サービスとの接続試行回数の上限の既定値を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceClientHelper.DEFAULT_RETRY_INTERVAL">
            <summary>
            WCF連携サービスとの接続失敗時、再試行するまでの待機時間(秒)の既定値を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceClientHelper.PostTo(Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationArgs,System.String,System.String,System.String,System.String,System.ServiceModel.NetNamedPipeSecurityMode,System.Int32,System.Int32,System.String[])">
            <summary>
            WCF連携サービスを利用して、指定した AladdinOffice プログラムに処理を要求します。<br/>
            <paramref name="applictaionName"/> で指定したプロセスが存在しない場合は、<paramref name="applictaionPath"/> で指定した実行ファイルを起動します。
            </summary>
            <param name="args">プログラム起動情報</param>
            <param name="applictaionName">
            サービスをホストしているアプリケーションのプロセス名。<br/>
            既定のベースアドレス、エンドポイントのサービスに接続する場合は AladdinOffice のメニュー = "AONMENU" を指定します。
            </param>
            <param name="applictaionPath">
            サービスをホストしているアプリケーションの実行ファイルへのフルパス。<br/>
            既定のベースアドレス、エンドポイントのサービスに接続する場合は AladdinOffice のメニュー の実行ファイルへのパスを指定します。
            </param>
            <param name="baseAddress">サービスのベースアドレス(名前付きパイプ)</param>
            <param name="endpointAddress">
            サービスのエンドポイントアドレス。<br/>
            null が指定された場合、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceInfo.GetDefaultEndPointAddress"/> メソッドにより既定のエンドポイントが指定されます。<br/>
            ターミナルサービス環境での実行が想定される場合は、値にプロセスのセッションIDを含めることを推奨します。
            </param>
            <param name="securityMode">セキュリティモード</param>
            <param name="retryCount">サービスとの接続試行回数の上限</param>
            <param name="retryInterval">サービスとの接続失敗時、再試行するまでの待機時間(秒)</param>
            <param name="applicationParameters">
            <paramref name="applictaionPath"/> で指定した実行ファイを起動する際に渡すコマンドライン引数。<br/>
            必要に応じて <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.ProcessStarter.EscapeForCommandLineArgs(System.String[])"/> などで事前にエスケープ処理を施してください。<br/>
            <paramref name="applictaionPath"/> で AladdinOffice のメニュー の実行ファイルを指定した場合、ローカル実行モードでのローカルファイルの更新を無視するために、
            必ず <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.IGNORE_LOACL_UPDATE"/> を指定してください。
            </param>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationFailedException">
            以下のいずれかの場合にスローします。<br/>
            ・プロセスの起動に失敗した場合。<br/>
            ・サービスの応答がない場合。<br/>
            ・サービスに要求した処理で何らかの例外が発生した場合。<br/>
            </exception>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceHost">
            <summary>
            AladdinOffice外プログラム ←→ AladdinOffice 間WCF連携サービスのホストを提供するクラスです。
            </summary>
            <remarks>
            基本的に AladdinOffice のメニュー以外では使用しないと思いますが、
            AladdinOffice外プログラム からの処理要求を受け取る必要がある AladdinOffice側プログラムで適宜、サービスをホストしてください。<br/>
            ただし、サービスのベースアドレス、もしくはエンドポイントアドレスには <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceInfo"/> にある既定値以外の
            値を指定して下さい。<br/>
            また、ターミナルサービス(リモートデスクトップ)環境での実行が想定される場合は、エンドポイントアドレスにはプロセスのセッションIDを含めることを推奨します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceHost.#ctor(System.ServiceModel.ServiceHost)">
            <summary>
            指定したサービスホストの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceHost"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="service">サービスホスト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceHost.StartHosting(Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationService,System.String,System.String,System.ServiceModel.NetNamedPipeSecurityMode)">
            <summary>
            対象の AladdinOffice外プログラム ←→ AladdinOffice 間WCF連携サービスの、指定したアドレスでのホスティングを開始します。
            </summary>
            <param name="serviceInstastance">ホストするサービスのインスタンス</param>
            <param name="baseAddress">サービスのベースアドレス(名前付きパイプ)</param>
            <param name="endpointAddress">
            サービスのエンドポイントアドレス。<br/>
            null が指定された場合、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceInfo.GetDefaultEndPointAddress"/> メソッドにより既定のエンドポイントが指定されます。<br/>
            ターミナルサービス(リモートデスクトップ)環境での実行が想定される場合は、値にプロセスのセッションIDを含めることを推奨します。
            </param>
            <param name="securityMode">セキュリティモード</param>
            <returns>開始されたサービスのホスト</returns>
            <remarks>
            適切なタイミングで戻り値の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceHost"/> オブジェクトの <see cref="M:System.IDisposable.Dispose"/>を行ってください。<br/>
            <br/>
            <paramref name="baseAddress"/> 、もしくは <paramref name="endpointAddress"/> には <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceInfo"/> にある既定値以外の値を指定して下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceHost.Dispose">
            <inheritdoc/>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceHost._disposed">
            <summary>
            Dispose済みかかどうかを表す値です。
            </summary>
            <value>Dispose済みの場合は true。それ以外の場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceHost.Dispose(System.Boolean)">
            <summary>
            このインスタンスによって使用されているすべてのリソースを解放します。
            </summary>
            <param name="disposing">マネージドリソースも開放する場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceHost.Finalize">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceHost"/> のインスタンスを破棄します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceHost.Service">
            <summary>
            サービスホストの実体を取得します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceInfo">
            <summary>
            AladdinOffice外プログラム ←→ AladdinOffice 間WCF連携サービスを利用するために必要な情報を管理するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceInfo.DEFAULT_BASE_ADDRESS">
            <summary>
            AladdinOffice外プログラム ←→ AladdinOffice 間WCF連携サービス の既定のベースアドレス(名前付きパイプ)を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceInfo.GetDefaultEndPointAddress">
            <summary>
            AladdinOffice外プログラム ←→ AladdinOffice 間WCF連携サービス の既定のエンドポイントアドレスを取得します。
            </summary>
            <returns>
            既定のエンドポイントアドレス。<br />
            既定ではプロセスのセッションIDになります。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceInfo.MakeRemoteAddress(System.String,System.String)">
            <summary>
            AladdinOffice外プログラム から AladdinOffice WCF連携サービス を利用する際に指定する接続先アドレス(名前付きパイプ)を生成します。
            </summary>
            <param name="baseAddress">サービスのベースアドレス(名前付きパイプ)</param>
            <param name="endPointAddress">
            サービスのエンドポイントアドレス<br/>
            null が指定された場合、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationServiceInfo.GetDefaultEndPointAddress"/> メソッドにより既定のエンドポイントが指定されます。<br/>
            ターミナルサービス(リモートデスクトップ)環境での実行が想定される場合は、値にプロセスのセッションIDを含めることを推奨します。
            </param>
            <returns>接続先アドレス</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationService">
            <summary>
            AladdinOffice外プログラム ←→ AladdinOffice 間WCF連携サービスを提供するクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.Interfaces.IAladdinCommunicationService">
            <summary>
            WCFを使用して、AladdinOffice外プログラム ←→ AladdinOffice 間連携機能を提供します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.Interfaces.IAladdinCommunicationService.Post(Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationArgs)">
            <summary>
            指定した AladdinOffice のプログラムを起動します。
            </summary>
            <param name="args">プログラム起動情報</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationService._instance">
            <summary>
            自身の静的インスタンスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationService.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationService"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationService.Post(Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationArgs)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationService.Instance">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationService"/> の静的インスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ServiceModel.AladdinCommunicationService"/> の静的インスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CustomOperatingSystem">
            <summary>
            オペレーティングシステム情報を AladdinOffice 独自に管理するためのクラスです。
            </summary>
            <remarks>
            <see cref="P:System.Environment.OSVersion"/> は、Windows 8.1以降、偽装される可能性があるため、WMIを使用してオペレーティングシステム情報を
            取得するようにします。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CustomOperatingSystem.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CustomOperatingSystem"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CustomOperatingSystem._osVersion">
            <summary>
            プログラムが実行されているオペレーティングシステムの情報です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CustomOperatingSystem._value">
            <summary>
            プログラムが実行されているオペレーティングシステムに関する補足情報です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CustomOperatingSystem.GetVersion">
            <summary>
            プログラムが実行されているオペレーティングシステムの情報を取得します。
            </summary>
            <returns>オペレーティングシステムの情報</returns>
            <remarks>
            WMIを使用してオペレーティングシステム情報を取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CustomOperatingSystem.GetCustomOperatingSystem">
            <summary>
            プログラムが実行されているオペレーティングシステムに関する補足情報を取得します。
            </summary>
            <returns>オペレーティングシステムに関する補足情報</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CustomOperatingSystem.OSVersion">
            <summary>
            プログラムが実行されているオペレーティングシステムの情報を取得します。
            </summary>
            <value>プログラムが実行されているオペレーティングシステムの情報</value>
            <remarks>
            <see cref="P:System.Environment.OSVersion"/> 相当の情報を取得します。<br/>
            通常は <see cref="P:System.Environment.OSVersion"/> と同じになりますが、<see cref="P:System.Environment.OSVersion"/> が偽装されている場合に
            正確なオペレーティングシステム情報が返されるようになります。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CustomOperatingSystem.Value">
            <summary>
            プログラムが実行されているオペレーティングシステムに関する補足情報を取得します。
            </summary>
            <value>プログラムが実行されているオペレーティングシステムに関する補足情報</value>
            <remarks>
            <see cref="T:System.OperatingSystem"/> クラスからは取得できない情報を補足的に得るためなどに参照します。<br/>
            将来の拡張のために用意されています。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask">
            <summary>
            スレッドの親子関係の管理と、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoLog"/> でのトレースを行うために拡張された <see cref="T:System.Threading.Tasks.Task"/> の代替クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.ParentChild">
            <summary>
            スレッドの親子関係を保持するオブジェクトです。
            </summary>
            <remarks>
            key   : 子
            value : 親
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.GetMainThreadId(System.Int32)">
            <summary>
            指定したスレッドの親スレッドのIDを取得します。
            </summary>
            <param name="id">スレッドID</param>
            <returns>親スレッドID</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.Make(System.Action)">
            <summary>
            対象の<see cref="T:System.Action"/>を現在のスレッドの子スレッドとして実行する<see cref="T:System.Action"/>オブジェクトを作成します。
            </summary>
            <param name="action">子スレッドで実行する<see cref="T:System.Action"/>オブジェクト</param>
            <returns><paramref name="action"/>を子スレッドとして実行する<see cref="T:System.Action"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.Make``1(System.Func{``0})">
            <summary>
            対象の<see cref="T:System.Func`1"/>を現在のスレッドの子スレッドとして実行する<see cref="T:System.Func`1"/>オブジェクトを作成します。
            </summary>
            <typeparam name="TResult">戻り値の型</typeparam>
            <param name="function">子スレッドで実行する<see cref="T:System.Func`1"/>オブジェクト</param>
            <returns><paramref name="function"/>を子スレッドとして実行する<see cref="T:System.Func`1"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.Make``1(System.Action{System.Object,``0})">
            <summary>
            対象のイベントハンドラを現在のスレッドの子スレッドとして実行する<see cref="T:System.Action"/>オブジェクトを作成します。
            </summary>
            <typeparam name="T">イベント引数の型</typeparam>
            <param name="action">子スレッドで実行するイベントハンドラデリゲート</param>
            <returns><paramref name="action"/>を子スレッドとして実行する<see cref="T:System.Action"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.Run(System.Action)">
            <summary>
            対象の<see cref="T:System.Action"/>を現在のスレッドの子スレッドで実行します。
            </summary>
            <param name="action">子スレッドで実行する<see cref="T:System.Action"/>オブジェクト</param>
            <returns><paramref name="action"/>を非同期で実行する<see cref="T:System.Threading.Tasks.Task"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.Run(System.Func{System.Threading.Tasks.Task})">
            <summary>
            対象の<see cref="T:System.Func`1"/>を現在のスレッドの子スレッドで実行します。
            </summary>
            <param name="function">子スレッドで実行する<see cref="T:System.Func`1"/>オブジェクト</param>
            <returns><paramref name="function"/>を非同期で実行する<see cref="T:System.Threading.Tasks.Task"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.Run``1(System.Func{``0})">
            <summary>
            対象の<see cref="T:System.Func`1"/>を現在のスレッドの子スレッドで実行します。
            </summary>
            <typeparam name="TResult">戻り値の型</typeparam>
            <param name="function">子スレッドで実行する<see cref="T:System.Func`1"/>オブジェクト</param>
            <returns><paramref name="function"/>を非同期で実行する<see cref="T:System.Threading.Tasks.Task"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.Run(System.Action,System.Threading.CancellationToken)">
            <summary>
            対象の<see cref="T:System.Action"/>を現在のスレッドの子スレッドで実行します。
            </summary>
            <param name="action">子スレッドで実行する<see cref="T:System.Action"/>オブジェクト</param>
            <param name="cancellationToken">処理を取り消すために使用されるキャンセル トークン</param>
            <returns><paramref name="action"/>を非同期で実行する<see cref="T:System.Threading.Tasks.Task"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.Run``1(System.Func{``0},System.Threading.CancellationToken)">
            <summary>
            対象の<see cref="T:System.Func`1"/>を現在のスレッドの子スレッドで実行します。
            </summary>
            <typeparam name="TResult">戻り値の型</typeparam>
            <param name="function">子スレッドで実行する<see cref="T:System.Func`1"/>オブジェクト</param>
            <param name="cancellationToken">処理を取り消すために使用されるキャンセル トークン</param>
            <returns><paramref name="function"/>を非同期で実行する<see cref="T:System.Threading.Tasks.Task"/>オブジェクト</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomTaskChild">
            <summary>
            子スレッドの処理を表すクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomTaskChild.#ctor(System.Threading.Thread)">
            <summary>
            指定したスレッドの子スレッドとして、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomTaskChild"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="thread">現在のスレッド</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomTaskChild.GetId(System.Threading.Thread)">
            <summary>
            指定したスレッドの親スレッドのIDを取得します。
            </summary>
            <param name="thread">スレッド</param>
            <returns>
            <paramref name="thread"/>が<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask"/>で管理している別スレッドの子である場合はその親スレッドのID。
            <paramref name="thread"/>が<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask"/>で管理されていない場合は<paramref name="thread"/>自身のID。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomTaskChild.Start">
            <summary>
            この子スレッドの処理を開始します。
            </summary>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask"/> にスレッドの親子関係を登録します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomTaskChild.End">
            <summary>
            この子スレッドの処理を終了します。
            </summary>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask"/> にスレッド登録されている親子関係を解除します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomTaskChild.ThreadId">
            <summary>
            親スレッドのIDを取得、設定します。
            </summary>
            <value>親スレッドのID</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomTaskChild.ThreadName">
            <summary>
            親スレッドの名前を取得、設定します。
            </summary>
            <value>親スレッドの名前</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomAction">
            <summary>
            子スレッドで<see cref="T:System.Action"/>を実行するクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomAction.Create(System.Action)">
            <summary>
            対象の<see cref="T:System.Action"/>を現在のスレッドの子スレッドで実行するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomAction"/>オブジェクトを生成します。
            </summary>
            <param name="action">子スレッドで実行する<see cref="T:System.Action"/>オブジェクト</param>
            <returns><paramref name="action"/>を子スレッドで実行するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomAction"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomAction.#ctor(System.Threading.Thread,System.Action)">
            <summary>
            対象の<see cref="T:System.Action"/>を指定したスレッドの子スレッドで実行するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomAction"/>クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="thread">親スレッド</param>
            <param name="action"><paramref name="thread"/>の子スレッドで実行する<see cref="T:System.Action"/>オブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomAction.Invoke">
            <summary>
            子スレッドで<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomAction.Action"/>を実行します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomAction.Action">
            <summary>
            子スレッドで実行する<see cref="T:System.Action"/>オブジェクトを取得、設定します。
            </summary>
            <value>子スレッドで実行する<see cref="T:System.Action"/>オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomFunction`1">
            <summary>
            子スレッドで<see cref="T:System.Func`1"/>を実行するクラスです。
            </summary>
            <typeparam name="TResult">戻り値の型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomFunction`1.Create(System.Func{`0})">
            <summary>
            対象の<see cref="T:System.Func`1"/>を現在のスレッドの子スレッドで実行するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomFunction`1"/>オブジェクトを生成します。
            </summary>
            <param name="function">子スレッドで実行する<see cref="T:System.Func`1"/>オブジェクト</param>
            <returns><paramref name="function"/>を子スレッドで実行するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomFunction`1"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomFunction`1.#ctor(System.Threading.Thread,System.Func{`0})">
            <summary>
            対象の<see cref="T:System.Func`1"/>を指定したスレッドの子スレッドで実行するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomFunction`1"/>クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="thread">親スレッド</param>
            <param name="function"><paramref name="thread"/>の子スレッドで実行する<see cref="T:System.Func`1"/>オブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomFunction`1.Invoke">
            <summary>
            子スレッドで<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomFunction`1.Function"/>を実行します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomFunction`1.Function">
            <summary>
            子スレッドで実行する<see cref="T:System.Func`1"/>オブジェクトを取得、設定します。
            </summary>
            <value>子スレッドで実行する<see cref="T:System.Func`1"/>オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomEventHandler`1">
            <summary>
            子スレッドでイベントハンドリングを行うクラスです。
            </summary>
            <typeparam name="T">イベント引数の型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomEventHandler`1.Create(System.Action{System.Object,`0})">
            <summary>
            対象のイベントハンドラを現在のスレッドの子スレッドで実行するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomEventHandler`1"/>オブジェクトを生成します。
            </summary>
            <param name="action">子スレッドで実行するイベントハンドラデリゲート</param>
            <returns><paramref name="action"/>を子スレッドで実行するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomEventHandler`1"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomEventHandler`1.#ctor(System.Threading.Thread,System.Action{System.Object,`0})">
            <summary>
            対象のイベントハンドラを指定したスレッドの子スレッドで実行するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomEventHandler`1"/>クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="thread">親スレッド</param>
            <param name="action"><paramref name="thread"/>の子スレッドで実行するイベントハンドラデリゲート</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomEventHandler`1.Invoke(System.Object,`0)">
            <summary>
            子スレッドで<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomEventHandler`1.Action"/>を実行します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.CustomTask.CustomEventHandler`1.Action">
            <summary>
            子スレッドで実行するイベントハンドラデリゲートを取得、設定します。
            </summary>
            <value>子スレッドで実行するイベントハンドラデリゲート</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateManager">
            <summary>
            期首、期末などの日付を基準として、日付の算出処理を行うクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateManager.GetBaseDateTimeString(Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseDateType,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            システム日付に対応する算出基準日から、指定した年・月・日数を加算して算出した日付をAO標準フォーマット(yyyyMMdd)で整形した文字列を取得します。
            </summary>
            <param name="baseDateType">算出基準</param>
            <param name="addYears">基準日から数えた年数</param>
            <param name="addMonths">基準日から数えた月数</param>
            <param name="addDays">基準日から数えた日数</param>
            <param name="acemd">決算月日</param>
            <returns>算出した日付のAO標準フォーマット(yyyyMMdd)の日付文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateManager.GetBaseDateTimeString(Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseDateType,System.Int32,System.Int32,System.Int32,System.DateTime,System.String)">
            <summary>
            対象日付に対応する算出基準日から、指定した年・月・日数を加算して算出した日付をAO標準フォーマット(yyyyMMdd)で整形した文字列を取得します。
            </summary>
            <param name="baseDateType">算出基準</param>
            <param name="addYears">基準日から数えた年数</param>
            <param name="addMonths">基準日から数えた月数</param>
            <param name="addDays">基準日から数えた日数</param>
            <param name="current">対象日付</param>
            <param name="acemd">決算月日</param>
            <returns>算出した日付のAO標準フォーマット(yyyyMMdd)の日付文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateManager.GetBaseDateTimeString(Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseDateType,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            対象日付に対応する算出基準日から、指定した年・月・日数を加算して算出した日付をAO標準フォーマット(yyyyMMdd)で整形した文字列を取得します。
            </summary>
            <param name="baseDateType">算出基準</param>
            <param name="addYears">基準日から数えた年数</param>
            <param name="addMonths">基準日から数えた月数</param>
            <param name="addDays">基準日から数えた日数</param>
            <param name="current">対象日付の文字列(yyyMMdd形式)。末尾が 99 の場合にも対応します。</param>
            <param name="acemd">決算月日</param>
            <returns>算出した日付のAO標準フォーマット(yyyyMMdd)の日付文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateManager.GetBaseDateTime(Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseDateType,System.Int32,System.Int32,System.Int32,System.DateTime,System.String)">
            <summary>
            対象日付に対応する算出基準日から、指定した年・月・日数を加算して算出した日付を取得します。
            </summary>
            <param name="baseDateType">算出基準</param>
            <param name="addYears">基準日から数えた年数</param>
            <param name="addMonths">基準日から数えた月数</param>
            <param name="addDays">基準日から数えた日数</param>
            <param name="current">対象日付</param>
            <param name="acemd">決算月日</param>
            <returns>算出した日付</returns>
            <exception cref="T:System.InvalidOperationException"><paramref name="baseDateType"/> に <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseDateType.Default"/> が指定された場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateManager.GetBaseDateTimeString(Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType,System.Int32,System.Int32,System.String)">
            <summary>
            システム日付に対応する算出基準月から、指定した年・月数を加算して算出した日付をAO標準フォーマット(yyyyMM)で整形した文字列を取得します。
            </summary>
            <param name="baseMonthType">算出基準</param>
            <param name="addYears">基準日から数えた年数</param>
            <param name="addMonths">基準日から数えた月数</param>
            <param name="acemd">決算月日</param>
            <returns>算出した日付のAO標準フォーマット(yyyyMM)の日付文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateManager.GetBaseDateTimeString(Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType,System.Int32,System.Int32,System.DateTime,System.String)">
            <summary>
            対象日付に対応する算出基準月から、指定した年・月数を加算して算出した日付をAO標準フォーマット(yyyyMM)で整形した文字列を取得します。
            </summary>
            <param name="baseMonthType">算出基準</param>
            <param name="addYears">基準日から数えた年数</param>
            <param name="addMonths">基準日から数えた月数</param>
            <param name="current">対象日付</param>
            <param name="acemd">決算月日</param>
            <returns>算出した日付のAO標準フォーマット(yyyyMM)の日付文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateManager.GetBaseDateTimeString(Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            対象日付に対応する算出基準月から、指定した年・月数を加算して算出した日付をAO標準フォーマット(yyyyMM)で整形した文字列を取得します。
            </summary>
            <param name="baseMonthType">算出基準</param>
            <param name="addYears">基準日から数えた年数</param>
            <param name="addMonths">基準日から数えた月数</param>
            <param name="current">対象日付の文字列(yyyMMdd形式)。末尾が 99 の場合にも対応します。</param>
            <param name="acemd">決算月日</param>
            <returns>算出した日付のAO標準フォーマット(yyyyMM)の日付文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateManager.GetBaseDateTime(Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType,System.Int32,System.Int32,System.DateTime,System.String)">
            <summary>
            対象日付に対応する算出基準月から、指定した年・月数を加算して算出した日付を取得します。
            </summary>
            <param name="baseMonthType">算出基準</param>
            <param name="addYears">基準日から数えた年数</param>
            <param name="addMonths">基準日から数えた月数</param>
            <param name="current">対象日付</param>
            <param name="acemd">決算月日</param>
            <returns>算出した日付</returns>
            <exception cref="T:System.InvalidOperationException"><paramref name="baseMonthType"/> に <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.BaseMonthType.Default"/> が指定された場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateManager.ControlMonthIsLastDay">
            <summary>
            実績管理年月が月単位かどうかを取得します。
            <c>fw:3</c>
            </summary>
            <value>月単位の場合は true。自社締め単位の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue">
            <summary>
            日付を表す文字列から <see cref="T:System.DateTime"/> オブジェクトへの変換処理やチェックを行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.MONTH_END">
            <summary>
            月末日を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.REG_AODATE">
            <summary>
            日付文字をパースするための正規表現です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.ToDate(System.String)">
            <summary>
            対象の日付文字列を <see cref="T:System.DateTime"/> に変換します。
            </summary>
            <param name="value">対象日付文字列</param>
            <returns>変換された <see cref="T:System.DateTime"/></returns>
            <example>
            例えば、以下のような値が返されます。<br/>
            <br/>
            半角数字4桁、もしくは、半角数字4桁 + '/'の場合、すなわち、年だけが指定されている場合は、その年の1月1日0時0分0秒 に対応する <see cref="T:System.DateTime"/>。<br/>
            半角数字6桁、もしくは、半角数字4桁 + '/' + 半角数字2桁 の場合、すなわち、年月が指定されている場合は、その年月の1日0時0分0秒 に対応する <see cref="T:System.DateTime"/>。<br/>
            半角数字8桁 の場合、すなわち、年月日が指定されている場合は、その年月日の0時0分0秒 に対応する <see cref="T:System.DateTime"/>。<br/>
            </example>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><see cref="T:System.DateTime"/>に変換できなかった場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.TryParseDate(System.String,System.DateTime@)">
            <summary>
            対象のAO標準フォーマット(yyyyMMdd)の日付文字列から <see cref="T:System.DateTime"/> への変換を試みます。
            </summary>
            <param name="value">AO標準フォーマット(yyyyMMdd)の日付文字列</param>
            <param name="date">変換された <see cref="T:System.DateTime"/> が格納されます。</param>
            <returns>変換に成功した場合は true。失敗した場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.ToDate(System.String,System.String)">
            <summary>
            対象の日付文字列とそのフォーマット形式を指定して <see cref="T:System.DateTime"/> に変換します。
            </summary>
            <param name="value">対象日付文字列</param>
            <param name="format">フォーマット</param>
            <returns>変換された <see cref="T:System.DateTime"/></returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><see cref="T:System.DateTime"/>に変換できなかった場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.TryParseDate(System.String,System.String,System.DateTime@)">
            <summary>
            対象の日付文字列とそのフォーマット形式を指定して日付への変換を試みます。
            </summary>
            <param name="value">対象日付文字列</param>
            <param name="format">フォーマット形式</param>
            <param name="date">変換された <see cref="T:System.DateTime"/> が格納されます。</param>
            <returns>変換に成功した場合は true。失敗した場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.ToRealDateString(System.String)">
            <summary>
            対象の日付文字列を実際の日付に変換し、AO標準フォーマット(yyyyMMdd)で整形して返します。
            </summary>
            <param name="value">対象日付文字列</param>
            <returns>実際の日付のAO標準フォーマット(yyyyMMdd)文字列</returns>
            <remarks>
            通常はそのままの日付が返されますが、日付が「99」の場合にその月の末日に変換して返されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.CheckYear(System.String,System.String@)">
            <summary>
            対象の文字列が年に変換できるかどうかをチェックします。
            </summary>
            <param name="text">対象文字列</param>
            <param name="err">変換できない場合の理由を示すエラーメッセージが格納されます。</param>
            <returns>変換できる場合は true。できない場合は false。</returns>
            <remarks>
            以下のような場合に変換できないと判断されます。<br />
            ・<paramref name="text"/> が整数に変換できない場合。<br />
            ・<paramref name="text"/> に1900未満、もしくは、2100以上の整数が指定された場合。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.CheckMonth(System.String,System.String@)">
            <summary>
            指定した文字列が月に変換できるかどうかをチェックします。
            </summary>
            <param name="text">対象文字列</param>
            <param name="err">変換できない場合の理由を示すエラーメッセージが格納されます。</param>
            <returns>変換できる場合は true。できない場合は false。</returns>
            <remarks>
            <paramref name="text"/> に1～12の整数以外が指定された場合に変換できないと判断されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.CheckDay(System.String,System.String@)">
            <summary>
            指定した文字列が日に変換できるかどうかをチェックします。
            </summary>
            <param name="text">対象文字列</param>
            <param name="err">変換できない場合の理由を示すエラーメッセージが格納されます。</param>
            <returns>変換できる場合は true。できない場合は false。</returns>
            <remarks>
            <paramref name="text"/> に1～31の整数以外が指定された場合に変換できないと判断されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.CheckDate(System.String,System.String@)">
            <summary>
            指定された文字列がAO標準フォーマット(yyyyMMdd)の日付文字列かどうかをチェックします。
            </summary>
            <param name="text">対象文字列</param>
            <param name="err">AO標準フォーマット(yyyyMMdd)でない旨を示すエラーメッセージが格納されます。</param>
            <returns>AO標準フォーマット(yyyyMMdd)の日付文字列である場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.GetYear(System.String)">
            <summary>
            対象のAO標準フォーマット(yyyyMMdd)の日付文字列から年(yyyy)部分を取得します。
            </summary>
            <param name="value">AO標準フォーマット(yyyyMMdd)の日付文字列</param>
            <returns>年(yyyy)部分の文字列。<paramref name="value"/>がAO標準フォーマット(yyyyMMdd)でない場合は 空 を返します。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.GetMonth(System.String)">
            <summary>
            対象のAO標準フォーマット(yyyyMMdd)の日付文字列から月(MM)部分を取得します。
            </summary>
            <param name="value">AO標準フォーマット(yyyyMMdd)の日付文字列</param>
            <returns>月(MM)部分の文字列。<paramref name="value"/>がAO標準フォーマット(yyyyMMdd)でない場合は 空 を返します。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.GetDay(System.String)">
            <summary>
            対象のAO標準フォーマット(yyyyMMdd)の日付文字列から日(dd)部分を取得します。
            </summary>
            <param name="value">AO標準フォーマット(yyyyMMdd)の日付文字列</param>
            <returns>日(dd)部分の文字列。<paramref name="value"/>がAO標準フォーマット(yyyyMMdd)でない場合は 空 を返します。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.GetYearMonth(System.String)">
            <summary>
            対象のAO標準フォーマット(yyyyMMdd)の日付文字列から年月(yyyyMM)部分を取得します。
            </summary>
            <param name="value">AO標準フォーマット(yyyyMMdd)の日付文字列</param>
            <returns>年月(yyyyMM)部分の文字列。<paramref name="value"/>がAO標準フォーマット(yyyyMMdd)でない場合は 空 を返します。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.IsLastDayOfMonth(System.String)">
            <summary>
            対象のAO標準フォーマット(yyyyMMdd)の日付文字列が月末日(99)を表すかどうかを返します。
            </summary>
            <param name="value">AO標準フォーマット(yyyyMMdd)の日付文字列</param>
            <returns>
            <paramref name="value"/>が月末日(99)を表す場合は true。それ以外の場合は false。<br />
            <paramref name="value"/>がAO標準フォーマット(yyyyMMdd)でない場合は false を返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.DateMatch(System.String)">
            <summary>
            指定された文字列に対して <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.REG_AODATE"/> による検索を行います。 
            </summary>
            <param name="value">対象文字列</param>
            <returns>検索結果</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.LastDayOfMonth">
            <summary>
            月末日を表す文字列を取得します。
            </summary>
            <value>月末日を表す文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DateValue.RegexToParseDateString">
            <summary>
            日付文字をパースするための正規表現を取得します。
            </summary>
            <value>日付文字をパースするための正規表現</value>
            <remarks>
            $1 = 年<br />
            $2 = 月<br />
            $3 = 日<br />
            <br />
            で置換できます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DisposeExecuter">
            <summary>
            特定の後処理を実行するためのヘルパークラスです。
            </summary>
            <remarks>
            try～finally で行うような処理を using を用いて記述しやすくするためのヘルパークラスです。
            </remarks>
            <example>
            <code>
            using (new DisposeExecuter(() => { 任意の後処理 }))
            { 任意の処理 }
            </code>
            という記述は、
            <code>
            try { 任意の処理 }
            finally { 任意の後処理 }
            </code>
            という記述と等価です。
            </example>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DisposeExecuter._action">
            <summary>
            オブジェクトが破棄される時の実行する後処理のデリゲートです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DisposeExecuter.#ctor(System.Action)">
            <summary>
            指定した後処理を行う <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DisposeExecuter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="action">オブジェクトが破棄される時に実行する後処理のデリゲート</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.DisposeExecuter.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.AoEncryptor">
            <summary>
            データを暗号化、復号化するためのクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.AoEncryptor.ENCRYPT_SALT_KEY">
            <summary>
            SALTキーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.AoEncryptor.DECRYPT_KEY">
            <summary>
            暗号化、及び、復号化のキーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.AoEncryptor.ENCRYPT_SALT_ITERATION_NUM">
            <summary>
            SALT反復回数を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.AoEncryptor.Encrypt(System.Byte[],System.String)">
            <summary>
            対象のデータを指定したパスワードで暗号化します。
            </summary>
            <param name="source">暗号化するデータ</param>
            <param name="password">暗号化するためのパスワード</param>
            <returns>暗号化されたデータ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.AoEncryptor.Encrypt(System.String,System.String)">
            <summary>
            対象の文字列を指定したパスワードで暗号化します。
            </summary>
            <param name="source">暗号化する文字列</param>
            <param name="password">暗号化するためのパスワード</param>
            <returns>暗号化された文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.AoEncryptor.Decrypt(System.Byte[],System.String)">
            <summary>
            対象の暗号化データを指定したパスワードで復号化します。
            </summary>
            <param name="source">暗号化されたデータ</param>
            <param name="password">復号化するためのパスワード</param>
            <returns>復号化されたデータ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.AoEncryptor.Decrypt(System.String,System.String)">
            <summary>
            対象の暗号化文字列を指定したパスワードで復号化します。
            </summary>
            <param name="source">暗号化された文字列</param>
            <param name="password">復号化するためのパスワード</param>
            <returns>復号化された文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.AoEncryptor.GetRijndaelManaged(System.String)">
            <summary>
            指定したパスワードから共有キーと初期化ベクタを生成します。
            </summary>
            <param name="password">基になるパスワード</param>
            <returns>生成された共有キーと初期化ベクタを持つ <see cref="T:System.Security.Cryptography.RijndaelManaged"/> オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.AoEncryptor.Md5(System.String)">
            <summary>
            対象の文字列を、UTF8でエンコードした際のMD5ハッシュ値を計算します。
            </summary>
            <param name="source">MD5ハッシュ値を計算する文字列</param>
            <returns>MD5ハッシュ値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.AoEncryptor.Md5(System.String,System.Text.Encoding)">
            <summary>
            対象の文字列を、指定した文字エンコーディングでエンコードした際のMD5ハッシュ値を計算します。
            </summary>
            <param name="source">MD5ハッシュ値を計算する文字列</param>
            <param name="encoding">文字エンコーディング</param>
            <returns>MD5ハッシュ値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.AoEncryptor.Md5(System.Byte[])">
            <summary>
            対象のバイナリ情報のMD5ハッシュ値を計算します。
            </summary>
            <param name="source">MD5ハッシュ値を計算するバイナリ情報</param>
            <returns>MD5ハッシュ値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.AoEncryptor.Md5(System.IO.Stream)">
            <summary>
            対象の <see cref="T:System.IO.Stream"/> オブジェクトのMD5ハッシュ値を計算します。
            </summary>
            <param name="source">MD5ハッシュ値を計算する対象の入力データ</param>
            <returns>MD5ハッシュ値</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.GenericComparer`1">
            <summary>
            汎用的に使用できる <see cref="T:System.Collections.Generic.IComparer`1"/> 実装クラスです。
            </summary>
            <typeparam name="T">比較するオブジェクトの型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.GenericComparer`1.#ctor(System.Func{`0,`0,System.Int32})">
            <summary>
            指定した比較処理を行う <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.GenericComparer`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="func">比較処理のデリゲート</param>
            <remarks>
            <paramref name="func"/> の戻り値は以下のようになっている必要があります。<br/>
            ・第1引数のオブジェクトが、第2引数のオブジェクトより小さい場合は 0 より小さい値。<br/>
            ・第1引数のオブジェクトが、第2引数のオブジェクトと等しい場合は 0 。<br/>
            ・第1引数のオブジェクトが、第2引数のオブジェクトより大きい場合は 0 より大きい値。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.GenericComparer`1.Compare(`0,`0)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.GenericComparer`1.Make(System.Func{`0,`0,System.Int32})">
            <summary>
            指定した比較処理を行う <see cref="T:System.Collections.Generic.IComparer`1"/> オブジェクトを作成します。
            </summary>
            <param name="func">比較処理のデリゲート</param>
            <returns><see cref="T:System.Collections.Generic.IComparer`1"/> オブジェクト</returns>
            <remarks>
            <paramref name="func"/> の戻り値は以下のようになっている必要があります。<br/>
            ・第1引数のオブジェクトが、第2引数のオブジェクトより小さい場合は 0 より小さい値。<br/>
            ・第1引数のオブジェクトが、第2引数のオブジェクトと等しい場合は 0 。<br/>
            ・第1引数のオブジェクトが、第2引数のオブジェクトより大きい場合は 0 より大きい値。<br/>
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.GenericComparer`1.Func">
            <summary>
            比較処理のデリゲートを取得、設定します。
            </summary>
            <value>比較処理のデリゲート</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.GenericEqualityComparer`1">
            <summary>
            汎用的に使用できる <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> 実装クラスです。
            </summary>
            <typeparam name="T">比較するオブジェクトの型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.GenericEqualityComparer`1.#ctor(System.Func{`0,`0,System.Boolean},System.Func{`0,System.Int32})">
            <summary>
            指定した比較処理、及び、ハッシュコード計算処理を行う <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.GenericEqualityComparer`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="equalsFunc">比較処理のデリゲート</param>
            <param name="getHashCodeFunc">ハッシュコード計算処理のデリゲート</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.GenericEqualityComparer`1.Equals(`0,`0)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.GenericEqualityComparer`1.GetHashCode(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.GenericEqualityComparer`1.Make(System.Func{`0,`0,System.Boolean},System.Func{`0,System.Int32})">
            <summary>
            指定した比較処理、及び、ハッシュコード計算処理を行う <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> オブジェクトを作成します。
            </summary>
            <param name="equalsFunc">比較処理のデリゲート</param>
            <param name="getHashCodeFunc">ハッシュコード計算処理のデリゲート</param>
            <returns><see cref="T:System.Collections.Generic.IEqualityComparer`1"/> オブジェクト</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.GenericEqualityComparer`1.EqualsFunc">
            <summary>
            比較処理のデリゲートを取得、設定します。
            </summary>
            <value>比較処理のデリゲート</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.GenericEqualityComparer`1.GetHashCodeFunc">
            <summary>
            ハッシュコード計算処理のデリゲートを取得、設定します。
            </summary>
            <value>ハッシュコード計算処理のデリゲート</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Repeater">
            <summary>
            特定の処理を繰り返し実行するためのヘルパークラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Repeater.Func``1(System.Func{``0},System.Int32)">
            <summary>
            対象の処理を指定した回数だけ繰り返し実行します。
            </summary>
            <typeparam name="T">戻り値の型</typeparam>
            <param name="func">繰り返し実行する処理のデリゲート</param>
            <param name="count">実行回数</param>
            <returns>実行結果の列挙</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Repeater.Func``1(System.Func{System.Int32,``0},System.Int32)">
            <summary>
            対象の処理を指定した回数だけ繰り返し実行します。
            </summary>
            <typeparam name="T">戻り値の型</typeparam>
            <param name="func">インデックスを受け取って実行する処理のデリゲート</param>
            <param name="count">実行回数</param>
            <returns>実行結果の列挙</returns>
            <remarks><paramref name="func"/>の引数には、0 から <paramref name="count"/> - 1 までの値が順に渡されます。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Repeater.Action(System.Action,System.Int32)">
            <summary>
            対象の処理を指定した回数だけ繰り返し実行します。
            </summary>
            <param name="action">繰り返し実行する処理のデリゲート</param>
            <param name="count">実行回数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Repeater.Action(System.Action{System.Int32},System.Int32)">
            <summary>
            対象の処理を指定した回数だけ繰り返し実行します。
            </summary>
            <param name="action">インデックスを受け取って実行する処理のデリゲート</param>
            <param name="count">実行回数</param>
            <remarks><paramref name="action"/>の引数には、0 から <paramref name="count"/> - 1 までの値が順に渡されます。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Repeater.Make``1(``0[])">
            <summary>
            指定したオブジェクトを列挙して返します。
            </summary>
            <typeparam name="T">列挙する型</typeparam>
            <param name="items">列挙するオブジェクト群</param>
            <returns>列挙されたオブジェクト群</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression">
            <summary>
            文字列で簡易的に指定された式の計算を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.PARAMETER_SEPARATION_SYMBOLS">
            <summary>
            式文字列に含まれるパラメータ文字列の区切りの判断基準となる記号文字の正規表現パターンを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.SYSTEM_FILE_NAME">
            <summary>
            式文字列に含まれるシステム設定ファイルの参照値の判断基準となる文字列を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.USER_INFOMATION_FILE_NAME">
            <summary>
            式文字列に含まれるユーザー情報ファイルの参照値の判断基準となる文字列を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.ITEM_NAME_FILE_NAME">
            <summary>
            式文字列に含まれる項目名ファイルの参照値の判断基準となる文字列を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.SYSTEM_MACRO_NAME">
            <summary>
            式文字列に含まれるシステム設定マクロファイルの参照値の判断基準となる文字列を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.IIF_STRING">
            <summary>
            条件判定式のメソッド名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.AND_STRING">
            <summary>
            AND演算子を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.OR_STRING">
            <summary>
            OR演算子を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.LIKE_STRING">
            <summary>
            LIKE演算子を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.IN_STRING">
            <summary>
            IN演算子を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.CEILING_STRING">
            <summary>
            数値の切り上げのメソッド名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.FLOOR_STRING">
            <summary>
            数値の切り捨てのメソッド名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.ROUND_STRING">
            <summary>
            数値の四捨五入のメソッド名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.DIVISION_STRING">
            <summary>
            数値の除算のメソッド名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.#ctor(System.Data.DataTable)">
            <summary>
            指定した <see cref="T:System.Data.DataTable"/> で計算処理を行う <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">計算処理を行うための <see cref="T:System.Data.DataTable"/> オブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.GetDigitValue(System.Int32)">
            <summary>
            指定した桁数の10の累乗値を取得します。
            </summary>
            <param name="digit">桁数</param>
            <returns>10の累乗値</returns>
            <remarks>
            10 ^ digit が返されます。<br />
            計算の過程で小数点位置を変更する際などに使用します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Ceiling(System.Decimal,System.Int32)">
            <summary>
            対象の数値を、指定した小数桁数になるよう切り上げます。
            </summary>
            <param name="value">切り上げ対象の数値</param>
            <param name="digit">小数桁数</param>
            <returns>指定した小数桁数の切り上げ値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Floor(System.Decimal,System.Int32)">
            <summary>
            対象の数値を、指定した小数桁数になるよう切り捨てます。
            </summary>
            <param name="value">切り捨て対象の数値</param>
            <param name="digit">小数桁数</param>
            <returns>指定した小数桁数の切り捨て値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Round(System.Decimal,System.Int32)">
            <summary>
            対象の数値を、指定した小数桁数になるよう四捨五入します。
            </summary>
            <param name="value">四捨五入対象の数値</param>
            <param name="digit">小数桁数</param>
            <returns>指定した小数桁数の四捨五入値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Division(System.Decimal,System.Decimal)">
            <summary>
            除算を行います。
            </summary>
            <param name="value1">被除数</param>
            <param name="value2">除数</param>
            <returns>除数 <paramref name="value2"/> が 0 の場合でない場合は商。0 の場合は 0。</returns>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.DEFAULT_TABLE">
            <summary>
            静的メソッドで簡易式の計算処理を行うための既定の <see cref="T:System.Data.DataTable"/> オブジェクトです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Eval``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            指定したパラメータやシステム設定値などを用いて対象の式文字列の計算を行い、指定した型に変換します。
            </summary>
            <typeparam name="T">計算結果の変換先の型</typeparam>
            <param name="expression">計算対象の式文字列</param>
            <param name="parameters">式文字列の置換用パラメータ</param>
            <returns>計算結果の変換値</returns>
            <remarks>
            <paramref name="parameters"/> が指定された場合、<paramref name="expression"/> 内の対応する文字列を置換した上で計算します。<br />
            また、<paramref name="expression"/> 内でシステム設定値等の参照が含まれる場合はそれらも置換した上で計算します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.TryEval``1(``0@,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            指定したパラメータやシステム設定値などを用いて対象の式文字列の計算を行い、指定した型への変換を試みます。
            </summary>
            <typeparam name="T">計算結果の変換先の型</typeparam>
            <param name="result">計算処理、及び、変換処理が正常に行われた場合に、計算結果の変換値を格納します。</param>
            <param name="expression">計算対象の式文字列</param>
            <param name="parameters">式文字列の置換用パラメータ</param>
            <returns>計算処理、及び、変換処理が正常に行われた場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="parameters"/> が指定された場合、<paramref name="expression"/> 内の対応する文字列を置換した上で計算します。<br />
            また、<paramref name="expression"/> 内でシステム設定値等の参照が含まれる場合はそれらも置換した上で計算します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Create(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            対象の式文字列の計算を行う <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression"/> オブジェクトを生成します。
            </summary>
            <param name="expression">計算対象の式文字列</param>
            <param name="parameters">式文字列の置換用パラメータ</param>
            <returns>計算を行うための <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression"/> オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Create(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Data.DataTable)">
            <summary>
            対象の式文字列の計算を、指定した <see cref="T:System.Data.DataTable"/> を用いて行う <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression"/> オブジェクトを生成します。
            </summary>
            <param name="expression">計算対象の式文字列</param>
            <param name="parameters">式文字列の置換用パラメータ</param>
            <param name="table">計算処理を行うための <see cref="T:System.Data.DataTable"/> オブジェクト</param>
            <returns>計算を行うための <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression"/> オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Get``1(System.String)">
            <summary>
            対象の式文字列の計算を行った結果を、指定した型に変換した値を取得します。
            </summary>
            <typeparam name="T">計算結果の変換先の型</typeparam>
            <param name="expression">計算対象の式文字列</param>
            <returns>計算結果の変換値</returns>
            <remarks>
            <paramref name="expression"/> はシステム設定値の参照等の置換処理を事前に行ったものを指定してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Get(System.String)">
            <summary>
            対象の式文字列の計算を行った結果を取得します。
            </summary>
            <param name="expression">計算対象の式文字列</param>
            <returns>計算結果の値</returns>
            <remarks>
            <paramref name="expression"/> はシステム設定値の参照等の置換処理を事前に行ったものを指定してください。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SimpleExpressionComputeException">計算処理で何らかのエラーが発生した場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Eval">
            <summary>
            現在指定されている式文字列の計算を行います。
            </summary>
            <returns>計算結果の値</returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Parameters"/> が設定されている場合、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Expression"/> 内の対応する文字列を置換した上で計算します。<br/>
            また、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Expression"/> 内でシステム設定値等の参照が含まれる場合はそれらも置換した上で計算します。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.SimpleExpressionComputeException">
            パラメータやシステム設定値等の参照の置換処理や計算処理で何らかのエラーが発生した場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Simplify(System.String)">
            <summary>
            対象の式文字列に含まれる改行、タブ文字、連続スペース文字等をスペース文字に置換して1行に単純化します。
            </summary>
            <param name="expression">単純化対象の式文字列</param>
            <returns>単純化された式文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.ReplaceParameters(System.String)">
            <summary>
            対象の式文字列に含まれるパラメータ文字列を、値に置き換えます。
            パラメータは <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Parameters"/> プロパティで指定します。
            </summary>
            <param name="expression">置換対象の式文字列</param>
            <returns>置換された式文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.ReplaceSystemValue(System.String)">
            <summary>
            対象の式文字列に含まれるシステム設定値への参照を、値に置き換えます。
            </summary>
            <param name="value">置換対象の式文字列</param>
            <returns>置換された式文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.MatchEvaluate(System.Text.RegularExpressions.Match)">
            <summary>
            システム設定値への参照を示す正規表現パターンに一致した結果に対して、対応するシステム設定値への置換処理を施して返します。
            </summary>
            <param name="match">システム設定値への参照パターンの一致結果</param>
            <returns>システム設定値に置換された文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.ReplaceCustomIifMethod(System.String)">
            <summary>
            対象の式文字列に含まれる条件判定式部分を、その評価結果に置き換えます。
            </summary>
            <param name="expression">置換対象の式文字列</param>
            <returns>置換された式文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.ReplaceCustomMethod(System.String)">
            <summary>
            対象の式文字列に含まれる数値計算式部分を、その計算結果に置き換えます。
            </summary>
            <param name="expression">置換対象の式文字列</param>
            <returns>置換された式文字列</returns>
            <remarks>
            切り上げ、切り捨て、四捨五入、除算の各数値計算式に対応します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression._table">
            <summary>
            計算処理に使用する <see cref="T:System.Data.DataTable"/> オブジェクトです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.ReplaceMethod(System.String,System.String)">
            <summary>
            対象の式文字列に含まれる指定したパターンに一致する部分式文字列を、その計算結果に置き換えます。
            </summary>
            <param name="expression">置換対象の式文字列</param>
            <param name="pattern">部分式文字列を抽出する正規表現パターン</param>
            <returns>置換された式文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.MethodEvaluator(Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.MethodInfo)">
            <summary>
            対象の部分式の計算結果を取得します。
            </summary>
            <param name="info">部分式情報</param>
            <returns>部分式の計算結果</returns>
            <remarks>
            条件評価式、及び、切り上げ、切り捨て、四捨五入、除算の各数値計算式に対応します。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">部分式に、対応していないメソッドが使用されている場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.ExtractFields(System.String)">
            <summary>
            対象の式文字列に含まれるフィールド文字列(データフィールド、パラメータ etc.)を抽出します。<br />
            演算子、演算メソッド、システム設定、ユーザー設定、項目名、リテラルと判断できるものは除去します。
            </summary>
            <param name="expression">式文字列</param>
            <returns>式文字列に含まれるフィールド文字列(データフィールド、パラメータ etc.)</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Expression">
            <summary>
            計算対象の式文字列を取得、設定します。
            </summary>
            <value>計算対象の式文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.Parameters">
            <summary>
            式文字列の置換用パラメータを取得、設定します。
            </summary>
            <value>式文字列の置換用パラメータ</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.MethodInfo">
            <summary>
            式文字列に含まれる部分式情報を管理するクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.MethodInfo.#ctor(System.String,System.Int32)">
            <summary>
            対象の式文字列の指定した位置から始まる部分式の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.MethodInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="expression">対象式文字列</param>
            <param name="index">部分式文字列の開始位置</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.MethodInfo.Index">
            <summary>
            部分式の開始位置を取得します。
            </summary>
            <value>部分式の開始位置</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.MethodInfo.Count">
            <summary>
            部分式の文字数を取得します。
            </summary>
            <value>部分式の文字数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.MethodInfo.MethodName">
            <summary>
            部分式のメソッド名を取得します。
            </summary>
            <value>部分式のメソッド名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.SimpleExpression.MethodInfo.Args">
            <summary>
            部分式のメソッド引数を取得します。
            </summary>
            <value>部分式のメソッド引数</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Tasks.LimitedConcurrencyLevelTaskScheduler">
            <summary>
            同時実行数を制御するための<see cref="T:System.Threading.Tasks.TaskScheduler"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Tasks.LimitedConcurrencyLevelTaskScheduler.#ctor(System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Tasks.LimitedConcurrencyLevelTaskScheduler"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="maximumConcurrencyLevel">最大同時実行数</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Tasks.LimitedConcurrencyLevelTaskScheduler._currentThreadProcessing">
            <summary>
            カレントスレッドが実行中かどうかを取得します。
            </summary>
            <value>カレントスレッドで実行中の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Tasks.LimitedConcurrencyLevelTaskScheduler._maximumConcurrencyLevel">
            <summary>
            最大同時実行数を取得します。
            </summary>
            <value>最大同時実行数</value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Tasks.LimitedConcurrencyLevelTaskScheduler._tasks">
            <summary>
            管理するタスクの一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Tasks.LimitedConcurrencyLevelTaskScheduler.QueueTask(System.Threading.Tasks.Task)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Tasks.LimitedConcurrencyLevelTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Tasks.LimitedConcurrencyLevelTaskScheduler.TryDequeue(System.Threading.Tasks.Task)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Tasks.LimitedConcurrencyLevelTaskScheduler.GetScheduledTasks">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Tasks.LimitedConcurrencyLevelTaskScheduler.NotifyThreadPoolOfPendingWork">
            <summary>
            実行すべき作業があることをスレッドプールに通知します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Tasks.LimitedConcurrencyLevelTaskScheduler.MaximumConcurrencyLevel">
            <summary>
            最大同時実行レベルを取得します。
            </summary>
            <value>最大同時実行レベル</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Tasks.LimitedConcurrencyLevelTaskScheduler.RunningOrWaitCount">
            <summary>
            実行中と待機中の件数を取得、設定します。
            </summary>
            <value>実行中と待機中の件数</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TitleFormatter">
            <summary>
            画面のタイトルをフォーマットするクラスです。
            </summary>
            <remarks>
            タイトルフォーマット形式("{ラベル}")を処理します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TitleFormatter.REPLACE_REGEX_PATTERN">
            <summary>
            置き換え正規表現パターン文字列です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TitleFormatter.GetFormattedTitleText(System.String,System.String)">
            <summary>
            指定のフォーマットでフォーマットを行ったタイトル文字列を取得します。
            </summary>
            <param name="format">フォーマット</param>
            <param name="source">フォーマット元テキスト</param>
            <returns>フォーマット後の文字列</returns>
            <remarks>
            <paramref name="format"/> がブランクの場合は<paramref name="source"/> をそのまま返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TitleFormatter.MatchEvaluator(System.Text.RegularExpressions.Match)">
            <summary>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TitleFormatter.REPLACE_REGEX_PATTERN"/> に一致した文字列を置換します。
            </summary>
            <param name="match">一致した文字列</param>
            <returns>置換した文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TitleFormatter.GetFormattedTitleText(System.String)">
            <summary>
            指定のフォーマットでフォーマットを行ったタイトル文字列を取得します。
            </summary>
            <param name="format">フォーマット</param>
            <returns>フォーマット後の文字列</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.MutexHelper">
            <summary>
            ミューテックス用のヘルパクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Threading.MutexHelper.CreateMutex(System.String)">
            <summary>
            ミューテックスを作成します。
            </summary>
            <param name="lockId">ロックする識別文字列</param>
            <returns>ミューテックス</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ExecuteType">
            <summary>
            メニュー項目の実行方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ExecuteType.Menu">
            <summary>
            メニュー
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ExecuteType.Exe">
            <summary>
            実行ファイル
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ExecuteType.Web">
            <summary>
            WEB起動
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.SecurityFlags">
            <summary>
            プログラムの実行権限を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.SecurityFlags.None">
            <summary>
            すべて不許可
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.SecurityFlags.Using">
            <summary>
            使用権限あり
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.SecurityFlags.Update">
            <summary>
            登録権限あり
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.SecurityFlags.Delete">
            <summary>
            削除権限あり
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.SecurityFlags.Print">
            <summary>
            印刷権限あり
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.SecurityFlags.All">
            <summary>
            すべて許可
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule">
            <summary>
            明細用サブプログラム(サブ画面)のデータ、及び、ロジックを管理するオブジェクトの基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule">
            <summary>
            サブプログラム(サブ画面)のデータ、及び、ロジックを管理するオブジェクトの基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase">
            <summary>
            プログラム(画面)のデータ、及び、ロジックを管理するオブジェクトの基底クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.DEFAULT_NAME">
            <summary>
            既定のインスタンス識別名です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.#ctor">
            <summary>
            既定のインスタンス識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase._security">
            <summary>
            プログラムの実行権限情報です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnSecurityChanged">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.SecurityChanged"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InitializeSecurity">
            <summary>
            最新のセキュリティ設定を取得し、権限情報を初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase._dbConnection">
            <summary>
            データベースコネクションです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase._dbSection">
            <summary>
            データベース接続セクションです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.DbSection_Disposed(System.Object,System.EventArgs)">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.DbSection"/> の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.Disposed"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InitializeDbConnection">
            <summary>
            データベースコネクションを初期化します。
            </summary>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnDbConnectionInitialized"/> メソッドを実行して
            イベントを発生させて下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InitializeDbValues">
            <summary>
            データベースコネクションの既定値設定を初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnDbConnectionInitialized">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.DbConnectionInitialized"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InstanciateEntities">
            <summary>
            管理対象エンティティの格納用ディクショナリを生成します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InitializeEntities">
            <summary>
            管理対象エンティティ設定を初期化します。
            </summary>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnEntitiesInitialized"/> メソッドを実行して
            イベントを発生させて下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InitializeEntitiesMain">
            <summary>
            管理対象エンティティ設定の初期化処理を実行します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Entities"/> プロパティに要素を追加して 初期化します。<br/>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InitializeEntities"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行後の
            適切なタイミングで、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnEntitiesInitialized"/> メソッドを呼び出すようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnEntitiesInitialized">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.EntitiesInitialized"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InstanciateFunctions">
            <summary>
            実行対象ファンクションの格納用ディクショナリを生成します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InitializeFunctions">
            <summary>
            実行対象ファンクション設定の初期化を行います。
            </summary>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnFunctionsInitialized"/> メソッドを実行して
            イベントを発生させて下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InitializeFunctionsMain">
            <summary>
            実行対象ファンクション設定の初期化処理を実行します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Functions"/> プロパティに要素を追加して 初期化します。<br/>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InitializeFunctions"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行後の
            適切なタイミングで、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnFunctionsInitialized"/> メソッドを呼び出すようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnFunctionsInitialized">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.FunctionsInitialized"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.SetFunction(System.String,Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem)">
            <summary>
            ファンクションメソッドの登録処理を行います。
            </summary>
            <param name="name">ファンクション名</param>
            <param name="func">ファンクションメソッド管理オブジェクト</param>
            <remarks>
            同名のファンクションメソッド情報が既に登録されている場合は、置き換えます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.SetFunction(System.String,System.Func{System.Object,System.Boolean},System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable)">
            <summary>
            ファンクションメソッドの登録処理を行います。
            </summary>
            <param name="name">ファンクション名</param>
            <param name="method">ファンクションメソッド本体</param>
            <param name="autoSuspend">
            <paramref name="method"/> の実行前後に、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> の制御を自動的に行う場合は true。それ以外の場合は false。
            </param>
            <param name="suspendee">
            <paramref name="autoSuspend"/> が true の場合に、<paramref name="method"/> の実行前後に制御する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> を指定します。<br/>
            <paramref name="autoSuspend"/> が true 、かつ、<paramref name="suspendee"/> が null の場合は、本クラスのインスタンスが指定されます。<br/>
            </param>
            <remarks>
            同名のファンクションメソッド情報が既に登録されている場合は、置き換えます。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase._dataEvent">
            <summary>
            データ変更イベント処理オブジェクトオブジェクトです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InstanciateDataEventHandler">
            <summary>
            データ変更イベントハンドラ管理オブジェクトを生成します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InitializeDataEventHandler">
            <summary>
            データ変更イベントハンドラ管理オブジェクトの初期化を行います。
            </summary>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnDataEventInitialized"/> メソッドを実行して
            イベントを発生させて下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InitializeDataEventHandlerMain">
            <summary>
            データ変更イベントハンドラ管理オブジェクトの初期化処理を実行します。
            </summary>
            <remarks>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InitializeDataEventHandler"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行後の
            適切なタイミングで、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnDataEventInitialized"/> メソッドを呼び出すようにして下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnDataEventChanged">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.DataEventChanged"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnDataEventInitialized">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.DataEventInitialized"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnPosted">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Posted"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Post(Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs)">
            <inheritdoc/>
            <remarks>
            継承先においてoverrideする場合、<see cref="T:System.Exception"/> をキャッチし、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ReplaceOutOfMemoryException(System.Exception)"/> 
            を実行するようにして下さい。<br/>
            また、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnPosted"/> メソッドを実行してイベントを発生させて下さい。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.PostMain(Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs)">
            <summary>
            別モジュールから要求された処理を実行します。
            </summary>
            <param name="e">モジュール間引数</param>
            <returns>正常に処理された場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.GetEntity(System.String)">
            <summary>
            指定した名前のエンティティを取得します。
            </summary>
            <param name="entityName">
            取得するエンティティ名。<br/>
            エンティティ名 = プロパティ名 であるプロパティの get メソッド内からの実行時のみ省略可能です。
            </param>
            <returns>エンティティ</returns>
            <remarks>
            継承クラスにて override する場合は、<paramref name="entityName"/> に対して、必ず <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/> の
            設定を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.GetEntity``1(System.String)">
            <summary>
            指定した名前のエンティティを指定した型で取得します。
            </summary>
            <typeparam name="TEntity">取得するエンティティの型</typeparam>
            <param name="entityName">
            取得するエンティティ名。<br/>
            エンティティ名 = プロパティ名 であるプロパティの get メソッド内からの実行時のみ省略可能です。
            </param>
            <returns>エンティティ</returns>
            <remarks>
            継承クラスにて override する場合は、<paramref name="entityName"/> に対して、必ず <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/> の
            設定を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnFunctionExecuting(Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionExecutingEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.FunctionExecuting"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnFunctionExecuted(Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionExecutedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.FunctionExecuted"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.ExecuteFunction(System.String,System.Object)">
            <inheritdoc/>
            <remarks>
            継承先においてoverrideする場合、<see cref="T:System.Exception"/> をキャッチし、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.ReplaceOutOfMemoryException(System.Exception)"/> 
            を実行するようにして下さい。<br/>
            また、必要に応じて、適切なタイミングで <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnFunctionExecuting(Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionExecutingEventArgs)"/> 、及び、
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnFunctionExecuted(Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionExecutedEventArgs)"/> の各メソッドを実行してイベントを発生させて下さい。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase._errorObserver">
            <summary>
            データ変更イベントエラーの発生監視用オブジェクトです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.BeginErrorObservation">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.EndErrorObservation">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.GetErrorsOnObservation">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnResponseNeeded(Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.ResponseNeededEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.ResponseNeeded"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.GetResponse(Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.ResponseNeededEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.GetResponse``1(Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.ResponseNeededEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.GetResponse``1(System.String,Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.IActionArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.IsHoldingStackPropertyChanged">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.SetRefreshNeeded">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnPropertyValueChanged(System.String,System.Object,System.Object)">
            <summary>
            複数プロパティ一括変更イベント通知を行います。
            </summary>
            <param name="propName">公開プロパティ名</param>
            <param name="oldValue">変更前の値</param>
            <param name="newValue">変更後の値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnPropertyErrorChanged(System.String,System.Object)">
            <summary>
            エラー情報変更時に複数プロパティ一括変更イベント通知を行います。
            </summary>
            <param name="propName">公開プロパティ名</param>
            <param name="currentValue">変更前の値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnPropertyWariningChanged(System.String,System.Object)">
            <summary>
            警告情報変更時に複数プロパティ一括変更イベント通知を行います。
            </summary>
            <param name="propName">公開プロパティ名</param>
            <param name="currentValue">変更前の値</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase._stackPropertyChangedEventHelper">
            <summary>
            複数プロパティ変更一括通知イベント処理ヘルパーです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InstanciateSources">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InitializeSourcesMain">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Sources_DataChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Sources_ValidationErrorChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Sources_ValidationWarningChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InitializeMain">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnDataValueChanged(System.String,System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnValidationErrorChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.OnValidationWarningChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.PushValue(System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Reset(System.Boolean)">
            <inheritdoc/>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase"/> からは <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Reset(System.Boolean)"/> オーバーロードを必ず呼んでほしいので、
            <see cref="T:System.ComponentModel.BrowsableAttribute"/>、及び、<see cref="T:System.ComponentModel.EditorBrowsableAttribute"/> で隠します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.ResetMain">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.GetSuspendees">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.BeginEdit">
            <inheritdoc/>
            <remarks>
            継承クラスにおいて override し、このクラスのメソッドを呼び出さない( base.BeginEdit() しない)場合は、
            適切なタイミングで <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.StackPropertyChangedEventHelper"/> の <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable.BeginEdit"/> メソッドを呼び出してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Rollback">
            <inheritdoc/>
            <remarks>
            継承クラスにおいて override し、このクラスのメソッドを呼び出さない( base.Rollback() しない)場合は、
            適切なタイミング(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsSuspended"/> を false にした後)で <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.StackPropertyChangedEventHelper"/> の 
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable.Rollback"/> メソッドを呼び出してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Commit">
            <inheritdoc/>
            <remarks>
            継承クラスにおいて override し、このクラスのメソッドを呼び出さない( base.Commit() しない)場合は、
            適切なタイミング(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.IsSuspended"/> を false にした後)で <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.StackPropertyChangedEventHelper"/> の 
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable.Commit"/> メソッドを呼び出してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.LoadDebugData(Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebugData)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Security">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.SecurityChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.DbConnection">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.DbSection">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.DbConnectionInitialized">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Entities">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.EntitiesInitialized">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Functions">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.FunctionsInitialized">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.DataEvent">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.DataEventChanged">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.DataEventInitialized">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.CreatingArgs">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Posted">
            <summary>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.Post(Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs)"/> 処理が完了した際に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.FunctionExecuting">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.FunctionExecuted">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.ErrorObserver">
            <summary>
            データ変更イベントエラーの発生監視用オブジェクトを取得、設定します。
            </summary>
            <value>データ変更イベントエラーの発生監視用オブジェクト</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.ResponseNeeded">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.StackPropertyChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.StackPropertyChangedEventHelper">
            <summary>
            複数プロパティ変更一括通知イベント処理ヘルパーオブジェクトを取得します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.ISubModule">
            <summary>
            サブプログラム(サブ画面)用のデータ、及び、ロジックを管理する機能を提供するインターフェースです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.ISubModule.MasterModule">
            <summary>
            親プログラムモジュールを取得、設定します。
            </summary>
            <value>親プログラムモジュール</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.ISubModule.IsChanged">
            <summary>
            サブプログラム起動後、データの変更が行われたかどうかを取得します。
            </summary>
            <value>データの変更が行われた場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.ISubModule.IsCommitted">
            <summary>
            サブプログラムが、変更を確定して終了されたかどうかを取得、設定します。
            </summary>
            <value>変更が確定された場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.ISubModule.ReturnValues">
            <summary>
            親プログラムへの戻り値を取得、設定します。
            </summary>
            <value>親プログラムへの戻り値</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.InitializeDbConnection">
            <inheritdoc/>
            <remarks>
            何もしません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.InitializeDbValues">
            <inheritdoc/>
            <remarks>
            何もしません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.InitializeSecurity">
            <inheritdoc/>
            <remarks>
            何もしません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.OnMasterModuleChanged">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.MasterModuleChanged"/> イベントを発生させます。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule._masterModule">
            <summary>
            親プログラムモジュールです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.Security">
            <inheritdoc/>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.MasterModule"/> の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.Security"/> を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.DbConnection">
            <inheritdoc/>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.MasterModule"/> の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.DbConnection"/> を返します。
            </remarks>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.MasterModuleChanged">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.MasterModule"/> が変更されたときに発生します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.MasterModule">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.IsChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.IsCommitted">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.ReturnValues">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.ISubDetailModule">
            <summary>
            特定の明細に紐づくサブプログラム(サブ画面)のデータ、及び、ロジックを管理する機能を提供するインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.ISubDetailModule.GetParentDetail">
            <summary>
            親プログラムで対応する明細を取得します。
            </summary>
            <returns>親プログラムで対応する明細</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.ISubDetailModule.DetailCollectionName">
            <summary>
            親プログラムの明細コレクション名を取得、設定します。
            </summary>
            <value>親プログラムの明細コレクション名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.ISubDetailModule.Index">
            <summary>
            親プログラムの明細コレクション内で対応するインデックスを取得、設定します。
            </summary>
            <value>親プログラムの明細コレクション内で対応するインデックス</value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule._detailCollectionName">
            <summary>
            親プログラムの明細コレクション名です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule.GetParentDetailCollection">
            <summary>
            親プログラムの明細コレクションを取得します。
            </summary>
            <returns>親プログラムの明細コレクション</returns>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule._detailIndex">
            <summary>
            親プログラムの明細コレクション内で対応するインデックスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule._detail">
            <summary>
            親プログラムで対応する明細です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule.GetParentDetail">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule.SetParentDetail">
            <summary>
            親プログラムで対応する明細を検索して保持します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule.MasterModule">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule.DetailCollectionName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule.Index">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule`4">
            <summary>
            明細用サブプログラム(サブ画面)のデータ、及び、ロジックを管理するオブジェクトの基底のジェネリッククラスです。
            </summary>
            <typeparam name="TMaster"><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.ISubModule.MasterModule"/>の型</typeparam>
            <typeparam name="TDetailCollection">親プログラムの明細コレクションの型</typeparam>
            <typeparam name="TDetail">親プログラムの明細の型</typeparam>
            <typeparam name="TDataEvent"><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.DataEvent"/>の元となる型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule`4.#ctor">
            <summary>
            既定のインスタンス識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule`4"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule`4.GetParentDetailCollection">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule.GetParentDetailCollection"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule`4.GetParentDetail">
            <inheritdoc cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule.GetParentDetail"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule`4.InstanciateDataEventHandler">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule`4.MasterModule">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule.MasterModule"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubDetailModule`4.DataEvent">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.DataEvent"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule`2">
            <summary>
            サブプログラム(サブ画面)のデータ、及び、ロジックを管理するオブジェクトの基底のジェネリッククラスです。
            </summary>
            <typeparam name="TMaster"><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.ISubModule.MasterModule"/>の型</typeparam>
            <typeparam name="TDataEvent"><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.DataEvent"/>の元となる型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule`2.#ctor">
            <summary>
            既定のインスタンス識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule`2"/> クラスの新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule`2.InstanciateDataEventHandler">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule`2.MasterModule">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule.MasterModule"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.AbstractSubModule`2.DataEvent">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.DataEvent"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionAttribute">
            <summary>
            対象のメソッドがファンクション処理用のメソッドであることを示すためのカスタム属性クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionAttribute.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクトの制御を自動的に行うよう指定して <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionAttribute.#ctor(System.Boolean)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクトの制御を自動的に行うかどうかを指定して <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="autoSuspend">
            ファンクションメソッド実行前後に <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクト(通常は、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule"/>)
            の制御を自動的に行う場合は true。それ以外の場合は false。<br/>
            なお、true に設定しても、本属性が付与されているメソッドの定義されているクラスが <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> でない場合には無効です。
            </param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionAttribute.AutoSuspend">
            <summary>
            ファンクションメソッド実行前後に <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクト(通常は、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule"/>)
            の制御を自動的に行うかどうかを取得、設定します。
            </summary>
            <value>
            ファンクションメソッド実行前後に <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクト(通常は、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule"/>)
            の制御を自動的に行う場合は true。それ以外の場合は false。<br/>
            なお、true に設定しても、本属性が付与されているメソッドの定義されているクラスが <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> でない場合には無効です。
            </value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionExecutorAttribute">
            <summary>
            対象のクラスがファンクション処理の実装クラスであることを示すためのカスタム属性クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionExecutorAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            ファンクション名と入力データの検証が必要かどうかを指定して、 <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionExecutorAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">ファンクション名</param>
            <param name="isValidationNeeded">ファンクション実行前に入力データの検証が必要な場合は true。不要な場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionExecutorAttribute.#ctor(System.String)">
            <summary>
            指定したファンクション名の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionExecutorAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">ファンクション名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionExecutorAttribute.GetAttribute(System.Type)">
            <summary>
            指定した型のクラスに付与されている <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionExecutorAttribute"/> 属性を検索して取得します。
            </summary>
            <param name="t"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionExecutorAttribute"/> 属性を検索する型</param>
            <returns><paramref name="t"/> に <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionExecutorAttribute"/> 属性が付与されている場合はその属性値。それ以外の場合は null。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionExecutorAttribute.Name">
            <summary>
            ファンクション名を取得、設定します。
            </summary>
            <value>ファンクション名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionExecutorAttribute.IsValidationNeeded">
            <summary>
            ファンクション実行前に入力データの検証が必要かどうかを取得、設定します。
            </summary>
            <value>ファンクション実行前に入力データの検証が必要な場合は true。不要な場合は false。未定の場合は null。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute">
            <summary>
            対象のプロパティがUI側へ公開されているプロパティであることを示すためのカスタム属性クラスです。
            </summary>
            <seealso cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SourceAttribute"/>
            <seealso cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IOpenProperty"/>
            <seealso cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IOpenUIProperty"/>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.DefaultValueProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.DefaultValue"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.SourceNameProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.SourceName"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.SourceMemberNameProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.SourceMemberName"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.IsNecessaryProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.IsNecessary"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.IgnoreErrorsProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.IgnoreErrors"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.IgnoreWarningsProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.IgnoreWarnings"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.ItemAttributeNameProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.ItemAttributeName"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.TableNameProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.TableName"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.ConverterTypeProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.ConverterType"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.ConverterParametersProperty">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.ConverterParameters"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.#ctor(System.String,System.String)">
            <summary>
            指定したオブジェクト、及び、メンバー名にバインディングされる <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="sourceName">バインディングする値の参照元オブジェクト名</param>
            <param name="memberName">バインディングする値の参照元オブジェクト名のメンバー名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.CreateConverter">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.ConverterType"/> プロパティ、及び、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.ConverterParameters"/> プロパティの設定に従って、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> オブジェクトを生成します。
            </summary>
            <returns>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.ConverterType"/> プロパティが設定されている場合は、生成された <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> を、
            他の場合は null を、
            それぞれ返します。
            </returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.DefaultValue">
            <summary>
            公開プロパティの既定値を取得、設定します。
            </summary>
            <value>公開プロパティの既定値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.SourceName">
            <summary>
            バインディングする値の参照元オブジェクト名を取得、設定します。
            </summary>
            <value>バインディングする値の参照元オブジェクト名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.SourceMemberName">
            <summary>
            バインディングする値の参照元オブジェクトのメンバー名を取得、設定します。
            </summary>
            <value>バインディングする値の参照元オブジェクトのメンバー名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.IsNecessary">
            <summary>
            標準で入力必須かどうかを取得、設定します。
            </summary>
            <value>標準で入力必須の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.IgnoreErrors">
            <summary>
            データ変更イベントのエラーを無視するかどうかを取得、設定します。
            </summary>
            <value>データ変更イベントのエラーを無視する場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.IgnoreWarnings">
            <summary>
            データ変更イベントの警告を無視するかどうかを取得、設定します。
            </summary>
            <value>データ変更イベントの警告を無視する場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.ItemAttributeName">
            <summary>
            対応する項目属性の名前を取得、設定します。
            </summary>
            <value>項目属性の名前</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.SourceMemberName"/> と異なる場合に指定します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.TableName">
            <summary>
            項目属性を特定するためのテーブル名を取得、設定します。
            </summary>
            <value>項目属性を特定するためのテーブル名</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.SourceName"/> と異なる場合に指定します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.ConverterType">
            <summary>
            参照元オブジェクトから値を取得する際に使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> の型を取得、設定します。
            </summary>
            <value>参照元オブジェクトから値を取得する際に使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> の型</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute.ConverterParameters">
            <summary>
            参照元オブジェクトから値を取得する際に使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> のインスタンス生成用引数を取得、設定します。
            </summary>
            <value>参照元オブジェクトから値を取得する際に使用する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> のインスタンス生成用引数</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyResettingEventArgs">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.OpenPropertyResetting"/> イベントのデータを提供します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyResettingEventArgs.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject,System.String,System.Boolean)">
            <summary>
            指定した既定値設定対象オブジェクト、及び、公開プロパティ名の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyResettingEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="item">既定値設定対象オブジェクト</param>
            <param name="name">既定値設定対象公開プロパティ名</param>
            <param name="defaultHandledValue"><see cref="P:System.ComponentModel.HandledEventArgs.Handled"/> プロパティの既定値</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyResettingEventArgs.Name">
            <summary>
            既定値設定対象公開プロパティ名を取得します。
            </summary>
            <value>既定値設定対象公開プロパティ名</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem">
            <summary>
            ファンクションメソッドの保持、及び、実行を担うクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem.#ctor(System.Func{System.Object,System.Boolean},System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable)">
            <summary>
            指定した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクトの制御と対象のファンクション実行を担う <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="func">ファンクション本体</param>
            <param name="autoSuspend">
            ファンクションメソッド実行前後に、<paramref name="suspendee"/> で指定された <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクト
            の制御を自動的に行う場合は true。それ以外の場合は false。<br/>
            <paramref name="autoSuspend"/> を true に設定する場合は、<paramref name="suspendee"/> には null 以外を指定して下さい。
            </param>
            <param name="suspendee">
            ファンクションメソッド実行前後に、内部データの退避、確定、及び、復元を行うための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクト。<br/>
            必ずしも、<paramref name="func"/> で指定したメソッドが定義されているクラスのオブジェクトである必要はありません。<br/>
            通常は、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule"/> を指定します。<br/>
            <paramref name="autoSuspend"/> を true に設定する場合は、<paramref name="suspendee"/> には null 以外を指定して下さい。
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="autoSuspend"/> が true 、かつ、<paramref name="suspendee"/> が null の場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem.#ctor(System.Func{System.Object,System.Boolean},Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable)">
            <summary>
            指定した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクトの制御と対象のファンクション実行を担う <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="func">ファンクション本体</param>
            <param name="suspendee">
            ファンクションメソッド実行前後に、内部データの退避、確定、及び、復元を行うための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクト。<br/>
            必ずしも、<paramref name="func"/> で指定したメソッドが定義されているクラスのオブジェクトである必要はありません。<br/>
            通常は、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule"/> を指定します。<br/>
            <paramref name="suspendee"/> に null 以外の値が設定された場合は、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem.AutoSuspend"/> プロパティに true が設定されます。
            </param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem.Execute(System.Object)">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem.FunctionMethod"/> プロパティで指定されたメソッドの実行を行います。
            </summary>
            <param name="arg">ファンクションメソッドの実行引数</param>
            <returns>ファンクションメソッドの実行結果</returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem.AutoSuspend"/> 、及び、 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem.Suspendee"/> の各プロパティの設定に応じて、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem.Suspendee"/> の制御を行います。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem.FunctionMethod">
            <summary>
            ファンクション本体を取得します。
            </summary>
            <value>ファンクション本体</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem.AutoSuspend">
            <summary>
            ファンクションメソッド実行前後に、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem.Suspendee"/> プロパティで指定された <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクト
            の制御を自動的に行うかどうかを取得します。
            </summary>
            <value><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem.Suspendee"/> の制御を自動で行う場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionItem.Suspendee">
            <summary>
            ファンクションメソッド実行前後に、内部データの退避、確定、及び、復元を行うための <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクトを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IOpenUIPropertyItem">
            <summary>
            ロジック側からUI側への公開プロパティの設定情報を示すインターフェースです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IPropertyBinding">
            <summary>
            バインディングソースの値の取得、及び、設定を行うためのインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IPropertyBinding.PopValue(System.Object)">
            <summary>
            指定したバインディングソースから値を取得します。
            </summary>
            <param name="source">バインディングソース</param>
            <returns>バインド値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IPropertyBinding.PushValue(System.Object,System.Object)">
            <summary>
            指定したバインディングソースへ値を設定します。
            </summary>
            <param name="source">バインディングソース</param>
            <param name="value">設定するバインド値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IPropertyBinding.IsPushing(System.Object)">
            <summary>
            対象のバインディングソースへ値を設定中かどうかを返します。
            </summary>
            <param name="source">バインディングソース</param>
            <returns>値の設定中の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IPropertyBinding.Name">
            <summary>
            このインスタンスの識別名を取得します。
            </summary>
            <value>インスタンスの識別名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IOpenUIPropertyItem.DefaultValue">
            <summary>
            公開プロパティの既定値を取得、設定します。
            </summary>
            <value>既定値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IOpenUIPropertyItem.TableName">
            <summary>
            対応する項目属性を特定するためのテーブル名を取得、設定します。
            </summary>
            <value>項目属性を特定するためのテーブル名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IOpenUIPropertyItem.AttributeName">
            <summary>
            項目属性の項目名を取得、設定します。
            </summary>
            <value>項目属性の項目名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IOpenUIPropertyItem.Attribute">
            <summary>
            対応する項目属性を取得、設定します。
            </summary>
            <value>項目属性</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IOpenUIPropertyItem.IgnoreErrors">
            <summary>
            データ変更イベントのエラーを無視するかどうかを取得、設定します。
            </summary>
            <value>データ変更イベントのエラーを無視する場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IOpenUIPropertyItem.IgnoreWarnings">
            <summary>
            データ変更イベントの警告を無視するかどうかを取得、設定します。
            </summary>
            <value>データ変更イベントの警告を無視する場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase`1">
            <summary>
            プログラム(画面)のデータ、及び、ロジックを管理するオブジェクトの基底のジェネリッククラスです。
            </summary>
            <typeparam name="TDataEvent"><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.DataEvent"/>の元となる型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase`1.#ctor">
            <summary>
            既定のインスタンス識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase`1.InstanciateDataEventHandler">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase`1.DataEvent">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.DataEvent"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailBase`1">
            <summary>
            読み取り専用の明細データを管理するオブジェクトの基底クラスです。
            </summary>
            <remarks>
            この明細情報からは <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> イベントは発生しません。<br/>
            問合せや検索といったグリッドで使用する明細情報です。<br/>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IResetable.Reset"/> 処理が最適化されています。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase`1">
            <summary>
            明細データを管理するオブジェクトの基底のジェネリッククラスです。
            </summary>
            <typeparam name="T"><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetail.Parent"/>の型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase`1.#ctor">
            <summary>
            既定のインスタンス識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase`1.#ctor(System.String)">
            <summary>
            指定した識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">インスタンス識別名</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase`1.Parent">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailBase.Parent"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailBase`1.#ctor">
            <summary>
            既定のインスタンス識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailBase`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailBase`1.#ctor(System.String)">
            <summary>
            指定した識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailBase`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">インスタンス識別名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailBase`1.ResetMain">
            <inheritdoc/>
            <remarks>
            参照オブジェクトの既定値設定のみ行います。<br />
            公開プロパティの既定値設定、及び、エラー・警告の解除は行いません。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailBase`1.IsDataReadOnly">
            <inheritdoc/>
            <remarks>
            常に true を返します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailCollectionBase`2">
            <summary>
            明細データを要素に持つ読み取り専用コレクションの基底クラスです。
            </summary>
            <typeparam name="M"><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetailCollection.Parent"/>の型</typeparam>
            <typeparam name="D">コレクション内の要素の型</typeparam>
            <remarks>
            このコレクションからは <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> イベントは発生しません。<br/>
            問合せや検索といったグリッドで使用するコレクションです。<br/>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IResetable.Reset"/> 処理が最適化されています。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`2">
            <summary>
            明細データを要素に持つコレクションの基底のジェネリッククラスです。
            </summary>
            <typeparam name="M"><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetailCollection.Parent"/>の型</typeparam>
            <typeparam name="D">コレクション内の要素の型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`2.#ctor(`0,System.Int32,System.Int32)">
            <summary>
            対象のモジュールに属し、指定した格納可能要素数、及び、既定要素数を持つ、既定のインスタンス識別名の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`2"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="module">モジュール</param>
            <param name="capacity">格納可能な要素の数</param>
            <param name="count">既定の要素の数</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase`2.Parent">
            <inheritdoc cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.DetailCollectionBase.Parent"/>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailCollectionBase`2.MaxCountString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailCollectionBase`2.MaxCount"/> プロパティの名前を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailCollectionBase`2.#ctor(`0,System.Int32,System.Int32)">
            <summary>
            対象のモジュールに属し、指定した格納可能要素数、及び、既定要素数を持つ、既定のインスタンス識別名の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailCollectionBase`2"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="module">モジュール</param>
            <param name="capacity">格納可能な要素の数</param>
            <param name="count">既定の要素の数</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailCollectionBase`2._maxCount">
            <summary>
            このコレクションに追加されたことのある要素数の最大値です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailCollectionBase`2.ResetMain">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailCollectionBase`2.SetCount(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailCollectionBase`2.OnPropertyChanged(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailCollectionBase`2.AsEnumerableForMaxCount">
            <summary>
            コレクション内から <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailCollectionBase`2.MaxCount"/> 分の全要素を取得します。
            </summary>
            <returns><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailCollectionBase`2.MaxCount"/> 分の全要素データ</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailCollectionBase`2.IsDataReadOnly">
            <inheritdoc/>
            <remarks>
            常に true を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.ReadOnlyDetailCollectionBase`2.MaxCount">
            <summary>
            このコレクションに追加されたことのある要素数の最大値を取得します。
            </summary>
            <value>このコレクションに追加されたことのある要素数の最大値</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule">
            <summary>
            データ、及び、ロジックを親プログラム(親画面)に委譲する明細用サブプログラム(サブ画面)を管理するオブジェクトの基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule">
            <summary>
            データ、及び、ロジックを親プログラム(親画面)に委譲するサブプログラム(サブ画面)を管理するオブジェクトの基底クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.DEFAULT_NAME">
            <summary>
            既定のインスタンス識別名です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.#ctor">
            <summary>
            既定のインスタンス識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.InstanciateDataEventHandler">
            <inheritdoc/>
            <remarks>
            何もしません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.GetSuspendees">
            <inheritdoc/>
            <remarks>
            何も返しません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.InitializeMain">
            <inheritdoc/>
            <remarks>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.ModuleBase.InitializeFunctions"/> のみ実行します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.ResetMain">
            <inheritdoc/>
            <remarks>
            親プログラムモジュールが一時停止されている場合は、一旦、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.Rollback"/> により変更を元に戻し、
            再度、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.UIBindableObject.BeginEdit"/> を行います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.GetEntity(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.SetReferenceForMaster">
            <summary>
            親プログラムモジュールで保持している情報への参照設定を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.SetSourceReferenceForMaster">
            <summary>
            親プログラムモジュールの参照元オブジェクトを、自身の参照元オブジェクトとして設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.SetSourceMappingReferenceForMaster">
            <summary>
            親プログラムモジュールの参照元オブジェクト間マッピング情報を、自身のマッピング情報として設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.SetOpenPropertyReferenceForMaster">
            <summary>
            親プログラムモジュールの公開プロパティを、自身の公開プロパティとして設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.SetErrorReferenceForMaster">
            <summary>
            親プログラムモジュールのエラー情報を、自身のエラー情報として設定します。
            </summary>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.IsErrorReferenceSetting"/> プロパティを変更、
            チェックして、再帰的に呼び出されないようにしてください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.SetErrorReferenceForMasterInternal">
            <summary>
            親プログラムモジュールのエラー情報を、自身のエラー情報として設定します。
            </summary>
            <remarks>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.SetErrorReferenceForMaster"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行前後で
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.IsErrorReferenceSetting"/> プロパティを設定、チェックして、再帰的に呼び出されないようにしてください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.GetErrors(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.BeginErrorObservation">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.EndErrorObservation">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.GetErrorsOnObservation">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.SetWarningReferenceForMaster">
            <summary>
            親プログラムモジュールの警告情報を、自身の警告情報として設定します。
            </summary>
            <remarks>
            継承先においてoverrideする場合、必要に応じて、適切なタイミングで <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.IsWarningReferenceSetting"/> プロパティを変更、
            チェックして、再帰的に呼び出されないようにしてください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.SetWarningReferenceForMasterInternal">
            <summary>
            親プログラムモジュールの警告情報を、自身の警告情報として設定します。
            </summary>
            <remarks>
            継承先において、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.SetWarningReferenceForMaster"/> メソッドを介さず、本メソッドを呼び出す際には、本メソッドの実行前後で
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.IsWarningReferenceSetting"/> プロパティを設定して、再帰的に呼び出されないようにしてください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.GetWarnings(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.ExecuteFunction(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.GetItemAttribute(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.GetValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.SetValue(System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.PopValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.PushValue(System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.PushValueInternal(System.Object,Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject,System.String)">
            <summary>
            UI側からロジック側の指定したオブジェクトのプロパティに値を設定します。
            </summary>
            <param name="value">設定値</param>
            <param name="master">ロジック側オブジェクト</param>
            <param name="propName">ロジック側プロパティ名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.ErrorsOrWarnings_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.ReplaceErrorsEventItemToMaster(System.String,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventExceptionCollection)">
            <summary>
            自身に設定されたエラー情報を、必要に応じて親プログラムモジュールのエラーとして反映し直します。
            </summary>
            <param name="name">項目名</param>
            <param name="errors">エラー情報</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.ReplaceWarningsEventItemToMaster(System.String,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventExceptionCollection)">
            <summary>
            自身に設定された警告情報を、必要に応じて親プログラムモジュールの警告として反映し直します。
            </summary>
            <param name="name">項目名</param>
            <param name="warnings">警告情報</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.OnMasterDataChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <summary>
            親プログラムモジュールの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.OnMasterValidationErrorChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <summary>
            親プログラムモジュールの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.SetErrorReferenceForMasterOnChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <summary>
            親プログラムモジュールのエラー状態変更時に、親プログラムで変更されたエラー情報を自身のエラー情報として設定し直します。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.SetErrorReferenceForMasterOnChangedInternal(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <summary>
            親プログラムモジュールのエラー状態変更時に、変更されたエラー情報を自身のエラー情報として設定し直します。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.OnMasterValidationWarningChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <summary>
            親プログラムモジュールの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged.ValidationWarningChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.SetWarningReferenceForMasterOnChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <summary>
            親プログラムモジュールの警告状態変更時に、親プログラムで変更された警告情報を自身の警告情報として設定し直します。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.SetWarningReferenceForMasterOnChangedInternal(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <summary>
            親プログラムモジュールの警告状態変更時に、変更された警告情報を自身の警告情報として設定し直します。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.AddMasterModuleEventHandler(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule)">
            <summary>
            指定したモジュールにイベントハンドラを登録します。
            </summary>
            <param name="module">モジュール</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.RemoveMasterModuleEventHandler(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule)">
            <summary>
            指定したモジュールに登録されているイベントハンドラを解除します。
            </summary>
            <param name="module">モジュール</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.Entities">
            <inheritdoc/>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.MasterModule"/> の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule.Entities"/> を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.IsErrorReferenceSetting">
            <summary>
            親プログラムモジュールのエラー情報への参照を設定中かどうかを取得、設定します。
            </summary>
            <value>親プログラムモジュールのエラー情報への参照を設定中 の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.IsWarningReferenceSetting">
            <summary>
            親プログラムモジュールの警告情報への参照を設定中かどうかを取得、設定します。
            </summary>
            <value>親プログラムモジュールの警告情報への参照を設定中 の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.IsErrorsEventItemReplacingToMaster">
            <summary>
            自身に設定されたエラー情報の親プログラムモジュールへの反映中かどうかを取得、設定します。
            </summary>
            <value>自身に設定されたエラー情報の親プログラムモジュールへの反映中の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.IsWarningsEventItemReplacingToMaster">
            <summary>
            自身に設定された警告情報の親プログラムモジュールへの反映中かどうかを取得、設定します。
            </summary>
            <value>自身に設定された警告情報の親プログラムモジュールへの反映中の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.MasterModule">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubModule.IsChanged">
            <inheritdoc/>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.DEFAULT_NAME">
            <summary>
            既定のインスタンス識別名です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.#ctor">
            <summary>
            既定のインスタンス識別名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.SetReferenceForMaster">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.SetSourceReferenceForMaster">
            <inheritdoc/>
            <summary>
            親明細と親プログラムモジュールの参照元オブジェクトをマージし、自身の参照元オブジェクトとして設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.SetSourceMappingReferenceForMaster">
            <inheritdoc/>
            <summary>
            親明細と親プログラムモジュールの参照元オブジェクト間マッピング情報をマージし、自身のマッピング情報として設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.SetOpenPropertyReferenceForMaster">
            <inheritdoc/>
            <summary>
            親明細と親プログラムモジュールの公開プロパティをマージし、自身の公開プロパティとして設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.SetErrorReferenceForMaster">
            <inheritdoc/>
            <summary>
            親明細と親プログラムモジュールのエラー情報をマージし、自身のエラー情報として設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.SetErrorReferenceForMasterInternal">
            <inheritdoc/>
            <summary>
            親明細と親プログラムモジュールのエラー情報をマージし、自身のエラー情報として設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.GetErrors(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.GetErrorsOnObservation">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.SetWarningReferenceForMaster">
            <inheritdoc/>
            <summary>
            親明細と親プログラムモジュールの警告情報をマージし、自身の警告情報として設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.SetWarningReferenceForMasterInternal">
            <inheritdoc/>
            <summary>
            親明細と親プログラムモジュールの警告情報をマージし、自身の警告情報として設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.GetWarnings(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.GetItemAttribute(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.ContainsProperty(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.GetValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.SetValue(System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.PopValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.PushValue(System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.ReplaceErrorsEventItemToMaster(System.String,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventExceptionCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.ReplaceWarningsEventItemToMaster(System.String,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventExceptionCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.GetPropertyHolder(System.String)">
            <summary>
            指定した公開プロパティを保持している親明細、もしくは、親プログラムモジュールを取得します。
            </summary>
            <param name="propName">公開プロパティ名</param>
            <returns>親明細、もしくは、親プログラムモジュール</returns>
            <remarks>
            親明細、および、親プログラムモジュールに同名の公開プロパティが存在する場合、親明細が優先的に返されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.OnMasterDataChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.OnMasterValidationErrorChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.SetErrorReferenceForMasterOnChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.OnMasterValidationWarningChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.SetWarningReferenceForMasterOnChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule._detailCollectionName">
            <summary>
            親プログラムの明細コレクション名です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.GetParentDetailCollection">
            <inheritdoc/>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule._detailIndex">
            <summary>
            親プログラムの明細コレクション内で対応するインデックスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule._detail">
            <summary>
            親プログラムで対応する明細です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.GetParentDetail">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.SetParentDetail">
            <summary>
            親プログラムで対応する明細を検索して保持します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.AddParentDetailEventHandler(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetail)">
            <summary>
            指定した親明細にイベントハンドラを登録します。
            </summary>
            <param name="detail">親明細</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.RemoveParentDetailEventHandler(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetail)">
            <summary>
            指定した親明細に登録されているイベントハンドラを解除します。
            </summary>
            <param name="detail">親明細</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.DetailCollectionName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.SubDetailModule.Index">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem">
            <summary>
            ロジック側からUI側への公開プロパティ情報を保持するクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding">
            <summary>
            バインディングソースの値の取得、及び、設定を行うためのクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.#ctor(System.String,System.String)">
            <summary>
            対象のオブジェクトのメンバーの値を取得、及び、設定する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="sourceName">バインディング対象のオブジェクト名(ex. エンティティ名)</param>
            <param name="memberName">バインディング対象のメンバー名(ex. エンティティ列名)</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.#ctor(System.String,System.String,System.String)">
            <summary>
            対象のオブジェクトのメンバーの値を取得、及び、設定する、指定した識別名の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">識別名</param>
            <param name="sourceName">バインディング対象のオブジェクト名(ex. エンティティ名)</param>
            <param name="memberName">バインディング対象のメンバー名(ex. エンティティ列名)</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.PopValue(System.Object)">
            <inheritdoc/>
            <param name="source">
            バインディングソース。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.BoundSourceName"/> プロパティで指定されるオブジェクトを保持している <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISourceHolder"/> オブジェクト、
            もしくは、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.BoundSourceName"/> プロパティに合致する <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject.Name"/> を持つ<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject"/> オブジェクト本体
            を指定します。
            </param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.PushValue(System.Object,System.Object)">
            <inheritdoc/>
            <param name="source">
            バインディングソース。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.BoundSourceName"/> プロパティで指定されるオブジェクトを保持している <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISourceHolder"/> オブジェクト、
            もしくは、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.BoundSourceName"/> プロパティに合致する <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject.Name"/> を持つ<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject"/> オブジェクト本体
            を指定します。
            </param>
            <param name="value">設定するバインド値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.IsPushing(System.Object)">
            <inheritdoc/>
            <param name="source">
            バインディングソース。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.BoundSourceName"/> プロパティで指定されるオブジェクトを保持している <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISourceHolder"/> オブジェクト、
            もしくは、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.BoundSourceName"/> プロパティに合致する <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject.Name"/> を持つ<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject"/> オブジェクト本体
            を指定します。
            </param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.BoundSourceName">
            <summary>
            バインディング対象のオブジェクト名を取得します。
            </summary>
            <value>バインディング対象のオブジェクト名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.BoundSourceMemberName">
            <summary>
            バインディング対象のオブジェクトのメンバー名を取得します。
            </summary>
            <value>バインディング対象のオブジェクトのメンバー名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.Converter">
            <summary>
            バインディングソースから取得、及び、設定する値の変換用の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/> を取得、設定します。
            </summary>
            <value>バインディングソースから取得、及び、設定する値の変換用の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Converters.Interfaces.IValueConverter"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.Name">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.PropertyBinding.PushingItems">
            <summary>
            値を設定中のバインディングソースの一覧を取得、設定します。
            </summary>
            <value>値を設定中のバインディングソースの一覧</value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem.INVALID_CHARACTERS">
            <summary>
            プロパティ名に使用できない文字の一覧を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem.INVALID_CHARACTERS_REGEX">
            <summary>
            プロパティ名に使用できない文字にマッチする正規表現パターンを表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem.#ctor(System.String)">
            <summary>
            指定したプロパティ名の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">プロパティ名</param>
            <remarks>
            値の直接バインディング用です。<br/>
            プロパティ名 = 項目属性 の場合に使用します。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="name"/> に使用できない文字が含まれる場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem.#ctor(System.String,System.String)">
            <summary>
            指定したプロパティ名、項目属性の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">プロパティ名</param>
            <param name="attribute">項目属性</param>
            <remarks>
            値の直接バインディング用です。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="name"/> に使用できない文字が含まれる場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem.#ctor(System.String,System.String,System.String)">
            <summary>
            指定したバインディング対象オブジェクト名、メンバー名、及び、項目属性の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="sourceName">バインディング対象のオブジェクト名。通常はエンティティの識別名。</param>
            <param name="memberName">バインディング対象のメンバー名。通常はエンティティの列名。</param>
            <param name="attribute">項目属性</param>
            <remarks>
            プロパティ名 = バインディング対象オブジェクトのメンバー名 の場合に使用します。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="memberName"/> に使用できない文字が含まれる場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            指定したプロパティ名、バインディング対象オブジェクト名、メンバー名、及び、項目属性の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">プロパティ名</param>
            <param name="sourceName">バインディング対象のオブジェクト名。通常はエンティティの識別名。</param>
            <param name="memberName">バインディング対象のメンバー名。通常はエンティティの列名。</param>
            <param name="attribute">項目属性</param>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="name"/> に使用できない文字が含まれる場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            指定した情報を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">プロパティ名</param>
            <param name="sourceName">バインディング対象のオブジェクト名。通常はエンティティの識別名。</param>
            <param name="memberName">バインディング対象のメンバー名。通常はエンティティの列名。</param>
            <param name="tableName">項目属性を特定するためのテーブル名</param>
            <param name="attribute">項目属性</param>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="name"/> に使用できない文字が含まれる場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem.DefaultValue">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem.AttributeName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem.Attribute">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem.IgnoreErrors">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem.IgnoreWarnings">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> イベントのデータを提供します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs.NOT_USED_INDEX">
            <summary>
            変更が発生したオブジェクトがコレクションの要素ではないことを表すインデックス値の定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs.#ctor(System.Object,System.String,System.Object,System.Object,System.Int32)">
            <summary>
            指定したオブジェクトのプロパティ変更情報を持つ、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="item">変更が発生したオブジェクトインスタンス</param>
            <param name="name">変更が発生したプロパティ名</param>
            <param name="oldValue">変更前の値</param>
            <param name="newValue">変更後の値</param>
            <param name="index">変更が発生したオブジェクトを保持するコレクション内でのインデックス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs.AddErrorMessage(System.String,System.String[])">
            <summary>
            変更が発生したオブジェクト、及び、プロパティに関するエラー情報を追加します。
            </summary>
            <param name="message">エラーメッセージ</param>
            <param name="args">エラーメッセージフォーマット用引数</param>
            <returns>追加されたエラー情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs.AddWarningMessage(System.String,System.String[])">
            <summary>
            変更が発生したオブジェクト、及び、プロパティに関する警告情報追加を追加します。
            </summary>
            <param name="message">警告メッセージ</param>
            <param name="args">警告メッセージフォーマット用引数</param>
            <returns>追加された警告情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs.IsThrowError">
            <summary>
            イベントが UI からの変更要求で生じている場合に、UI に対してエラーをスローするべきかどうかを返します。
            </summary>
            <returns>UI に対してエラーをスローするべきである場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs.Index">
            <summary>
            変更が発生したオブジェクトインスタンスを保持するコレクション内でのインデックスを取得します。
            </summary>
            <value>変更が発生したオブジェクトインスタンスを保持するコレクション内でのインデックス</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs.Item"/> プロパティが <see cref="T:System.Collections.ICollection"/> に含まれている場合にのみ有効です。<br/>
            含まれていない場合は <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs.NOT_USED_INDEX"/> が設定されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs.Item">
            <summary>
            変更が発生したオブジェクトインスタンスを取得します。
            </summary>
            <value>変更が発生したオブジェクトインスタンス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs.Type">
            <summary>
            変更が発生したオブジェクトの型を取得します。
            </summary>
            <value>変更があったオブジェクトの型</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs.Name">
            <summary>
            変更が発生したプロパティ名を取得します。
            </summary>
            <value>変更が発生したプロパティ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs.OldValue">
            <summary>
            変更が発生したプロパティの変更前の値を取得します。
            </summary>
            <value>変更が発生したプロパティの変更前の値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs.NewValue">
            <summary>
            変更が発生したプロパティの変更後の値を取得します。
            </summary>
            <value>変更が発生したプロパティの変更後の値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs.Errors">
            <summary>
            イベント処理中に生じたエラー一覧を取得します。
            </summary>
            <value>イベント処理中に生じたエラー一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs.Warnings">
            <summary>
            イベント処理中に生じた警告一覧を取得します。
            </summary>
            <value>イベント処理中に生じた警告一覧</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs`1">
            <summary>
            イベント処理で参照可能な値を設定できるイベントデータを提供します。
            </summary>
            <typeparam name="T">保持する値の型</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs`1.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs`1.#ctor(`0)">
            <summary>
            イベント処理で対象の値を参照可能な <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs`1"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="value">参照値</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs`1.Value">
            <summary>
            イベント処理で参照可能な値を取得します。
            </summary>
            <value>イベント処理で参照可能な値</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionExecutedEventArgs">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IFunctionCaller.FunctionExecuted"/> イベントのデータを提供します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionExecutedEventArgs.#ctor(System.String,System.Boolean)">
            <summary>
            指定したファンクション名、及び、実行結果の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionExecutedEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">ファンクション名</param>
            <param name="isSucceeded">ファンクションが正常に処理された場合は true。それ以外の場合は false。</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionExecutedEventArgs.FunctionName">
            <summary>
            ファンクション名を取得します。
            </summary>
            <value>ファンクション名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionExecutedEventArgs.IsSucceeded">
            <summary>
            ファンクション実行結果を取得します。
            </summary>
            <value>ファンクションが正常に処理された場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionExecutingEventArgs">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IFunctionCaller.FunctionExecuting"/> イベントのデータを提供します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionExecutingEventArgs.#ctor(System.String,System.Boolean)">
            <summary>
            指定したファンクション名の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionExecutingEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">ファンクション名</param>
            <param name="cancel">イベントをキャンセルする場合は true。それ以外の場合は false。</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionExecutingEventArgs.FunctionName">
            <summary>
            ファンクション名を取得します。
            </summary>
            <value>ファンクション名</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem">
            <summary>
            オブジェクトのプロパティの変更情報を表すクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem.NOT_USED_INDEX">
            <summary>
            変更が発生したオブジェクトがコレクションの要素ではないことを表すインデックス値の定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem.#ctor(System.Object,System.String,System.Object,System.Object,System.Int32)">
            <summary>
            指定したオブジェクトのプロパティの変更情報を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="item">変更が発生したオブジェクトインスタンス</param>
            <param name="name">変更が発生したプロパティ名</param>
            <param name="oldValue">変更前の値</param>
            <param name="newValue">変更後の値</param>
            <param name="index">変更が発生したオブジェクトを保持するコレクション内でのインデックス</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem.Index">
            <summary>
            変更が発生したオブジェクトインスタンスを保持するコレクション内でのインデックスを取得します。
            </summary>
            <value>変更が発生したオブジェクトインスタンスを保持するコレクション内でのインデックス</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem.Item"/>プロパティが <see cref="T:System.Collections.ICollection"/> に含まれている場合にのみ有効です。<br/>
            含まれていない場合は <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem.NOT_USED_INDEX"/> が設定されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem.Item">
            <summary>
            変更が発生したオブジェクトインスタンスを取得します。
            </summary>
            <value>変更が発生したオブジェクトインスタンス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem.Type">
            <summary>
            変更が発生したオブジェクトの型を取得します。
            </summary>
            <value>変更があったオブジェクトの型</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem.Name">
            <summary>
            変更が発生したプロパティ名を取得します。
            </summary>
            <value>変更が発生したプロパティ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem.OldValue">
            <summary>
            変更が発生したプロパティの変更前の値を取得します。
            </summary>
            <value>変更が発生したプロパティの変更前の値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem.NewValue">
            <summary>
            変更が発生したプロパティの変更後の値を取得、設定します。
            </summary>
            <value>変更が発生したプロパティの変更後の値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem.IsErrorChanged">
            <summary>
            プロパティのエラー情報に変更があったかどうかを取得します。
            </summary>
            <value>プロパティのエラー情報に変更があった場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem.IsWarningChanged">
            <summary>
            警告情報に変更があったかどうかを取得します。
            </summary>
            <value>プロパティの警告情報に変更があった場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyStackPropertyChanged.StackPropertyChanged"/> イベントのデータを提供します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs.#ctor(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem[])">
            <summary>
            指定したプロパティ変更情報を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="properties">プロパティ変更情報</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs.#ctor(System.Object,System.String,System.Object,System.Object,System.Int32)">
            <summary>
            対象のオブジェクトのプロパティの変更情報を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="item">変更が発生したオブジェクトインスタンス</param>
            <param name="propName">変更が発生したプロパティ名</param>
            <param name="oldValue">変更前の値</param>
            <param name="newValue">変更後の値</param>
            <param name="index">変更が発生したオブジェクトを保持するコレクション内でのインデックス</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs._changedProperties">
            <summary>
            蓄積されているプロパティ変更情報です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs.AddProperty(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ChangedPropertyItem[])">
            <summary>
            対象のプロパティ変更情報を追加します。
            </summary>
            <param name="properties">プロパティ変更情報</param>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs.IsRefreshNeeded"/> が true の場合は何もしません。<br/>
            同一オブジェクト、及び、プロパティの変更情報がすでに保持されている場合は、情報を上書きします。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs.AddProperty(System.Object,System.String,System.Object,System.Object,System.Int32)">
            <summary>
            対象のオブジェクトのプロパティ変更情報を追加します。
            </summary>
            <param name="item">変更が発生したオブジェクトインスタンス</param>
            <param name="propName">変更が発生したプロパティ名</param>
            <param name="oldValue">変更前の値</param>
            <param name="newValue">変更後の値</param>
            <param name="index">変更が発生したオブジェクトを保持するコレクション内でのインデックス</param>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs.IsRefreshNeeded"/> が true の場合は何もしません。<br/>
            同一オブジェクト、及び、プロパティの変更情報がすでに保持されている場合は、情報を上書きします。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs.GetProperties">
            <summary>
            蓄積されているプロパティ変更情報を列挙します。
            </summary>
            <returns>変更プロパティ一覧</returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs.IsRefreshNeeded"/> が true の場合は空になります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs.Contains(System.Object,System.String,System.Int32)">
            <summary>
            指定したオブジェクト、及び、プロパティの変更情報が蓄積されているかどうかを返します。
            </summary>
            <param name="item">変更が発生したオブジェクトインスタンス</param>
            <param name="propName">変更が発生したプロパティ名</param>
            <param name="index">変更が発生したオブジェクトを保持するコレクション内でのインデックス</param>
            <returns>指定したオブジェクトの指定したプロパティの変更情報が含まれている場合は true。含まれていない場合は false。</returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs.IsRefreshNeeded"/> が true の場合、このメソッドは false を返します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs._isRefreshNeeded">
            <summary>
            すべてのプロパティに変更があったものとして処理する必要があるかどうかを示す値です。
            </summary>
            <value>すべてのプロパティに変更があったものとして処理する必要がある場合は true。それ以外の場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs.SetRefreshNeeded">
            <summary>
            すべてのプロパティに変更があったものとして処理するように要求します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs.PropertyName">
            <inheritdoc/>
            <remarks>
            プロパティ変更情報が複数蓄積されている場合は最終のプロパティ名を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.StackPropertyChangedEventArgs.IsRefreshNeeded">
            <summary>
            すべてのプロパティに変更があったものとして処理する必要があるかどうかを取得します。
            </summary>
            <value>すべてのプロパティに変更があったものとして処理する必要がある場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Suspender">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable"/> オブジェクトの値の編集の開始、取消、及び、確定を制御するためのヘルパークラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Suspender.#ctor(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable)">
            <summary>
            対象のオブジェクトを監視する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Suspender"/> クラスの新しいインスタンスを初期化し、値の編集を開始します。
            </summary>
            <param name="obj">監視対象オブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Suspender.Finalize">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Suspender"/> のインスタンスを破棄します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Suspender.Commit">
            <summary>
            監視対象オブジェクトの値の編集を確定させます。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Suspender._disposed">
            <summary>
            リソース破棄要求済みかどうかを示す値です。
            </summary>
            <value>リソース破棄要求済みの場合は true。それ以外の場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Suspender.Dispose">
            <summary>
            リソースを破棄します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Suspender.Dispose(System.Boolean)">
            <summary>
            リソースを破棄します。
            </summary>
            <param name="disposing">リソースの破棄中の場合は true。それ以外の場合は false。</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Suspender.IsAlreadySuspended">
            <summary>
            監視対象オブジェクトが値の編集中かどうかを取得します。
            </summary>
            <value>監視対象オブジェクトが値の編集中の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Suspender.Suspendee">
            <summary>
            監視対象オブジェクトを取得します。
            </summary>
            <value>監視対象オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection">
            <summary>
            データベース接続を管理するクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection">
            <summary>
            データベースへの接続を行うためのインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.Open">
            <summary>
            データベースへの接続を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.Close">
            <summary>
            すでに接続されているデータベースとの接続を切断します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.BeginTran">
            <summary>
            トランザクションを開始し、トランザクションを管理する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction"/>を返します。
            </summary>
            <returns>トランザクションを管理する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.BeginTran(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            トランザクションを開始し、トランザクションを管理する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction"/>を返します。
            </summary>
            <param name="section">セクション</param>
            <returns>トランザクションを管理する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.GetSection">
            <summary>
            セクションを取得します。
            </summary>
            <returns>セクション</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.ProviderFactory">
            <summary>
            プロバイダーファクトリを取得します。
            </summary>
            <value>プロバイダーファクトリ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.Connection">
            <summary>
            データベースの接続オブジェクトを取得します。
            </summary>
            <value>データベースの接続オブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.ConnectionString">
            <summary>
            データベース接続文字列を取得します。
            </summary>
            <value>データベース接続文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.Transaction">
            <summary>
            トランザクションオブジェクトを取得します。
            </summary>
            <value>トランザクションオブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.ConnectionRetry">
            <summary>
            接続リトライ情報を取得、設定します。
            </summary>
            <value>接続リトライ情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.CommandRetry">
            <summary>
            コマンドリトライ情報を取得、設定します。
            </summary>
            <value>コマンドリトライ情報</value>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection"/>、及び、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction"/>へは本値が引き継がれます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.Timeout">
            <summary>
            タイムアウト情報を取得、設定します。
            </summary>
            <value>タイムアウト情報</value>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection"/>、及び、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction"/>へは本値が引き継がれます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.UseExclusiveLock">
            <summary>
            排他制御を行うかを取得、設定します。
            </summary>
            <value>排他制御を行う場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.ServerVersion">
            <summary>
            接続しているサーバーのバージョン文字列を取得します。
            </summary>
            <value>サーバーのバージョン文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.IsStatusConnecting">
            <summary>
            データベースへ接続済みでデータソースへ接続済みかを取得します。
            </summary>
            <value>データソースへ接続済みの場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.IsStatusOpen">
            <summary>
            データベースへ接続済みかを取得します。
            </summary>
            <value>データベースへ接続済みの場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.IsStatusClosed">
            <summary>
            データベースへの接続が閉じられているかを取得します。
            </summary>
            <value>データベースへの接続が閉じられている場合は true。それ以外の場合は false。</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.Disposed">
            <summary>
            オブジェクトが破棄される場合に発生します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.#ctor(System.Data.Common.DbConnection)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="conn">データベースの接続情報</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.Open">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.Close">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.BeginTran">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.BeginTran(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.GetSection">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.CreateTransaction(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            トランザクションを開始します。
            </summary>
            <param name="section">親となるセクション</param>
            <returns>トランザクション</returns>
            <remarks>失敗した場合は<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection.ConnectionRetry"/> の設定に従い、リトライを行います。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.ExclusiveLock">
            <summary>
            排他ロックを実行します。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.ExclusiveLockTimeoutException"> 排他オブジェクトが取得できなかった場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.ExclusiveUnlock">
            <summary>
            排他ロックの解放を行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.Section_Disposed(System.Object,System.EventArgs)">
            <summary>
            作成したセクションの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.Disposed"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.OnDisposed(System.EventArgs)">
            <summary>
            破棄イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.Dispose">
            <summary>
            現在のインスタンスを破棄します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.ProviderFactory">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.Connection">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.ConnectionString">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.Transaction">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.ConnectionRetry">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.CommandRetry">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.Timeout">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.UseExclusiveLock">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.ServerVersion">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.IsStatusConnecting">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.IsStatusOpen">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.IsStatusClosed">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.LastConnectedServerVersion">
            <summary>
            最後に接続したサーバーのバージョンを取得、設定します。
            </summary>
            <value>最後に接続したサーバーのバージョンを表す文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.ExclusiveLockCounter">
            <summary>
            スレッドごとの排他を管理する辞書インスタンスを取得、設定します。
            </summary>
            <value>スレッドごとの排他を管理する辞書インスタンス</value>
            <remarks>
            セッションとトランザクションが同時に開かれることもあるため、最後のDispose時に排他解放を行うのに利用します。
            </remarks>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.Disposed">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.ExclusiveLockInfo">
            <summary>
            排他ロック情報を保持します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.ExclusiveLockInfo.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.ExclusiveLockInfo"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.ExclusiveLockInfo.Increment">
            <summary>
            排他回数をインクリメントします。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.ExclusiveLockInfo.Decrement">
            <summary>
            排他回数をデクリメントします。
            </summary>
            <returns>排他状態が解除された場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.ExclusiveLockInfo.ToString">
            <summary>
            排他情報を文字列化します。
            </summary>
            <returns>排他情報のスタックを表す文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.ExclusiveLockInfo.Count">
            <summary>
            排他回数を取得します。
            </summary>
            <value>排他回数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseConnection.ExclusiveLockInfo.StackTraces">
            <summary>
            排他時のスタックトレースを取得します。
            </summary>
            <value>排他時のスタックトレース</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseExecuteParameter">
            <summary>
            クエリ実行パラメータを表すクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseExecuteParameter">
            <summary>
            データベース操作に利用するコマンドに必要な設定のインターフェースです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseExecuteParameter.Name">
            <summary>
            クエリ名を取得、設定します。
            </summary>
            <value>クエリ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseExecuteParameter.Query">
            <summary>
            実行するクエリを取得、設定します。
            </summary>
            <value>実行するクエリ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseExecuteParameter.CommandType">
            <summary>
            コマンド文字列の解釈方法を取得、設定します。
            </summary>
            <value>コマンド文字列の解釈方法</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseExecuteParameter.StatementType">
            <summary>
            実行するクエリの状態を取得、設定します。
            </summary>
            <value>実行するクエリの状態</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseExecuteParameter.Params">
            <summary>
            実行パラメータを取得、設定します。
            </summary>
            <value>実行パラメータ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseExecuteParameter.Retry">
            <summary>
            リトライ情報を取得、設定します。
            </summary>
            <value>リトライ情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseExecuteParameter.Timeout">
            <summary>
            タイムアウト情報を取得、設定します。
            </summary>
            <value>タイムアウト情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseExecuteParameter.IsLock">
            <summary>
            ロックタイムアウトの設定を行うかを取得します。
            </summary>
            <value>ロックタイムアウトの設定を行う場合は true。それ以外の場合は false。</value>
            <remarks></remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseExecuteParameter.LockOp">
            <summary>
            ロック操作を取得、設定します。
            </summary>
            <value>ロック操作</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseExecuteParameter.ParameterValue">
            <summary>
            パラメータを取得するためのEntityを取得、設定します。
            </summary>
            <value>パラメータを取得するためのEntity</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseExecuteParameter.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseExecuteParameter"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseExecuteParameter.Init">
            <summary>
            オブジェクトの初期化を行います。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseExecuteParameter.Name">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseExecuteParameter.Query">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseExecuteParameter.CommandType">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseExecuteParameter.StatementType">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseExecuteParameter.Params">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseExecuteParameter.Retry">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseExecuteParameter.Timeout">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseExecuteParameter.IsLock">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseExecuteParameter.LockOp">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseExecuteParameter.ParameterValue">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory">
            <summary>
            データベースパラメータを作成するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.PARAMETER_PREFIX_CHAR">
            <summary>
            パラメータ接頭辞文字を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.PARAMETER_NAME_SEPARATOR">
            <summary>
            パラメータ名で使用されるセパレータを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.PARAMETER_NAME_SEQUENCE_SEPARATOR">
            <summary>
            パラメータ名で使用されるシーケンス番号セパレータを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.BULK_PARAMETER_NAME_FORMAT">
            <summary>
            一括クエリで使用されるパラメータ名書式を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.DEFAULT_SEQUENCE_NO">
            <summary>
            標準のシーケンス番号を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.INVALID_SEQUENCE_NO">
            <summary>
            無効なシーケンス番号を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.PARAMETER_NAME_SEPARATORS">
            <summary>
            パラメータ名で使用されるセパレータ文字列配列です。
            </summary>
            <remarks>パラメータ名を分割するのに利用します。</remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.PARAMETER_NAME_SEQUENCE_SEPARATORS">
            <summary>
            パラメータ名で使用されるシーケンス番号セパレータ文字列配列です。
            </summary>
            <remarks>シーケンス番号を分割するのに利用します。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.#ctor(System.Data.Common.DbProviderFactory)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="factory"><see cref="T:System.Data.Common.DbProviderFactory"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.Create(System.String,System.Object,System.Int32,System.Data.ParameterDirection)">
            <summary>
            パラメータを作成します。
            </summary>
            <param name="name">パラメータ名</param>
            <param name="value">パラメータ値</param>
            <param name="size">サイズ</param>
            <param name="direction">パラメータの向き</param>
            <returns>作成したパラメータ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.Create(System.String,System.Object,System.Data.DbType,System.Data.ParameterDirection)">
            <summary>
            パラメータを作成します。
            </summary>
            <param name="name">パラメータ名</param>
            <param name="value">パラメータ値</param>
            <param name="type">パラメータ型</param>
            <param name="direction">パラメータの向き</param>
            <returns>作成したパラメータ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.Create(System.Data.Common.DbProviderFactory,System.String,System.Object,System.Data.ParameterDirection)">
            <summary>
            パラメータを作成します。
            </summary>
            <param name="factory"><see cref="T:System.Data.Common.DbProviderFactory"/> インスタンス</param>
            <param name="name">パラメータ名</param>
            <param name="value">パラメータ値</param>
            <param name="direction">パラメータの向き</param>
            <returns>作成したパラメータ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.Create(System.Data.Common.DbProviderFactory,System.String,System.Object,System.Data.DbType,System.Data.ParameterDirection)">
            <summary>
            パラメータを作成します。
            </summary>
            <param name="factory"><see cref="T:System.Data.Common.DbProviderFactory"/> インスタンス</param>
            <param name="name">パラメータ名</param>
            <param name="value">パラメータ値</param>
            <param name="type">パラメータ型</param>
            <param name="direction">パラメータの向き</param>
            <returns>作成したパラメータ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.MakeParameterName(System.String,System.String)">
            <summary>
            パラメータ名を作成します。
            </summary>
            <param name="column">列名</param>
            <param name="table">テーブル名</param>
            <returns>パラメータ名</returns>
            <remarks>テーブル名がnullまたはブランクの場合、パラメータ名は列名から作成され、テーブル名は使用されません。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.MakeSequenceParameterName(System.String,System.String,System.Int32)">
            <summary>
            パラメータ名を作成します。
            </summary>
            <param name="column">列名</param>
            <param name="table">テーブル名</param>
            <param name="sequenceNo">シーケンス番号</param>
            <returns>パラメータ名</returns>
            <remarks>テーブル名がnullまたはブランクの場合、パラメータ名は列名から作成され、テーブル名を使用されません。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.MakeFromParameterName(System.String,System.String)">
            <summary>
            FromToの開始パラメータ名を作成します。
            </summary>
            <param name="column">列名</param>
            <param name="table">テーブル名</param>
            <returns>パラメータ名</returns>
            <remarks>テーブル名がnullまたはブランクの場合、パラメータ名は列名から作成され、テーブル名を使用されません。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.MakeToParameterName(System.String,System.String)">
            <summary>
            FromToの終了パラメータ名を作成します。
            </summary>
            <param name="column">列名</param>
            <param name="table">テーブル名</param>
            <returns>パラメータ名</returns>
            <remarks>テーブル名がnullまたはブランクの場合、パラメータ名は列名から作成され、テーブル名を使用されません。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.GetEntityName(System.String)">
            <summary>
            パラメータ名からEntity名を取得します。
            </summary>
            <param name="parameterName">パラメータ名</param>
            <returns>Entity名</returns>
            <remarks>ほとんどの場合テーブル名と一致します。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.GetColumnName(System.String,System.Boolean)">
            <summary>
            パラメータ名から列名を取得します。
            </summary>
            <param name="parameterName">パラメータ名</param>
            <param name="addPrefixTable">テーブル名接頭辞フラグ</param>
            <returns>列名</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.GetSequenceNo(System.String)">
            <summary>
            パラメータ名からシーケンス番号を取得します。
            </summary>
            <param name="parameterName">パラメータ名</param>
            <returns>シーケンス番号</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.GetNameWithoutSequenceNo(System.String,System.Int32)">
            <summary>
            パラメータ名からシーケンス番号部を除いた名前を取得します。
            </summary>
            <param name="src">パラメータ名</param>
            <param name="sequenceNo">シーケンス番号</param>
            <returns>シーケンス番号部を削除した文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.RemoveSequenceNo(System.String,System.Int32)">
            <summary>
            パラメータ名からシーケンス番号部を指定されたシーケンス番号で削除します。
            </summary>
            <param name="src">パラメータ名</param>
            <param name="sequenceNo">シーケンス番号</param>
            <returns>シーケンス番号部を削除した文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.ReplaceSequenceNo(System.String,System.Int32)">
            <summary>
            シーケンス番号を指定のシーケンス番号に変更します。
            </summary>
            <param name="src">パラメータ名</param>
            <param name="sequenceNo">シーケンス番号</param>
            <returns>シーケンス番号部を変換したパラメータ名</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.GetDbType(System.Object)">
            <summary>
            オブジェクトの対象のデータベースの型を取得します。
            </summary>
            <param name="obj">オブジェクト</param>
            <returns>データベースの型</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.GetDbType(System.Type)">
            <summary>
            型からデータベースの型を取得します。
            </summary>
            <param name="systemType">システムの型</param>
            <returns>データベースの型</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.GetDbType(System.Object,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute)">
            <summary>
            オブジェクトとデータベース列属性を用いてデータベースの型を取得します。
            </summary>
            <param name="obj">オブジェクト</param>
            <param name="attr">データベース列属性</param>
            <returns>データベースの型</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.GetDbType(System.Type,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute)">
            <summary>
            型とデータベース列属性を用いてデータベースの型を取得します。
            </summary>
            <param name="systemType">システムの型</param>
            <param name="attr">データベース列属性</param>
            <returns>データベースの型</returns>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.ConvertDictionary">
            <summary>
            データベースの型変換辞書です。
            </summary>
            <remarks>
            キー項目に.NETで利用される<see cref="T:System.Type"/>、値にデータベース上で利用される<see cref="T:System.Data.DbType"/>が設定されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.GetConvertDictionary">
            <summary>
            型変換用の辞書を作成します。
            </summary>
            <returns>型変換辞書</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.ToDatabaseType(System.Object)">
            <summary>
            データベースで使用できる型に変換します。
            </summary>
            <param name="convertValue">変換する値</param>
            <returns>変換後の値</returns>
            <remarks>
            DatabaseType属性を保持する値の場合のみ変換されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.GetConvertType(System.Type)">
            <summary>
            変換する型を取得します。
            </summary>
            <param name="type">変換元の型</param>
            <returns>変換する型</returns>
            <remarks>
            型に<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTypeAttribute"/>属性が設定されている場合、優先されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseParameterFactory.ProviderFactory">
            <summary>
            <see cref="T:System.Data.Common.DbProviderFactory"/> を取得、設定します。
            </summary>
            <value><see cref="T:System.Data.Common.DbProviderFactory"/></value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet">
            <summary>
            コマンドの実行結果を管理するクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet">
            <summary>
            SQLステートメントの実行結果を表すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.NextRow">
            <summary>
            レコードを次の行へ進めます。
            </summary>
            <returns>次の行が存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.NextResult">
            <summary>
            次の結果セットへ進めます。
            </summary>
            <returns>次の結果セットが存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.GetEntityRows(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            Entity行に変換して取得します。
            </summary>
            <param name="entity">Entity</param>
            <returns>Entity行</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.GetEntitiesRows(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase[])">
            <summary>
            複数のEntity行に変換して取得します。
            </summary>
            <param name="entities">Entity</param>
            <returns>Entity行</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.GetEntities(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase[])">
            <summary>
            指定されたEntityにデータを追加します。
            </summary>
            <param name="entities">Entity</param>
            <returns>正常に格納できた場合は true。それ以外の場合は false。</returns>
            <remarks>
            Entityの末尾に追加されます。そのため<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Collections.CollectionBase`1.Count"/>が増加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.FillEntity(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Boolean)">
            <summary>
            指定されたEntityにデータを格納します。
            </summary>
            <param name="entity">Entity</param>
            <param name="isNoDataClear">取得したデータ数以降をクリアする場合は true。それ以外の場合は false。</param>
            <remarks>
            指定されたEntityに実行結果のデータを格納します。
            この処理はEntityの行数分実行され、それ以降のデータは切り捨てられます。
            また、<paramref name="isNoDataClear"/> がtrueで、Entityの行数に実行結果のデータが満たなかった場合、それ以降のデータはクリアされます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.FillEntites(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase[],System.Boolean)">
            <summary>
            指定されたEntityにデータを格納します。
            </summary>
            <param name="entities">Entity</param>
            <param name="isNoDataClear">取得したデータ数以降をクリアする場合は true。それ以外の場合は false。</param>
            <remarks>
            指定されたEntityに実行結果のデータを格納します。
            この処理はEntityの行数分実行され、それ以降のデータは切り捨てられます。
            また、<paramref name="isNoDataClear"/> がtrueで、Entityの行数に実行結果のデータが満たなかった場合、それ以降のデータはクリアされます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.ReFillEntity(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            指定されたEntityにデータを格納し、取得したデータ件数にEntityを合わせます。
            </summary>
            <param name="entity">Entity</param>
            <remarks>
            指定されたEntityに実行結果のデータを格納します。
            実行結果のデータ分実行され、Entityのほうがデータ数が多い場合は、Entityのデータ数を実行結果のデータ件数に合わせます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.ReFillEntites(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase[])">
            <summary>
            指定されたEntityにデータを格納し、取得したデータ件数にEntityを合わせます。
            </summary>
            <param name="entities">Entity</param>
            <remarks>
            指定されたEntityに実行結果のデータを格納します。
            実行結果のデータ分実行され、Entityのほうがデータ数が多い場合は、Entityのデータ数を実行結果のデータ件数に合わせます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.FillEntityRow(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase)">
            <summary>
            現在のレコードのデータをEntity行へ設定します。
            </summary>
            <param name="row">Entity行</param>
            <remarks>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.NextRow"/> が正常に完了した場合にのみ実行してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.FillEntityRows(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase[])">
            <summary>
            現在のレコードのデータをEntity行へ設定します。
            </summary>
            <param name="rows">Entity行</param>
            <remarks>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.NextRow"/> が正常に完了した場合にのみ実行してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.GetDataSet">
            <summary>
            実行結果を<see cref="T:System.Data.DataSet"/> に格納して返します。
            </summary>
            <returns>実行結果を格納した<see cref="T:System.Data.DataSet"/></returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader">
            <summary>
            実行結果のデータを取得するための<see cref="T:System.Data.Common.DbDataReader"/>を取得します。
            </summary>
            <value><see cref="T:System.Data.Common.DbDataReader"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Retry">
            <summary>
            リトライ情報を取得します。
            </summary>
            <value>リトライ情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.RecordsAffected">
            <summary>
            SQLステートメントの実行によって影響を受けた行数を取得します。
            </summary>
            <value>影響を受けた行数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.HasRows">
            <summary>
            1行以上の行が格納されているかを取得します。
            </summary>
            <value>1行以上のデータが格納されている場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.HasSingleRows">
            <summary>
            1行のみ格納されているかを取得します。
            </summary>
            <value>1行のみ格納されている場合は true。それ以外の場合は false。</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>を次のレコードに進めます。データが正常に取得できなくなるため、データの参照が不要な場合に利用してください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.HasMultipleRows">
            <summary>
            2行以上の行が格納されているかを取得します。
            </summary>
            <value>2行以上の行が格納されている場合は true。それ以外の場合は false。</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>を次のレコードに進めます。データが正常に取得できなくなるため、データの参照が不要な場合に利用してください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.RowCount">
            <summary>
            格納されている行数を取得します。
            </summary>
            <value>格納されている行数</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Reader"/>を次のレコードに進めます。データが正常に取得できなくなるため、データの参照が不要な場合に利用してください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Item(System.Int32)">
            <summary>
            現在のレコードの指定された位置のデータを取得します。
            </summary>
            <param name="index">列の位置</param>
            <value>現在のレコードの指定された位置のデータ</value>
            <remarks></remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet.Item(System.String)">
            <summary>
            現在のレコードの指定された列名のデータを取得します。
            </summary>
            <param name="name">列名</param>
            <value>現在のレコードの指定された列名のデータ</value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet._recordsAffected">
            <summary>
            SQLによって影響を受けた行数です。
            </summary>
            <remarks>
            未実行の場合は負の数を返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.#ctor(System.Data.Common.DbDataReader,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseRetry)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="reader">ExecuteReaderの戻り値</param>
            <param name="retry">実行時のリトライ情報</param>
            <remarks></remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.#ctor(System.Int32,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseRetry)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="recordsAffected">SQLによって影響を受けた行数</param>
            <param name="retry">実行時のリトライ情報</param>
            <remarks></remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.NextRow">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.NextResult">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.GetEntityRows(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.GetEntitiesRows(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase[])">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.GetEntities(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase[])">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.FillEntity(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.FillEntites(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase[],System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.ReFillEntity(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.ReFillEntites(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase[])">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.FillEntityRow(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.FillEntityRows(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase[])">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.GetDataSet">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.CreateSchemaDataTable">
            <summary>
            <see cref="T:System.Data.Common.DbDataReader"/>のスキーマ情報から空の<see cref="T:System.Data.DataTable"/>を作成します。
            </summary>
            <returns>空の<see cref="T:System.Data.DataTable"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.GetSchemaAnalysisInfos(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase[])">
            <summary>
            クエリ結果から解析情報を取得します。
            </summary>
            <param name="rows">設定するEntityRow配列</param>
            <returns>解析情報一覧</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.Reader">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.Retry">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.RecordsAffected">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.HasRows">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.HasSingleRows">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.HasMultipleRows">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.RowCount">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseResultSet.SchemaAnalysisInfos">
            <summary>
            解析情報の一覧を取得、設定します。
            </summary>
            <value>解析情報の一覧</value>
            <remarks>
            FillEntityRow及び、FillEntityRowsでのデータ取得時に作成されます。<br/>
            <see cref="T:System.Tuple`3"/>の各要素には以下の項目が設定されます。<br/>
            <see cref="P:System.Tuple`3.Item1"/> ... DbDataReader内のインデックス<br/>
            <see cref="P:System.Tuple`3.Item2"/> ... 格納するEntityのプロパティ名<br/>
            <see cref="P:System.Tuple`3.Item3"/> ... rows内のインデックス<br/>
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseRetry">
            <summary>
            データベースリトライ情報を表すクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseRetry">
            <summary>
            リトライ情報を表すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseRetry.JudgmentException(System.Int32,System.Exception,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            リトライを行ってもよい<see cref="T:System.Exception"/>かを判定します。
            </summary>
            <param name="count">現在のリトライ回数</param>
            <param name="ex">例外</param>
            <param name="section">セクション</param>
            <remarks>
            リトライできない<see cref="T:System.Exception"/> の場合は例外がスローされます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseRetry.IsRetry(System.Int32,System.Exception,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            リトライを行ってもよいかを判定します。
            </summary>
            <param name="count">現在のリトライ回数</param>
            <param name="ex">例外</param>
            <param name="section">セクション</param>
            <returns>リトライを行ってもよい場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseRetry.IsLockTimeout(System.Exception)">
            <summary>
            ロックタイムアウトでエラーが発生したかを判定します。
            </summary>
            <param name="ex">例外</param>
            <returns>ロックタイムアウトの場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseRetry.IsDeadlock(System.Exception)">
            <summary>
            デッドロックでエラーが発生したかを判定します。
            </summary>
            <param name="ex">例外</param>
            <returns>デッドロックの場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseRetry.IsCommandTimeout(System.Exception)">
            <summary>
            コマンドタイムアウトでエラーが発生したかを判定します。
            </summary>
            <param name="ex">例外</param>
            <returns>コマンドタイムアウトの場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseRetry.RetryCount">
            <summary>
            リトライ回数を取得、設定します。
            </summary>
            <value>リトライ回数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseRetry.NextWaitTime">
            <summary>
            次回実行までの待機時間をミリ秒で取得、設定します。
            </summary>
            <value>待機時間(ミリ秒)</value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseRetry.ERROR_NETNAME_DELETED">
            <summary>
            ネットワークエラーコードを表す定数です。
            </summary>
            <remarks>WIN32のエラーコードのメッセージは「指定されたネットワーク名は利用できません。」</remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseRetry.DEFAULT_RETRY_COUNT">
            <summary>
            標準リトライ回数を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseRetry.DEFAULT_WAIT_TIME">
            <summary>
            処理に失敗した場合、次にリトライするまでのデフォルト時間を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseRetry.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseRetry"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseRetry.JudgmentException(System.Int32,System.Exception,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseRetry.IsRetry(System.Int32,System.Exception,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseRetry.IsLockTimeout(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseRetry.IsDeadlock(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseRetry.IsCommandTimeout(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseRetry.Clone">
            <summary>
            クローンの作成
            </summary>
            <returns>コピーされたリトライ情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseRetry.Wait">
            <summary>
            次の処理実行まで待機を行います。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseRetry.RetryCount">
            <summary>
            リトライ回数を取得、設定します。
            </summary>
            <value>リトライ回数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseRetry.NextWaitTime">
            <summary>
            処理に失敗した場合、次にリトライするまでの時間をミリ秒で取得、設定します。
            </summary>
            <value>リトライまでの時間(ミリ秒)</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection">
            <summary>
            データベースセクションを表すクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection">
            <summary>
            データベースセクションインターフェース
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.CreateCommand">
            <summary>
            <see cref="T:System.Data.Common.DbCommand"/>を作成します。
            </summary>
            <returns><see cref="T:System.Data.Common.DbCommand"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.CreateCommandBuilder">
            <summary>
            <see cref="T:System.Data.Common.DbCommandBuilder"/>を作成します。
            </summary>
            <returns><see cref="T:System.Data.Common.DbCommandBuilder"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.CreateDataAdapter">
            <summary>
            <see cref="T:System.Data.Common.DbDataAdapter"/>を作成します。
            </summary>
            <returns><see cref="T:System.Data.Common.DbDataAdapter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.CreateParameter">
            <summary>
            <see cref="T:System.Data.Common.DbParameter"/>を作成します。
            </summary>
            <returns><see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.BeginTran">
            <summary>
            データベーストランザクションを開始し、トランザクションを管理するオブジェクトを返します。
            </summary>
            <returns>トランザクション管理オブジェクト</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.Connection">
            <summary>
            データベース接続を管理するオブジェクトを取得します。
            </summary>
            <value>データベース接続を管理するオブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.Command">
            <summary>
            SQLステートメントを実行するための<see cref="T:System.Data.Common.DbCommand"/>を取得します。
            </summary>
            <value><see cref="T:System.Data.Common.DbCommand"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.CommandBuilder">
            <summary>
            コマンドを組み立てるための<see cref="T:System.Data.Common.DbCommandBuilder"/>を取得します。
            </summary>
            <value><see cref="T:System.Data.Common.DbCommandBuilder"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.DataAdapter">
            <summary>
            データを操作するための<see cref="T:System.Data.Common.DbDataAdapter"/>を取得します。
            </summary>
            <value><see cref="T:System.Data.Common.DbDataAdapter"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.Retry">
            <summary>
            リトライ情報を取得、設定します。
            </summary>
            <value>リトライ情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.Timeout">
            <summary>
            タイムアウト情報を取得、設定します。
            </summary>
            <value>タイムアウト情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.MaxParamaterCount">
            <summary>
            パラメータの最大数を取得します。
            </summary>
            <value>パラメータの最大数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.IsConnectionKeep">
            <summary>
            オブジェクトが破棄されても接続を維持するかを取得、設定します。
            </summary>
            <value>接続を維持する場合は true。それ以外の場合は false。</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection.Disposed">
            <summary>
            オブジェクトが破棄される場合に発生します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="conn">データベース接続情報</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.isConnectionKeep">
            <summary>
            オブジェクトが破棄されても接続を維持するかを取得、設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.CreateCommand">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.CreateCommandBuilder">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.CreateDataAdapter">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.CreateParameter">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.BeginTran">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.OnDisposed(System.EventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.Disposed"/>イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.Connection">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.Command">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.CommandBuilder">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.DataAdapter">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.Retry">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.Timeout">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.MaxParamaterCount">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.IsConnectionKeep">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSection.Disposed">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSectionExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSectionExtensions.GetProviderFactory(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            <see cref="T:System.Data.Common.DbProviderFactory"/>のインスタンスを取得します。
            </summary>
            <param name="section"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection"/>インスタンス</param>
            <returns><see cref="T:System.Data.Common.DbProviderFactory"/>インスタンス</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSectionExtensions.GetSelectedCommand(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            指定されたSELECTステートメントを実行し、実行した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand"/>を取得します。
            </summary>
            <param name="section">セクション</param>
            <param name="query">SELECTステートメントを表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/>インスタンス</param>
            <param name="dbParams">パラメータ</param>
            <param name="lockOp">ロック操作フラグ</param>
            <returns>SELECTを実行した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSectionExtensions.GetSelectedCommand(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            指定されたSELECTステートメントを実行し、実行した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand"/>を取得します。
            </summary>
            <param name="section">セクション</param>
            <param name="name">実行するステートメントに付けられる名前</param>
            <param name="query">SELECTステートメント文字列</param>
            <param name="dbParams">パラメータ</param>
            <param name="lockOp">ロック操作フラグ</param>
            <returns>SELECTを実行した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseCommand"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSectionExtensions.ExecuteCommand(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String)">
            <summary>
            指定されたSQLステートメントを実行します。
            </summary>
            <param name="section">セクション</param>
            <param name="query">実行するSQLステートメント</param>
            <param name="queryName">実行するステートメントに付けられる名前</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSectionExtensions.ExecuteCommand(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.String)">
            <summary>
            指定されたSQLステートメントを実行します。
            </summary>
            <param name="section">セクション</param>
            <param name="query">実行するSQLステートメント</param>
            <param name="dbParams">パラメータ</param>
            <param name="queryName">実行するステートメントに付けられる名前</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSectionExtensions.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            指定されたSELECTステートメントを実行し、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/>を取得します。
            </summary>
            <param name="section">セクション</param>
            <param name="query">SELECTステートメントを表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/>インスタンス</param>
            <param name="dbParams">パラメータ</param>
            <param name="lockOp">ロック操作フラグ</param>
            <returns>SELECTステートメントが返す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/>結果インスタンス</returns>
            <remarks>
            戻り値の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/>結果インスタンスは自動で破棄されないため、必ず呼び出し元にて破棄を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSectionExtensions.GetSelectedResult(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation)">
            <summary>
            指定されたSELECTステートメントを実行し、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/>を取得します。
            </summary>
            <param name="section">セクション</param>
            <param name="name">実行するステートメントに付けられる名前</param>
            <param name="query">SELECTステートメントを表す文字列</param>
            <param name="dbParams">パラメータ</param>
            <param name="lockOp">ロック操作フラグ</param>
            <returns>SELECTステートメントが返す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/>結果インスタンス</returns>
            <remarks>
            戻り値の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet"/>結果インスタンスは自動で破棄されないため、必ず呼び出し元にて破棄を行ってください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSectionExtensions.ExecScalarFunction(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Object[])">
            <summary>
            スカラーファンクションの実行し、結果を返します。
            </summary>
            <param name="section">セクション</param>
            <param name="functionName">スカラーファンクション名</param>
            <param name="values">引数</param>
            <returns>スカラーファンクションの戻り値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSectionExtensions.IsExistsObject(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String)">
            <summary>
            オブジェクトの存在チェックを実行します。
            </summary>
            <param name="section">セクション</param>
            <param name="objectName">判定するオブジェクト名</param>
            <returns>存在する場合は true。それ以外の場合は false。</returns>
            <remarks>
            オブジェクト名にはテーブル名やビュー名、ストアド名などを指定することができます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSectionExtensions.DropTable(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String)">
            <summary>
            テーブルの削除を行います。
            </summary>
            <param name="section">セクション</param>
            <param name="name">削除するテーブルの名前</param>
            <remarks>
            テーブルをDROPします。一時テーブル以外は利用しないでください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSectionExtensions.DropView(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String)">
            <summary>
            ビューの削除を行います。
            </summary>
            <param name="section">セクション</param>
            <param name="name">削除するビューの名前</param>
            <remarks>
            ビューをDROPします。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSectionExtensions.GetCurrentDate(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            データベースの現在日付を取得します。
            </summary>
            <param name="section">セクション</param>
            <returns>データベースの現在日付</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSectionExtensions.SetLockTimeout(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            ロックタイムアウトの設定を行います。
            </summary>
            <param name="section">セクション</param>
            <remarks>セクションに紐づいているロックタイムアウトを設定します。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseSectionExtensions.SetLockTimeout(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32)">
            <summary>
            ロックタイムアウトの設定を行います。
            </summary>
            <param name="section">セクション</param>
            <param name="timeout">ロックタイムアウト値（ミリ秒）</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction">
            <summary>
            データベースのトランザクションを管理するクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction">
            <summary>
            データベースのトランザクションを管理するインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction.Commit">
            <summary>
            トランザクションが問題なく完了したことを通知します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction.Rollback">
            <summary>
            トランザクションが何らかの理由によりトランザクション前の状態に戻すことを通知します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction.RefreshUpdateDate">
            <summary>
            更新日付をデータベースの現在日付で更新します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction.Transaction">
            <summary>
            <see cref="T:System.Data.Common.DbTransaction"/>を取得します。
            </summary>
            <value><see cref="T:System.Data.Common.DbTransaction"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction.ParentSection">
            <summary>
            親セクションを取得します。
            </summary>
            <value>親セクション</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction.UseAutoUpdateInfo">
            <summary>
            更新情報の自動更新機能を使用するかを取得、設定します。
            </summary>
            <value>自動更新する場合は true。それ以外の場合は false。</value>
            <remarks>
            更新情報とは「更新者」「更新日付」を示します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction.UseAutoRegisteredInfo">
            <summary>
            登録情報の自動更新機能を使用するかを取得、設定します。
            </summary>
            <value>自動更新する場合は true。それ以外の場合は false。</value>
            <remarks>
            登録情報とは「登録者」「登録日付」を示します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction.UpdateId">
            <summary>
            更新者IDを取得、設定します。
            </summary>
            <value>更新者ID</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction.UseAutoUpdateInfo"/> がtrueの場合、更新者がこの値で更新されます。
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction.UseAutoRegisteredInfo"/> がtureの場合、登録者がこの値で更新されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction.UpdateDate">
            <summary>
            更新日付を取得、設定します。
            </summary>
            <value>更新日付</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction.UseAutoUpdateInfo"/> がtrueの場合、更新日付がこの値で更新されます。
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction.UseAutoRegisteredInfo"/> がtureの場合、登録日付がこの値で更新されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection,System.Data.Common.DbTransaction)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="conn">データベース接続情報</param>
            <param name="tran">トランザクションを表す<see cref="T:System.Data.Common.DbTransaction"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Data.Common.DbTransaction)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="section">セクション</param>
            <param name="tran">トランザクションを表す<see cref="T:System.Data.Common.DbTransaction"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.CreateCommand">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.Commit">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.Rollback">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.RefreshUpdateDate">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.Connection">
            <summary>
            データベース接続情報を取得します。
            </summary>
            <value>データベース接続情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.IsConnectionKeep">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.Transaction">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.ParentSection">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.UseAutoUpdateInfo">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.UseAutoRegisteredInfo">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.UpdateId">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.UpdateDate">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseTransaction.TransactionOpen">
            <summary>
            トランザクションが開始されたかを取得、設定します。
            </summary>
            <value>トランザクションが開始されている場合は true。それ以外の場合は false。</value>
            <remarks></remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation">
            <summary>
            ロック操作を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation.None">
            <summary>
            ロックなし
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation.Now">
            <summary>
            即時ロック
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.LockOperation.Read">
            <summary>
            読み込み時にロック
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CommonTableExpressionCollection">
            <summary>
            共通テーブル(CTE)を管理するコレクションクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1">
            <summary>
            SQLステートメントを管理するコレクション基底クラスです。
            </summary>
            <typeparam name="T">管理するSQLステートメントの型</typeparam>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatementCollection`1">
            <summary>
            SQLステートメントを管理するコレクションインターフェースです。
            </summary>
            <typeparam name="T">管理するSQLステートメントの型</typeparam>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatement">
            <summary>
            SQLステートメントを表すインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatement.Build">
            <summary>
            SQLステートメントを表す文字列を作成し、返します。
            </summary>
            <returns>SQLステートメントを表す文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatement.Equals(System.String)">
            <summary>
            SQLステートメントの名前が一致するか判定を行います。
            </summary>
            <param name="name">SQLステートメントの名前</param>
            <returns>SQLステートメントの名前が一致するされた場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatement.Name">
            <summary>
            SQLステートメントの名前を取得、設定します。
            </summary>
            <value>SQLステートメントの名前</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatementCollection`1.Contains(System.String)">
            <summary>
            <paramref name="name"/>に一致するSQLステートメントが存在するかを判定します。
            </summary>
            <param name="name">SQLステートメントの名称</param>
            <returns>SQLステートメントが存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatementCollection`1.GetItems(System.String)">
            <summary>
            <paramref name="name"/>に一致するSQLステートメントをすべて取得します。
            </summary>
            <param name="name">SQLステートメント名</param>
            <returns>SQLステートメント</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatementCollection`1.IndexOf(System.String)">
            <summary>
            <paramref name="name"/> に一致する要素が最初に見つかった位置を取得します。
            </summary>
            <param name="name">SQLステートメントの名称</param>
            <returns><paramref name="name"/> に一致する最初の位置</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatementCollection`1.LastIndexOf(System.String)">
            <summary>
            <paramref name="name"/> に一致する要素が最後に見つかった位置を取得します。
            </summary>
            <param name="name">SQLステートメントの名称</param>
            <returns><paramref name="name"/> に一致する最後の位置</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatementCollection`1.Remove(System.String)">
            <summary>
            <paramref name="name"/> に一致する最初の要素を削除します。
            </summary>
            <param name="name">SQLステートメントの名称</param>
            <returns><paramref name="name"/> に一致する最初の要素を削除した場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatementCollection`1.Move(`0,System.Int32)">
            <summary>
            <paramref name="item"/> を<paramref name="index"/> に移動します。
            </summary>
            <param name="item">SQLステートメント</param>
            <param name="index">移動先の位置</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatementCollection`1.Move(System.Int32,System.Int32)">
            <summary>
            <paramref name="oldIndex"/> の位置にあるSQLステートメントを<paramref name="newIndex"/> に移動します。
            </summary>
            <param name="oldIndex">移動元インデックス</param>
            <param name="newIndex">移動先インデックス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatementCollection`1.Move(System.String,System.Int32)">
            <summary>
            <paramref name="name"/> に一致する要素を<paramref name="index"/> に移動します。
            </summary>
            <param name="name">SQLステートメントの名称</param>
            <param name="index">移動先の位置</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatementCollection`1.Item(System.String)">
            <summary>
            <paramref name="name"/>に一致するSQLステートメントを取得します。
            </summary>
            <param name="name">SQLステートメント名</param>
            <value>SQLステートメント</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1.Build">
            <summary>
            SQLステートメントを表す文字列を作成し、返します。
            </summary>
            <returns>SQLステートメントを表す文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1.AddMain(`0)">
            <summary>
            SQLステートメントの追加を行います。
            </summary>
            <param name="item">SQLステートメント</param>
            <returns>追加したSQLステートメント</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1.InsertMain(System.Int32,`0)">
            <summary>
            SQLステートメントの挿入を行います。
            </summary>
            <param name="index">挿入位置</param>
            <param name="item">SQLステートメント</param>
            <returns>挿入したSQLステートメント</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1.Contains(System.String)">
            <summary>
            <paramref name="name"/>に一致するSQLステートメントが存在するかを判定します。
            </summary>
            <param name="name">SQLステートメントの名称</param>
            <returns>SQLステートメントが存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1.GetItems(System.String)">
            <summary>
            <paramref name="name"/>に一致するSQLステートメントをすべて取得します。
            </summary>
            <param name="name">SQLステートメント名</param>
            <returns>SQLステートメント</returns>
            <remarks>
            各要素の<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatement.Equals(System.String)"/> を利用して一致する要素を算出します。
            そのため効率はあまりよくありません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1.IndexOf(System.String)">
            <summary>
            <paramref name="name"/> に一致する要素が最初に見つかった位置を取得します。
            </summary>
            <param name="name">SQLステートメントの名称</param>
            <returns><paramref name="name"/> に一致する最初の位置</returns>
            <remarks>
            <paramref name="name"/> に一致する要素が見つからなかった場合、負数を返します。
            各要素の<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatement.Equals(System.String)"/> を利用して一致する要素を算出します。
            そのため効率はあまりよくありません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1.LastIndexOf(System.String)">
            <summary>
            <paramref name="name"/> に一致する要素が最後に見つかった位置を取得します。
            </summary>
            <param name="name">SQLステートメントの名称</param>
            <returns><paramref name="name"/> に一致する最後の位置</returns>
            <remarks>
            <paramref name="name"/> に一致する要素が見つからなかった場合、負数を返します。
            各要素の<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatement.Equals(System.String)"/> を利用して一致する要素を算出します。
            そのため効率はあまりよくありません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1.Remove(System.String)">
            <summary>
            <paramref name="name"/> に一致する最初の要素を削除します。
            </summary>
            <param name="name">SQLステートメントの名称</param>
            <returns><paramref name="name"/> に一致する最初の要素を削除した場合は true。それ以外の場合は false。</returns>
            <remarks>
            各要素の<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatement.Equals(System.String)"/> を利用して一致する要素を算出します。
            そのため効率はあまりよくありません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1.Move(`0,System.Int32)">
            <summary>
            <paramref name="item"/> を<paramref name="index"/> に移動します。
            </summary>
            <param name="item">SQLステートメント</param>
            <param name="index">移動先の位置</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1.Move(System.Int32,System.Int32)">
            <summary>
            <paramref name="oldIndex"/> の位置にあるSQLステートメントを<paramref name="newIndex"/> に移動します。
            </summary>
            <param name="oldIndex">移動元インデックス</param>
            <param name="newIndex">移動先インデックス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1.Move(System.String,System.Int32)">
            <summary>
            <paramref name="name"/> に一致する要素を<paramref name="index"/> に移動します。
            </summary>
            <param name="name">SQLステートメントの名称</param>
            <param name="index">移動先の位置</param>
            <remarks>
            各要素の<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatement.Equals(System.String)"/> を利用して一致する要素を算出します。
            そのため効率はあまりよくありません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1.Equals(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1"/> の名称が一致するか判断します。
            </summary>
            <param name="name"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1"/> の名称</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1"/> の名称が一致する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1.Name">
            <summary>
            SQLステートメントの名称を取得、設定します。
            </summary>
            <value>SQLステートメントの名称</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatementCollection`1.Item(System.String)">
            <summary>
            <paramref name="name"/>に一致するSQLステートメントを取得します。
            </summary>
            <param name="name">SQLステートメント名</param>
            <value>SQLステートメント</value>
            <remarks>
            各要素の<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.ISqlStatement.Equals(System.String)"/> を利用して一致する要素を算出します。
            そのため効率はあまりよくありません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CommonTableExpressionCollection.Find(System.String)">
            <summary>
            指定の名称のSELECTステートメントを返します。
            </summary>
            <param name="name">検索する名称</param>
            <returns>検索されたSELECTステートメント</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CommonTableExpressionCollection.AsEnumerableForQuery">
            <summary>
            現在保持しているCTEをすべて返します。
            </summary>
            <returns>CTE</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CommonTableExpressionCollection.Add(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery)">
            <summary>
            SELECTステートメントを追加します。
            </summary>
            <param name="item">追加するSELECTステートメント</param>
            <returns>追加したSELECTステートメント</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CommonTableExpressionCollection.Add(System.String)">
            <summary>
            新しいCTEを追加します。
            </summary>
            <param name="name">追加するCTEの名称</param>
            <returns>追加したSELECTステートメント</returns>
            <remarks>
            このメソッドは名称だけを指定してSELECTステートメントを追加します。
            戻り値の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を呼び出した後に必ず設定してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CommonTableExpressionCollection.Build">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CommonTableExpressionCollection.SetQuery(System.Text.StringBuilder,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery)">
            <summary>
            <paramref name="query"/> をCTEのWITH句に変換して <paramref name="sql"/>に設定します。
            </summary>
            <param name="sql">クエリバッファ</param>
            <param name="query">SELECTステートメント</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CommonTableExpressionCollection.GetHints">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint"/> を取得します。
            </summary>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint"/></returns>
            <remarks>
            インスタンスが保持している<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint"/>をすべて取得します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.CommonTableExpressionCollection.Name">
            <summary>
            CTEのコレクションである文字列を取得します。
            </summary>
            <value>CTEのコレクションを表す文字列</value>
            <remarks>
            この文字列は使用されません。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.DeleteQueryBuilder">
            <summary>
            テーブルのレコードを削除するためのクエリを作成するためのクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.DeleteQueryBuilder.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.DeleteQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.DeleteQueryBuilder.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.DeleteQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">クエリ名称</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.DeleteQueryBuilder.Build(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            テーブルのレコードを削除するためのクエリを作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <returns>レコード削除クエリ</returns>
            <remarks>
            このメソッドを呼び出した場合 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder.Query"/> を作成したクエリで置き換えます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.DeleteQueryBuilder.WhereColumnNames">
            <summary>
            削除のキーとなる列名を取得、設定します。
            </summary>
            <value>削除のキーとなる列名</value>
            <remarks>
            nullの場合、プライマリキーで条件を作成します。
            要素数が0の配列の場合は条件なしですべてのデータが削除されます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery">
            <summary>
            SELECTステートメントのHAVING句を管理するクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery">
            <summary>
            SELECTステートメントのWHERE句を管理するクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement">
            <summary>
            テーブル名と列名を持つSQLステートメントの基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatement">
            <summary>
            SQLステートメントを表す基底クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatement.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatement"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">名称</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatement.Build">
            <summary>
            SQLステートメントを表す文字列を作成し、返します。
            </summary>
            <returns>SQLステートメントを表す文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatement.Equals(System.String)">
            <summary>
            SQLステートメントの名前が一致するか判定を行います。
            </summary>
            <param name="name">SQLステートメントの名前</param>
            <returns>SQLステートメントの名前が一致する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.SqlStatement.Name">
            <summary>
            SQLステートメントの名前を取得、設定します。
            </summary>
            <value>SQLステートメントの名前</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatement">
            <summary>
            テーブル名と列名を持つSQLステートメントのインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatement.Equals(System.String,System.String)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/>と一致するか判定を行います。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns><paramref name="table"/>、<paramref name="column"/>と一致する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatement.Table">
            <summary>
            テーブル名を取得、設定します。
            </summary>
            <value>テーブル名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatement.Column">
            <summary>
            列名を取得、設定します。
            </summary>
            <value>列名</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">名称</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.#ctor(System.String,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.GetName(System.String,System.String)">
            <summary>
            テーブル名と列名から名称を取得します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns>名称</returns>
            <remarks>
            <paramref name="table"/> がブランク以外の場合、「<paramref name="table"/>.<paramref name="column"/>」を返します。
            <paramref name="table"/> がブランクの場合、<paramref name="column"/> を返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.SetName(System.String,System.String@,System.String@)">
            <summary>
            名称をテーブル名と列名に分解します。
            </summary>
            <param name="name">名称</param>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <remarks>
            <paramref name="name"/> が「テーブル名.列名」というフォーマットで指定された場合、
            <paramref name="table"/> にはテーブル名を、<paramref name="column"/> には列名をそれぞれ設定します。
            <paramref name="name"/> にドット「.」が含まれない場合、
            <paramref name="table"/> にはブランクを、<paramref name="column"/> には<paramref name="name"/> をそれぞれ設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Equals(System.String,System.String)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/>と一致するか判定を行います。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns><paramref name="table"/>、<paramref name="column"/>と一致する場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="table"/> は<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Table"/>、<paramref name="column"/> は<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Column"/> とそれぞれ等しいかを比較します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Equals(System.String)">
            <summary>
            <paramref name="name"/> と一致するか判定を行います。
            </summary>
            <param name="name">名称</param>
            <returns><paramref name="name"/> と一致する場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="name"/> を<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.SetName(System.String,System.String@,System.String@)"/> を利用してテーブル名と列名に分解し、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Equals(System.String,System.String)"/> を利用して判定します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Table">
            <summary>
            テーブル名を取得、設定します。
            </summary>
            <value>テーブル名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Column">
            <summary>
            列名を取得、設定します。
            </summary>
            <value>列名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Name">
            <summary>
            名称を取得、設定します。
            </summary>
            <value>名称</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Table"/> がブランク以外の場合、「<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Table"/>.<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Column"/>」を返します。
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Table"/> がブランクの場合、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Column"/> を返します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.indent">
            <summary>
            WHERE句のインデントです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.multiIndent">
            <summary>
            複数のWHERE句のインデントです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="expression">WHERE句を表す文字列</param>
            <remarks>
            このコンストラクタを使用すると <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Name"/>  がブランクとなり、
            名称での検索が行えなくなるため、置換などが難しくなります。
            出来れば別のコンストラクタを使用してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.#ctor(System.String,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">テーブル名.列名</param>
            <param name="expression">検索条件</param>
            <remarks>
            <paramref name="name"/> は「テーブル名.列名」フォーマットで指定してください。<br/>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると<paramref name="name"/> に指定した文字に置き換わります。
            後からWHERE句の対象列を変更するのに適しています。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.#ctor(System.String,System.String,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="expression">検索条件</param>
            <remarks>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると「<paramref name="table"/>.<paramref name="column"/>」 に指定した文字に置き換わります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.#ctor(System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="sign">比較演算子を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign"/></param>
            <remarks>
            比較演算子<paramref name="sign"/> で初期化します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="expression">検索条件</param>
            <param name="value">検索条件の値</param>
            <remarks>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると「<paramref name="table"/>.<paramref name="column"/>」 に指定した文字に置き換わります。
            また、プレースフォルダ「[VALUE]」を利用すると「<paramref name="value"/>」 に指定した文字に置き換わります。
            後からWHERE句の対象列を変更するのに適しています。<br/>
            <paramref name="value"/>はエスケープ処理を行いません。必ずエスケープを行ってください。
            また、通常は変数名「@変数」などを指定することでパラメータ化クエリを作成することができます。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="expression">検索条件</param>
            <param name="value1">検索条件の値1</param>
            <param name="value2">検索条件の値2</param>
            <remarks>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると「<paramref name="table"/>.<paramref name="column"/>」 に指定した文字に置き換わります。
            また、プレースフォルダ「[VALUE1]」「[VALUE2]」を利用するとそれぞれ「<paramref name="value1"/>」「<paramref name="value2"/>」 に指定した文字に置き換わります。
            後からWHERE句の対象列を変更するのに適しています。<br/>
            <paramref name="value1"/>、<paramref name="value2"/>はエスケープ処理を行いません。必ずエスケープを行ってください。
            また、通常は変数名「@変数」などを指定することでパラメータ化クエリを作成することができます。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.#ctor(System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="sign">比較演算子を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign"/></param>
            <param name="value">検索条件の値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.GetWheresValue(System.String,System.String,System.String)">
            <summary>
            <paramref name="value"/> をスペースで分解して検索条件を作成し、返します。
            </summary>
            <param name="expression">WHERE句を表す文字列</param>
            <param name="column">列名</param>
            <param name="value">検索条件の値</param>
            <returns>分解して作成された検索条件</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.GetWhereValue(System.String,System.String,System.String,System.String)">
            <summary>
            検索条件を作成します。
            </summary>
            <param name="expression">WHERE句を表す文字列</param>
            <param name="column">列名</param>
            <param name="value1">検索条件の値1</param>
            <param name="value2">検索条件の値2</param>
            <returns>検索条件</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.GetColumn">
            <summary>
            検索条件の列名を取得します。
            </summary>
            <returns>検索条件の列名</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Build">
            <summary>
            WHERE句を作成し、返します。
            </summary>
            <returns>WHERE句を表す文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.System#ICloneable#Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Clone">
            <summary>
            このインスタンスが保持しているWHERE句のコピーを作成します。
            </summary>
            <returns>コピーされた<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/> </returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Indent">
            <summary>
            WHERE句のインデントを取得、設定します。
            </summary>
            <value>WHERE句のインデント</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.MultiIndent">
            <summary>
            複数のWHERE句のインデントを取得、設定します。
            </summary>
            <value>複数のWHERE句のインデント</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.JoinString"/> がブランク以外の場合、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Value"/> を分解して作成された
            各々の条件のインデントとして利用します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Expression">
            <summary>
            検索条件を取得、設定します。
            </summary>
            <value>検索条件</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Expression"/> には以下プレースフォルダが利用できます。<br/>
            [COLUMN] ... <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Name"/> に指定した文字に置き換わります。<br/>
            [VALUE] ... <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Value"/> に指定した文字に置き換わります。<br/>
            [VALUE1] ... <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Value1"/> に指定した文字に置き換わります。<br/>
            [VALUE2] ... <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Value2"/> に指定した文字に置き換わります。<br/>
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Value">
            <summary>
            単項式の場合の検索条件の値を取得、設定します。
            </summary>
            <value>単項式の場合の検索条件の値</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Expression"/> が単項式の場合、プレースフォルダ「[VALUE]」を<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Value"/> に指定した文字に置き換えます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Value1">
            <summary>
            二項式の場合の検索条件の値1を取得、設定します。
            </summary>
            <value>二項式の場合の検索条件の値1</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Expression"/> が二項式の場合、プレースフォルダ「[VALUE1]」を<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Value1"/> に指定した文字に置き換えます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Value2">
            <summary>
            二項式の場合の検索条件の値2を取得、設定します。
            </summary>
            <value>二項式の場合の検索条件の値2</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Expression"/> が二項式の場合、プレースフォルダ「[VALUE2]」を<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Value2"/> に指定した文字に置き換えます。
            二項式の場合、後ろの値になります。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.JoinString">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Value"/> にスペース区切りの複数条件が設定されている場合の結合文字列を取得、設定します。
            </summary>
            <value>結合文字列</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.JoinString"/> には「AND」、または「OR」文字列を指定します。
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.JoinString"/> がブランク以外の場合、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery.Value"/> をスペースで分解し、
            各々の値で条件を構成します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="expression">検索条件</param>
            <remarks>
            このコンストラクタを使用すると <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Name"/>  がブランクとなり、
            名称での検索が行えなくなるため、Replaceなどが難しくなります。
            出来れば別のコンストラクタを使用してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery.#ctor(System.String,System.String,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">テーブル名.列名</param>
            <param name="summary">集計関数</param>
            <param name="expression">検索条件</param>
            <remarks>
            <paramref name="name"/> は「テーブル名.列名」フォーマットで指定してください。<br/>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると<paramref name="name"/> に指定した文字に置き換わります。
            後からWHERE句の対象列を変更するのに適しています。<br/>
            <paramref name="summary"/>集計関数はAVG、COUNT、MAX、MIN、SUMを指定してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="summary">集計関数</param>
            <param name="expression">検索条件</param>
            <remarks>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると「<paramref name="table"/>.<paramref name="column"/>」 に指定した文字に置き換わります。
            後からWHERE句の対象列を変更するのに適しています。<br/>
            <paramref name="summary"/>集計関数はAVG、COUNT、MAX、MIN、SUMを指定してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="summary">集計関数</param>
            <param name="expression">検索条件</param>
            <param name="value">検索条件の値</param>
            <remarks>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると「<paramref name="table"/>.<paramref name="column"/>」 に指定した文字に置き換わります。
            また、プレースフォルダ「[VALUE]」を利用すると「<paramref name="value"/>」 に指定した文字に置き換わります。
            後からWHERE句の対象列を変更するのに適しています。<br/>
            <paramref name="value"/>はエスケープ処理を行いません。必ずエスケープを行ってください。
            また、通常は変数名「@変数」などを指定することでパラメータ化クエリを作成することができます。<br/>
            <paramref name="summary"/>集計関数はAVG、COUNT、MAX、MIN、SUMを指定してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="summary">集計関数</param>
            <param name="expression">検索条件</param>
            <param name="value1">検索条件の値1</param>
            <param name="value2">検索条件の値2</param>
            <remarks>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると「<paramref name="table"/>.<paramref name="column"/>」 に指定した文字に置き換わります。
            また、プレースフォルダ「[VALUE1]」「[VALUE2]」を利用するとそれぞれ「<paramref name="value1"/>」「<paramref name="value2"/>」 に指定した文字に置き換わります。
            後からWHERE句の対象列を変更するのに適しています。<br/>
            <paramref name="value1"/>、<paramref name="value2"/>はエスケープ処理を行いません。必ずエスケープを行ってください。
            また、通常は変数名「@変数」などを指定することでパラメータ化クエリを作成することができます。<br/>
            <paramref name="summary"/>集計関数はAVG、COUNT、MAX、MIN、SUMを指定してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery.GetColumn">
            <summary>
            条件の列情報を作成し、返します。
            </summary>
            <returns>列情報</returns>
            <remarks>
            このメソッドはプレースフォルダ「[COLUMN]」を置き換える文字列を作成します。
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Name"/> と <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery.Summary"/> を利用して作成されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery.Summary">
            <summary>
            集計関数を表す文字列を取得、設定します。
            </summary>
            <value>集計関数を表す文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery.Function">
            <summary>
            集計関数を表す <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.AggregateFunctions"/> を設定します。
            </summary>
            <value>集計関数を表す <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.AggregateFunctions"/></value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseType">
            <summary>
            接続データベースのアプリケーションのタイプを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseType.Non">
            <summary>
            なし
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseType.SQLServer">
            <summary>
            SQL Server
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString">
            <summary>
            データベース接続情報クラスです。
            </summary>
            <remarks>
            接続文字列を作成するのに利用します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString.PLACE_HOLDER_FOR_APPLICATION_NAME">
            <summary>
            データベース接続文字列の内、Application Nameを指定するプレースホルダ―を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString.PLACE_HOLDER_FOR_USER_NAME">
            <summary>
            データベース接続文字列の内、SQL認証のためのUser Idを指定するプレースホルダ―を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString.PLACE_HOLDER_FOR_PASSWORD">
            <summary>
            データベース接続文字列の内、SQL認証のためのPasswordを指定するプレースホルダ―を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString.ProviderNameForSqlServer">
            <summary>
            SQL Serverのプロバイダ名です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseType,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="type">データベースタイプ</param>
            <param name="connectionString">接続文字列</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString.ToString(System.String)">
            <summary>
            接続文字列作成を作成します。
            </summary>
            <param name="appName">アプリケーション名</param>
            <returns>接続文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString.ToProviderName(Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseType)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseType"/>からプロバイダ文字列の変換を行います。
            </summary>
            <param name="type"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseType"/></param>
            <returns>プロバイダ文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString.Type">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseType"/>を取得、設定します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseType"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString.ConnectionString">
            <summary>
            データベース接続文字列を取得、設定します。
            </summary>
            <value>データベース接続文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString.ProviderName">
            <summary>
            プロバイダ文字列を取得します。
            </summary>
            <value>プロバイダ文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString.UserName">
            <summary>
            接続ユーザー名を取得、設定します。
            </summary>
            <value>接続ユーザ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString.Password">
            <summary>
            接続パスワードを取得、設定します。
            </summary>
            <value>接続パスワード</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseFactory">
            <summary>
            データベースのセクションを作成するクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseFactory.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseFactory"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseFactory.GetInstance">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseFactory"/> インスタンスを取得します。
            </summary>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseFactory"/> インスタンス</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseFactory.GetConnection(Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString,System.String)">
            <summary>
            データベース接続を取得します。
            </summary>
            <param name="connStr">データベース接続情報</param>
            <param name="applicationName">アプリケーション名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseFactory.ClearConnection(Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseString,System.String)">
            <summary>
            データベース接続情報をクリアします。
            </summary>
            <param name="connStr">データベース接続情報</param>
            <param name="applicationName">アプリケーション名</param>
            <remarks>
            このメソッドは内部に保持しているコネクションをクリアし、DBスプールから解放します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseFactory.GetBulkInsert(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.DatabaseBulkInsertPriorityFlag)">
            <summary>
            一括挿入用の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseBulkInsert"/> を取得します。
            </summary>
            <param name="conn">データベース接続</param>
            <param name="priorityFlag">一括挿入優先フラグ</param>
            <returns>一括挿入用の<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseBulkInsert"/></returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">対応していないデータベースへ接続しようとした場合にスローされます。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseFactory.Connection_Disposed(System.Object,System.EventArgs)">
            <summary>
            接続が破棄された場合のイベントを処理します。
            </summary>
            <param name="sender">発生オブジェクト</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseFactory.SingletonInstance">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseFactory"/> インスタンスを取得、設定します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseFactory"/> インスタンス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseFactory.Connections">
            <summary>
            利用している接続の一覧を取得、設定します。
            </summary>
            <value>利用している接続の一覧</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.AggregateFunctions">
            <summary>
            集計関数を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.AggregateFunctions.NON">
            <summary>特になし</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.AggregateFunctions.AVG">
            <summary>AVG(平均)</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.AggregateFunctions.COUNT">
            <summary>COUNT(件数)</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.AggregateFunctions.MAX">
            <summary>MAX(最大値)</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.AggregateFunctions.MIN">
            <summary>MIN(最小値)</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.AggregateFunctions.SUM">
            <summary>SUM(集計)</summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.AggregateFunctionsExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.AggregateFunctions"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.AggregateFunctionsExtensions.GetFormat(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.AggregateFunctions)">
            <summary>
            集計関数を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.AggregateFunctions"/> をクエリに利用できる関数文字列に変換します。
            </summary>
            <param name="func">集計関数を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.AggregateFunctions"/></param>
            <returns>関数文字列</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatementCollection`1">
            <summary>
            テーブル名と列名のステートメントを管理するコレクション基底クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatementCollection`1">
            <summary>
            SQLの列名を保持するステートメントを管理するコレクションのインターフェース
            </summary>
            <typeparam name="T">管理するステートメントクラス</typeparam>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatementCollection`1.Contains(System.String,System.String)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/> に一致する要素が存在するか判定を行います。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns><paramref name="table"/>、<paramref name="column"/> に一致する要素が存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatementCollection`1.GetItems(System.String,System.String)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/> に一致する要素すべてを取得します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns><paramref name="table"/>、<paramref name="column"/> に一致する要素</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatementCollection`1.IndexOf(System.String,System.String)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/> に一致する要素が最初に見つかった位置を取得します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns><paramref name="table"/>、<paramref name="column"/> に一致する最初の位置</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatementCollection`1.LastIndexOf(System.String,System.String)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/> に一致する要素が最後に見つかった位置を取得します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns><paramref name="table"/>、<paramref name="column"/> に一致する最後の位置</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatementCollection`1.Remove(System.String,System.String)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/> に一致する最初の要素を削除します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns><paramref name="table"/>、<paramref name="column"/> に一致する最初の要素を削除した場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatementCollection`1.Move(System.String,System.String,System.Int32)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/> に一致する要素を<paramref name="index"/> に移動します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="index">移動先の位置</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatementCollection`1.Item(System.String,System.String)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/> に一致する要素を取得します。
            </summary>
            <value><paramref name="table"/>、<paramref name="column"/> に一致する要素</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatementCollection`1.Contains(System.String,System.String)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/> に一致する要素が存在するか判定を行います。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns><paramref name="table"/>、<paramref name="column"/> に一致する要素が存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatementCollection`1.GetItems(System.String,System.String)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/> に一致する要素すべてを取得します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns><paramref name="table"/>、<paramref name="column"/> に一致する要素</returns>
            <remarks>
            各要素の<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatement.Equals(System.String,System.String)"/> を利用して一致する要素を算出します。
            そのため効率はあまりよくありません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatementCollection`1.IndexOf(System.String,System.String)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/> に一致する要素が最初に見つかった位置を取得します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns><paramref name="table"/>、<paramref name="column"/> に一致する最初の位置</returns>
            <remarks>
            <paramref name="table"/>、<paramref name="column"/> に一致する要素が見つからなかった場合、負数を返します。
            各要素の<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatement.Equals(System.String,System.String)"/> を利用して一致する要素を算出します。
            そのため効率はあまりよくありません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatementCollection`1.LastIndexOf(System.String,System.String)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/> に一致する要素が最後に見つかった位置を取得します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns><paramref name="table"/>、<paramref name="column"/> に一致する最後の位置</returns>
            <remarks>
            <paramref name="table"/>、<paramref name="column"/> に一致する要素が見つからなかった場合、負数を返します。
            各要素の<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatement.Equals(System.String,System.String)"/> を利用して一致する要素を算出します。
            そのため効率はあまりよくありません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatementCollection`1.Move(System.String,System.String,System.Int32)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/> に一致する要素を<paramref name="index"/> に移動します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="index">移動先の位置</param>
            <remarks>
            各要素の<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatement.Equals(System.String,System.String)"/> を利用して一致する要素を算出します。
            そのため効率はあまりよくありません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatementCollection`1.Remove(System.String,System.String)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/> に一致する最初の要素を削除します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns><paramref name="table"/>、<paramref name="column"/> に一致する最初の要素を削除した場合は true。それ以外の場合は false。</returns>
            <remarks>
            各要素の<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatement.Equals(System.String,System.String)"/> を利用して一致する要素を算出します。
            そのため効率はあまりよくありません。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatementCollection`1.Item(System.String,System.String)">
            <summary>
            <paramref name="table"/>、<paramref name="column"/> に一致する要素を取得します。
            </summary>
            <value><paramref name="table"/>、<paramref name="column"/> に一致する要素</value>
            <remarks>
            各要素の<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Interfaces.IColumnStatement.Equals(System.String,System.String)"/> を利用して一致する要素を算出します。
            そのため効率はあまりよくありません。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.GroupType">
            <summary>
            集計タイプを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.GroupType.Non">
            <summary>特に指定なし</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.GroupType.ROLLUP">
            <summary>ROLLUPで集計挿入</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.GroupType.CUBE">
            <summary>CUBEで集計挿入</summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState">
            <summary>
            FROM句のテーブル接続子を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.TOP">
            <summary>FROM句の先頭時の接続子なし</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.INNER">
            <summary>INNER JOIN</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.LEFT">
            <summary>LEFT OUTER JOIN</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.RIGHT">
            <summary>RIGHT OUTER JOIN</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.FULL">
            <summary>FULL OUTER JOIN</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.CROSS">
            <summary>CROSS JOIN</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.CROSS_APPLY">
            <summary>CROSS APPLY</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.OUTER_APPLY">
            <summary>OUTER APPLY</summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinStateExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinStateExtensions.ToQuery(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState)">
            <summary>
            テーブル接続子を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState"/> を接続子文字列に変換します。
            </summary>
            <param name="state">テーブル接続子を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState"/></param>
            <returns>接続子文字列</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType">
            <summary>
            クエリヒントを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.HASH_GROUP">
            <summary>
            HASH_GROUP
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.ORDER_GROUP">
            <summary>
            ORDER_GROUP
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.CONCAT_UNION">
            <summary>
            CONCAT_UNION
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.HASH_UNION">
            <summary>
            HASH_UNION
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.MERGE_UNION">
            <summary>
            MERGE_UNION
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.LOOP_JOIN">
            <summary>
            LOOP_JOIN
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.MERGE_JOIN">
            <summary>
            MERGE_JOIN
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.HASH_JOIN">
            <summary>
            HASH_JOIN
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.EXPAND_VIEWS">
            <summary>
            EXPAND_VIEWS
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.FORCE_ORDER">
            <summary>
            FORCE_ORDER
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.IGNORE_NONCLUSTERED_COLUMNSTORE_INDEX">
            <summary>
            IGNORE_NONCLUSTERED_COLUMNSTORE_INDEX
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.KEEP_PLAN">
            <summary>
            KEEP_PLAN
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.KEEPFIXED_PLAN">
            <summary>
            KEEPFIXED_PLAN
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.OPTIMIZE_FOR">
            <summary>
            OPTIMIZE_FOR
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.OPTIMIZE_FOR_UNKNOWN">
            <summary>
            OPTIMIZE_FOR_UNKNOWN
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.PARAMETERIZATION_SIMPLE">
            <summary>
            PARAMETERIZATION_SIMPLE
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.PARAMETERIZATION_FORCED">
            <summary>
            PARAMETERIZATION_FORCED
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.RECOMPILE">
            <summary>
            RECOMPILE
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.ROBUST_PLAN">
            <summary>
            ROBUST_PLAN
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType.TABLE_HINT">
            <summary>
            TABLE_HINT
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintTypeExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintTypeExtensions.GetFormat(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType)">
            <summary>
            クエリヒントを表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType"/> をクエリヒント文字列に変換します。
            </summary>
            <param name="type">クエリヒントを表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType"/></param>
            <returns>クエリヒント文字列</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType">
            <summary>
            テーブルヒントを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.NOEXPAND">
            <summary>
            NOEXPAND
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.INDEX">
            <summary>
            INDEX
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.FORCESCAN">
            <summary>
            FORCESCAN
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.FORCESEEK">
            <summary>
            FORCESEEK
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.HOLDLOCK">
            <summary>
            HOLDLOCK
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.NOLOCK">
            <summary>
            NOLOCK
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.NOWAIT">
            <summary>
            NOWAIT
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.PAGLOCK">
            <summary>
            PAGLOCK
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.READCOMMITTED">
            <summary>
            READCOMMITTED
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.READCOMMITTEDLOCK">
            <summary>
            READCOMMITTEDLOCK
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.READPAST">
            <summary>
            READPAST
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.READUNCOMMITTED">
            <summary>
            READUNCOMMITTED
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.REPEATABLEREAD">
            <summary>
            REPEATABLEREAD
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.ROWLOCK">
            <summary>
            ROWLOCK
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.SERIALIZABLE">
            <summary>
            SERIALIZABLE
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.SNAPSHOT">
            <summary>
            SNAPSHOT
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.TABLOCK">
            <summary>
            TABLOCK
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.TABLOCKX">
            <summary>
            TABLOCKX
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.UPDLOCK">
            <summary>
            UPDLOCK
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType.XLOCK">
            <summary>
            XLOCK
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintTypeExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintTypeExtensions.GetFormat(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType)">
            <summary>
            テーブルヒントを表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType"/> をテーブルヒント文字列に変換します。
            </summary>
            <param name="type">テーブルヒントを表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType"/></param>
            <returns>テーブルヒント文字列</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery">
            <summary>
            SELECTステートメントのFROM句を管理するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.WHERE_INDENT">
            <summary>
            デフォルトの結合条件のインデントを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.TABLEHINT_INDEXT">
            <summary>
            デフォルトのテーブルヒントのインデントを表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">テーブル名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.#ctor(System.String,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">テーブルの別名</param>
            <param name="query">テーブル名、またはサブクエリ</param>
            <remarks>
            <paramref name="query"/> には基本、テーブル名を指定してください。
            サブクエリを指定する場合は必ずかっこで括ったクエリを指定する必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState,System.String,System.String,System.String[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="state">テーブル接続子を表す <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState"/></param>
            <param name="name">別名</param>
            <param name="query">テーブル名、またはサブクエリ</param>
            <param name="wheres">結合条件</param>
            <remarks>
            <paramref name="query"/> には基本、テーブル名を指定してください。
            サブクエリを指定する場合は必ずかっこで括ったクエリを指定する必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="query">クエリ</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.String[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="state">テーブル接続子を表す <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState"/></param>
            <param name="query">クエリ</param>
            <param name="wheres">結合条件</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.#ctor(System.String,System.String,System.String,System.String[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="state">テーブル接続子を表す文字列</param>
            <param name="name">別名</param>
            <param name="query">テーブル名、またはサブクエリ</param>
            <param name="wheres">結合条件</param>
            <remarks>
            <paramref name="query"/> には基本、テーブル名を指定してください。
            サブクエリを指定する場合は必ずかっこで括ったクエリを指定する必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.#ctor(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.String[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="state">テーブル接続子を表す文字列</param>
            <param name="query">クエリ</param>
            <param name="wheres">結合条件</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.AddWhere(System.String,System.String)">
            <summary>
            結合条件を追加します。
            </summary>
            <param name="column1">左辺</param>
            <param name="column2">右辺</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.AddWhere(System.String)">
            <summary>
            結合条件を追加します。
            </summary>
            <param name="where">結合条件を表す文字列</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.AddHint(System.String,System.String[])">
            <summary>
            テーブルのヒント句を追加します。
            </summary>
            <param name="hint">テーブルのヒント</param>
            <param name="params">ヒントに必要な引数</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.indent">
            <summary>
            FROM句のインデントです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.whereIndent">
            <summary>
            結合条件のインデントです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.hintIndent">
            <summary>
            テーブルヒントのインデントです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.wheres">
            <summary>
            結合条件です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.hints">
            <summary>
            テーブルヒントです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.subQuery">
            <summary>
            サブクエリです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.Build">
            <summary>
            FROM句を作成し、返します。
            </summary>
            <returns>FROM句を表す文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.Indent">
            <summary>
            FROM句のインデントを取得、設定します。
            </summary>
            <value>インデント</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.WhereIndent">
            <summary>
            結合条件のインデントを取得、設定します。
            </summary>
            <value>インデント</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.HintIndent">
            <summary>
            テーブルヒントのインデントを取得、設定します。
            </summary>
            <value>インデント</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.StateString">
            <summary>
            テーブル接続子文字列を取得、設定します。
            </summary>
            <value>結合条件文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.State">
            <summary>
            テーブル接続子を表す <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState"/>を設定します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.Query">
            <summary>
            テーブル名、またはクエリを取得、設定します。
            </summary>
            <value>テーブル名、またはクエリ</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.SubQuery"/>がnullの場合、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.Query"/>が優先されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.Wheres">
            <summary>
            結合条件を取得します。
            </summary>
            <value>結合条件</value>
            <remarks>
            このリストはANDで結合されます。
            OR条件などを使用する場合は、かっこで括り1要素として設定してください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.Hints">
            <summary>
            テーブルヒントを取得します。
            </summary>
            <value>テーブルヒント</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.SubQuery">
            <summary>
            サブクエリを取得、設定します。
            </summary>
            <value>サブクエリ</value>
            <remarks>
            FROM句をサブクエリとして使用する場合に設定します。
            サブクエリには共通テーブル(CTE)を使用することはできません。
            CTEを利用する場合はこのインスタンスに紐づく<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/>.<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.CTEs"/>に設定してください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery.Name">
            <summary>
            別名を取得、設定します。
            </summary>
            <value>別名</value>
            <remarks>エイリアス名として利用されます。</remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQueryCollection">
            <summary>
            FROM句を管理するコレクションクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQueryCollection.Add(System.String)">
            <summary>
            FROM句を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <returns>追加した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQueryCollection.Add(System.String,System.String)">
            <summary>
            FROM句を追加します。
            </summary>
            <param name="name">別名</param>
            <param name="query">テーブル名、またはサブクエリ</param>
            <returns>追加した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery"/></returns>
            <remarks>
            <paramref name="query"/> には基本、テーブル名を指定してください。
            サブクエリを指定する場合は必ずかっこで括ったクエリを指定する必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQueryCollection.Add(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState,System.String,System.String,System.String[])">
            <summary>
            FROM句を追加します。
            </summary>
            <param name="state">結合条件を表す <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState"/></param>
            <param name="name">別名</param>
            <param name="query">テーブル名、またはサブクエリ</param>
            <param name="wheres">接続条件</param>
            <returns>追加した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery"/></returns>
            <remarks>
            <paramref name="query"/> には基本、テーブル名を指定してください。
            サブクエリを指定する場合は必ずかっこで括ったクエリを指定する必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQueryCollection.Add(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery)">
            <summary>
            FROM句を追加します。
            </summary>
            <param name="query">クエリ</param>
            <returns>追加した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQueryCollection.Add(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.String[])">
            <summary>
            FROM句を追加します。
            </summary>
            <param name="state">結合条件を表す <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState"/></param>
            <param name="query">クエリ</param>
            <param name="wheres">接続条件</param>
            <returns>追加した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQueryCollection.Add(System.String,System.String,System.String,System.String[])">
            <summary>
            FROM句を追加します。
            </summary>
            <param name="state">結合条件を表す文字列</param>
            <param name="name">別名</param>
            <param name="query">テーブル名、またはサブクエリ</param>
            <param name="wheres">接続条件</param>
            <returns>追加した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery"/></returns>
            <remarks>
            <paramref name="query"/> には基本、テーブル名を指定してください。
            サブクエリを指定する場合は必ずかっこで括ったクエリを指定する必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQueryCollection.Add(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.String[])">
            <summary>
            FROM句を追加します。
            </summary>
            <param name="state">結合条件を表す文字列</param>
            <param name="query">クエリ</param>
            <param name="wheres">接続条件</param>
            <returns>追加した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQueryCollection.Build">
            <summary>
            FROM句の作成し、返します。
            </summary>
            <returns>FROM句を表す文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.FromQueryCollection.Name">
            <summary>
            FROM句のコレクションを表す文字列を取得します。
            </summary>
            <value>FROM句のコレクションを表す文字列</value>
            <remarks>
            この文字列は使用されません。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumn">
            <summary>
            SELECTステートメントのGROUP BY句を管理するクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumn.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumn"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">列名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumn.#ctor(System.String,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumn"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumn.indent">
            <summary>
            GROUP BY句のインデントです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumn.Build">
            <summary>
            GROUP BY句を作成し、返します。
            </summary>
            <returns>GROUP BY句を表す文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumn.Indent">
            <summary>
            GROUP BY句インデントを取得、設定します。
            </summary>
            <value>インデント</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumnCollection">
            <summary>
            GROUP BY句を管理するコレクションクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumnCollection.Add(System.String)">
            <summary>
            GROUP BY句を追加します。
            </summary>
            <param name="name">列名</param>
            <returns>追加した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumn"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumnCollection.Add(System.String,System.String)">
            <summary>
            GROUP BY句を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns>追加した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumn"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumnCollection.Build">
            <summary>
            GROUP BY句を作成し、返します。
            </summary>
            <returns>ORDER BY句を表す文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumnCollection.System#ICloneable#Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumnCollection.Clone">
            <summary>
            このインスタンスが保持しているGROUP BY句のコピーを作成します。
            </summary>
            <returns>コピーされた<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumnCollection"/> </returns>
            <remarks>
            このインスタンスのコピーを作成しますが、各要素はコピーを行いません。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumnCollection.GroupType">
            <summary>
            グループタイプを表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumnCollection.GroupType"/> 取得、設定します。
            </summary>
            <value>グループタイプを表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumnCollection.GroupType"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.GroupByColumnCollection.Name">
            <summary>
            GROUP BY句のコレクションを表す文字列を取得します。
            </summary>
            <value>GROUP BY句のコレクションを表す文字列</value>
            <remarks>
            この文字列は使用されません。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection">
            <summary>
            HAVING句を管理するコレクションクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection.JOIN_STRING_AND">
            <summary>
            AND結合文字列を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection.JOIN_STRING_OR">
            <summary>
            OR結合文字列を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection.joinString">
            <summary>
            条件の結合文字列です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection.Add(System.String)">
            <summary>
            HAVING句条件を追加します。
            </summary>
            <param name="expression">検索条件</param>
            <returns>追加した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection.Add(System.String,System.String,System.String)">
            <summary>
            HAVING句条件を追加します。
            </summary>
            <param name="name">テーブル名.列名</param>
            <param name="summary">集計関数</param>
            <param name="expression">検索条件</param>
            <returns>追加した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery"/></returns>
            <remarks>
            <paramref name="name"/> は「テーブル名.列名」フォーマットで指定してください。<br/>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると<paramref name="name"/> に指定した文字に置き換わります。
            後からWHERE句の対象列を変更するのに適しています。<br/>
            <paramref name="summary"/>集計関数はAVG、COUNT、MAX、MIN、SUMを指定してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection.Add(System.String,System.String,System.String,System.String)">
            <summary>
            HAVING句条件を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="summary">集計関数</param>
            <param name="expression">検索条件</param>
            <returns>追加した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery"/></returns>
            <remarks>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると「<paramref name="table"/>.<paramref name="column"/>」 に指定した文字に置き換わります。
            後からWHERE句の対象列を変更するのに適しています。<br/>
            <paramref name="summary"/>集計関数はAVG、COUNT、MAX、MIN、SUMを指定してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection.Add(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            HAVING句条件を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="summary">集計関数</param>
            <param name="expression">検索条件</param>
            <param name="value">検索条件の値</param>
            <returns>追加した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery"/></returns>
            <remarks>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると「<paramref name="table"/>.<paramref name="column"/>」 に指定した文字に置き換わります。
            また、プレースフォルダ「[VALUE]」を利用すると「<paramref name="value"/>」 に指定した文字に置き換わります。
            後からWHERE句の対象列を変更するのに適しています。<br/>
            <paramref name="value"/>はエスケープ処理を行いません。必ずエスケープを行ってください。
            また、通常は変数名「@変数」などを指定することでパラメータ化クエリを作成することができます。<br/>
            <paramref name="summary"/>集計関数はAVG、COUNT、MAX、MIN、SUMを指定してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection.Add(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            HAVING句条件を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="summary">集計関数</param>
            <param name="expression">検索条件</param>
            <param name="value1">検索条件の値1</param>
            <param name="value2">検索条件の値2</param>
            <returns>追加した <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQuery"/></returns>
            <remarks>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると「<paramref name="table"/>.<paramref name="column"/>」 に指定した文字に置き換わります。
            また、プレースフォルダ「[VALUE1]」「[VALUE2]」を利用するとそれぞれ「<paramref name="value1"/>」「<paramref name="value2"/>」 に指定した文字に置き換わります。
            後からWHERE句の対象列を変更するのに適しています。<br/>
            <paramref name="value1"/>、<paramref name="value2"/>はエスケープ処理を行いません。必ずエスケープを行ってください。
            また、通常は変数名「@変数」などを指定することでパラメータ化クエリを作成することができます。<br/>
            <paramref name="summary"/>集計関数はAVG、COUNT、MAX、MIN、SUMを指定してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection.Add(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection)">
            <summary>
            HAVING句条件を追加します。
            </summary>
            <param name="havings">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection"/></param>
            <remarks>
            <paramref name="havings"/> とインスタンスの<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection.JoinString"/> プロパティの値が違う場合、
            括弧「()」で括られ1要素として取り込まれます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection.Build">
            <summary>
            HAVING句を作成し、返します。
            </summary>
            <returns>HAVING句を表す文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection.System#ICloneable#Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection.Clone">
            <summary>
            このインスタンスが保持しているHAVING句のコピーを作成します。
            </summary>
            <returns>コピーされた<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection"/> </returns>
            <remarks>
            このインスタンスのコピーを作成しますが、各要素はコピーを行いません。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection.JoinString">
            <summary>
            条件の結合文字列を取得、設定します。
            </summary>
            <value>条件の結合文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.HavingQueryCollection.Name">
            <summary>
            HAVING句のコレクションを表す文字列を取得します。
            </summary>
            <value>HAVING句のコレクションを表す文字列</value>
            <remarks>
            この文字列は使用されません。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.InsertQueryBuilder">
            <summary>
            テーブルのレコードを登録するためのクエリを作成するためのクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.InsertQueryBuilder.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.InsertQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.InsertQueryBuilder.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.InsertQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">クエリ名称</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.InsertQueryBuilder.Build(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            テーブルのレコードを登録するためのクエリを作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <returns>レコード登録クエリ</returns>
            <remarks>
            このメソッドを呼び出した場合 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder.Query"/> を作成したクエリで置き換えます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumn">
            <summary>
            SELECTステートメントのORDER BY句を管理するクラスです。
            です。
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumn.indent">
            <summary>
            ORDER BY句のインデントです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumn.#ctor(System.String,System.Boolean)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumn"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">列名</param>
            <param name="isAscending">昇順(ASC)の場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumn.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumn"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="isAscending">昇順(ASC)の場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumn.Build">
            <summary>
            ORDER BY句を作成し、返します。
            </summary>
            <returns>ORDER BY句を表す文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumn.Indent">
            <summary>
            ORDER BY句のインデントを取得、設定します。
            </summary>
            <value>ORDER BY句のインデント</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumn.IsAscending">
            <summary>
            昇順(ASC)かを取得、設定します。
            </summary>
            <value>昇順(ASC)の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumnCollection">
            <summary>
            ORDER BY句を管理するコレクションクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumnCollection.Add(System.String,System.Boolean)">
            <summary>
            ORDER BY句を追加します。
            </summary>
            <param name="name">列名</param>
            <param name="isAscending">昇順(ASC)の場合は true。それ以外の場合は false。</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumn"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumnCollection.Add(System.String,System.String,System.Boolean)">
            <summary>
            ORDER BY句を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="isAscending">昇順(ASC)の場合は true。それ以外の場合は false。</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumn"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumnCollection.Insert(System.Int32,System.String,System.Boolean)">
            <summary>
            ORDER BY句を挿入します。
            </summary>
            <param name="index">挿入位置</param>
            <param name="name">列名</param>
            <param name="isAscending">昇順(ASC)の場合は true。それ以外の場合は false。</param>
            <returns>挿入した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumn"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumnCollection.Insert(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            ORDER BY句を挿入します。
            </summary>
            <param name="index">挿入位置</param>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="isAscending">昇順(ASC)の場合は true。それ以外の場合は false。</param>
            <returns>挿入した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumn"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumnCollection.Build">
            <summary>
            ORDER BY句を作成し、返します。
            </summary>
            <returns>ORDER BY句を表す文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.OrderByColumnCollection.Name">
            <summary>
            ORDER BY句のコレクションを表す文字列を取得します。
            </summary>
            <value>ORDER BY句のコレクションを表す文字列</value>
            <remarks>この文字列は使用されません。</remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint">
            <summary>
            SELECTステートメントのクエリヒント、またはテーブルヒントを管理するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.TABLE_HINT">
            <summary>
            テーブルヒントを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.values">
            <summary>
            クエリヒントに必要なパラメータ文字列
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.#ctor(System.String,System.String[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="hint">クエリヒントを表す文字列</param>
            <param name="params">クエリヒントに必要なパラメータ文字列</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType,System.String[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="hint">クエリヒントを表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType"/></param>
            <param name="params">クエリヒントに必要なパラメータ文字列</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.#ctor(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHintCollection)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="hints">テーブルヒント</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.#ctor(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType,System.String[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="hint">テーブルヒントを表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType"/></param>
            <param name="params">テーブルヒントに必要なパラメータ文字列</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.tableHints">
            <summary>
            テーブルヒントです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.Build">
            <summary>
            クエリヒント、またはテーブルヒントを作成し、返します。
            </summary>
            <returns>クエリヒント、またはテーブルヒント</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.Values">
            <summary>
            クエリヒントに必要なパラメータ文字列を取得します。
            </summary>
            <value>クエリヒントに必要なパラメータ文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.Item(System.Int32)">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.Values"/> の要素を取得、設定します。
            </summary>
            <value><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.Values"/> の要素</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.Count">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.Values"/> の件数を取得します。
            </summary>
            <value><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.Values"/> の件数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.TableName">
            <summary>
            テーブル名を取得、設定します。
            </summary>
            <value>テーブル名</value>
            <remarks>
            インスタンスをテーブルヒントとして利用する場合は必ず指定する必要があります。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.TableHints">
            <summary>
            テーブルヒントを取得します。
            </summary>
            <value>テーブルヒント</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint.IsTableHint">
            <summary>
            テーブルヒントかを取得します。
            </summary>
            <value>テーブルヒントの場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHintCollection">
            <summary>
            クエリヒントを管理するコレクションクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHintCollection.TABLEHINT_INDENT">
            <summary>
            デフォルトのテーブルヒントのインデントを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHintCollection.tableHintIndent">
            <summary>
            テーブルヒントのインデントです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHintCollection.Add(System.String,System.String[])">
            <summary>
            クエリヒントを追加します。
            </summary>
            <param name="hint">クエリヒントを表す文字列</param>
            <param name="params">クエリヒントに必要なパラメータ文字列</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHintCollection.Add(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType,System.String[])">
            <summary>
            クエリヒントを追加します。
            </summary>
            <param name="hint">クエリヒントを表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryHintType"/></param>
            <param name="params">クエリヒントに必要なパラメータ文字列</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHintCollection.Add(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHintCollection)">
            <summary>
            テーブルヒントを追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="hints">テーブルヒント</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHintCollection.Add(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType,System.String[])">
            <summary>
            テーブルヒントを追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="hint">テーブルヒント</param>
            <param name="params">テーブルヒントに必要なパラメータ文字列</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHintCollection.Build">
            <summary>
            クエリヒントを作成し、返します。
            </summary>
            <returns>クエリヒントを表す文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHintCollection.System#ICloneable#Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHintCollection.Clone">
            <summary>
            このインスタンスが保持しているクエリヒントのコピーを作成します。
            </summary>
            <returns>コピーされた<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHintCollection"/> </returns>
            <remarks>
            このインスタンスのコピーを作成しますが、各要素はコピーを行いません。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHintCollection.TableHintIndent">
            <summary>
            テーブルヒントのインデントを取得、設定します。
            </summary>
            <value>テーブルヒントのインデント</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHintCollection.Name">
            <summary>
            クエリヒントのコレクションを表す文字列を取得します。
            </summary>
            <value>クエリヒントのコレクションを表す文字列</value>
            <remarks>
            この文字列は使用されません。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn">
            <summary>
            SELECTステートメントのSELECT句の列を管理するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn.indent">
            <summary>
            SELECT句のインデントです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn.#ctor(System.String,System.String,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">別名</param>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <remarks>
            <paramref name="name"/>はクエリ生成時に角括弧「[]」で囲んでエスケープされます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn.#ctor(System.String,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">別名</param>
            <param name="query">SELECT句文字列</param>
            <remarks>
            <paramref name="name"/>はクエリ生成時に角括弧「[]」で囲んでエスケープされます。<br/>
            <paramref name="query"/>にサブクエリを指定する場合、必ず前後に括弧「()」を設定した文字列を指定してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="query">SELECT句文字列</param>
            <remarks>
            <paramref name="query"/> は以下の書式に対応しています。<br/>
            別名 = テーブル名.列名<br/>
            テーブル名.列名 AS 別名<br/>
            テーブル名.列名<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn.Build">
            <summary>
            SELECT句を作成し、返します。
            </summary>
            <returns>SELECT句を表す文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn.GetEscapeName(System.String)">
            <summary>
            名称をエスケープします。
            </summary>
            <param name="name">名称</param>
            <returns>エスケープ後の名称</returns>
            <remarks>
            <paramref name="name"/> に含まれる右角括弧「]」を「]]」にエスケープして、前後に角括弧「[]」を追加します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn.GetRemoveParentheses(System.String)">
            <summary>
            前後の角括弧「[]」を削除します。
            </summary>
            <param name="name">名称</param>
            <returns>角括弧「[]」を削除した名称</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn.System#ICloneable#Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn.Clone">
            <summary>
            このインスタンスが保持しているSELECT句のコピーを作成します。
            </summary>
            <returns>コピーされた<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn"/> </returns>
            <remarks>
            このインスタンスのコピーを作成しますが、各要素はコピーを行いません。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn.Indent">
            <summary>
            SELECT句のインデントを取得、設定します。
            </summary>
            <value>SELECT句のインデント</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn.Query">
            <summary>
            SELECT句文字列を取得、設定します。
            </summary>
            <value>SELECT句文字列</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumnCollection">
            <summary>
            SELECT句を管理するコレクションクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumnCollection.Add(System.String)">
            <summary>
            SELECT句を追加します。
            </summary>
            <param name="query">SELECT句文字列</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn"/></returns>
            <remarks>
            <paramref name="query"/> は以下の書式に対応しています。<br/>
            別名 = テーブル名.列名<br/>
            テーブル名.列名 AS 別名<br/>
            テーブル名.列名<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumnCollection.Add(System.String,System.String)">
            <summary>
            SELECT句を追加します。
            </summary>
            <param name="name">別名</param>
            <param name="query">SELECT句文字列</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn"/></returns>
            <remarks>
            <paramref name="name"/>はクエリ生成時に角括弧「[]」で囲んでエスケープされます。<br/>
            <paramref name="query"/>にサブクエリを指定する場合、必ず前後に括弧「()」を設定した文字列を指定してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumnCollection.Add(System.String,System.String,System.String)">
            <summary>
            SELECT句を追加します。
            </summary>
            <param name="name">別名</param>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn"/></returns>
            <remarks>
            <paramref name="name"/>はクエリ生成時に角括弧「[]」で囲んでエスケープされます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumnCollection.Insert(System.Int32,System.String)">
            <summary>
            SELECT句を挿入します。
            </summary>
            <param name="index">挿入位置</param>
            <param name="query">SELECT句文字列</param>
            <returns>挿入した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn"/></returns>
            <remarks>
            <paramref name="query"/> は以下の書式に対応しています。<br/>
            別名 = テーブル名.列名<br/>
            テーブル名.列名 AS 別名<br/>
            テーブル名.列名<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumnCollection.Insert(System.Int32,System.String,System.String)">
            <summary>
            SELECT句を挿入します。
            </summary>
            <param name="index">挿入位置</param>
            <param name="name">別名</param>
            <param name="query">SELECT句文字列</param>
            <returns>挿入した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn"/></returns>
            <remarks>
            <paramref name="name"/>はクエリ生成時に角括弧「[]」で囲んでエスケープされます。<br/>
            <paramref name="query"/>にサブクエリを指定する場合、必ず前後に括弧「()」を設定した文字列を指定してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumnCollection.Insert(System.Int32,System.String,System.String,System.String)">
            <summary>
            SELECT句を挿入します。
            </summary>
            <param name="index">挿入位置</param>
            <param name="name">別名</param>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumn"/></returns>
            <remarks>
            <paramref name="name"/>はクエリ生成時に角括弧「[]」で囲んでエスケープされます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumnCollection.Build">
            <summary>
            SELECT句を作成し、返します。
            </summary>
            <returns>SELECT句を表す文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectColumnCollection.Name">
            <summary>
            SELECT句のコレクションを表す文字列を取得します。
            </summary>
            <value>SELECT句のコレクションを表す文字列</value>
            <remarks>
            この文字列は使用されません。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery">
            <summary>
            SELECTステートメントを表すクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.NewQuery">
            <summary>
            名称を持たない<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を作成します。
            </summary>
            <returns>名称を持たない<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.NewQuery(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を作成します。
            </summary>
            <param name="name">名称</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.MakeQuery(System.String)">
            <summary>
            指定のテーブル名を*でSELECTする<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を作成します。
            </summary>
            <param name="table">テーブル名</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.MakeQuery(System.String,System.String)">
            <summary>
            指定のテーブル名を*でSELECTする<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を作成します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="alias">テーブル名に割り当てる別名</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <remarks>
            このコンストラクタは継承のために用意されています。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">名称</param>
            <remarks>
            CTEとして使用する場合は<paramref name="name"/> がCTEの名称になります。
            CTE名称は1クエリで一意になるように設定してください。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.count">
            <summary>
            取得する行数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.isDistinct">
            <summary>
            重複行を削除するかです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.ctes">
            <summary>
            WITH句に記載されるCTEです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.AddHint(System.String,System.String[])">
            <summary>
            クエリヒントを追加します。
            </summary>
            <param name="hint">クエリヒントを表す文字列</param>
            <param name="params">クエリヒントに必要なパラメータ文字列</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.AddHint(System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHintCollection)">
            <summary>
            テーブルヒントを追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="hints">テーブルヒント</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.QueryHint"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.BuildWithoutCTE">
            <summary>
            CTEテーブルを除いたSELECTステートメントを作成します。
            </summary>
            <returns>SELECTステートメント</returns>
            <remarks>
            このメソッドはこのインスタンスがCTEとして利用される場合に使用します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.Build">
            <summary>
            SELECTステートメントを作成し、返します。
            </summary>
            <returns>SELECTステートメント</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.System#ICloneable#Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.Clone">
            <summary>
            このインスタンスが保持しているSELECTステートメントのコピーを作成します。
            </summary>
            <returns>コピーされた<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> </returns>
            <remarks>
            このインスタンスのコピーを作成しますが、各要素はコピーを行いません。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.Count">
            <summary>
            取得する行数を取得、設定します。
            </summary>
            <value>取得する行数</value>
            <remarks>
            TOP XXXのXXXの数です。負数で通常のSELECTとなります。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.IsDistinct">
            <summary>
            重複行を削除するかを取得、設定します。
            </summary>
            <value>重複行を削除する場合は true。それ以外の場合は false。</value>
            <remarks>
            重複行を削除する場合、DISTINCTキーワードが追加されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.CTEs">
            <summary>
            WITH句に記載されるCTEを取得します。
            </summary>
            <value>WITH句に記載されるCTE</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.Columns">
            <summary>
            SELECT句に記載される列を取得します。
            </summary>
            <value>SELECT句に記載される列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.Froms">
            <summary>
            FROM句に記載されるテーブルを取得します。
            </summary>
            <value>FROM句に記載されるテーブル</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.Wheres">
            <summary>
            WHERE句に記載される条件を取得します。
            </summary>
            <value>WHERE句に記載される条件</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.GroupBys">
            <summary>
            GROUP BY句に記載される列を取得します。
            </summary>
            <value>GROUP BY句に記載される列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.Havings">
            <summary>
            HAVING句に記載される条件を取得します。
            </summary>
            <value>HAVING句に記載される条件</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.OrderBys">
            <summary>
            ORDER BY句に記載される列を取得します。
            </summary>
            <value>ORDER BY句に記載される列</value>
            <remarks></remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.Hints">
            <summary>
            クエリヒントに記載されるヒントを取得します。
            </summary>
            <value>クエリヒントに記載されるヒント</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder">
            <summary>
            テーブルのレコードを取得するためのクエリを作成するためのクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.COMPARISON_CONDITIONS">
            <summary>
            比較条件の文字列です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.NULL_COMPARISON_CONDITIONS">
            <summary>
            NULL比較条件の文字列です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">クエリ名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.Build(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            テーブルのレコードを取得するためのクエリを作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <returns>レコード取得クエリ</returns>
            <remarks>
            このメソッドを呼び出した場合 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder.Query"/> を作成したクエリで置き換えます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.BuildInnerJoin(System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase[])">
            <summary>
            複数のテーブルを内部結合したデータを取得するためのクエリを作成し、返します。
            </summary>
            <param name="fixedCount">件数を固定する場合は true。それ以外の場合は false。</param>
            <param name="entities">取得するEntity</param>
            <returns>レコード取得クエリ</returns>
            <remarks>
            このメソッドを呼び出した場合 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder.Query"/> を作成したクエリで置き換えます。
            <paramref name="entities"/> の先頭の要素がメインのテーブルとして利用されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.BuildLeftJoin(System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase[])">
            <summary>
            複数のテーブルを外部結合したデータを取得するためのクエリを作成し、返します。
            </summary>
            <param name="fixedCount">件数を固定する場合は true。それ以外の場合は false。</param>
            <param name="entities">取得するEntity</param>
            <returns>レコード取得クエリ</returns>
            <remarks>
            このメソッドを呼び出した場合 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder.Query"/> を作成したクエリで置き換えます。
            <paramref name="entities"/> の先頭の要素がメインのテーブルとして利用されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.BuildJoin(System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase[])">
            <summary>
            複数のテーブルを結合したデータを取得するためのクエリを作成し、返します。
            </summary>
            <param name="fixedCount">件数を固定する場合は true。それ以外の場合は false。</param>
            <param name="joinState">テーブル結合に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState"/></param>
            <param name="entities">取得するEntity</param>
            <returns>レコード取得クエリ</returns>
            <remarks>
            このメソッドを呼び出した場合 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder.Query"/> を作成したクエリで置き換えます。
            <paramref name="entities"/> の先頭の要素がメインのテーブルとして利用されます。
            基本、<paramref name="joinState"/> には<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.INNER"/>、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.LEFT"/>を設定します。
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.CROSS_APPLY"/>、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.OUTER_APPLY"/> は有効なクエリを返しません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.BuildJoin(System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo})">
            <summary>
            複数のテーブルを結合したデータを取得するためのクエリを作成し、返します。
            </summary>
            <param name="fixedCount">件数を固定する場合は true。それ以外の場合は false。</param>
            <param name="entity">メインのEntity</param>
            <param name="joins">結合するテーブル</param>
            <returns>レコード取得クエリ</returns>
            <remarks>
            このメソッドを呼び出した場合 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder.Query"/> を作成したクエリで置き換えます。
            <paramref name="entity"/> がメインのテーブルとして利用されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.BuildTop(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            テーブルのレコードを取得するためのクエリを作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <returns>レコード取得クエリ</returns>
            <remarks>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.BuildTop(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)"/> は<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.Build(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)"/> 
            と違い、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.IsOrderReverse"/> よる並び順の変更を行います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.BuildFixedTop(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            テーブルのレコードを件数固定で取得するためのクエリを作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <returns>レコード取得クエリ</returns>
            <remarks>
            このメソッドはマスタ一覧表の前ページ取得のようなイメージのクエリを作成します。
            ある条件で取得したレコードは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.Count"/> に満たない場合、ある条件を反転したデータで補完します。
            キー項目で「0003」以前のデータを10件取得しようとした場合、通常「0001」「0002」しか取得できませんが、「0003」～「0010」のデータも取得するようなクエリを作成します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetBasicQuery(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            ベースとなる<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <returns>ベースとなる<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetInnerJoinQuery(System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase[])">
            <summary>
            複数のテーブルを内部結合したデータを取得するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を作成し、返します。
            </summary>
            <param name="fixedCount">件数を固定する場合は true。それ以外の場合は false。</param>
            <param name="entities">取得するEntity</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
            <remarks>
            <paramref name="entities"/> の先頭の要素がメインのテーブルとして利用されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetLeftJoinQuery(System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase[])">
            <summary>
            複数のテーブルを外部結合したデータを取得するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を作成し、返します。
            </summary>
            <param name="fixedCount">件数を固定する場合は true。それ以外の場合は false。</param>
            <param name="entities">取得するEntity</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
            <remarks>
            <paramref name="entities"/> の先頭の要素がメインのテーブルとして利用されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetJoinQuery(System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase[])">
            <summary>
            複数のテーブルを結合したデータを取得するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を作成し、返します。
            </summary>
            <param name="fixedCount">件数を固定する場合は true。それ以外の場合は false。</param>
            <param name="joinState">テーブル結合に利用する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState"/></param>
            <param name="entities">取得するEntity</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
            <remarks>
            <paramref name="entities"/> の先頭の要素がメインのテーブルとして利用されます。
            基本、<paramref name="joinState"/> には<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.INNER"/>、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.LEFT"/>を設定します。
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.CROSS_APPLY"/>、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinState.OUTER_APPLY"/> は有効なクエリを返しません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetJoinQuery(System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo})">
            <summary>
            複数のテーブルを結合したデータを取得するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を作成し、返します。
            </summary>
            <param name="fixedCount">件数を固定する場合は true。それ以外の場合は false。</param>
            <param name="entity">メインのEntity</param>
            <param name="joins">結合するテーブル</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
            <remarks>
            <paramref name="entity"/> がメインのテーブルとして利用されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetTopQuery(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            テーブルのレコードを取得するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
            <remarks>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetTopQuery(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)"/> は<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetBasicQuery(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)"/> 
            と違い、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.IsOrderReverse"/> よる並び順の変更を行います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetFixedTopQuery(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            テーブルのレコードを件数固定で取得するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
            <remarks>
            このメソッドはマスタ一覧表の前ページ取得のようなイメージのクエリを作成します。
            ある条件で取得したレコードは<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.Count"/> に満たない場合、ある条件を反転したデータで補完します。
            キー項目で「0003」以前のデータを10件取得しようとした場合、通常「0001」「0002」しか取得できませんが、「0003」～「0010」のデータも取得するようなクエリを作成します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetFixedQuery(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Boolean)">
            <summary>
            テーブルのレコードを件数固定で取得するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <param name="basicQuery">基本となる<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></param>
            <param name="addPrefixName">カラム名の接頭辞にEntity名を付与する場合は true。それ以外の場合は false。</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
            <remarks>
            レコード数が足りずに先頭、または末尾から固定の件数分取得する場合、<paramref name="basicQuery"/> の<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery.Wheres"/> の
            先頭の要素が削除されたクエリで取得を行います。
            先頭の要素へ可変の要素、以降の要素に固定条件を設定してください。
            </remarks>
            <example>
            <paramref name="basicQuery"/> のイメージ
            <code>
            SELECT
                担当者マスタ.担当者コード AS 担当者コード
                , 担当者マスタ.担当者名 AS 担当者名
            FROM
                担当者マスタ 担当者マスタ
            WHERE
                担当者マスタ.担当者コード &lt; @担当者マスタ__担当者コード
            ORDER BY
                担当者マスタ.担当者コード ASC
            </code>
            戻り値のイメージ
            <code>
            WITH CTE_ORIGINAL AS (
                SELECT TOP 12
                    担当者マスタ.担当者コード AS 担当者コード
                    , 担当者マスタ.担当者名 AS 担当者名
                FROM
                    担当者マスタ 担当者マスタ
                WHERE
                    担当者マスタ.担当者コード &lt; @担当者マスタ__担当者コード
                ORDER BY
                    担当者マスタ.担当者コード DESC
            ), CTE_FOR_COMPLETION AS (
                SELECT TOP 12
                    担当者マスタ.担当者コード AS 担当者コード
                    , 担当者マスタ.担当者名 AS 担当者名
                FROM
                    担当者マスタ 担当者マスタ
                ORDER BY
                    担当者マスタ.担当者コード ASC
            ), CTE_COUNT_RESULT AS (
                SELECT
                    CASE COUNT(*) WHEN 16 THEN 1 WHEN 0 THEN 0 ELSE 2 END AS RESULT
                FROM
                    CTE_ORIGINAL AS _ORG
            )
            SELECT
                *
            FROM
                (
                    SELECT
                        _ORG.*
                    FROM
                        CTE_ORIGINAL AS _ORG
                        , CTE_COUNT_RESULT AS _RES
                    WHERE
                        _RES.RESULT = 1
                    UNION ALL
                    SELECT
                        _CMP.*
                    FROM
                        CTE_FOR_COMPLETION AS _CMP
                        , CTE_COUNT_RESULT AS _RES
                    WHERE
                        _RES.RESULT = 2
                ) AS WK
            ORDER BY
                担当者コード ASC;
            </code>
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetOrderReverseQuery(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,System.Boolean)">
            <summary>
            順序を反転したテーブルレコードを取得するための<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <param name="query"><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></param>
            <param name="addPrefixName">カラム名の接頭辞にEntity名を付与する場合は true。それ以外の場合は false。</param>
            <returns>順序を反転した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
            <remarks>
            順序の昇順、降順を反転させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.ToCondition(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign)">
            <summary>
            比較演算子から比較条件の文字列を取得します。
            </summary>
            <param name="compSign">比較演算子</param>
            <returns>比較条件の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.ToNullCondition(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign)">
            <summary>
            比較演算子からNULL比較条件の文字列を取得します。
            </summary>
            <param name="compSign">比較演算子</param>
            <returns>NULL比較条件の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetBasicQuery(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Boolean)">
            <summary>
            <paramref name="entity"/> を検索するベースとなる<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <param name="addPrefixName">カラム名の接頭辞にEntity名を付与する場合は true。それ以外の場合は false。</param>
            <returns><paramref name="entity"/> を検索するベースとなる<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetBasicTopQuery(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Boolean)">
            <summary>
            テーブルのレコードを取得するためのクエリを作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <param name="addPrefixName">カラム名の接頭辞にEntity名を付与する場合は true。それ以外の場合は false。</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
            <remarks>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetBasicTopQuery(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Boolean)"/> は<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetBasicQuery(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)"/> 
            と違い、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.IsOrderReverse"/> よる並び順の変更を行います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GetBasicJoinQuery(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.JoinInfo})">
            <summary>
            <paramref name="entity"/> をメインとする複数のテーブルを結合し、検索するベースとなる<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <param name="joins">結合するテーブル</param>
            <returns><paramref name="entity"/> をメインとする複数テーブルを検索するベースとなる<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.AddSelectColumn(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Boolean,System.Boolean)">
            <summary>
            <paramref name="query"/> のSELECT句に<paramref name="entity"/> の列情報を追加します。
            </summary>
            <param name="query">列を追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></param>
            <param name="entity">Entity</param>
            <param name="addPrefixName">カラム名の接頭辞にEntity名を付与する場合は true。それ以外の場合は false。</param>
            <param name="isNullReplace">ISNULL判定を行う場合は true。それ以外の場合は false。</param>
            <remarks>
            <paramref name="entity"/> がnullの場合、処理を行わずそのまま終了します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.Count">
            <summary>
            取得する行数を取得、設定します。
            </summary>
            <value>取得する行数</value>
            <remarks>
            TOP XXXのXXXの数です。負数で通常のSELECTとなります。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.IsDistinct">
            <summary>
            重複行を削除するかを取得、設定します。
            </summary>
            <value>重複行を削除する場合は true。それ以外の場合は false。</value>
            <remarks>
            重複行を削除する場合、DISTINCTキーワードが追加されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.CompSign">
            <summary>
            比較演算子を取得、設定します。
            </summary>
            <value>比較演算子</value>
            <remarks>
            通常は<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsEqual"/> を指定します。
            検索条件が1項目の場合は<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign.IsEqual"/> 以外の設定を行うことができます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.IsAscending">
            <summary>
            昇順(ASC)かを取得、設定します。
            </summary>
            <value>昇順(ASC)の場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.IsMainQueryOnly">
            <summary>
            メインとなるクエリのみ作成するかを取得、設定します。
            </summary>
            <value>メインとなるクエリのみ作成する場合は true。それ以外の場合は false。</value>
            <remarks>
            このプロパティがtrueの場合、順序反転クエリや固定数レコード取得クエリといった特殊なクエリを作成せず、
            メインとなるクエリのみを作成するようになります。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.Lock">
            <summary>
            ロック用のクエリを作成するかを取得、設定します。
            </summary>
            <value>ロック用のクエリを作成する場合は true。それ以外の場合は false。</value>
            <remarks>
            true が設定された場合、更新ロック用のテーブルヒントが付与されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.TableLock">
            <summary>
            テーブルをロックするクエリを作成するかを取得、設定します。
            </summary>
            <value>テーブルロックするクエリを作成する場合は true。行ロックするクエリを作成する場合は false。</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.Lock"/> が true の場合、このプロパティの値に応じて、テーブルロック用、もしくは、行ロック用のテーブルヒントが付与されます。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.Lock"/> が false の場合、このプロパティの設定は無視されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.AppendSelectColumns">
            <summary>
            追加する列を取得、設定します。
            </summary>
            <value>追加する列</value>
            <remarks>
            通常Entityから列は自動生成されます。Entityで利用しない列や式項目などを追加することができます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.NewWheres">
            <summary>
            特殊検索条件を取得、設定します。
            </summary>
            <value>特殊検索条件</value>
            <remarks>
            通常はEntityのプライマリキーで検索が行われます。
            このプロパティを設定するとプライマリキーの検索ではなくこのプロパティに含まれる条件で検索を行います。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.AppendWheres">
            <summary>
            追加検索条件を取得、設定します。
            </summary>
            <value>追加検索条件</value>
            <remarks>
            プライマリキー、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.WhereColumnNames"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.NewWheres"/> のいずれかの検索条件が設定された後、
            追加する検索条件として利用されます。
            例えばプライマリキーで検索を行うが、削除区分が=0のものだけ検索対象とする、といった使い方をします。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.WhereColumnNames">
            <summary>
            検索条件に利用する列名を取得、設定します。
            </summary>
            <value>検索条件に利用する列名</value>
            <remarks>
            nullの場合、プライマリキーで条件を作成します。
            要素数が0の配列の場合は条件なしですべてのデータが検索されます。
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.NewWheres"/> が設定されている場合、この設定は無視されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GroupBys">
            <summary>
            グループ化列を取得、設定します。
            </summary>
            <value>グループ化列</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.GroupBys"/> が設定されている場合、自動で生成されるプライマリキーでのソート順が無効化されます。
            ソートを行う場合は、必ず<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.OrderBys"/> を設定するようにしてください。
            GroupBysが登録されている場合はOrderBysが無視されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.OrderBys">
            <summary>
            ソート列を取得、設定します。
            </summary>
            <value>ソート列</value>
            <remarks>
            nullの場合、プライマリキーでソートを行います。
            要素数が0の配列の場合はソートを行いません。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQueryBuilder.IsOrderReverse">
            <summary>
            ソート順の反転が必要かを取得します。
            </summary>
            <value>ソート順の反転が必要な場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery">
            <summary>
            文字列にてSELECTステートメントを記述し、管理するためのクラスです。
            </summary>
            <remarks>
            このクラスは単独でSELECTステートメントをビルドする為のものです。
            CTEも文字列にて記述してください。
            このクラスのインスタンス自身がサブクエリやCTEになることはできますが、その場合CTEを記述することはできません。
            CTEを使用する場合は所有する親のインスタンスにてCTEを記述してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery.Query"/>をブランクで初期化します。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery.#ctor(System.Text.StringBuilder)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="query">SELECTステートメント文字列</param>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery.Query"/> を<paramref name="query"/> で初期化します。</remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery.#ctor(System.String,System.Text.StringBuilder)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">名称</param>
            <param name="query">SELECTステートメント文字列</param>
            <remarks>
            このインスタンスの名称を<paramref name="name"/> で初期化します。
            サブクエリやCTEとして利用する場合このインスタンスを利用します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="query">SELECTステートメント文字列</param>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery.Query"/> を<paramref name="query"/> で初期化します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery.#ctor(System.String,System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">名称</param>
            <param name="query">SELECTステートメント文字列</param>
            <remarks>
            このインスタンスの名称を<paramref name="name"/> で初期化します。
            サブクエリやCTEとして利用する場合このインスタンスを利用します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery.BuildWithoutCTE">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery.Build">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SimpleSelectQuery.Query">
            <summary>
            SELECTステートメント文字列を取得、設定します。
            </summary>
            <value>SELECTステートメント文字列</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint">
            <summary>
            SELECTステートメントのテーブルヒントを管理するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint.values">
            <summary>
            テーブルヒントに必要なパラメータ文字列です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint.#ctor(System.String,System.String[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="hint">テーブルヒントを表す文字列</param>
            <param name="params">テーブルヒントに必要なパラメータ文字列</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType,System.String[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="hint">テーブルヒントを表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType"/></param>
            <param name="params">テーブルヒントに必要なパラメータ文字列</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint.Build">
            <summary>
            テーブルヒントを作成し、返します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint.Values">
            <summary>
            テーブルヒントに必要なパラメータ文字列を取得します。
            </summary>
            <value>テーブルヒントに必要なパラメータ文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint.Item(System.Int32)">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint.Values"/> の要素を取得、設定します。
            </summary>
            <value><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint.Values"/> の要素</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint.Count">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint.Values"/> の件数を取得します。
            </summary>
            <value><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint.Values"/> の件数</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHintCollection">
            <summary>
            テーブルヒントを管理するコレクションクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHintCollection.Add(System.String,System.String[])">
            <summary>
            テーブルヒントを追加します。
            </summary>
            <param name="hint">テーブルヒントを表す文字列</param>
            <param name="params">テーブルヒントに必要なパラメータ文字列</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHintCollection.Add(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType,System.String[])">
            <summary>
            テーブルヒントを追加します。
            </summary>
            <param name="hint">テーブルヒントを表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.TableHintType"/></param>
            <param name="params">テーブルヒントに必要なパラメータ文字列</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHint"/></returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHintCollection.BuildWithOutParentheses">
            <summary>
            括弧「()」を除いたテーブルヒントを作成し、返します。
            </summary>
            <returns>テーブルヒント</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHintCollection.Build">
            <summary>
            テーブルヒントを作成し、返します。
            </summary>
            <returns>テーブルヒント</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.TableHintCollection.Name">
            <summary>
            テーブルヒントのコレクションを表す文字列を取得します。
            </summary>
            <value>テーブルヒントのコレクションを表す文字列</value>
            <remarks>
            この文字列は使用されません。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQuery">
            <summary>
            複数結合するSELECTステートメントを管理するクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQuery.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQuery"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="main">メインとなる<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQuery.BuildWithoutCTE">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQuery.Unions">
            <summary>
            複数のSELECTステートメントを取得します。
            </summary>
            <value>複数のSELECTステートメント</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQuery.CTEs">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQuery.OrderBys">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQuery.Name">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQueryCollection">
            <summary>
            複数のSELECTステートメントを結合し、管理するクラスです。
            </summary>
            <remarks>
            このクラスのコレクション内に設定されたCTE、GROUP BY項目は無視されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQueryCollection.Add">
            <summary>
            新しい<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/>を追加し、返します。
            </summary>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></returns>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQueryCollection.isUnionAll">
            <summary>
            結合した場合に重複行を除くかです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQueryCollection.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQueryCollection"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="main">メインとなる<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQueryCollection.Build">
            <summary>
            SELECTステートメントを作成し、返します。
            </summary>
            <returns>SELECTステートメント</returns>
            <remarks>
            複数のSELECTステートメントを結合(UNION)したSELECTステートメントを返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQueryCollection.MainQuery">
            <summary>
            メインの<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/> を取得します。
            </summary>
            <value>メインの<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.SelectQuery"/></value>
            <remarks>
            このインスタンスのCTEやORDER BYが利用されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQueryCollection.IsUnionAll">
            <summary>
            結合した場合に重複行を除くか取得、設定します。
            </summary>
            <value>重複行を除く場合は true。それ以外の場合は false。</value>
            <remarks>
            このプロパティがtrueの場合、UNIONで結合されます。falseの場合はUNION ALLで結合されます。
            UNION ALLのほうがクエリとしては速くなります。できる限りfalseで運用してください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UnionQueryCollection.Name">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UpdateQueryBuilder">
            <summary>
            テーブルのレコードを更新するためのクエリを作成するためのクラスです。
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UpdateQueryBuilder.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UpdateQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UpdateQueryBuilder.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UpdateQueryBuilder"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">クエリ名称</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UpdateQueryBuilder.Build(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            テーブルのレコードを更新するためのクエリを作成し、返します。
            </summary>
            <param name="entity">Entity</param>
            <returns>レコード更新クエリ</returns>
            <remarks>
            このメソッドを呼び出した場合 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.QueryBuilder.Query"/> を作成したクエリで置き換えます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.UpdateQueryBuilder.WhereColumnNames">
            <summary>
            更新のキーとなる列名を取得、設定します。
            </summary>
            <value>更新のキーとなる列名</value>
            <remarks>
            nullの場合、プライマリキーで条件を作成します。
            要素数が0の配列の場合は条件なしですべてのデータが更新されます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryWithConditionValue">
            <summary>
            SELECTステートメントのWHERE句の値をオブジェクトとして管理するクラスです。
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryWithConditionValue.#ctor(System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.String,System.Object)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryWithConditionValue"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="compSign">比較演算子を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign"/></param>
            <param name="value">検索条件の値</param>
            <param name="conditionValue">条件値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryWithConditionValue.Build">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryWithConditionValue.CompSign">
            <summary>
            比較演算子を取得、設定します。
            </summary>
            <value>比較演算子を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryWithConditionValue.ConditionValue">
            <summary>
            検索条件の値を取得、設定します。
            </summary>
            <value>検索条件の値</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection">
            <summary>
            WHERE句管理するコレクションクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.JOIN_STRING_AND">
            <summary>
            AND結合文字列を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.JOIN_STRING_OR">
            <summary>
            OR結合文字列を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.joinString">
            <summary>
            結合文字列です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.Add(System.String)">
            <summary>
            WHERE句を追加します。
            </summary>
            <param name="expression">検索条件</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/></returns>
            <remarks>
            このメソッドを使用すると <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ColumnStatement.Name"/>  がブランクとなり、
            名称での検索が行えなくなるため、置換などが難しくなります。
            出来れば別のコンストラクタを使用してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.Add(System.String,System.String)">
            <summary>
            WHERE句を追加します。
            </summary>
            <param name="name">テーブル名.列名</param>
            <param name="expression">検索条件</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/></returns>
            <remarks>
            <paramref name="name"/> は「テーブル名.列名」フォーマットで指定してください。<br/>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると<paramref name="name"/> に指定した文字に置き換わります。
            後からWHERE句の対象列を変更するのに適しています。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.Add(System.String,System.String,System.String)">
            <summary>
            WHERE句を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="expression">検索条件</param>
            <returns>追加した<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQuery"/></returns>
            <remarks>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると「<paramref name="table"/>.<paramref name="column"/>」 に指定した文字に置き換わります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.Add(System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign)">
            <summary>
            WHERE句を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="sign">比較演算子を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign"/></param>
            <remarks>
            比較演算子<paramref name="sign"/> で初期化します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.Add(Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection)">
            <summary>
            WHERE句を追加します。
            </summary>
            <param name="wheres">追加する<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/></param>
            <remarks>
            <paramref name="wheres"/> とインスタンスの<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.JoinString"/> プロパティの値が違う場合、
            括弧「()」で括られ1要素として取り込まれます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.Add(System.String,System.String,System.String,System.String)">
            <summary>
            WHERE句を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="expression">検索条件</param>
            <param name="value">検索条件の値</param>
            <remarks>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると「<paramref name="table"/>.<paramref name="column"/>」 に指定した文字に置き換わります。
            また、プレースフォルダ「[VALUE]」を利用すると「<paramref name="value"/>」 に指定した文字に置き換わります。
            後からWHERE句の対象列を変更するのに適しています。<br/>
            <paramref name="value"/>はエスケープ処理を行いません。必ずエスケープを行ってください。
            また、通常は変数名「@変数」などを指定することでパラメータ化クエリを作成することができます。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.Add(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            WHERE句を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="expression">検索条件</param>
            <param name="value1">検索条件の値1</param>
            <param name="value2">検索条件の値2</param>
            <remarks>
            <paramref name="expression"/>はプレースフォルダ「[COLUMN]」を利用すると「<paramref name="table"/>.<paramref name="column"/>」 に指定した文字に置き換わります。
            また、プレースフォルダ「[VALUE1]」「[VALUE2]」を利用するとそれぞれ「<paramref name="value1"/>」「<paramref name="value2"/>」 に指定した文字に置き換わります。
            後からWHERE句の対象列を変更するのに適しています。<br/>
            <paramref name="value1"/>、<paramref name="value2"/>はエスケープ処理を行いません。必ずエスケープを行ってください。
            また、通常は変数名「@変数」などを指定することでパラメータ化クエリを作成することができます。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.Add(System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign,System.String)">
            <summary>
            WHERE句を追加します。
            </summary>
            <param name="table">テーブル名</param>
            <param name="column">列名</param>
            <param name="sign">比較演算子を表す<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.Base.ComparisonSign"/></param>
            <param name="value">検索条件の値</param>
            <remarks>
            比較演算子<paramref name="sign"/> を利用して検索条件を作成します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.ReplaceColumn(System.String,System.String)">
            <summary>
            保持している要素に対して列名置換を行います。
            </summary>
            <param name="oldColumn">検索対象の列名</param>
            <param name="newColumn">新しく設定する列名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.ReplaceTable(System.String,System.String)">
            <summary>
            保持している要素に対してテーブル名置換を行います。
            </summary>
            <param name="oldTable">対象のテーブル名</param>
            <param name="newTable">新しく設定するテーブル名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.ReplaceExpression(System.String,System.String,System.String)">
            <summary>
            保持している要素に対して式置換する
            </summary>
            <param name="table">対象のテーブル名</param>
            <param name="column">対象の列名</param>
            <param name="newExpression">新しく設定する式</param>
            <remarks>
            <paramref name="table"/>、<paramref name="column"/> が設定されている条件に対して<paramref name="newExpression"/> を設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.Build">
            <summary>
            WHERE句を作成し、返します。
            </summary>
            <returns>WHERE句を表す文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.System#ICloneable#Clone">
            <inheritdoc cref="M:System.ICloneable.Clone"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.Clone">
            <summary>
            このインスタンスが保持しているWHERE句のコピーを作成します。
            </summary>
            <returns>コピーされた<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection"/> </returns>
            <remarks>
            このインスタンスのコピーを作成しますが、各要素はコピーを行いません。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.JoinString">
            <summary>
            結合文字列を取得、設定します。
            </summary>
            <value>結合文字列</value>
            <remarks>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.JOIN_STRING_AND"/>、または<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.JOIN_STRING_OR"/> を設定します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Database.Queries.WhereQueryCollection.Name">
            <summary>
            WHERE句のコレクションを表す文字列を取得します。
            </summary>
            <value>WHERE句のコレクションを表す文字列</value>
            <remarks>
            この文字列は使用されません。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlConnection">
            <summary>
            SQL Server接続を管理するクラスです。
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlConnection.MAX_PARAMETER_COUNT">
            <summary>
            最大パラメータ数を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlConnection.MAX_INSERT_VALUES_ROW_COUNT">
            <summary>
            INSERTクエリの最大VALUES行数を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlConnection.#ctor(System.Data.Common.DbConnection)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlConnection"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="conn">データベースの接続情報</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlConnection.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlRetry">
            <summary>
            SQL Serverのデータベースリトライ情報を表すクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlRetry.INDEX_LOCK_TIMEOUT">
            <summary>
            ロックタイムアウトを示すエラーコードを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlRetry.INDEX_SP_LOCK_TIMEOUT">
            <summary>
            SP内でのロックタイムアウトを示すエラーコードを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlRetry.INDEX_DEAD_LOCK">
            <summary>
            デッドロックを示すエラーコードを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlRetry.INDEX_SP_DEAD_LOCK">
            <summary>
            SP内でのデッドロックを示すエラーコードを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlRetry.INDEX_COMMAND_TIMEOUT">
            <summary>
            コマンドタイムアウトを示すエラーコードを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlRetry.SQL_ERROR_26">
            <summary>
            接続前のエラーを判定するための文字列を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlRetry.IsRetry(System.Int32,System.Exception,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlRetry.IsLockTimeout(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlRetry.IsDeadlock(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Database.SQLServer.SqlRetry.IsCommandTimeout(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebug">
            <summary>
            AOデバッグ用のクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebug.Print(System.String,System.String,System.String,System.Int32)">
            <summary>
            <paramref name="message"/> を<see cref="M:System.Diagnostics.Debug.Print(System.String,System.Object[])"/> で出力します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="name">呼出し元のメンバ名</param>
            <param name="file">呼出し元のファイル</param>
            <param name="line">呼出し元の行数</param>
            <remarks>
            <paramref name="name"/>、<paramref name="file"/>、<paramref name="line"/> は指定する必要がありません。
            それぞれ呼び出しメソッド名、ファイル名、行NOを自動で取得します。
            ファイル名や行NOなどを指定しなくても、決められたフォーマットに従って<see cref="M:System.Diagnostics.Debug.Print(System.String,System.Object[])"/> で出力するための便利メソッドです。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebug.Timestamp(System.String,System.String,System.String,System.Int32)">
            <summary>
            呼び出された時刻を<see cref="M:System.Diagnostics.Debug.Print(System.String,System.Object[])"/> で出力します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="name">呼出し元のメンバ名</param>
            <param name="file">呼出し元のファイル</param>
            <param name="line">呼出し元の行数</param>
            <remarks>
            <paramref name="name"/>、<paramref name="file"/>、<paramref name="line"/> は指定する必要がありません。
            それぞれ呼び出しメソッド名、ファイル名、行NOを自動で取得します。
            <paramref name="message"/> は指定しない場合ブランクとなります。特に指定しない場合は日付のみを出力します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Diagnostics.AoDebug.PrintMain(System.String,System.String,System.Int32,System.String,System.Object[])">
            <summary>
            <paramref name="format"/> と<paramref name="args"/> でメッセージを作成し、<see cref="M:System.Diagnostics.Debug.Print(System.String,System.Object[])"/> で出力します。
            </summary>
            <param name="name">呼出し元のメンバ名</param>
            <param name="file">呼出し元のファイル</param>
            <param name="line">呼出し元の行数</param>
            <param name="format">フォーマット</param>
            <param name="args">引数</param>
            <remarks>
            出力イメージは「<paramref name="name"/> <paramref name="file"/>(<paramref name="line"/>) "<see cref="M:System.String.Format(System.String,System.Object[])"/>(<paramref name="format"/>, <paramref name="args"/>)"」となります。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.RowValidationType">
            <summary>
            エンティティ行の有効性の判定方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.RowValidationType.Inputted">
            <summary>
            すべての値が入力済みの場合に有効
            </summary>
            <remarks>
            すべてのキー列に空白(null、空、ホワイトスペース)でない値が入力されている場合に、有効なエンティティ行とみなします。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.RowValidationType.ValidKey">
            <summary>
            キーとして使用できる値が入力されていれば有効
            </summary>
            <remarks>
            1つ以上のキー列に空白(null、空、ホワイトスペース)でない値が入力されていれば、有効なエンティティ行とみなします。<br />
            ただし、1つでもでも値が null のキー列があれば、無効とみなしします。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.GetRowPropertyType(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.Object)">
            <summary>
            対象のエンティティで保持するエンティティ行の、指定したプロパティの型を取得します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="propertyName">エンティティ行のプロパティ名</param>
            <param name="value">エンティティ行のプロパティ値</param>
            <returns>エンティティ行のプロパティの型</returns>
            <remarks>
            <paramref name="value"/> が null 、<see cref="T:System.DBNull"/> のいずれでもない場合は <paramref name="value"/> の型、
            <paramref name="value"/> が null 、<see cref="T:System.DBNull"/> のいずれかの場合はプロパティの型、
            をそれぞれ返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.GetRowPropertyType(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Int32,System.Object)">
            <summary>
            対象のエンティティで保持するエンティティ行の、指定したプライマリキーの型を取得します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="primaryIndex">プライマリキーの位置</param>
            <param name="value">プライマリキー値</param>
            <returns>プライマリキーの型</returns>
            <remarks>
            <paramref name="value"/> が null 、<see cref="T:System.DBNull"/> のいずれでもない場合は <paramref name="value"/> の型、
            <paramref name="value"/> が null 、<see cref="T:System.DBNull"/> のいずれかの場合はプロパティの型、
            をそれぞれ返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.GetColumnType(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)">
            <summary>
            対象のエンティティの指定した列の型を取得します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="columnName">列名</param>
            <returns>列の型</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.GetNameType(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)">
            <summary>
            対象のエンティティの列の型を、列名から推定します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="columnName">列名</param>
            <returns>推定した列の型</returns>
            <remarks>
            以下のように推定します。<br/>
            ・列名の末尾が「管理NO」 : <see cref="T:System.Int32"/>の<see cref="T:System.Nullable"/>型<br/>
            ・列名の末尾が「数量」、「数」、「単価」、「金額」 : <see cref="T:System.Decimal"/>の<see cref="T:System.Nullable"/>型<br/>
            ・列名が<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.RegisteredDateColumnName"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.UpdateDateColumnName"/> : <see cref="T:System.DateTime"/>の<see cref="T:System.Nullable"/>型<br/>
            ・その他 : <see cref="T:System.String"/><br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateAllParamaters(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean)">
            <summary>
            対象のエンティティのすべての列に対応するデータベースパラメータを生成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>すべての列に対応するデータベースパラメータの列挙</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateInsertParamaters(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean)">
            <summary>
            対象のエンティティのINSERT処理で用いるすべての列に対応するデータベースパラメータを生成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>INSERT処理で用いるすべての列に対応するデータベースパラメータの列挙</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateUpdateParamaters(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean)">
            <summary>
            対象のエンティティのUPDATE処理で用いるすべての列に対応するデータベースパラメータを生成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>UPDATE処理で用いるすべての列に対応するデータベースパラメータの列挙</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateMergeParamaters(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean)">
            <summary>
            対象のエンティティのMERGE処理で用いるすべての列に対応するデータベースパラメータを生成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>MERGE処理で用いるすべての列に対応するデータベースパラメータの列挙</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreatePrimaryKeys(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean,System.Object[])">
            <summary>
            対象のエンティティのプライマリキー列に対応するデータベースパラメータを生成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <param name="values">プライマリキーの値</param>
            <returns>プライマリキー列に対応するデータベースパラメータの列挙</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys"/> で返される列の順序に合わせる必要があります。<br/>
            <paramref name="values"/> に 空 が設定された場合は、対象エンティティのコレクションで保持している先頭行のプライマリキーを使用します。<br/>
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            プライマリキー値が取得できない(<paramref name="values"/>、及び、<paramref name="entity"/>のコレクションが共に空)の場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreatePrimarySequenceNoKeys(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,System.Boolean,System.Object[])">
            <summary>
            対象のエンティティのプライマリキー列に対応する連番されたデータベースパラメータを生成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="sequenceNo">パラメータ名に付与する連番</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <param name="values">プライマリキーの値</param>
            <returns>プライマリキー列に対応するデータベースパラメータの列挙</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys"/> で返される列の順序に合わせる必要があります。<br/>
            <paramref name="values"/> に 空 が設定された場合は、対象エンティティのコレクションで保持している先頭行のプライマリキーを使用します。<br/>
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            プライマリキー値が取得できない(<paramref name="values"/>、及び、<paramref name="entity"/>のコレクションが共に空)の場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreatePrimaryRangeKeys(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Boolean,System.Object[])">
            <summary>
            対象のエンティティのプライマリキー列を範囲指定するデータベースパラメータを生成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <param name="values">プライマリキーの値</param>
            <returns>プライマリキー列を範囲指定するデータベースパラメータの列挙</returns>
            <remarks>
            <paramref name="values"/> で指定する値の順序は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase.PrimaryKeys"/> で返される列の順序に合わせる必要があります。<br/>
            また、<paramref name="values"/> には各プライマリキーの範囲の開始値と終了値が交互に指定されている必要があります。<br/>
            すなわち、<paramref name="values"/> は、1つ目のプライマリキーの開始値、1つ目のプライマリキーの終了値、2つ目のプライマリキーの開始値・・・という順で指定する必要があります。<br/>
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            以下のいずれかの場合にスローします。<br/>
            ・プライマリキー値が取得できない(<paramref name="values"/>が空)場合。<br/>
            ・プライマリキー値のFROM側とTO側がそろっていない(<paramref name="values"/> の数が偶数でない)場合。<br/>
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParamaters(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            指定したパラメータ名、及び、パラメータ値に対応するデータベースパラメータを作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="params">パラメータ(パラメータ名と値の組)の一覧</param>
            <returns>データベースパラメータの列挙</returns>
            <remarks>
            <paramref name="params"/> のキーには、対象のエンティティの列名が使用されている必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParamaters(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Boolean)">
            <summary>
            対象のエンティティのコレクションで保持している先頭行の、指定した列に対応するデータベースパラメータを生成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="columns">パラメータ化する列名の一覧</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>先頭行の指定した列に対応するデータベースパラメータの列挙</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParamaters(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[],System.Boolean)">
            <summary>
            対象のエンティティの列に、指定した値を設定するデータベースパラメータを作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="columns">パラメータ化する列名の一覧</param>
            <param name="values">パラメータ値の一覧</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>データベースパラメータの列挙</returns>
            <remarks>
            <paramref name="columns"/> と <paramref name="values"/> の数は合わせる必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParamaters(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String[],System.Object[],System.Type[])">
            <summary>
            指定したパラメータ名と値を持つデータベースパラメータを作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="names">パラメータ名の一覧</param>
            <param name="values">パラメータ値の一覧</param>
            <param name="types">パラメータ値の型の一覧</param>
            <returns>データベースパラメータの列挙</returns>
            <remarks>
            <paramref name="names"/>、<paramref name="values"/>、<paramref name="types"/> の数は合わせる必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParamater(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Object,System.Boolean)">
            <summary>
            対象のエンティティの指定した列に、指定した値を設定するデータベースパラメータを作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="column">パラメータ化する列名</param>
            <param name="value">パラメータ値</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>データベースパラメータ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParamater(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Object,System.Type,System.Boolean)">
            <summary>
            対象のエンティティの指定した列に、指定した型の値を設定するデータベースパラメータを作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="column">パラメータ化する列名</param>
            <param name="value">パラメータ値</param>
            <param name="type">パラメータ値の型</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>データベースパラメータ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParamater(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Object,System.Type,System.Int32,System.Boolean)">
            <summary>
            対象のエンティティの指定した列に、指定した型の値を設定する連番されたデータベースパラメータを作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="column">パラメータ化する列名</param>
            <param name="value">パラメータ値</param>
            <param name="type">パラメータ値の型</param>
            <param name="sequenceNo">パラメータ名に付与する連番</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>データベースパラメータ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParamater(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Object,System.Type)">
            <summary>
            指定したパラメータ名と、指定した型の値を持つデータベースパラメータを作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="name">パラメータ名</param>
            <param name="value">パラメータ値</param>
            <param name="type">パラメータ値の型</param>
            <returns>データベースパラメータ</returns>
            <remarks>
            <paramref name="name"/> のパラメータ名には、対象のエンティティの列名が使用されている必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParamater(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Object,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute)">
            <summary>
            指定したパラメータ名と型の値を持つデータベースパラメータを、指定したデータベース列情報を基に作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="name">パラメータ名</param>
            <param name="value">パラメータ値</param>
            <param name="attr">データベース列情報</param>
            <returns>データベースパラメータ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParamater(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Object,System.Type,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute)">
            <summary>
            指定したパラメータ名と、指定した型の値を持つデータベースパラメータを、指定したデータベース列情報を基に作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="name">パラメータ名</param>
            <param name="value">パラメータ値</param>
            <param name="type">パラメータ値の型</param>
            <param name="attr">データベース列情報</param>
            <returns>データベースパラメータ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParamaterMain(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Object)">
            <summary>
            指定したパラメータ名と、指定した型の値を持つデータベースパラメータを作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="name">パラメータ名</param>
            <param name="value">パラメータ値</param>
            <returns>データベースパラメータ</returns>
            <remarks>
            <paramref name="name"/> のパラメータ名には、対象のエンティティの列名が使用されている必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParamaterMain(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Object,System.Type)">
            <summary>
            指定したパラメータ名と、指定した型の値を持つデータベースパラメータを作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="name">パラメータ名</param>
            <param name="value">パラメータ値</param>
            <param name="type">パラメータ値の型</param>
            <returns>データベースパラメータ</returns>
            <remarks>
            <paramref name="name"/> のパラメータ名には、対象のエンティティの列名が使用されている必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParamaterMain(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Object,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute)">
            <summary>
            指定したパラメータ名と型の値を持つデータベースパラメータを、指定したデータベース列情報を基に作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="name">パラメータ名</param>
            <param name="value">パラメータ値</param>
            <param name="attr">データベース列情報</param>
            <returns>データベースパラメータ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParamaterMain(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Object,System.Type,Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseColumnAttribute)">
            <summary>
            指定したパラメータ名と、指定した型の値を持つデータベースパラメータを、指定したデータベース列情報を基に作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="section">データベース接続セクション</param>
            <param name="name">パラメータ名</param>
            <param name="value">パラメータ値</param>
            <param name="type">パラメータ値の型</param>
            <param name="attr">データベース列情報</param>
            <returns>データベースパラメータ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParameterName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.Boolean)">
            <summary>
            対象のエンティティの指定した列に対するデータベースパラメータのパラメータ名を作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="column">パラメータ化する列名</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>データベースパラメータ名</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateParameterName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.Int32,System.Boolean)">
            <summary>
            対象のエンティティの指定した列に対する連番されたデータベースパラメータのパラメータ名を作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="column">パラメータ化する列名</param>
            <param name="sequenceNo">パラメータ名に付与する連番</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>データベースパラメータ名</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateFromParameterName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.Boolean)">
            <summary>
            対象のエンティティの指定した列を範囲指定するデータベースパラメータの開始値のパラメータ名を作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="column">パラメータ化する列名</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>開始値のデータベースパラメータ名</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateToParameterName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.Boolean)">
            <summary>
            対象のエンティティの指定した列を範囲指定するデータベースパラメータの終了値のパラメータ名を作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="column">パラメータ化する列名</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>終了値のデータベースパラメータ名</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateAliasName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.Boolean)">
            <summary>
            対象のエンティティの指定した列のエイリアスを作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="column">列名</param>
            <param name="tablePrefix">エイリアスにテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>エイリアス</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreatePrimaryKeyValues(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Int32)">
            <summary>
            対象のエンティティの指定した位置のエンティティ行のプライマリキー値を取得します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="index">対象のエンティティ行のインデックス。負数 を指定した場合は最終行の値が取得されます。</param>
            <returns>プライマリキー値の一覧</returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="entity"/>のコレクションが空の場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.CreateWhere(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String,System.Boolean,System.Boolean)">
            <summary>
            対象のエンティティの指定した列に対するパラメータ化されたWHERE句を作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="column">列名</param>
            <param name="fuzzy">曖昧検索を行う場合は true。それ以外の場合は false。</param>
            <param name="tablePrefix">パラメータ名にテーブル名を付与する場合は true。付与しない場合は false。</param>
            <returns>パラメータ化されたWHERE句</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.MakeParamaterColumn(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)">
            <summary>
            クエリ内で対象のエンティティの指定した列を参照するための文字列を作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="column">列名</param>
            <returns>「[エンティティ名].[列名]」文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.IsExistsDuplicatePrimaryKey(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            対象のエンティティのコレクションで保持しているエンティティ行で、プライマリキーが重複しているものが存在するかどうかを返します。
            </summary>
            <param name="entity">エンティティ</param>
            <returns>プライマリキーが重複している場合は true。それ以外の場合は false。</returns>
            <remarks>
            <paramref name="entity"/>のコレクションが空の場合や、有効なプライマリキーが入力されているエンティティ行が存在しない場合は、falseが返されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.IsUpdateOrRegisteredInfoColumnName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)">
            <summary>
            指定した列が、対象のエンティティの登録、もしくは、更新の情報に対応する列かどうかを返します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="name">列名</param>
            <returns>登録、もしくは、更新の情報に対応する列の場合は true。それ以外の場合は false。</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.IsUpdateInfoColumnName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)"/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.IsRegisteredInfoColumnName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.IsUpdateInfoColumnName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)">
            <summary>
            指定した列が、対象のエンティティの更新情報に対応する列かどうかを返します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="name">列名</param>
            <returns>更新情報に対応する列の場合は true。それ以外の場合は false。</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.IsUpdateIdColumnName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)"/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.IsUpdateDateColumnName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.IsRegisteredInfoColumnName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)">
            <summary>
            指定した列が、対象のエンティティの登録情報に対応する列かどうかを返します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="name">列名</param>
            <returns>登録情報に対応する列の場合は true。それ以外の場合は false。</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.IsRegisteredIdColumnName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)"/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.IsRegisteredDateColumnName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.IsUpdateIdColumnName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)">
            <summary>
            指定した列が、対象のエンティティの更新者に対応する列かどうかを返します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="name">列名</param>
            <returns>更新者に対応する列の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.IsRegisteredIdColumnName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)">
            <summary>
            指定した列が、対象のエンティティの登録者に対応する列かどうかを返します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="name">列名</param>
            <returns>登録者に対応する列の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.IsUpdateDateColumnName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)">
            <summary>
            指定した列が、対象のエンティティの更新日付に対応する列かどうかを返します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="name">列名</param>
            <returns>更新日付に対応する列の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.IsRegisteredDateColumnName(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.String)">
            <summary>
            指定した列が、対象のエンティティの登録日付に対応する列かどうかを返します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="name">列名</param>
            <returns>登録日付に対応する列の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.ToDataTable(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            対象のエンティティを<see cref="T:System.Data.DataTable"/> に変換します。
            </summary>
            <param name="entity">エンティティ</param>
            <returns><see cref="T:System.Data.DataTable"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.ToDataTable(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            対象のエンティティを、指定した列のみを持つ <see cref="T:System.Data.DataTable"/> に変換します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="columnToProperties"><see cref="T:System.Data.DataTable"/>に含める列名と、対応するエンティティ行のプロパティ名の組の一覧</param>
            <returns>指定された列のみを持つ<see cref="T:System.Data.DataTable"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.ToDataTable(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Collections.Generic.IDictionary{System.String,System.String},Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction)">
            <summary>
            対象のエンティティを、指定した列のみを持つ <see cref="T:System.Data.DataTable"/> に変換します。<br/>
            また、登録、及び、更新の情報に対応する列を、指定したトランザクションの値で上書きします。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="columnToProperties"><see cref="T:System.Data.DataTable"/>に含める列名と、対応するエンティティ行のプロパティ名の組の一覧</param>
            <param name="transaction">トランザクション</param>
            <returns>指定された列のみを持つ<see cref="T:System.Data.DataTable"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.ToDataTable(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Data.StatementType,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction)">
            <summary>
            対象のエンティティを、指定したステートメントに対応する列のみを持つ <see cref="T:System.Data.DataTable"/> に変換します。<br/>
            また、登録、及び、更新の情報に対応する列を、指定したトランザクションの値で上書きします。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="statementType">使用するステートメント</param>
            <param name="transaction">トランザクション</param>
            <returns>
            <paramref name="statementType"/>が、<see cref="F:System.Data.StatementType.Select"/>、<see cref="F:System.Data.StatementType.Select"/>、<see cref="F:System.Data.StatementType.Select"/> の
            いずれかの場合は、対応する列を持つ<see cref="T:System.Data.DataTable"/>オブジェクト。
            それ以外の場合は null。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.MakeDataTable(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            対象のエンティティの、指定した列を持つ空の <see cref="T:System.Data.DataTable"/> を作成します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="columnToProperties"><see cref="T:System.Data.DataTable"/>に含める列名と、対応するエンティティ行のプロパティ名の組の一覧</param>
            <returns>指定された列のみを持つ空の<see cref="T:System.Data.DataTable"/>オブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.MakeDefaultValues(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseTransaction)">
            <summary>
            対象のエンティティの、登録、及び、更新の情報に対応する列の既定値を、指定したトランザクションから取得して返します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="transaction">トランザクション</param>
            <returns>
            登録、及び、更新の情報に対応する列の既定値。<br />
            key   : 列名。<br />
            value : 既定値。<br />
            </returns>
            <remarks>
            登録者、登録日付、更新者、更新日付 の既定値をトランザクションから取得して返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBaseExtensions.GetDefaultValue(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase,System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            対象のエンティティの、指定した列の既定値を返します。
            </summary>
            <param name="entity">エンティティ</param>
            <param name="defaultValues"><paramref name="columnName"/> に対応するエンティティ行のプロパティ名と既定値の組を格納するディクショナリ</param>
            <param name="columnName">列名</param>
            <param name="propertyName"><paramref name="columnName"/> に対応するエンティティ行のプロパティ名</param>
            <returns>対象の列の既定値</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.FontExtensions">
            <summary>
            <see cref="T:System.Drawing.Font"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.FontExtensions.Scale(System.Drawing.Font,System.Single)">
            <summary>
            対象のフォントを、指定したフォントサイズに変更して返します。
            </summary>
            <param name="font">フォント</param>
            <param name="height">新しいフォントサイズ</param>
            <returns>サイズを変更したフォント</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.ImageExtensions">
            <summary>
            <see cref="T:System.Drawing.Image"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.ImageExtensions.ORIENTATION_ID">
            <summary>
            Exif情報の回転情報のIDを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.ImageExtensions.JPEG_CODEC_INFO_MINE_TYPE">
            <summary>
            JPEGの MINE TYPE を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.ImageExtensions.Scale(System.Drawing.Image,System.Drawing.Drawing2D.InterpolationMode,System.Int32,System.Int32,System.Decimal)">
            <summary>
            対象の画像を指定した幅、高さ、解像度の画像に変換します。
            </summary>
            <param name="image">画像</param>
            <param name="mode">サイズ変更のアルゴリズム</param>
            <param name="width">変更後の幅</param>
            <param name="height">変更後の高さ</param>
            <param name="dpi">解像度。0以下を指定すると無視されます。</param>
            <returns>変換された画像</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.ImageExtensions.Scale(System.Drawing.Image,System.Drawing.Drawing2D.InterpolationMode,System.Drawing.Size,System.Decimal)">
            <summary>
            対象の画像を指定したサイズ、解像度の画像に変換します。
            </summary>
            <param name="image">画像</param>
            <param name="mode">サイズ変更のアルゴリズム</param>
            <param name="size">変更後のサイズ</param>
            <param name="dpi">解像度。負数を指定すると無視されます。</param>
            <returns>変換された画像</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.ImageExtensions.Scale(System.Drawing.Image,System.Drawing.Drawing2D.InterpolationMode,System.Int32,System.Int32)">
            <summary>
            対象の画像を指定した幅、高さの画像に変換します。
            </summary>
            <param name="image">画像</param>
            <param name="mode">サイズ変更のアルゴリズム</param>
            <param name="width">変更後の幅</param>
            <param name="height">変更後の高さ</param>
            <returns>変換された画像</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.ImageExtensions.Scale(System.Drawing.Image,System.Drawing.Drawing2D.InterpolationMode,System.Drawing.Size)">
            <summary>
            対象の画像を指定したサイズの画像に変換します。
            </summary>
            <param name="image">画像</param>
            <param name="mode">サイズ変更のアルゴリズム</param>
            <param name="size">変更後のサイズ</param>
            <returns>変換された画像</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.ImageExtensions.GetJpegCodecInfo">
            <summary>
            JPEG用のコーデックを取得します。
            </summary>
            <returns>JPEG用のコーデック</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.ImageExtensions.GetOrientationPropertyItem(System.Drawing.Image)">
            <summary>
            対象のJPEG画像に含まれるExif回転情報を取得します。
            </summary>
            <param name="image">画像</param>
            <returns>対象の画像がJPEG、かつ、Exif回転情報が含まれている場合はその値。それ以外の場合は null。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.ImageExtensions.GetOrientation(System.Drawing.Image)">
            <summary>
            対象の画像に含まれるExif回転情報を取得します。
            </summary>
            <param name="image">画像</param>
            <returns>対象の画像がJPEG、かつ、Exif回転情報が含まれている場合はその値。それ以外の場合は <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.ExifOrientation.TopLeft"/>。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.ImageExtensions.GetEncoderParamater(System.Drawing.Imaging.EncoderValue)">
            <summary>
            対象のパラメータ値をイメージエンコーダに渡すためのパラメータオブジェクトを取得します。
            </summary>
            <param name="rotation">パラメータ値</param>
            <returns>イメージエンコーダに渡すためのパラメータオブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.ImageExtensions.WriteRoutedImage(System.Drawing.Image,System.IO.Stream)">
            <summary>
            対象の画像が回転されている場合に、元の向きに戻した画像を指定したストリームに書き出します。
            </summary>
            <param name="image">画像</param>
            <param name="stream">向きを戻した画像の書き込み先のストリーム</param>
            <returns>対象の画像が回転されており、向きを戻した画像がストリームに書き出された場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions">
            <summary>
            <see cref="T:System.Drawing.Printing.PrinterSettings"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.REGEX_REDIRECT_PRINTER">
            <summary>
            リダイレクトプリンタのプリンタ名を判定する正規表現パターンを表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.ToBinary(System.Drawing.Printing.PrinterSettings)">
            <summary>
            対象のプリンタ設定情報をバイナリ化(DEVMODE構造体化)して返します。
            </summary>
            <param name="printerSettings">プリンタ設定</param>
            <returns>DEVMODE構造体を表すバイナリ配列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.GetExistingPrinterName(System.Drawing.Printing.PrinterSettings)">
            <summary>
            対象のプリンタ設定のプリンタ名を取得します。
            </summary>
            <param name="printerSettings">プリンタ設定</param>
            <returns>
            コンピュータにインストールされているプリンタ名。<br />
            プリンタ設定で選択されているプリンタ名がリダイレクトプリンタの場合、類似名から実際に存在するプリンタ名を取得します。<br />
            プリンタが見つからない場合は null を返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.GetExistingPrinterName(System.String)">
            <summary>
            プリンタ名を取得します。
            </summary>
            <param name="name">ベースとなる名称</param>
            <returns>
            コンピュータにインストールされているプリンタ名。<br />
            <paramref name="name"/> で指定されたプリンタ名がリダイレクトプリンタの場合、類似名から実際に存在するプリンタ名を取得します。<br />
            プリンタが見つからない場合は null を返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.IsRedirectPrinter(System.Drawing.Printing.PrinterSettings)">
            <summary>
            対象のプリンタ設定で選択されているプリンタがリダイレクトプリンタかどうかを返します。
            </summary>
            <param name="printerSettings">プリンタ設定</param>
            <returns>リダイレクトプリンタの場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.IsRedirectPrinter(System.String)">
            <summary>
            対象のプリンタ名がリダイレクトプリンタを表すかどうかを返します。
            </summary>
            <param name="printerName">プリンタ名</param>
            <returns>リダイレクトプリンタの場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.SetDevmode(System.Drawing.Printing.PrinterSettings,System.String,System.Byte[])">
            <summary>
            指定したDEVMODE構造体を基にプリンタ設定を復元します。復元に失敗した場合は何もしません。
            </summary>
            <param name="printerSettings">復元先のプリンタ設定</param>
            <param name="name">復元先のプリンタ名</param>
            <param name="devmode">DEVMODE構造体を表すバイナリ配列</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.SetDevmode(System.Drawing.Printing.PrinterSettings,System.String,System.Byte[],System.Boolean)">
            <summary>
            指定したDEVMODE構造体を基にプリンタ設定を復元します。
            </summary>
            <param name="printerSettings">復元先のプリンタ設定</param>
            <param name="name">復元先のプリンタ名</param>
            <param name="devmode">DEVMODE構造体を表すバイナリ配列</param>
            <param name="force">DEVMODE構造体と復元先のプリンタでドライババージョンが異なるとき、例外を発生させない場合は true。それ以外の場合は false。</param>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.PrinterSettingsException">
            プリンタ設定の復元に失敗した場合にスローします。<br/>
            主に以下のような内部例外が指定されます。<br/>
            ・復元先のプリンタが見つからない場合 → <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"/><br/>
            ・DEVMODE構造体と復元先のプリンタでドライババージョンが異なる場合 → <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchPrinterDriverVersionException"/> (<paramref name="force"/> が true の場合は発生しません。)<br/>
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.SetDevmode(System.Drawing.Printing.PrinterSettings,System.Byte[],System.Boolean)">
            <summary>
            指定したDEVMODE構造体を基にプリンタ設定を復元します。
            </summary>
            <param name="printerSettings">復元先のプリンタ設定</param>
            <param name="devmode">DEVMODE構造体を表すバイナリ配列</param>
            <param name="force">DEVMODE構造体の標準領域の設定のみ復元する場合は true。すべての領域の復元を試みる場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.ToDevmode(System.Drawing.Printing.PrinterSettings)">
            <summary>
            対象のプリンタ設定からDEVMODE構造体を取得します。
            </summary>
            <param name="printerSettings">プリンタ設定</param>
            <returns>DEVMODE構造体</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE">
            <summary>
            DEVMODE構造体 を表します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmDeviceName">
            <summary>
            ドライバがサポートするデバイスの名前を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmSpecVersion">
            <summary>
            この構造体の初期化データ仕様のバージョンを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmDriverVersion">
            <summary>
            プリンタドライバのバージョンを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmSize">
            <summary>
            この構造体のバイトサイズを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmDriverExtra">
            <summary>
            この構造体に続くプライベートドライバデータのバイトサイズを指定します。<br />
            これは、デバイス固有情報になるため、通常は指定しないことを表す 0 を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmFields">
            <summary>
            この構造体のどのメンバを使うかを表すフラグです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmOrientation">
            <summary>
            用紙の向きを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmPaperSize">
            <summary>
            用紙のサイズを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmPaperLength">
            <summary>
            縦向きモードでの用紙の長さ。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmPaperWidth">
            <summary>
            縦向きモードでの用紙の幅を、それぞれ 0.1 ミリ単位で指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmScale">
            <summary>
            印刷出力をスケーリングするときの、スケーリング係数を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmCopies">
            <summary>
            印刷部数を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmDefaultSource">
            <summary>
            デフォルト用紙トレイを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmPrintQuality">
            <summary>
            プリンタ解像度を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmColor">
            <summary>
            カラーとモノクロのどちらを使用するかを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmDuplex">
            <summary>
            両面印刷ができるプリンタで、両面印刷するかどうかを選択します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmYResolution">
            <summary>
            プリンタの垂直方向の解像度 DPI を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmTTOption">
            <summary>
            TrueType フォントの印刷方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmCollate">
            <summary>
            複数の部数を印刷するときに、部単位で印刷するかどうかを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmFormName">
            <summary>
            使用する用紙の名前を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmBitsPerPel">
            <summary>
            ディスプレイデバイスのカラービット数を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmPelsWidth">
            <summary>
            可視デバイスの表面の幅をピクセル単位で指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmPelsHeight">
            <summary>
            可視デバイスの表面の高さをピクセル単位で指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmDisplayFlags">
            <summary>
            デバイスのディスプレイモードを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Drawing.PrinterSettingsExtensions.DEVMODE.dmDisplayFrequency">
            <summary>
            特定のモードにおける、ディスプレイデバイスの周波数をヘルツ単位で指定します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions">
            <summary>
            <see cref="T:System.DateTime"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.FiscalYearStartingMonth">
            <summary>
            年度の始まり月の既定値を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.ToAoFormat(System.DateTime)">
            <summary>
            対象日付をAOフォーマットの文字列に変換します。
            </summary>
            <param name="date">対象日付</param>
            <returns>yyyyMMdd 形式の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.ToNormalFormat(System.DateTime)">
            <summary>
            対象日付を通常フォーマットの文字列に変換します。
            </summary>
            <param name="date">対象日付</param>
            <returns>yyyy/MM/dd形式の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.ToJpFormat(System.DateTime)">
            <summary>
            対象日付を西暦日本語フォーマットの文字列に変換します。
            </summary>
            <param name="date">対象日付</param>
            <returns>yyyy年MM月dd日 形式の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.ToAoFormatYM(System.DateTime)">
            <summary>
            対象日付を、年月のみのAOフォーマットの文字列に変換します。
            </summary>
            <param name="date">対象日付</param>
            <returns>yyyyMM 形式の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.ToNormalFormatYM(System.DateTime)">
            <summary>
            対象日付を、年月のみの通常フォーマットの文字列に変換します。
            </summary>
            <param name="date">対象日付</param>
            <returns>yyyy/MM 形式の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.ToJpFormatYM(System.DateTime)">
            <summary>
            対象日付を、年月のみの西暦日本語フォーマットの文字列に変換します。
            </summary>
            <param name="date">対象日付</param>
            <returns>yyyy年MM月 形式の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.ToFormatY(System.DateTime)">
            <summary>
            対象日付の西暦を返します。
            </summary>
            <param name="date">対象日付</param>
            <returns>yyyy 形式の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.ToJpFormatY(System.DateTime)">
            <summary>
            対象日付を、年のみの西暦日本語フォーマットの文字列に変換します。
            </summary>
            <param name="date">対象日付</param>
            <returns>yyyy年 形式の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.ToAoFormatTime(System.DateTime)">
            <summary>
            対象日時を、時刻も含めて、AOフォーマットの文字列に変換します。
            </summary>
            <param name="date">対象日時</param>
            <returns>yyyyMMdd HHmmss 形式の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.ToNormalFormatTime(System.DateTime)">
            <summary>
            対象日時を、時刻も含めて、通常フォーマットの文字列に変換します。
            </summary>
            <param name="date">対象日時</param>
            <returns>yyyy/MM/dd HH:mm:ss 形式の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.ToJpFormatTime(System.DateTime)">
            <summary>
            対象日時を、時刻も含めて、西暦日本語フォーマットの文字列に変換します。
            </summary>
            <param name="date">対象日時</param>
            <returns>yyyy年MM月dd日 HH時mm分ss秒 形式の文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.ToFormat(System.DateTime,System.String)">
            <summary>
            対象日付を、既定のカルチャで、指定したフォーマットの文字列に変換します。
            </summary>
            <param name="date">対象日付</param>
            <param name="format">フォーマット形式</param>
            <returns>フォーマットされた文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.ToFormat(System.DateTime,Ill.Incorporated.Aladdinoffice.Framework.Attributes.DateFormat,System.Boolean)">
            <summary>
            対象日付を、指定したフォーマット方法でフォーマットします。
            </summary>
            <param name="date">対象日付</param>
            <param name="format">フォーマット方法</param>
            <param name="setEndOfMonthTo99">
            月末日を 99 に変更する場合は true。本来の月末日のままにする場合は false。
            既定値は false です。
            </param>
            <returns>フォーマットされた日付文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.ToFormat(System.DateTime,Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemType,Ill.Incorporated.Aladdinoffice.Framework.Attributes.DateFormat)">
            <summary>
            対象日付を、指定した型区分に応じてフォーマットします。
            </summary>
            <param name="date">対象日付</param>
            <param name="itemType">型区分</param>
            <param name="format">フォーマット方法</param>
            <returns>フォーマットされた日付文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.ToCustomFormat(System.DateTime,System.String)">
            <summary>
            対象日付を、指定したフォーマットの文字列に変換します。
            </summary>
            <param name="date">対象日付</param>
            <param name="format">フォーマット形式</param>
            <returns>フォーマットされた文字列</returns>
            <remarks>
            基本的には西暦でフォーマットを行いますが、<paramref name="format"/> に「g」を含む場合は和暦表示を行います。
            </remarks>
            <example>
            yyyy/MM/dd     → 2017/05/01<br />
            ggyy年MM月dd日 → 平成29年05月01日<br />
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.IsMonthLastDay(System.DateTime)">
            <summary>
            対象日付が月末かどうかを返します。
            </summary>
            <param name="date">対象日付</param>
            <returns>月末の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.GetTermDay(System.DateTime,System.String)">
            <summary>
            対象月の決算日を取得します。
            <c>fw:3</c>
            </summary>
            <param name="date">対象日付</param>
            <param name="acemd">決算月日(省略した場合、システム設定値を使用します。)</param>
            <returns>対象月の決算日</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.GetTermFirstDay(System.DateTime,System.String)">
            <summary>
            対象日付を含む期の期首日を取得します。
            <c>fw:3</c>
            </summary>
            <param name="date">対象日付</param>
            <param name="acemd">決算月日(省略した場合、システム設定値を使用します。)</param>
            <returns>期首日</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.GetTermLastDay(System.DateTime,System.String)">
            <summary>
            対象日付を含む期の期末日を取得します。
            <c>fw:3</c>
            </summary>
            <param name="date">対象日付</param>
            <param name="acemd">決算月日(省略した場合、システム設定値を使用します。)</param>
            <returns>期末日</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.GetTermBeginningMonthFirstDay(System.DateTime,System.String)">
            <summary>
            対象日付を含む期の期首月の月初日を取得します。
            <c>fw:3</c>
            </summary>
            <param name="date">対象日付</param>
            <param name="acemd">決算月日(省略した場合、システム設定値を使用します。)</param>
            <returns>期首月の月初日</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.GetTermEndMonthLastDay(System.DateTime,System.String)">
            <summary>
            対象日付を含む期の期末月の月末日を取得します。
            <c>fw:3</c>
            </summary>
            <param name="date">対象日付</param>
            <param name="acemd">決算月日(省略した場合、システム設定値を使用します。)</param>
            <returns>期末月の月末日</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.GetHalfPeriod(System.DateTime)">
            <summary>
            対象日付の属する半期を、システム設定の決算月日を基準として取得します。
            </summary>
            <param name="date">対象日付</param>
            <returns>半期(年度, 半期の組)</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.GetHalfPeriod(System.DateTime,System.String)">
            <summary>
            対象日付の属する半期を、指定した決算月日を基準として取得します。
            <c>fw:3</c>
            </summary>
            <param name="date">対象日付</param>
            <param name="acemd">決算月日</param>
            <returns>半期(年度, 半期の組)</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.GetQuarter(System.DateTime)">
            <summary>
            対象日付の属する四半期を、システム設定の決算月日を基準として取得します。
            </summary>
            <param name="date">対象日付</param>
            <returns>四半期(年度, 四半期の組)</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.GetQuarter(System.DateTime,System.String)">
            <summary>
            対象日付の属する四半期を、指定した決算月日を基準として取得します。
            <c>fw:3</c>
            </summary>
            <param name="date">対象日付</param>
            <param name="acemd">決算月日</param>
            <returns>四半期(年度, 四半期の組)</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.DaysInMonth(System.DateTime)">
            <summary>
            対象日付の月に含まれる日数を取得します。
            </summary>
            <param name="date">対象日付</param>
            <returns>月の日数</returns>
            <remarks>
            決算日基準ではなく、カレンダー基準で算出します。
            </remarks>
            <seealso cref="M:System.DateTime.DaysInMonth(System.Int32,System.Int32)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.StartOfWeek(System.DateTime,System.DayOfWeek)">
            <summary>
            対象日付の週の週開始日を取得します。
            </summary>
            <param name="date">対象日付</param>
            <param name="startDayOfWeek">開始曜日</param>
            <returns>週開始日</returns>
            <remarks>
            決算日基準ではなく、カレンダー基準で算出します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.EndOfWeek(System.DateTime,System.DayOfWeek)">
            <summary>
            対象日付の週の週末日を取得します。
            </summary>
            <param name="date">対象日付</param>
            <param name="startDayOfWeek">開始曜日</param>
            <returns>週末日</returns>
            <remarks>
            決算日基準ではなく、カレンダー基準で算出します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.StartOfMonth(System.DateTime)">
            <summary>
            対象日付の月の月初日を取得します。
            </summary>
            <param name="date">対象日付</param>
            <returns>月初日</returns>
            <remarks>
            決算日基準ではなく、カレンダー基準で算出します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.EndOfMonth(System.DateTime)">
            <summary>
            対象日付の月の月末日を取得します。
            </summary>
            <param name="date">対象日付</param>
            <returns>月末日</returns>
            <remarks>
            決算日基準ではなく、カレンダー基準で算出します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.StripTime(System.DateTime)">
            <summary>
            対象日時から時刻部分の情報を除去し、日付部分のみにして返します。
            </summary>
            <param name="date">対象日時</param>
            <returns>時刻情報が除去された日付</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.StripDate(System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            対象日時から日付部分の情報を除去(基準日に置換)し、時刻部分のみにして返します。
            </summary>
            <param name="date">対象日時</param>
            <param name="baseDate">基準日(省略した場合、<see cref="F:System.DateTime.MinValue"/>)</param>
            <returns>日付部分を基準日に置き換えた日時</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.FiscalYear(System.DateTime,System.Int32)">
            <summary>
            対象日付の属する年度を取得します。
            </summary>
            <param name="date">対象日付</param>
            <param name="startingMonth">年度の開始月(省略した場合、4月)</param>
            <returns>年度</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.GetElapsedWeeks(System.DateTime,System.DateTime)">
            <summary>
            基準日から対象日付までの経過週数を取得します。
            </summary>
            <param name="baseDate">基準日</param>
            <param name="date">対象日付</param>
            <returns>経過日数</returns>
            <exception cref="T:System.ArgumentException"><paramref name="date"/> が <paramref name="baseDate"/> より前の場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.GetElapsedMonths(System.DateTime,System.DateTime)">
            <summary>
            基準日から対象日付までの経過月数を取得します。
            </summary>
            <param name="baseDate">基準日</param>
            <param name="date">対象日付</param>
            <returns>経過月数</returns>
            <exception cref="T:System.ArgumentException"><paramref name="date"/> が <paramref name="baseDate"/> より前の場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.GetElapsedQuarters(System.DateTime,System.DateTime)">
            <summary>
            基準日から対象日付までの経過四半期数を取得します。
            </summary>
            <param name="baseDate">基準日</param>
            <param name="date">対象日付</param>
            <returns>経過四半期数</returns>
            <exception cref="T:System.ArgumentException"><paramref name="date"/> が <paramref name="baseDate"/> より前の場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.GetElapsedHalfPeriods(System.DateTime,System.DateTime)">
            <summary>
            基準日から対象日付までの経過半期数を取得します。
            </summary>
            <param name="baseDate">基準日</param>
            <param name="date">対象日付</param>
            <returns>経過半期数</returns>
            <exception cref="T:System.ArgumentException"><paramref name="date"/> が <paramref name="baseDate"/> より前の場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.GetElapsedYears(System.DateTime,System.DateTime)">
            <summary>
            基準日から対象日付までの経過年数を取得します。
            </summary>
            <param name="baseDate">基準日</param>
            <param name="date">対象日付</param>
            <returns>経過年数</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.DateTimeExtensions.GetElapsedMonths(System.DateTime,System.DateTime)"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumerableExtensions">
            <summary>
            <see cref="T:System.Collections.IEnumerable"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumerableExtensions.Rollup``1(``0,System.Func{``0,``0})">
            <summary>
            対象のオブジェクトから親をたどって列挙します。
            </summary>
            <typeparam name="T">列挙するオブジェクトの型</typeparam>
            <param name="begin">開始オブジェクト</param>
            <param name="roll">対象のオブジェクトを基に親オブジェクトを抽出するためのデリゲート</param>
            <returns>列挙された親オブジェクト。最初に返されるのは<paramref name="begin"/> 自身です。</returns>
            <remarks>
            例えば、画面上の特定のコントロールから、そのコントロールが配置されているコンテナコントロールを順に列挙していくようなときに使用します。<br />
            便宜的に親子関係で説明していますが、対象のオブジェクトから、同じ型の単一の別オブジェクトを、一定の規則に従って参照し、列挙していくような場合であれば、
            必ずしも親子関係が成立している必要はありません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumerableExtensions.Drilldown``1(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            対象のオブジェクトから子をたどって列挙します。
            </summary>
            <typeparam name="T">列挙するオブジェクトの型</typeparam>
            <param name="begin">開始オブジェクト</param>
            <param name="drill">対象のオブジェクトを基に子オブジェクトを列挙するためのデリゲート</param>
            <returns>列挙された子オブジェクト。列挙されるオブジェクトには、<paramref name="begin"/> 自身は含まれません。</returns>
            <remarks>
            例えば、画面上の特定のコンテナコントロールから、そのコンテナ内に配置されている子コントロールを順に列挙していくようなときに使用します。<br />
            対象オブジェクトの子をすべて列挙→孫をすべて列挙→・・・というように、階層ごとにまとめて列挙されます。<br />
            便宜的に親子関係で説明していますが、対象のオブジェクトから、同じ型の別オブジェクトのコレクションを、一定の規則に従って参照し、列挙していくような場合であれば、
            必ずしも親子関係が成立している必要はありません。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumerableExtensions.Drilldown``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            列挙された各対象オブジェクトから子をたどって列挙します。
            </summary>
            <typeparam name="T">列挙するオブジェクトの型</typeparam>
            <param name="begins">開始オブジェクトの列挙</param>
            <param name="drill">対象のオブジェクトを基に子オブジェクトを列挙するためのデリゲート</param>
            <returns>列挙された子オブジェクト。列挙されるオブジェクトには、<paramref name="begins"/> の要素は含まれません。</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumerableExtensions.Drilldown``1(``0,System.Func{``0,System.Collections.Generic.IEnumerable{``0}})"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumerableExtensions.Appends``1(System.Collections.Generic.IEnumerable{``0},``0[])">
            <summary>
            対象の列挙子に指定した要素を追加します。
            </summary>
            <typeparam name="T">列挙するオブジェクトの型</typeparam>
            <param name="source">要素を追加する列挙子</param>
            <param name="appends">追加する要素</param>
            <returns>要素を追加した列挙子</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumerableExtensions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            対象の列挙子が空かどうかを返します。
            </summary>
            <typeparam name="T">列挙するオブジェクトの型</typeparam>
            <param name="items">列挙子</param>
            <returns>対象の列挙子が null、もしくは、要素を1つも含まない場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumerableExtensions.Execute``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            列挙した各オブジェクトに対して、指定した処理を順に実行した結果を列挙します。
            </summary>
            <typeparam name="T">列挙するオブジェクトの型</typeparam>
            <typeparam name="TResult">処理結果の型</typeparam>
            <param name="items">対象オブジェクトの列挙</param>
            <param name="func">実行する処理のデリゲート</param>
            <returns>処理結果の列挙</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumerableExtensions.Execute``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            列挙した各オブジェクトに対して、指定した処理を順に実行します。
            </summary>
            <typeparam name="T">列挙するオブジェクトの型</typeparam>
            <param name="items">対象オブジェクトの列挙</param>
            <param name="action">実行する処理のデリゲート</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            列挙されたオブジェクトを、指定した数ごとに分割して列挙します。
            </summary>
            <typeparam name="T">列挙するオブジェクトの型</typeparam>
            <param name="items">対象オブジェクトの列挙</param>
            <param name="length">分割された各グループに含める要素の数</param>
            <returns>分割してグループ化されたオブジェクトの列挙</returns>
            <remarks>
            分割後の各グループは配列化されています。
            すなわち、<paramref name="items"/> がLinqを用いて指定されている場合、遅延バインディングの評価が行われ、実体化されます。
            パフォーマンスへの影響が考えられるため、使用する際には注意してください。
            </remarks>
            <example>
            13個の要素が列挙されている(<paramref name="items"/> が13個の要素を返す)とき、5個ずつに分割する(<paramref name="length"/> が5)と、
            5個の要素の列挙→5個の要素の列挙→3個の要素の列挙 の順で返されます。
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumerableExtensions.PrevieNextWhile``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Boolean})">
            <summary>
            列挙されたオブジェクトから、指定した位置のオブジェクトを基準に、指定した条件を満たす前後の要素を抜き出して取得します。
            </summary>
            <typeparam name="T">列挙するオブジェクトの型</typeparam>
            <param name="items">対象オブジェクトの列挙</param>
            <param name="index">基準となるオブジェクトの位置を示すインデックス</param>
            <param name="func">条件判定用のデリゲート</param>
            <returns>抜き出した要素</returns>
            <example>
            <paramref name="items"/> 内容が、<br />
            :<br />
            :<br />
            3つ前のオブジェクト => 条件を満たす<br />
            2つ前のオブジェクト => 条件を満たさない<br />
            1つ前のオブジェクト => 条件を満たす<br />
            基準となるオブジェクト<br />
            1つ後のオブジェクト => 条件を満たす<br />
            2つ後のオブジェクト => 条件を満たさない<br />
            3つ後のオブジェクト => 条件を満たす<br />
            :<br />
            :<br />
            のとき、戻り値は以下のようになります。<br />
            ・基準となるオブジェクトが条件を満たす場合は、1つ前のオブジェクト、基準となるオブジェクト、1つ後のオブジェクトが順に返されます。<br />
            ・基準となるオブジェクトが条件を満たさない場合は、1つ前のオブジェクトのみが返されます。<br />
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.EnumerableExtensions.ToGroupByDictionary``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Object[]})">
            <summary>
            列挙されたオブジェクト、キーごとにまとめてディクショナリ化します。
            </summary>
            <typeparam name="T">列挙するオブジェクトの型</typeparam>
            <param name="items">対象オブジェクトの列挙</param>
            <param name="getKeys">対象オブジェクトからキーを抽出するためのデリゲート</param>
            <returns>キーごとにまとめたディクショナリ</returns>
            <remarks>
            <see cref="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})"/> では、対象オブジェクトから抽出されるキーが
            重複すると例外が発生しますが、このメソッドでは各オブジェクトをキーごとにリスト化するため、キーが重複しても問題ありません。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.IClonableExtensions">
            <summary>
            <see cref="T:System.ICloneable"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.IClonableExtensions.CastClone``1(``0)">
            <summary>
            対象のオブジェクトをコピーして作成した新しいオブジェクトを、元の型に変換して返します。
            </summary>
            <typeparam name="T">対象オブジェクトの型</typeparam>
            <param name="e">対象オブジェクト</param>
            <returns>対象オブジェクトをコピーした新しいオブジェクト</returns>
            <remarks>
            <see cref="M:System.ICloneable.Clone"/> の戻り値は <see cref="T:System.Object"/> 型なので、キャスト処理の記述を省略するために使用します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.Int32Extensions">
            <summary>
            <see cref="T:System.Int32"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.Int32Extensions.HasFlag(System.Int32,System.Int32)">
            <summary>
            対象の数値に、特定のフラグが含まれるかどうかを返します。
            </summary>
            <param name="value">対象の値</param>
            <param name="flag">フラグ値</param>
            <returns>
            <paramref name="flag"/> に設定されているビット フィールドが <paramref name="value"/> でも設定されている場合は true。
            それ以外の場合は false。
            </returns>
            <remarks>
            <see cref="T:System.Enum"/> 型の HasFlag() メソッドと同等の機能を、<see cref="T:System.Int32"/> に拡張します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.IntPtrExtensions">
            <summary>
            <see cref="T:System.IntPtr"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.IntPtrExtensions.IsZero(System.IntPtr)">
            <summary>
            対象のポインタが<see cref="F:System.IntPtr.Zero"/>(null)かどうかを返します。
            </summary>
            <param name="ptr">ポインタ</param>
            <returns>Zero(null) の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.MarshalExtensions">
            <summary>
            アンマネージ系のオブジェクト 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.MarshalExtensions.ToStructure``1(System.Byte[])">
            <summary>
            対象のバイナリデータを、指定した型の構造体に変換します。
            </summary>
            <typeparam name="T">構造体の型</typeparam>
            <param name="binary">バイナリデータ</param>
            <returns>構造体</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions">
            <summary>
            シリアライズ系の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.Serialize``1(``0)">
            <summary>
            対象のオブジェクトをシリアル化したXMLドキュメントのバイナリデータを取得します。
            </summary>
            <typeparam name="T">シリアル化する型</typeparam>
            <param name="item">シリアル化するオブジェクト</param>
            <returns>対象オブジェクトをシリアル化したXMLドキュメントのバイナリデータ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.Serialize(System.Object,System.Type)">
            <summary>
            対象のオブジェクトを指定した型でシリアル化したXMLドキュメントのバイナリデータを取得します。
            </summary>
            <param name="item">シリアル化するオブジェクト</param>
            <param name="type">シリアル化する型</param>
            <returns>対象オブジェクトをシリアル化したXMLドキュメントのバイナリデータ</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.Serialize``1(``0,System.String)">
            <summary>
            対象のオブジェクトをシリアル化したXMLドキュメントを指定したファイルに書き出します。
            </summary>
            <typeparam name="T">シリアル化する型</typeparam>
            <param name="item">シリアル化するオブジェクト</param>
            <param name="path">対象オブジェクトをシリアル化したXMLドキュメントを書き込むファイルへのパス</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.Serialize``1(``0,System.IO.Stream)">
            <summary>
            対象のオブジェクトをシリアル化したXMLドキュメントを、指定したストリームに書き込みます。
            </summary>
            <typeparam name="T">シリアル化する型</typeparam>
            <param name="item">シリアル化するオブジェクト</param>
            <param name="stream">シリアル化したXMLドキュメントを書き込むストリーム</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.Serialize``1(``0,System.IO.TextWriter)">
            <summary>
            対象のオブジェクトをシリアル化したXMLドキュメントを、指定したライターで書き出します。
            </summary>
            <typeparam name="T">シリアル化する型</typeparam>
            <param name="item">シリアル化するオブジェクト</param>
            <param name="stream">シリアル化したXMLドキュメントの書き出しを行うライターオブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.Serialize(System.Object,System.Type,System.IO.Stream)">
            <summary>
            対象のオブジェクトを、指定した型でXMLドキュメントにシリアル化し、指定したストリームに書き込みます。
            </summary>
            <param name="item">シリアル化するオブジェクト</param>
            <param name="type">シリアル化を行う型</param>
            <param name="stream">シリアル化したXMLドキュメントを書き込むストリーム</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.Serialize(System.Object,System.Type,System.IO.TextWriter)">
            <summary>
            対象のオブジェクトを、指定した型でXMLドキュメントにシリアル化し、指定したライターで書き出します。
            </summary>
            <param name="item">シリアル化するオブジェクト</param>
            <param name="type">シリアル化する型</param>
            <param name="stream">シリアル化したXMLドキュメントの書き出しを行うライターオブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.Deserialize``1(System.Byte[])">
            <summary>
            対象のバイナリデータから逆シリアル化したオブジェクトを、指定した型に変換して返します。
            </summary>
            <typeparam name="T">逆シリアル化する型</typeparam>
            <param name="value">シリアル化されたバイナリデータ</param>
            <returns>逆シリアル化されたオブジェクト</returns>
            <remarks>
            <paramref name="value"/> はXMLドキュメントのバイナリデータである必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.Deserialize(System.Byte[],System.Type)">
            <summary>
            対象のバイナリデータから、指定した型のオブジェクトに逆シリアル化します。
            </summary>
            <param name="value">シリアル化されたバイナリデータ</param>
            <param name="type">逆シリアル化する型</param>
            <returns>逆シリアル化されたオブジェクト</returns>
            <remarks>
            <paramref name="value"/> はXMLドキュメントのバイナリデータである必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.Deserialize``1(System.String)">
            <summary>
            対象のファイルのバイナリデータから逆シリアル化したオブジェクトを、指定した型に変換して返します。
            </summary>
            <typeparam name="T">逆シリアル化する型</typeparam>
            <param name="path">逆シリアル化するファイルへのパス</param>
            <returns>逆シリアル化されたオブジェクト</returns>
            <remarks>
            <paramref name="path"/> で指定されるファイルはXMLドキュメントのファイルである必要があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.Deserialize``1(System.IO.Stream)">
            <summary>
            対象のストリームから読み込んだデータから逆シリアル化したオブジェクトを、指定した型に変換して返します。
            </summary>
            <typeparam name="T">逆シリアル化する型</typeparam>
            <param name="stream">シリアル化されたデータを読み込むストリーム</param>
            <returns>逆シリアル化されたオブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.Deserialize``1(System.IO.TextReader)">
            <summary>
            対象のリーダーで読み込んだデータから逆シリアル化したオブジェクトを、指定した型に変換して返します。
            </summary>
            <typeparam name="T">逆シリアル化する型</typeparam>
            <param name="stream">シリアル化されたデータの読み込みを行うリーダーオブジェクト</param>
            <returns>逆シリアル化されたオブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.Deserialize(System.IO.Stream,System.Type)">
            <summary>
            対象のストリームから読み込んだデータを、指定した型のオブジェクトに逆シリアル化します。
            </summary>
            <param name="stream">シリアル化されたデータを読み込むストリーム</param>
            <param name="type">逆シリアル化する型</param>
            <returns>逆シリアル化されたオブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.Deserialize(System.IO.TextReader,System.Type)">
            <summary>
            対象のリーダーで読み込んだデータを、指定した型のオブジェクトに逆シリアル化します。
            </summary>
            <param name="stream">シリアル化されたデータの読み込みを行うリーダーオブジェクト</param>
            <param name="type">逆シリアル化する型</param>
            <returns>逆シリアル化されたオブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.XmlSerializeClone``1(``0)">
            <summary>
            対象のオブジェクトをXMLドキュメントにシリアル化してコピーした新しいオブジェクトを、元の型に変換して返します。
            </summary>
            <typeparam name="T">シリアル化する型</typeparam>
            <param name="obj">コピーするオブジェクト</param>
            <returns>
            対象のオブジェクトをコピーした新しいオブジェクト。<br />
            シリアル化できない(Serializableでない)オブジェクトでは null を返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.XmlSerializeClone(System.Object,System.Type)">
            <summary>
            対象のオブジェクトをXMLドキュメントにシリアル化してコピーした新しいオブジェクトを返します。
            </summary>
            <param name="obj">コピーするオブジェクト</param>
            <param name="type">シリアル化する型</param>
            <returns>
            対象のオブジェクトをコピーした新しいオブジェクト。<br />
            シリアル化できない(Serializableでない)オブジェクトでは null を返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Objects.SerializeExtensions.BinarySerializeClone``1(``0)">
            <summary>
            対象のオブジェクトをバイナリ形式でシリアル化してコピーした新しいオブジェクトを、元の型に変換して返します。
            </summary>
            <typeparam name="T">シリアル化する型</typeparam>
            <param name="obj">コピーするオブジェクト</param>
            <returns>
            対象のオブジェクトをコピーした新しいオブジェクト。<br />
            シリアル化できない(Serializableでない)オブジェクトでは null を返します。
            </returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.MethodInfoExtensions">
            <summary>
            <see cref="T:System.Reflection.MethodInfo"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.MethodInfoExtensions.Invoke``1(System.Reflection.MethodInfo,System.Object[])">
            <summary>
            対象のstaticメソッドに指定した引数を渡して実行し、結果を指定した型で取得します。
            </summary>
            <typeparam name="T">取得する結果の型</typeparam>
            <param name="method">メソッド情報</param>
            <param name="paramaters">メソッド引数</param>
            <returns>メソッドの実行結果</returns>
            <remarks>
            この拡張メソッドは static メソッド専用です。<br/>
            リフレクションで実行される <see cref="T:System.Reflection.MethodInfo"/> の呼出しを簡略化します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.MethodInfoExtensions.Invoke(System.Reflection.MethodInfo,System.Object,System.Object[])">
            <summary>
            対象のメソッドに指定した引数を渡して実行し、結果を取得します。
            </summary>
            <param name="method">メソッド情報</param>
            <param name="instance">メソッドを実行するインスタンス</param>
            <param name="parameters">メソッド引数</param>
            <returns>メソッドの実行結果</returns>
            <remarks>
            リフレクションで実行される <see cref="T:System.Reflection.MethodInfo"/> の呼出しを簡略化します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions">
            <summary>
            <see cref="T:System.Type"/> 用の拡張メソッドをまとめたクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.NumberOfGenericTypesPrefix">
            <summary>
            ジェネリック型の <see cref="T:System.Type"/> オブジェクトの名前に付与されているジェネリック型パラメータの数を示す部分の接頭辞を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.GenericTypeDefinitionNamePattern">
            <summary>
            ジェネリック型の <see cref="T:System.Type"/> オブジェクトの名前に付与されているジェネリック型パラメータの数を示す部分の正規表現パターンを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.NestedTypeDefinitionNameSeparator">
            <summary>
            入れ子になっている型の <see cref="T:System.Type"/> オブジェクトの完全名に含まれている入れ子関係の区切り文字を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.ArrayTypeNameFormat">
            <summary>
            配列型の <see cref="T:System.Type"/> オブジェクトの名前を変換するためのフォーマット文字列を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.GenericTypeNameFormat">
            <summary>
            ジェネリック型の <see cref="T:System.Type"/> オブジェクトの名前をジェネリック型パラメータ付きに変換するためのフォーマット文字列を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.TypeNameFormatSeparator">
            <summary>
            配列型の次元 or ジェネリック型パラメータの名前 の区切り文字を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.GenericTypeNamePattern">
            <summary>
            ジェネリック型の型名を示す文字列のパース用の正規表現パターンを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.ArrayTypeNamePattern">
            <summary>
            配列型の要素の型名を示す文字列のパース用の正規表現パターンを表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.CreateInstance``1(System.Type,System.Object[])">
            <summary>
            対象の型の新しいインスタンスを生成します。
            </summary>
            <typeparam name="T">作成するオブジェクトの型</typeparam>
            <param name="type">作成するオブジェクトの型</param>
            <param name="args">コンストラクタ引数</param>
            <returns>新しく作成されたインスタンス</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.IsNullableTypeOf(System.Type,System.Type)">
            <summary>
            対象の型と、指定した比較対象の型が一致するかどうかを返します。<br/>
            Null許容の値型の場合は、その値型が一致するかどうかを返します。
            </summary>
            <param name="type">比較元の型</param>
            <param name="baseType">比較先の型</param>
            <returns>一致する場合は true。しない場合は false。</returns>
            <example>
            <paramref name="type"/> が <see cref="T:System.Int32"/>、<paramref name="baseType"/> が <see cref="T:System.Int32"/> のNull許容型の場合は true が返されます。
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.GetNullableGenericType(System.Type)">
            <summary>
            対象の型がNull許容の値型の場合に、その値型を取得します。
            </summary>
            <param name="type">型</param>
            <returns>Null許容の値型の場合はその値型。それ以外の場合は <paramref name="type"/>。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.IsSubTypeOf(System.Type,System.Type)">
            <summary>
            対象の型が、指定した元となる型を継承、もしくは、実装しているかどうかを返します。
            </summary>
            <param name="type">型</param>
            <param name="baseType">元となる型</param>
            <returns>継承、もしくは、実装している場合は true。それ以外の場合は false。</returns>
            <remarks>
            <see cref="M:System.Type.IsSubclassOf(System.Type)"/> とは以下の点で異なります。<br/>
            ・<paramref name="baseType"/> にはインターフェースやジェネリックインターフェースも指定することができます。<br/>
            ・<paramref name="type"/> と <paramref name="baseType"/> が同じ場合は true を返します。<br/>
            </remarks>
            <example>
            ・<paramref name="baseType"/> がインターフェースを表し、<paramref name="type"/> がそのインターフェースを実装している場合は true を返します。<br/>
            ・<paramref name="type"/> が typeof(List&lt;string&gt;) の時、<paramref name="baseType"/> が typeof(List&lt;&gt;) であれば true を返します。<br/>
            ・<paramref name="type"/> が typeof(List&lt;string&gt;) の時、<paramref name="baseType"/> が typeof(IList&lt;&gt;) であれば true を返します。<br/>
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.IsFindGeneric(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            対象の型が、列挙された型に含まれるか、もしくは、列挙された型に含まれるジェネリック型の構築元の型に一致するかどうかを返します。
            </summary>
            <param name="type">型</param>
            <param name="types">比較対象の型の列挙</param>
            <returns>列挙された型に含まれるか、もしくは、列挙された型に含まれるジェネリック型の構築元の型に一致する場合は true。それ以外の場合は false。</returns>
            <example>
            <paramref name="types"/> に typeof(List&lt;string&gt;) が含まれるとき、<paramref name="type"/> が typeof(List&lt;string&gt;)、もしくは、typeof(List&lt;&gt;) 
            であれば true が返されます。
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.GetBaseTypes(System.Type)">
            <summary>
            対象の型の継承元である型を順に列挙します。
            </summary>
            <param name="type">型</param>
            <returns>継承元である型の列挙</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.IsNullable(System.Type)">
            <summary>
            対象の型がNull許容型かどうかを返します。
            </summary>
            <param name="type">型</param>
            <returns>
            <paramref name="type"/> が以下のいずれかの場合は true。それ以外の場合は false。<br />
            ※ true と判断される型<br />
            ・クラス<br />
            ・インターフェース<br />
            ・Null許容の値型<br />
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.GetBaseTypeOfNullable(System.Type)">
            <summary>
            対象の型がNull許容型の場合に、その本体の型を抽出して返します。
            </summary>
            <param name="type">型</param>
            <returns>
            クラス、もしくは、インターフェースの場合は <paramref name="type"/> 自身。
            Null許容の値型の場合はその値型。
            他の場合は null。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.IsEnumOrNullable(System.Type)">
            <summary>
            対象の型が列挙型、もしくは、Null許容列挙型かどうかを返します。
            </summary>
            <param name="type">型</param>
            <returns>列挙型、もしくは、Null許容列挙型の場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.IsAttributeParameterType(System.Type)">
            <summary>
            対象の型が属性パラメータ型かどうかを返します。
            </summary>
            <param name="type">型</param>
            <returns>属性パラメータ型の場合は true。それ以外の場合は false。</returns>
            <remarks>
            属性パラメータ型 とは(MSDNより)<br/>
            ・<see cref="T:System.Boolean"/>、<see cref="T:System.Byte"/>、<see cref="T:System.Char"/>、<see cref="T:System.Double"/>、<see cref="T:System.Single"/>、<see cref="T:System.Int32"/>、<see cref="T:System.Int64"/>、<see cref="T:System.Int16"/>、
            <see cref="T:System.String"/> のいずれかの型<br/>
            ・<see cref="T:System.Object"/> 型<br/>
            ・<see cref="T:System.Type"/> 型<br/>
            ・列挙型。ただし、その列挙型がパブリック アクセシビリティを持ち、その列挙型が入れ子になった型 (存在する場合) もパブリック アクセシビリティを持つ場合に限ります。<br/>
            ・上のいずれかの型の 1 次元配列<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.IsNumericType(System.Type)">
            <summary>
            対象の型が数値型かどうかを返します。
            </summary>
            <param name="type">型</param>
            <returns>数値型の場合は true。それ以外の場合は false。</returns>
            <remarks>
            <see cref="T:System.Int16"/>、<see cref="T:System.Int32"/>、<see cref="T:System.Int64"/>、<see cref="T:System.Single"/>、<see cref="T:System.Double"/>、<see cref="T:System.Decimal"/> 
            のいずれかの型である場合に true を返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.GetEnumType(System.Type)">
            <summary>
            対象の型が列挙型、もしくは、列挙型のジェネリック型(Null許容列挙型 等)の場合、その列挙型を抽出して返します。
            </summary>
            <param name="type">型</param>
            <returns>
            列挙型の場合は <paramref name="type"/> 自身。
            列挙型のジェネリック型(Null許容列挙型 等)の場合は、その型引数の内の先頭の列挙型。
            他の場合は null 。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.GetNameWithNamespace(System.Type)">
            <summary>
            対象の型の名前空間付きの型名を取得します。
            </summary>
            <param name="type">型</param>
            <returns>名前空間付きの型名</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.GetGenericTypeDefinitionName(System.Type)">
            <summary>
            対象の型がジェネリック型の場合に、型名からジェネリック型パラメータ数を示す部分を除いた名前を取得します。
            </summary>
            <param name="type">型</param>
            <returns>ジェネリック型の場合は型名からジェネリック型パラメータ数を示す部分を除いた部分文字列。ジェネリック型でない場合は型名。</returns>
            <example>
            typeof(List&lt;string&gt;) → List
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.GetGenericTypeDefinitionNameWithNamespace(System.Type)">
            <summary>
            対象の型がジェネリック型の場合に、型名からジェネリック型パラメータ数を示す部分を除いた名前を名前空間付きで取得します。
            </summary>
            <param name="type">型</param>
            <returns>ジェネリック型の場合は型名からジェネリック型パラメータ数を示す部分を除いた部分文字列。ジェネリック型でない場合は名前空間付きの型名。</returns>
            <example>
            typeof(List&lt;string&gt;) → System.Collections.Generic.List
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.GetSimpleGenericTypeName(System.Type)">
            <summary>
            対象の型がジェネリック型の場合に、そのジェネリック型パラメータを含んだ名前を取得します。
            </summary>
            <param name="type">型</param>
            <returns>ジェネリック型の場合はジェネリック型パラメータを含んだ名前。ジェネリック型でない場合は型名。</returns>
            <example>
            typeof(List&lt;string&gt;) → List&lt;String&gt;
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.GetGenericTypeName(System.Type)">
            <summary>
            対象の型がジェネリック型の場合に、そのジェネリック型パラメータを含んだ名前空間付きの型名を取得します。
            </summary>
            <param name="type">型</param>
            <returns>ジェネリック型の場合はジェネリック型パラメータを含んだ名前空間付きの型名。ジェネリック型でない場合は名前空間付きの型名。</returns>
            <example>
            typeof(List&lt;string&gt;) → System.Collections.Generic.List&lt;System.String&gt;
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.TryParse(System.String,System.Boolean)">
            <summary>
            対象の型名の <see cref="T:System.Type"/> オブジェクトを取得します。
            </summary>
            <param name="typeName">
            型の名前。
            ジェネリック型の場合は、そのジェネリック型パラメータも含んだ形で指定してください。
            </param>
            <param name="containsNameSpace">
            <paramref name="typeName"/> が名前空間付きの完全名の場合は true。
            他の場合は、false。
            </param>
            <returns>
            型が見つかった場合はその <see cref="T:System.Type"/> オブジェクト。<br/>
            見つからなかった場合は null。<br/>
            <paramref name="containsNameSpace"/> が false の場合、異なる名前空間に同名の型が存在すると、本来期待される結果とは異なる型が返される可能性があります。
            </returns>
            <remarks>
            <paramref name="typeName"/> は以下のように設定します。(<paramref name="containsNameSpace"/> が false の場合)<br/>
            ジェネリック型 → List&lt;String&gt; , Dictionary&lt;String,Int32&gt; <br/>
            配列型         → String[] , String[,] , String[][] <br/>
            etc... <br/>
            <br/>
            <paramref name="containsNameSpace"/> が true の場合には、<paramref name="typeName"/> には名前空間付きの完全名を指定して下さい。<br/>
            ジェネリック型パラメータを含んだ名前空間付きの型名については、<seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.GetGenericTypeName(System.Type)"/> メソッドも参照してください。<br/>
            <paramref name="containsNameSpace"/> が false の場合には、<paramref name="typeName"/> には名前空間は含めないで指定して下さい。<br/>
            ジェネリック型パラメータを含んだ型名については、<seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.GetSimpleGenericTypeName(System.Type)"/> メソッドも参照してください。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.FindType(System.String,System.Boolean,System.Type[])">
            <summary>
            現在のアプリケーションが参照しているすべてのアセンブリから指定した型名、及び、ジェネリック型パラメータの型を検索します。
            </summary>
            <param name="typeName">型の名前</param>
            <param name="containsNameSpace">
            <paramref name="typeName"/> が名前空間付きの完全名の場合は true。
            他の場合は、false。
            </param>
            <param name="genericArgs">ジェネリック型の構築型を生成するための型パラメータ</param>
            <returns>
            型が見つかった場合はその <see cref="T:System.Type"/> オブジェクト。<br/>
            見つからなかった場合は null。<br/>
            <paramref name="containsNameSpace"/> が false の場合、異なる名前空間に同名の型が存在すると、本来期待される結果とは異なる型が返される可能性があります。
            </returns>
            <remarks>
            <paramref name="typeName"/> は以下のように設定します。(<paramref name="containsNameSpace"/> が false の場合)<br/>
            ジェネリック型 → List`1 , Dictionary`2 <br/>
            配列型         → String[] , String[,] , String[][] <br/>
            etc... <br/>
            <br/>
            <paramref name="containsNameSpace"/> が true の場合には、<paramref name="typeName"/> には名前空間付きの完全名を指定して下さい。<br/>
            <paramref name="containsNameSpace"/> が false の場合には、<paramref name="typeName"/> には名前空間は含めないで指定して下さい。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Extensions.Reflection.TypeExtensions.FindType(System.String,System.String,System.Type[])">
            <summary>
            指定したアセンブリ内の指定した型名、及び、ジェネリック型パラメータの型を検索します。
            </summary>
            <param name="assemblyName">アセンブリ名</param>
            <param name="typeName">型名(名前空間も含む完全名)</param>
            <param name="genericArgs">ジェネリック型の構築型を生成するための型パラメータ</param>
            <returns>
            型が見つかった場合はその <see cref="T:System.Type"/> オブジェクト。
            見つからなかった場合は null。
            </returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Compression.Zip">
            <summary>
            ZIPファイルへ出力するための管理クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Compression.Zip.ARCHIVE">
            <summary>
            <see cref="T:System.IO.Compression.ZipArchive"/> を管理するためのキーオブジェクトです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Compression.Zip.dictionary">
            <summary>
            オブジェクトの破棄に利用する辞書オブジェクトです。
            </summary>
            <remarks>
            この辞書の<see cref="T:System.IDisposable"/> 要素は<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Compression.Zip"/> インスタンスが破棄される場合に、同時に破棄されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Compression.Zip.#ctor(System.String,System.IO.FileMode,System.Text.Encoding)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Compression.Zip"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="path">出力ファイルパス</param>
            <param name="mode">ファイルを開く場合のモードを指定する<see cref="T:System.IO.FileMode"/></param>
            <param name="encoding">ファイルリストのエンコードルール</param>
            <remarks>
            巨大なファイルを扱う場合は<paramref name="mode"/> に<see cref="F:System.IO.FileMode.Create"/> を指定して下さい。
            <see cref="F:System.IO.FileMode.Create"/> 以外の場合はメモリを大量に利用するため途中で処理が止まってしまう場合があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Compression.Zip.Dispose">
            <summary>
            オブジェクトを破棄します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Compression.Zip.GetFileEntry(System.String,System.Nullable{System.IO.Compression.CompressionLevel})">
            <summary>
            ファイルを書き込むための<see cref="T:System.IO.Stream"/> を取得します。
            </summary>
            <param name="name">エントリー名</param>
            <param name="compressionLevel">圧縮レベルを指定する<see cref="T:System.IO.Compression.CompressionLevel"/></param>
            <returns>ファイルを書き込むための<see cref="T:System.IO.Stream"/></returns>
            <remarks>
            戻り値の<see cref="T:System.IO.Stream"/> へ書き込むことによりその内容をエントリー名のファイルとしてZIPへ格納します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Compression.Zip.SetFileEntry(System.String,System.String,System.Nullable{System.IO.Compression.CompressionLevel})">
            <summary>
            ファイルをZIPへ格納します。
            </summary>
            <param name="path">ファイルパス</param>
            <param name="name">名称</param>
            <param name="compressionLevel">圧縮レベルを指定する<see cref="T:System.IO.Compression.CompressionLevel"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Compression.Zip.SetStreamEntry(System.IO.Stream,System.String,System.Nullable{System.IO.Compression.CompressionLevel})">
            <summary>
            <see cref="T:System.IO.Stream"/> をZIPへ格納します。
            </summary>
            <param name="stream">出力する内容の<see cref="T:System.IO.Stream"/></param>
            <param name="name">エントリー名</param>
            <param name="compressionLevel">圧縮レベルを指定する<see cref="T:System.IO.Compression.CompressionLevel"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Compression.Zip.GetTextFileEntry(System.String,System.Text.Encoding,System.Nullable{System.IO.Compression.CompressionLevel})">
            <summary>
            ファイルを書き込むための<see cref="T:System.IO.StreamWriter"/> を取得します。
            </summary>
            <param name="name">エントリー名</param>
            <param name="encoding">エンコーディングルール</param>
            <param name="compressionLevel">圧縮レベルを指定する<see cref="T:System.IO.Compression.CompressionLevel"/></param>
            <returns>ファイルを書き込むための<see cref="T:System.IO.StreamWriter"/></returns>
            <remarks>
            戻り値の<see cref="T:System.IO.StreamWriter"/> へ書き込むことによりその内容をエントリー名のファイルとしてZIPへ格納します。
            <paramref name="encoding"/> を指定することによってエンコードルールを指定することができます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Compression.Zip.SetTextStreamEntry(System.IO.StreamReader,System.String,System.Text.Encoding,System.Nullable{System.IO.Compression.CompressionLevel})">
            <summary>
            <see cref="T:System.IO.StreamReader"/> をZIPへ格納します。
            </summary>
            <param name="reader">出力する内容の<see cref="T:System.IO.StreamReader"/></param>
            <param name="name">エントリー名</param>
            <param name="encoding">エンコーディングルール</param>
            <param name="compressionLevel">圧縮レベルを指定する<see cref="T:System.IO.Compression.CompressionLevel"/></param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Compression.Zip.archive">
            <summary>
            <see cref="T:System.IO.Compression.ZipArchive"/> のインスタンスを取得、設定します。
            </summary>
            <value><see cref="T:System.IO.Compression.ZipArchive"/> のインスタンス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument">
            <summary>
            テキストを印刷するためのドキュメントクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.font">
            <summary>
            印刷する文字の<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.Font"/> です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.titleFont">
            <summary>
            印刷するタイトルの<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.Font"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.Print">
            <summary>
            印刷します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.position">
            <summary>
            印刷ポジションです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.Document_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            <see cref="T:System.Drawing.Printing.PrintDocument"/> の<see cref="E:System.Drawing.Printing.PrintDocument.PrintPage"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.Document">
            <summary>
            印刷を行う<see cref="T:System.Drawing.Printing.PrintDocument"/> を取得します。
            </summary>
            <value>印刷を行う<see cref="T:System.Drawing.Printing.PrintDocument"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.PrinterSettings">
            <summary>
            印刷に利用するプリンタ情報を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.PrinterSettings"/> を取得、設定します。
            </summary>
            <value>印刷に利用するプリンタ情報を表す<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.PrinterSettings"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.Text">
            <summary>
            印刷する文字列を取得、設定します。
            </summary>
            <value>印刷する文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.Title">
            <summary>
            印刷するタイトルを取得、設定します。
            </summary>
            <value>印刷するタイトル</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.Font">
            <summary>
            印刷する文字の<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.Font"/> を取得、設定します。
            </summary>
            <value>印刷する文字の<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.Font"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.TitleFont">
            <summary>
            印刷するタイトルの<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.Font"/> を取得、設定します。
            </summary>
            <value>印刷するタイトルの<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.Font"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.Brush">
            <summary>
            文字を描画する<see cref="T:System.Drawing.SolidBrush"/>を取得、設定します。
            </summary>
            <value>印刷文字を描画する<see cref="T:System.Drawing.SolidBrush"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.ForeColor">
            <summary>
            文字を描画する<see cref="T:System.Drawing.Color"/> を取得、設定します。
            </summary>
            <value>文字を描画する<see cref="T:System.Drawing.Color"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.TitleBrush">
            <summary>
            タイトルを描画する<see cref="T:System.Drawing.SolidBrush"/> を取得、設定します。
            </summary>
            <value>タイトルを描画する<see cref="T:System.Drawing.SolidBrush"/></value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Drawing.TextPrintDocument.TitleForeColor">
            <summary>
            タイトルを描画する<see cref="T:System.Drawing.Color"/> を取得、設定します。
            </summary>
            <value>タイトルを描画する<see cref="T:System.Drawing.Color"/></value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.DigitDecimalOverflowException">
            <summary>
            小数桁がオーバーフローした場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.DigitDecimalOverflowException.#ctor(System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.DigitDecimalOverflowException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="digit">入力できる最大の小数桁</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.DigitIntegerOverflowException">
            <summary>
            整数桁がオーバーフローした場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.DigitIntegerOverflowException.#ctor(System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.DigitIntegerOverflowException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="digit">入力できる最大の整数桁</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.MaxLengthOverflowException">
            <summary>
            文字列全体の入力桁がオーバーフローした場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.MaxLengthOverflowException.#ctor(System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.MaxLengthOverflowException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="maxLength">入力できる最大の入力桁</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchCharactorException">
            <summary>
            入力が許可されていない文字列が入力された場合にスローされる例外です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchCharactorException.#ctor(System.String,System.Char[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchCharactorException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="text">全体の入力文字</param>
            <param name="characters">入力された許可されていない<see cref="T:System.Char"/></param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchCharactorException.Join(System.Char[])">
            <summary>
            入力が許可されていない<see cref="T:System.Char"/> を結合して文字列化します。
            </summary>
            <param name="characters">入力が許可されていない<see cref="T:System.Char"/></param>
            <returns>入力が許可されていない<see cref="T:System.Char"/>の結合文字列</returns>
            <remarks>
            ソートを行い、重複文字を除いた一覧を返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchCharactorException.MatchEvaluator(System.Text.RegularExpressions.Match)">
            <summary>
            改行コード、タブを変換するためのメソッド
            </summary>
            <param name="match">改行コード、タブに一致した<see cref="T:System.Text.RegularExpressions.Match"/></param>
            <returns>変換後の文字列</returns>
            <remarks>
            改行コードの場合、<see cref="T:Ill.Incorporated.Aladdinoffice.Resources.DefaultObjects"/>.<see cref="F:Ill.Incorporated.Aladdinoffice.Resources.DefaultObjects.CRLF_DISPLAY_NAME"/> に変換します。
            タブの場合、<see cref="T:Ill.Incorporated.Aladdinoffice.Resources.DefaultObjects"/>.<see cref="F:Ill.Incorporated.Aladdinoffice.Resources.DefaultObjects.TAB_DISPLAY_NAME"/> に変換します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchCharactorException.InputText">
            <summary>
            入力された文字列を取得します。
            </summary>
            <value>入力された文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.UnMatchCharactorException.UnMatchCharacters">
            <summary>
            入力が許可されていない<see cref="T:System.Char"/> を取得します。
            </summary>
            <value>入力が許可されていない<see cref="T:System.Char"/></value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser">
            <summary>
            オブジェクト(値)を特定の型に変換するための処理をまとめたクラスです。
            </summary>
            <remarks>
            主に文字列から数値や列挙体に変換するために使用します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.PARSE_METHODS_CACHE">
            <summary>
            Parseメソッドのキャッシュキーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.TRY_PARSES_METHODS_CACHE">
            <summary>
            TryParseメソッドのキャッシュキーを表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.GetValueOrDefault``1(System.Object)">
            <summary>
            対象の値を指定した型に変換します。変換できない場合は指定した型の既定値を返します。
            </summary>
            <typeparam name="T">変換先の型</typeparam>
            <param name="value">変換対象の値</param>
            <returns>指定した型に変換できた場合はその変換値。できなかった場合は指定した型の既定値。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.GetValueOrFixedValue``1(System.Object,``0)">
            <summary>
            対象の値を指定した型に変換します。変換できない場合は指定した固定値を返します。
            </summary>
            <typeparam name="T">変換先の型</typeparam>
            <param name="value">変換対象の値</param>
            <param name="fixed">変換に失敗した場合の固定値</param>
            <returns>指定した型に変換できた場合はその変換値。できなかった場合は <paramref name="fixed"/>。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.Get``1(System.Object)">
            <summary>
            対象の値を指定した型に変換します。
            </summary>
            <typeparam name="T">変換先の型</typeparam>
            <param name="value">変換対象の値</param>
            <returns>変換結果の値</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.Get(System.Type,System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.Get(System.Type,System.Object)">
            <summary>
            対象の値を指定した型に変換します。
            </summary>
            <param name="type">変換先の型</param>
            <param name="value">変換対象の値</param>
            <returns>変換結果の値</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.Get(System.Type,System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.Get``1(System.String)">
            <summary>
            対象の文字列を指定した型に変換します。
            </summary>
            <typeparam name="T">変換先の型</typeparam>
            <param name="value">変換対象の文字列</param>
            <returns>変換結果の値</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.Get(System.Type,System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.Get(System.Type,System.String)">
            <summary>
            対象の文字列を指定した型に変換します。
            </summary>
            <param name="type">変換先の型</param>
            <param name="value">変換対象の文字列</param>
            <returns>変換結果の値</returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">変換できなかった場合にスローします。</exception>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.TryParse(System.Type,System.String,System.Object@)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.Check``1(System.String)">
            <summary>
            対象の文字列から指定した型への変換が可能かどうかをチェックします。
            </summary>
            <typeparam name="T">変換先の型</typeparam>
            <param name="value">変換対象の文字列</param>
            <returns>変換可能な場合は true。不可能な場合は false。</returns>
            <remarks>
            <typeparamref name="T"/> のTryParseメソッドを実行します。<br/>
            値の変換が必要な場合は、直接、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.TryParse(System.Type,System.String,System.Object@)"/>を実行して、その戻り値で判断してください。<br/>
            値の変換が不要で、チェックのみでよい場合のみこのメソッドを利用してください。
            </remarks>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.Check(System.Type,System.String)"/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.TryParse(System.Type,System.String,System.Object@)"/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.GetTryParseMethod(System.Type)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.Check(System.Type,System.String)">
            <summary>
            対象の文字列から指定した型への変換が可能かどうかをチェックします。
            </summary>
            <param name="type">変換先の型</param>
            <param name="value">変換対象の文字列</param>
            <returns>変換可能な場合は true。不可能な場合は false。</returns>
            <remarks>
            <paramref name="type"/> のTryParseメソッドを実行します。<br/>
            値の変換が必要な場合は、直接、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.TryParse(System.Type,System.String,System.Object@)"/>を実行して、その戻り値で判断してください。<br/>
            値の変換が不要で、チェックのみでよい場合のみこのメソッドを利用してください。
            </remarks>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.TryParse(System.Type,System.String,System.Object@)"/>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.GetTryParseMethod(System.Type)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.#cctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.Parse(System.Type,System.String)">
            <summary>
            指定した型のParseメソッドを使用して、対象の文字列から指定した型への変換を試みます。
            </summary>
            <param name="type">変換先の型</param>
            <param name="value">変換対象の文字列</param>
            <returns>変換結果の値</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.GetParseMethod(System.Type)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.TryParse(System.Type,System.String,System.Object@)">
            <summary>
            指定した型のTryParseメソッドを使用して、対象の文字列から指定した型への変換を試みます。
            </summary>
            <param name="type">変換先の型</param>
            <param name="value">変換対象の文字列</param>
            <param name="result">正常に変換できた場合はその変換値、できなかった場合は null が格納されます。</param>
            <returns>正常に変換できた場合は true。それ以外の場合は false。</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.GetTryParseMethod(System.Type)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.GetParseMethod(System.Type)">
            <summary>
            対象の型で定義されている Parseメソッド を取得します。
            </summary>
            <param name="type">対象の型</param>
            <returns>Parseメソッド</returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">対象の型にParseメソッドが存在しない場合にスローします。</exception>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager"/> にキャッシュされている場合は、キャッシュされているメソッドを返します。<br/>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager"/> にキャッシュされていない場合、Parseメソッドが存在すればキャッシュして保持します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Objects.Parser.GetTryParseMethod(System.Type)">
            <summary>
            対象の型で定義されている TryParseメソッド を取得します。
            </summary>
            <param name="type">対象の型</param>
            <returns>TryParseメソッド</returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">対象の型にTryParseメソッドが存在しない場合にスローします。</exception>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager"/> にキャッシュされている場合は、キャッシュされているメソッドを返します。<br/>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Designer.CacheManager"/> にキャッシュされていない場合、TryParseメソッドが存在すればキャッシュして保持します。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextChecker">
            <summary>
            文字列を指定されたパターンでチェックを行うクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextChecker.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextChecker"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextChecker.Regex">
            <summary>
            正規表現を取得、設定します。
            </summary>
            <value>正規表現</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextChecker.Pattern"/> から正規表現パターンを作成します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextChecker.pattern">
            <summary>
            チェックを行うパターンです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextChecker.IsMatch(System.String)">
            <summary>
            文字列がパターンに一致しているかチェックします。
            </summary>
            <param name="value">文字列</param>
            <returns>パターンに一致している場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextChecker.IsMatch(System.Char)">
            <summary>
            <see cref="T:System.Char"/> 文字がパターンに一致しているかチェックします。
            </summary>
            <param name="value"><see cref="T:System.Char"/> 文字</param>
            <returns>パターンに一致している場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextChecker.PatternEscape(System.String)">
            <summary>
            文字列をエスケープします。
            </summary>
            <param name="pattern">パターン</param>
            <returns>文字列をエスケープした文字列</returns>
            <remarks>
            このクラスに渡すためのパターンをエスケープします。
            パターンを設定すると正規表現で[]が付加されるため、
            先頭[、末尾]で括られている場合は正規表現文字列として
            エスケープを行いません。
            先頭、末尾のいずれかが[]に該当しない場合は[]ごとエスケープする
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextChecker.CustomEscape(System.String)">
            <summary>
            文字列をエスケープします。
            </summary>
            <param name="pattern">パターン</param>
            <returns>エスケープした文字列</returns>
            <remarks>
            <see cref="M:System.Text.RegularExpressions.Regex.Escape(System.String)"/> は「]-」などがエスケープされません。
            そのため独自にエスケープ処理を行います。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextChecker.Pattern">
            <summary>
            チェックを行うパターンを取得、設定します。
            </summary>
            <value>チェックを行うパターン</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextChecker.UseSurrogate">
            <summary>
            サロゲートペア文字を使用するかを取得、設定します。
            </summary>
            <value>サロゲートペア文字を使用する場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextEncoding">
            <summary>
            文字列のエンコードを行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextEncoding.encodeFallback">
            <summary>
            エンコード出来ない文字のエンコード文字です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextEncoding.decodeFallback">
            <summary>
            デコードできない文字のデコード文字です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextEncoding.encoding">
            <summary>
            デフォルトのエンコーディングルールを表す<see cref="T:System.Text.Encoding"/> です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextEncoding.GetBinaryLength(System.String)">
            <summary>
            ShiftJisでバイト数を取得します。
            </summary>
            <param name="text">文字列</param>
            <returns>バイト数</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextEncoding.GetBinaryLength(System.Char[])">
            <summary>
            ShiftJisでバイト数を取得します。
            </summary>
            <param name="characters">文字列</param>
            <returns>バイト数</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextEncoding.BinarySubstring(System.String,System.Int32,System.Int32)">
            <summary>
            ShiftJisで文字列の切り取りを行います。
            </summary>
            <param name="text">文字列</param>
            <param name="start">開始位置</param>
            <param name="length">文字数</param>
            <returns>切り取った文字</returns>
            <remarks>
            SJISに変換して文字列を切り取ります。
            開始位置が全角文字をまたいだ場合は次の文字が対象になります。
            終了位置が全角文字をまたいだ場合はその文字は対象外とします。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextEncoding.BinaryLeft(System.String,System.Int32)">
            <summary>
            ShiftJisで末尾の文字列を切り捨てます。
            </summary>
            <param name="text">文字列</param>
            <param name="length">左から取得するバイト数</param>
            <returns>文字列から切り取った桁数</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextEncoding.SetBinaryLength(System.String,System.Int32)">
            <summary>
            ShiftJisで足りないバイト数をスペース埋めします。
            </summary>
            <param name="text">文字列</param>
            <param name="length">文字列幅</param>
            <returns>スペース埋めした文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextEncoding.ShiftJis">
            <summary>
            ShiftJisのエンコーディングルールを表す<see cref="T:System.Text.Encoding"/> を取得します。
            </summary>
            <value>ShiftJisのエンコーディングルールを表す<see cref="T:System.Text.Encoding"/></value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextFormatter">
            <summary>
            特殊なパターンのフォーマットを行います。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextFormatter.FormatString(System.String)">
            <summary>
            文字列をフォーマットします。
            </summary>
            <param name="text">文字列</param>
            <returns>フォーマット後文字列</returns>
            <remarks>
            右空白を削除して返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextFormatter.FormatForZeroPadding(System.String,System.Int32)">
            <summary>
            前ゼロフォーマットを行います。
            </summary>
            <param name="text">文字列</param>
            <param name="length">桁数</param>
            <returns>フォーマット後文字列</returns>
            <remarks>
            桁数がオーバーしている場合はそのままの値を返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextFormatter.FormatForNumber(System.String,System.Int32,System.Boolean,Ill.Incorporated.Aladdinoffice.Framework.Attributes.DecimalDisplayType)">
            <summary>
            数値フォーマットを行います。
            </summary>
            <param name="text">文字列</param>
            <param name="digit">小数桁</param>
            <param name="comma">カンマ編集する場合は true。それ以外の場合は false。</param>
            <param name="decimalDisplayType">小数桁ゼロサプレスを行う場合は true。それ以外の場合は false。</param>
            <returns>フォーマット後文字列</returns>
            <remarks>
            <see cref="T:System.Decimal"/>.<see cref="M:System.Decimal.TryParse(System.String,System.Decimal@)"/>が失敗した場合は文字列をそのまま返します。
            小数桁がオーバーしている場合、小数桁を丸めずに返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextFormatter.FormatForYear(System.String)">
            <summary>
            年フォーマットを行います。
            </summary>
            <param name="text">文字列</param>
            <returns>フォーマット後文字列</returns>
            <remarks>
            入力が1桁、または2桁の場合4桁に変更して返します。50以下の場合は+2000して返します。50より大きい場合は+1900して返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextFormatter.FormatForJan(System.String)">
            <summary>
            JANコードフォーマットを行います。
            </summary>
            <param name="text">文字列</param>
            <returns>フォーマット後文字列</returns>
            <remarks>
            7、12桁の場合、最終1桁にチェックデジットを追加して返します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Text.TextFormatter.CheckDigit(System.String)">
            <summary>
            チェックデジットを取得します。
            </summary>
            <param name="value">文字列</param>
            <returns>チェックデジット</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.Interfaces.IMenuItem">
            <summary>
            プログラム起動するメニュー項目情報を提供するインターフェースです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.Interfaces.IParentMenuNode">
            <summary>
            メニュー項目情報を提供するインターフェースです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.Interfaces.IParentMenuNode.Title">
            <summary>
            UIに表示するタイトルを取得します。
            </summary>
            <value>タイトル</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.Interfaces.IParentMenuNode.TitleFormat">
            <summary>
            UIに表示するタイトルの基になるフォーマット文字列を取得します。
            </summary>
            <value>タイトルの基になるフォーマット文字列</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.Interfaces.IParentMenuNode.Visibility">
            <summary>
            表示状態を取得します。
            </summary>
            <value>表示状態</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.Interfaces.IParentMenuNode.Children">
            <summary>
            子階層のメニュー項目を取得します。
            </summary>
            <value>子階層のメニュー項目</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.Interfaces.IParentMenuNode.UsePassword">
            <summary>
            このメニュー項目の選択時に、システムパスワードの入力を要求するかどうかを取得します。
            </summary>
            <value>システムパスワードの入力を要求する場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.Interfaces.IParentMenuNode.ExecType">
            <summary>
            実行方法を取得します。
            </summary>
            <value>実行方法</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.Interfaces.IParentMenuNode.Enabled">
            <summary>
            このメニュー項目が有効かどうかを取得します。
            </summary>
            <value>有効な場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ParentMenuNode">
            <summary>
            メニュー項目情報クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ParentMenuNode.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ParentMenuNode"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ParentMenuNode._titleFormat">
            <summary>
            UIに表示するタイトルの基になるフォーマット文字列です。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ParentMenuNode.Title">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ParentMenuNode.TitleFormat">
            <inheritdoc/>
            <remarks>
            メニューマスタ.項目名ラベルフォーマット に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ParentMenuNode.Visibility">
            <inheritdoc/>
            <remarks>
            メニューマスタ.可視区分 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ParentMenuNode.UsePassword">
            <inheritdoc/>
            <remarks>
            メニューマスタ.初期設定区分 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ParentMenuNode.Children">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ParentMenuNode.ExecType">
            <inheritdoc/>
            <remarks>
            メニューマスタ.起動パターン に相当します。<br/>
            このクラスでは、通常、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ExecuteType.Menu"/> が設定されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.ParentMenuNode.Enabled">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItem">
            <summary>
            プログラム起動するメニュー項目情報クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItem._titleFormat">
            <summary>
            UIに表示するタイトルの基になるフォーマット文字列です。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItem.ExecName">
            <inheritdoc/>
            <remarks>
            メニューマスタ.EXE名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItem.FormCheck">
            <inheritdoc/>
            <remarks>
            メニューマスタ.FORMCHK に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItem.Title">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItem.TitleFormat">
            <inheritdoc/>
            <remarks>
            メニューマスタ.項目名ラベルフォーマット に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItem.Visibility">
            <inheritdoc/>
            <remarks>
            メニューマスタ.可視区分 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItem.Params">
            <inheritdoc/>
            <remarks>
            メニューマスタ.引数1～3 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItem.UsePassword">
            <inheritdoc/>
            <remarks>
            メニューマスタ.初期設定区分 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItem.ExecType">
            <inheritdoc/>
            <remarks>
            メニューマスタ.起動パターン に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItem.Enabled">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItem.Ill#Incorporated#Aladdinoffice#Framework#MenuItems#Interfaces#IParentMenuNode#Children">
            <inheritdoc/>
            <remarks>
            このクラスでは null を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItem.Ill#Incorporated#Aladdinoffice#Framework#Threading#Interfaces#ICreatingArgs#Tag">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItemVisibility">
            <summary>
            メニュー項目の表示状態を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItemVisibility.Visible">
            <summary>
            要素を表示します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItemVisibility.Hidden">
            <summary>
            要素を表示しませんが、その要素の領域をレイアウト内に予約します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItemVisibility.Collapsed">
            <summary>
            要素を表示しません。また、その要素の領域もレイアウト内に予約しません。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItemDictionary">
            <summary>
            メニュー項目の階層情報を管理するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItemDictionary._tree">
            <summary>
            メニュー項目の階層ツリーです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItemDictionary.BeforeLoading(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
            <remarks>
            メニュー項目の階層ツリー をクリアします。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItemDictionary.LoadMain(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
            <remarks>
            メニューマスタを読み込んで階層ツリーを構築します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItemDictionary.MenuTree">
            <summary>
            メニュー項目の階層ツリーを取得します。
            </summary>
            <value>メニュー項目の階層ツリー</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary">
            <summary>
            ロジック側からUI側への公開プロパティ項目を保持するディクショナリクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary._flags">
            <summary>
            公開プロパティの抽出用フラグを表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary"/> クラスの新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.Add(Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyItem)">
            <summary>
            指定した公開プロパティ情報オブジェクトを、プロパティ名をキーとしてディクショナリの要素に追加します。
            </summary>
            <param name="item">ディクショナリの要素に追加する公開プロパティ情報</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.Add(System.String)">
            <summary>
            指定したプロパティ名の公開プロパティ情報を生成し、ディクショナリの要素に追加します。
            </summary>
            <param name="propertyName">プロパティ名</param>
            <remarks>
            値の直接バインディング用です。<br />
            プロパティ名 = 項目属性の場合に使用します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.Add(System.String,System.String)">
            <summary>
            指定したプロパティ名、及び、項目属性の公開プロパティ情報を生成し、ディクショナリの要素に追加します。
            </summary>
            <param name="propertyName">プロパティ名</param>
            <param name="attribute">項目属性</param>
            <remarks>
            値の直接バインディング用です。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.Add(System.String,System.String,System.String)">
            <summary>
            指定したプロパティ名、バインディング対象のオブジェクト名、及び、メンバー名の公開プロパティ情報を生成し、ディクショナリの要素に追加します。
            </summary>
            <param name="propertyName">プロパティ名</param>
            <param name="sourceName">バインディング対象のオブジェクト名。通常はエンティティの識別名。</param>
            <param name="memberName">バインディング対象のメンバー名。通常はエンティティの列名。</param>
            <remarks>
            バインディング対象オブジェクト名 = 項目属性 = 項目属性を特定するためのテーブル名
            バインディング対象オブジェクトのメンバー名 = 項目属性 
            の場合に使用します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.Add(System.String,System.String,System.String,System.String)">
            <summary>
            指定した公開プロパティ名、バインディング対象のオブジェクト名、メンバー名、及び、項目属性の公開プロパティ情報を生成し、ディクショナリの要素に追加します。
            </summary>
            <param name="propertyName">プロパティ名</param>
            <param name="sourceName">バインディング対象のオブジェクト名。通常はエンティティの識別名。</param>
            <param name="memberName">バインディング対象のメンバー名。通常はエンティティの列名。</param>
            <param name="attribute">項目属性</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.Add(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            指定した引数の公開プロパティ情報を生成し、ディクショナリの要素に追加します。
            </summary>
            <param name="propertyName">プロパティ名</param>
            <param name="sourceName">バインディング対象のオブジェクト名。通常はエンティティの識別名。</param>
            <param name="memberName">バインディング対象のメンバー名。通常はエンティティの列名。</param>
            <param name="tableName">項目属性を特定するためのテーブル名</param>
            <param name="attribute">項目属性</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary._finder">
            <summary>
            バインディング対象情報から公開プロパティ名を検索する為のディクショナリです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.RemoveKey(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.ClearKeys">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.FindKeys(System.String,System.String)">
            <summary>
            バインディング対象情報を指定して、対応する公開プロパティ名を検索します。
            </summary>
            <param name="sourceName">バインディング対象のオブジェクト名。通常はエンティティの識別名。</param>
            <param name="memberName">バインディング対象のメンバー名。通常はエンティティの列名。</param>
            <returns>指定したバインディング対象オブジェクトのメンバーがバインディングされている公開プロパティ名の一覧。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.Initialize(System.Type)">
            <summary>
            指定したオブジェクトから、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.OpenUIPropertyAttribute"/> が設定されているプロパティを
            公開プロパティとして抽出し、ディクショナリの要素に追加します。
            </summary>
            <param name="objType">公開プロパティ抽出対象オブジェクトの型</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinder">
            <summary>
            バインディング情報からの公開プロパティ名検索用ディクショナリクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinder.Remove(System.String,System.String)">
            <summary>
            指定したバインディング対象オブジェクトのメンバーがバインディングされている公開プロパティ名の一覧に既定値を設定します。
            </summary>
            <param name="sourceName">バインディング対象のオブジェクト名。通常はエンティティの識別名。</param>
            <param name="memberName">バインディング対象のメンバー名。通常はエンティティの列名。</param>
            <returns>常に、true。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinder.RemoveKey(System.String,System.String)">
            <summary>
            指定したバインディング対象オブジェクトのメンバーがバインディングされている公開プロパティ名の一覧を <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinder"/> から削除します。
            </summary>
            <param name="sourceName">バインディング対象のオブジェクト名。通常はエンティティの識別名。</param>
            <param name="memberName">バインディング対象のメンバー名。通常はエンティティの列名。</param>
            <returns>
            要素が見つかり、正常に削除された場合は true。それ以外の場合は false。 
            このメソッドは、<paramref name="sourceName"/> が <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Collections.DictionaryBase`2"/> に見つからない場合、false を返します。
            </returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinder.GetDefaultValue">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinder.Item(System.String,System.String)">
            <summary>
            指定したバインディング対象オブジェクトのメンバーがバインディングされている公開プロパティ名の一覧を取得、設定します。
            </summary>
            <param name="sourceName">バインディング対象のオブジェクト名。通常はエンティティの識別名。</param>
            <param name="memberName">バインディング対象のメンバー名。通常はエンティティの列名。</param>
            <value>指定したバインディング対象オブジェクトのメンバーがバインディングされている公開プロパティ名の一覧。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinderKey">
            <summary>
            バインディング情報からの公開プロパティ名検索ディクショナリ用のキークラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinderKey.Create(System.String,System.String)">
            <summary>
            指定したバインディング対象オブジェクト、メンバーがバインディングされている公開プロパティ名の検索キーを生成します。
            </summary>
            <param name="sourceName">バインディング対象のオブジェクト名。通常はエンティティの識別名。</param>
            <param name="memberName">バインディング対象のメンバー名。通常はエンティティの列名。</param>
            <returns>キーインスタンス</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinderKey.op_Equality(Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinderKey,Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinderKey)">
            <summary>
            オペランドの値が等しい場合に true が返され、それ以外の場合は false が返されます。
            </summary>
            <param name="a">比較元</param>
            <param name="b">比較先</param>
            <returns>オペランドの値が等しい場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinderKey.op_Inequality(Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinderKey,Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinderKey)">
            <summary>
            オペランドの値が異なる場合に true が返され、それ以外の場合は false が返されます。
            </summary>
            <param name="a">比較元</param>
            <param name="b">比較先</param>
            <returns>オペランドの値が異なる場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinderKey.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinderKey.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinderKey.SourceName">
            <summary>
            バインディング対象のオブジェクト名を取得します。
            </summary>
            <value>バインディング対象のオブジェクト名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyDictionary.UIPropertyBindingFinderKey.MemberName">
            <summary>
            バインディング対象のメンバー名を取得します。
            </summary>
            <value>バインディング対象オブジェクトのメンバー名</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary">
            <summary>
            複数エンティティの一括管理用ディクショナリクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary._flags">
            <summary>
            エンティティプロパティの抽出用フラグを表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary.Add(Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityBase)">
            <summary>
            指定したエンティティオブジェクトを、識別名をキーとしてディクショナリの要素に追加します。
            </summary>
            <param name="item">ディクショナリの要素に追加するエンティティ</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary._propertyType">
            <summary>
            エンティティプロパティの既定の型情報です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary.Initialize(System.Type)">
            <summary>
            指定したオブジェクトの型から、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.Attributes.EntityAttribute"/> が設定されているプロパティを
            管理対象のエンティティとして抽出し、ディクショナリの要素に追加してインスタンスを初期化します。
            </summary>
            <param name="objType">エンティティプロパティ抽出対象オブジェクトの型</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary.BeginEdit">
            <inheritdoc/>
            <summary>
            ディクショナリの各要素の値の編集を開始します。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary.BeginEdit"/> が呼び出された後、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary.Commit"/>、もしくは、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary.Rollback"/> がまだ呼び出されていない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary.Rollback">
            <inheritdoc/>
            <summary>
            ディクショナリの各要素の値の編集を取り消して、以前の状態に戻します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary.Commit">
            <inheritdoc/>
            <summary>
            ディクショナリの各要素の値の編集を確定します。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary.BeginEdit"/> がまだ呼び出されていない場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary.IsSuspended">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject"/> の一括管理用ディクショナリクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary._flags">
            <summary>
            バインディングソースプロパティの抽出用フラグです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.Add(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject)">
            <summary>
            指定したオブジェクトを、識別名をキーとしてディクショナリの要素に追加します。
            </summary>
            <param name="item">ディクショナリの要素に追加するオブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.RemoveKey(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.ClearKeys">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.AddItemEventHandler(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject)">
            <summary>
            指定した管理対象オブジェクトに対してイベントハンドラを登録します。
            </summary>
            <param name="item">管理対象オブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.RemoveItemEventHandler(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject)">
            <summary>
            指定した管理対象オブジェクトに登録されているイベントハンドラを解除します。
            </summary>
            <param name="item">管理対象オブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.Item_DataChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <summary>
            保持している管理対象オブジェクトの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyDataChanged.DataChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            自身の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.DataChanged"/> イベントとして再通知します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.Item_ValidationErrorChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <summary>
            保持している管理対象オブジェクトの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationErrorChanged.ValidationErrorChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            自身の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.ValidationErrorChanged"/> イベントとして再通知します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.Item_ValidationWarningChanged(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <summary>
            保持している管理対象オブジェクトの <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.INotifyValidationWarningChanged.ValidationWarningChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            自身の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.ValidationWarningChanged"/> イベントとして再通知します。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary._isObservingItems">
            <summary>
            保持している管理対象オブジェクトのイベントを監視しているかどうかを示す値です。
            </summary>
            <value>保持している管理対象オブジェクトのイベントを監視している場合は true。それ以外の場合は false。 </value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary._propertyType">
            <summary>
            バインディングソースプロパティの既定の型情報です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.GetAttributes(System.Type)">
            <summary>
            指定したオブジェクトの型から、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Attributes.SourceAttribute"/> が設定されているエンティティ行プロパティを
            管理対象のバインディングソースとして抽出し、その設定属性情報を返します。
            </summary>
            <param name="objType">バインディングソースプロパティ抽出対象オブジェクトの型</param>
            <returns>バインディングソース設定属性情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.Initialize(System.Type,Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityDictionary)">
            <summary>
            属性情報に基づいて生成した管理対象のバインディングソースを、ディクショナリの要素に追加します。
            </summary>
            <param name="objType">バインディングソースプロパティ抽出対象オブジェクトの型</param>
            <param name="entities">
            バインディングソース(<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Entities.EntityRowBase"/>)の新規インスタンス取得元となるエンティティ一覧。<br/>
            新規インスタンスを取得するだけで、取得したインスタンスは当該エンティティには追加されません。<br/>
            本メソッド実行後、必要に応じて、追加処理を行ってください。
            </param>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.Attributes"/> で設定されている属性情報に基づいてバインディングソースを生成します。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.Attributes"/> が未設定の場合は、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.GetAttributes(System.Type)"/> メソッドにより属性情報を抽出した上で生成します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.OnDataChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.DataChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.OnValidationErrorChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.ValidationErrorChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.OnValidationWarningChanged(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningChangedEventArgs)">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.ValidationWarningChanged"/> イベントを発生させます。
            </summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary._backup">
            <summary>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.BeginEdit"/> 呼出時点のディクショナリの要素の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.BeginEdit">
            <inheritdoc/>
            <remarks>
            ディクショナリの各要素の値の編集を開始します。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.BeginEdit"/> が呼び出された後、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.Commit"/>、もしくは、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.Rollback"/> がまだ呼び出されていない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.Rollback">
            <inheritdoc/>
            <remarks>
            ディクショナリの各要素の値の編集を取り消して、以前の状態に戻します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.Commit">
            <inheritdoc/>
            <remarks>
            ディクショナリの各要素の値の編集を確定させます。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.BeginEdit"/> がまだ呼び出されていない場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.IsObservingItems">
            <summary>
            保持している管理対象オブジェクトのイベントを監視しているかどうかを取得、設定します。
            </summary>
            <value>保持している管理対象オブジェクトのイベントを監視している場合は true。それ以外の場合は false。 </value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.Attributes">
            <summary>
            管理するバインディングソースの設定属性情報を取得、設定します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.DataChanged">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.ValidationErrorChanged">
            <inheritdoc/>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.ValidationWarningChanged">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.Backup">
            <summary>
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.BeginEdit"/> 呼出時点のディクショナリの要素の一覧を取得します。
            </summary>
            <value><see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.BeginEdit"/> 呼出時点のディクショナリの要素の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.BoundSourceDictionary.IsSuspended">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionDictionary">
            <summary>
            ファンクションメソッドを管理するディクショナリクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionDictionary._flags">
            <summary>
            ファンクションメソッドの抽出用フラグを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionDictionary._customizedFunctionIdentifier">
            <summary>
            カスタマイズ版メソッドの抽出用識別子を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionDictionary.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionDictionary"/> クラスの新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionDictionary._returnType">
            <summary>
            ファンクションメソッドを検索するための戻り値の型です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionDictionary._paramTypes">
            <summary>
            ファンクションメソッドを検索するための引数の型のリストです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionDictionary.Initialize(System.Object)">
            <summary>
            指定したオブジェクトから、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Attributes.FunctionAttribute"/> が設定されているメソッドを
            ファンクションメソッドとして抽出し、メンバーに保持します。
            </summary>
            <param name="obj">ファンクションメソッド抽出対象オブジェクト</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionDictionary.IsCustomizedMethodName(System.String)">
            <summary>
            指定したメソッド名がカスタマイズ版かどうかを返します。
            </summary>
            <param name="name">メソッド名</param>
            <returns>カスタマイズ版メソッドの場合は true。完適版の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.FunctionDictionary.GetCustomizedMethodName(System.String)">
            <summary>
            指定したメソッド名をカスタマイズ版メソッド名に変換します。
            </summary>
            <param name="name">メソッド名</param>
            <returns>カスタマイズ版メソッド名</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary">
            <summary>
            データ変更イベント処理エラーを管理するコレクションクラスです。
            </summary>
            <remarks>
            このディクショナリの <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable.Rollback"/> 実装では、ディクショナリ自体の復元ではなく、ディクショナリの値の復元を行います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.Add(System.String,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException)">
            <summary>
            対象のプロパティにエラー情報を追加します。
            </summary>
            <param name="key">プロパティ名</param>
            <param name="ex">エラー情報を表す例外</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.AddRange(System.String,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException})">
            <summary>
            対象のプロパティにエラー情報を追加します。
            </summary>
            <param name="key">プロパティ名</param>
            <param name="exceptions">エラー情報を表す例外</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.RemoveKey(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.ClearKeys">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.GetDefaultValue">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.Item_ValueCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            エラー情報コレクション の <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            追加、あるいは、除去されたエラー情報に設定されているすべてのデータ変更イベント項目に対して、当該エラー情報を同様に追加、もしくは、除去を行います。<br/>
            また、このクラスの <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.AddValueEventHandler(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventExceptionCollection)">
            <summary>
            指定したエラー情報コレクションにイベントハンドラを登録します。
            </summary>
            <param name="value">エラー情報コレクション</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.RemoveValueEventHandler(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventExceptionCollection)">
            <summary>
            指定したエラー情報コレクションに登録されているイベントハンドラを解除します。
            </summary>
            <param name="value">エラー情報コレクション</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary._backup">
            <summary>
            エラー情報の編集開始時点のエラー情報です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.BeginEdit">
            <inheritdoc/>
            <summary>
            エラー情報の編集を開始します。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.BeginEdit"/> が呼び出された後、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.Commit"/>、もしくは、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.Rollback"/> がまだ呼び出されていない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.Rollback">
            <inheritdoc/>
            <summary>
            エラー情報の編集を取り消して、以前の状態に戻します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.Commit">
            <inheritdoc/>
            <summary>
            エラー情報の編集を確定します。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.BeginEdit"/> がまだ呼び出されていない場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.Backup">
            <summary>
            エラー情報の編集開始時点のエラー情報を取得します。
            </summary>
            <value>エラー情報の編集開始時点のエラー情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationErrorDictionary.IsSuspended">
            <inheritdoc/>
            <summary>
            エラー情報の編集中かどうかを取得します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary">
            <summary>
            データ変更イベント処理警告を管理するコレクションクラスです。
            </summary>
            <remarks>
            このディクショナリの <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.ISuspendable.Rollback"/> 実装では、ディクショナリ自体の復元ではなく、ディクショナリの値の復元を行います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.Add(System.String,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException)">
            <summary>
            対象のプロパティに警告情報を追加します。
            </summary>
            <param name="key">プロパティ名</param>
            <param name="ex">警告情報を表す例外</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.AddRange(System.String,System.Collections.Generic.IEnumerable{Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventException})">
            <summary>
            対象のプロパティに警告情報を追加します。
            </summary>
            <param name="key">プロパティ名</param>
            <param name="exceptions">警告情報を表す例外</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.RemoveKey(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.ClearKeys">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.GetDefaultValue">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.Item_ValueCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            警告情報コレクション の <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
            <remarks>
            追加、あるいは、除去された警告情報に設定されているすべてのデータ変更イベント項目に対して、当該警告情報を同様に追加、もしくは、除去を行います。<br/>
            また、このクラスの <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.AddValueEventHandler(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventExceptionCollection)">
            <summary>
            指定した警告情報コレクションにイベントハンドラを登録します。
            </summary>
            <param name="value">警告情報コレクション</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.RemoveValueEventHandler(Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.DataEventExceptionCollection)">
            <summary>
            指定した警告情報コレクションに登録されているイベントハンドラを解除します。
            </summary>
            <param name="value">警告情報コレクション</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary._backup">
            <summary>
            警告情報の編集開始時点の警告情報です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.BeginEdit">
            <inheritdoc/>
            <summary>
            警告情報の編集を開始します。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.BeginEdit"/> が呼び出された後、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.Commit"/>、もしくは、<see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.Rollback"/> がまだ呼び出されていない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.Rollback">
            <inheritdoc/>
            <summary>
            警告情報の編集を取り消して、以前の状態に戻します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.Commit">
            <inheritdoc/>
            <summary>
            警告情報の編集を確定します。
            </summary>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><see cref="M:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.BeginEdit"/> がまだ呼び出されていない場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.Backup">
            <summary>
            警告情報の編集開始時点の警告情報を取得します。
            </summary>
            <value>警告情報の編集開始時点の警告情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.ValidationWarningDictionary.IsSuspended">
            <inheritdoc/>
            <summary>
            警告情報の編集中かどうかを取得します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyResetEventArgs">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject.OpenPropertyResetCompleted"/> イベントのデータを提供します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyResetEventArgs.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IUIBindableObject,System.String)">
            <summary>
            指定した既定値設定対象オブジェクト、及び、公開プロパティ名の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyResetEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="item">既定値設定対象オブジェクト</param>
            <param name="name">既定値設定対象公開プロパティ名</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Modules.OpenUIPropertyResetEventArgs.Name">
            <summary>
            既定値設定対象公開プロパティ名を取得します。
            </summary>
            <value>既定値設定対象公開プロパティ名</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <summary>
            AladdinOfficeにシステムエラーが発生した場合にスローされる例外です。
            </summary>
            <remarks>
            この例外は、使用方法の間違いなどで発生したエラーに対してスローします。
            この例外はCatchしないでください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException.#ctor(System.String,System.Object[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="args">メッセージの引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException.#ctor(System.Exception,System.String,System.Object[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="innerException">この例外の原因となる例外</param>
            <param name="message">メッセージ</param>
            <param name="args">メッセージの引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException.#ctor(System.String,System.Exception)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">メッセージ</param>
            <param name="innerException">この例外の原因となる例外</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader">
            <summary>
            AladdinOffice の起動時に、指定されたアセンブリの読込処理を行うクラスです。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.System"/> の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.ExecDirectory"/> で指定されるディレクトリに配置された Load.xml に
            記述されているアセンブリの読込処理を行います。
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader._loadLevel">
            <summary>
            アセンブリの読込レベルです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.Load">
            <summary>
            アセンブリの読込処理を行います。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.Items">
            <summary>
            読込対象の一覧を取得、設定します。
            </summary>
            <value>読込対象の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.LoadFile">
            <summary>
            読込対象のアセンブリを記述した設定ファイルへのパスを取得します。
            </summary>
            <value>読込対象のアセンブリを記述した設定ファイルへのパス</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.System"/> の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.ExecDirectory"/> で指定されるディレクトリに配置された Load.xml ファイルへのパスになります。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.LoadLevel">
            <summary>
            アセンブリの読込レベルを取得、設定します。
            </summary>
            <value>アセンブリの読込レベル。既定値は <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.AssemblyLoadLevel.Full"/> です。</value>
            <remarks>
            このプロパティで指定された読込レベル以下のレベルが設定されているアセンブリのみが読み込まれます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.LoadType">
            <summary>
            読込対象のアセンブリと、実行する読込処理を指定するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.LoadType._loadLevel">
            <summary>
            アセンブリの読込レベルです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.LoadType.Load">
            <summary>
            対象のアセンブリを読み込み、指定された処理を実行します。
            </summary>
            <remarks>
            クラス、及び、メソッド名が指定されていない場合は、アセンブリの読込のみを行います。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.LoadType.Assembly">
            <summary>
            読込対象のアセンブリ名を取得、設定します。
            </summary>
            <value>読込対象のアセンブリ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.LoadType.Type">
            <summary>
            アセンブリの読込後に特定の処理を実行するクラスの型を取得、設定します。
            </summary>
            <value>アセンブリの読込後に特定の処理を実行するクラスの型</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.LoadType.StaticMethod">
            <summary>
            アセンブリの読込後に行う処理のメソッド名を取得、設定します。
            </summary>
            <value>アセンブリの読込後に行う処理のメソッド名</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.LoadType.Type"/> で指定されるクラスの内、引数のない静的メソッドを指定します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.LoadType.LoadLevel">
            <summary>
            アセンブリの読込レベルを取得、設定します。
            </summary>
            <value>アセンブリの読込レベル。既定値は <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.AssemblyLoadLevel.Full"/> です。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.AssemblyLoadLevel">
            <summary>
            アセンブリの読込レベルを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.AssemblyLoadLevel.Non">
            <summary>
            読み込まない
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.AssemblyLoadLevel.System">
            <summary>
            システムに関連するもののみ読み込み
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader.AssemblyLoadLevel.Full">
            <summary>
            すべて読み込み
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs">
            <summary>
            AladdinOffice の起動時に指定されたコマンドライン引数を管理するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.LOGIN_ID">
            <summary>
            ログインIDをコマンドライン引数から特定するためのキーとなる定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.DATABASE">
            <summary>
            データベースのインスタンス名をコマンドライン引数から特定するためのキーとなる定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.SERVER">
            <summary>
            データベースのサーバー名をコマンドライン引数から特定するためのキーとなる定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.DBINDEX">
            <summary>
            システムファイルに記述されているデータベース設定のインデックスをコマンドライン引数から特定するためのキーとなる定数です。
            </summary>
            <seealso cref="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.DEFAULT_XML_NAME"/>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.INI_FILE">
            <summary>
            iniファイルへのパスをコマンドライン引数から特定するためのキーとなる定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.STACK_LOG">
            <summary>
            ログ出力時にスタックトレースも取得することを指定するためのコマンドライン引数を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.IGNORE_LOACL_UPDATE">
            <summary>
            ローカル実行モードが有効な端末で、ローカルファイルの更新を行わずに ALaddinOffice を起動することを指定するためのコマンドライン引数を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs._args">
            <summary>
            AladdinOffice の起動時に指定されたコマンドライン引数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.SystemArgKeys">
            <summary>
            キーと値の組で指定されるコマンドライン引数のキーの一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.SystemDefaultArgKeys">
            <summary>
            キーのみで指定されるコマンドライン引数のキーの一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.Load">
            <summary>
            コマンドライン引数を解析して保持します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.OriginalArgs"/> を解析し、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.SystemArgs"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.SystemDefaultCommandArgs"/>、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.CustomArgs"/> に分類して保持します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.OriginalArgs">
            <summary>
            AladdinOffice の起動時に指定されたコマンドライン引数を取得します。
            </summary>
            <value>AladdinOffice の起動時に指定されたコマンドライン引数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.SystemArgs">
            <summary>
            AladdinOffice のシステムレベルで対応しているコマンドライン引数の内、キーと値の組で指定されるコマンドライン引数の一覧を取得します。
            </summary>
            <value>システムレベルで対応しているコマンドライン引数の内、キーと値の組で指定されるコマンドライン引数の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.SystemDefaultCommandArgs">
            <summary>
            AladdinOffice のシステムレベルで対応しているコマンドライン引数を取得します。
            </summary>
            <value>システムレベルで対応しているコマンドライン引数</value>
            <remarks>
            この配列には <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.SystemArgs"/> から取得できるコマンドライン引数も含みます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.CommandLineArgs.CustomArgs">
            <summary>
            AladdinOffice のシステムレベルで対応していない分のコマンドライン引数を取得します。
            </summary>
            <value>システムレベルで対応していない分のコマンドライン引数</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ConfigDbString">
            <summary>
            接続先のデータベースと接続方法を指定するクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ConfigDbString.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ConfigDbString"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ConfigDbString.ReplaceConnectionStringItem(System.String)">
            <summary>
            対象のデータベース接続文字列要素に、実際の接続文字列として使用するために必要な置換処理を施します。
            </summary>
            <param name="item">データベース文字列要素</param>
            <returns>置換処理を施したデータベース文字列要素</returns>
            <remarks>
            SQL Server でのSQL認証用パスワードの復号処理を行います。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ConfigDbString.PasswordEvalutor(System.Text.RegularExpressions.Match)">
            <summary>
            対象の正規表現に一致した文字列の復号化を行います。
            </summary>
            <param name="match">正規表現の一致結果</param>
            <returns>復号化した文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ConfigDbString.ChangeDataBase(System.String,System.String)">
            <summary>
            接続先のデータベースを指定したものに変更します。
            </summary>
            <param name="server">接続するデータベースのサーバー名</param>
            <param name="database">接続するデータベースのインスタンス名</param>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ConfigDbString.Type"/> が <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.Database.DatabaseType.Non"/> の場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ConfigDbString.Type">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ConfigDbString.DataBaseName">
            <summary>
            接続先のデータベース名を取得、設定します。
            </summary>
            <value>接続先のデータベース名</value>
            <remarks>
            SQL Server の場合はインスタンス名に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ConfigDbString.UserConfigIndex">
            <summary>
            AladdinOffice のユーザーIDを取得、設定します。
            </summary>
            <value>AladdinOffice のユーザーID</value>
            <remarks>
            ユーザー情報ファイル.ユーザーID に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ConfigDbString.ConnectionString">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ConfigDbString.ConnectionStrings">
            <summary>
            データベース接続文字列の要素の一覧を取得、設定します。
            </summary>
            <value>データベース接続文字列の要素の一覧</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.GetNameSelect">
            <summary>
            データベース上の名称表示項目ファイルのレコードを読み込んで、名称表示項目設定を行うクラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemSelect">
            <summary>
            システム設定系のテーブルからレコードを読み込んで、システム設定情報として保持するための基底クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection)">
            <summary>
            指定したデータベース接続でレコードを読み込む <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemSelect"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemSelect.GetQuery">
            <summary>
            データベース上のテーブルからレコードをSELECTするクエリを生成するためのオブジェクトを取得します。
            </summary>
            <returns>クエリを生成するためのオブジェクト</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemSelect.GetCommand">
            <summary>
            データベース上のテーブルからレコードをSELECTするクエリを実行するコマンドを取得します。
            </summary>
            <returns>クエリを実行するコマンド</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemSelect.Select">
            <summary>
            データベース上のテーブルからレコードを読み込んで、システム設定情報として保持します。
            </summary>
            <remarks>
            読み込み時に例外が派生した場合は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.IsSystemSettingError"/> に true を設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <summary>
            対象のレコードに対応するシステム設定情報を保持します。
            </summary>
            <param name="result">データベース上のテーブルから読み込んだレコード</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemSelect.TableName">
            <summary>
            レコードを読み込むデータベース上のテーブル名を取得します。
            </summary>
            <value>レコードを読み込むデータベース上のテーブル名</value>
            <remarks>
            レコードを取得するクエリのFROM句に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemSelect.Columns">
            <summary>
            データベース上のテーブルから読み込む必要のある列名の一覧を取得します。
            </summary>
            <value>データベース上のテーブルから読み込む必要のある列名の一覧</value>
            <remarks>
            レコードを取得するクエリのSELECT句に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemSelect.Section">
            <summary>
            データベース上のテーブルからレコードを読み込むときに使用するデータベース接続セクションを取得します。
            </summary>
            <value>使用するデータベース接続セクション</value>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.GetNameSelect.TABLE_NAME">
            <summary>
            名称表示項目ファイルのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.GetNameSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.GetNameDictionary)">
            <summary>
            指定したデータベース接続で名称表示項目ファイルを読み込み、対象の管理オブジェクトに設定を追加する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.GetNameSelect"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="dict">名称表示項目の設定情報の管理オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.GetNameSelect.COLUMNS">
            <summary>
            データベース上のテーブルから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.GetNameSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.GetNameSelect.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.GetNameSelect.Columns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.GetNameSelect.Items">
            <summary>
            名称表示項目の設定情報を管理するオブジェクトを取得、設定します。
            </summary>
            <value>名称表示項目の設定情報の管理オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.FindSelect">
            <summary>
            データベース上の検索画面ファイルのレコードを読み込んで、検索画面設定を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.FindSelect.TABLE_NAME">
            <summary>
            検索画面ファイルのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.FindSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.FindDictionary)">
            <summary>
            指定したデータベース接続で検索画面ファイルを読み込み、対象の管理オブジェクトに設定を追加する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.FindSelect"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="dict">検索画面の設定情報の管理オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.FindSelect.COLUMNS">
            <summary>
            データベース上のテーブルから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.FindSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.FindSelect.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.FindSelect.Columns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.FindSelect.Items">
            <summary>
            検索画面の設定情報を管理するオブジェクトを取得、設定します。
            </summary>
            <value>検索画面の設定情報の管理オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeReplaceSelect">
            <summary>
            データベース上の項目属性変換ファイルのレコードを読み込んで、項目属性設定を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeReplaceSelect.TABLE_NAME">
            <summary>
            項目属性変換ファイルのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeReplaceSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDictionary)">
            <summary>
            指定したデータベース接続で項目属性変換ファイルを読み込み、対象の管理オブジェクトに設定を追加する 
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeReplaceSelect"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="dict">項目属性の管理オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeReplaceSelect.COLUMNS">
            <summary>
            データベース上のテーブルから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeReplaceSelect.GetQuery">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeReplaceSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeReplaceSelect.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeReplaceSelect.Columns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeReplaceSelect.Items">
            <summary>
            項目属性を管理するオブジェクトを取得、設定します。
            </summary>
            <value>項目属性の管理オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeSelect">
            <summary>
            データベース上の項目属性ファイルのレコードを読み込んで、項目属性設定を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeSelect.TABLE_NAME">
            <summary>
            項目属性ファイルのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.Attributes.ItemAttributeDictionary)">
            <summary>
            指定したデータベース接続で項目属性ファイルを読み込み、対象の管理オブジェクトに設定を追加する 
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeSelect"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="dict">項目属性の管理オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeSelect.COLUMNS">
            <summary>
            データベース上のテーブルから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeSelect.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeSelect.Columns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ItemAttributeSelect.Items">
            <summary>
            項目属性を管理するオブジェクトを取得、設定します。
            </summary>
            <value>項目属性の管理オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.JumpSelect">
            <summary>
            データベース上のジャンプ画面ファイルのレコードを読み込んで、ジャンプ画面設定を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.JumpSelect.TABLE_NAME">
            <summary>
            ジャンプ画面ファイルのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.JumpSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.JumpDictionary)">
            <summary>
            指定したデータベース接続でジャンプ画面ファイルを読み込み、対象の管理オブジェクトに設定を追加する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.JumpSelect"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="dict">ジャンプ先画面の設定情報の管理オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.JumpSelect.COLUMNS">
            <summary>
            データベース上のテーブルから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.JumpSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.JumpSelect.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.JumpSelect.Columns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.JumpSelect.Items">
            <summary>
            ジャンプ先画面の設定情報を管理するオブジェクトを取得、設定します。
            </summary>
            <value>ジャンプ先画面の設定情報の管理オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.LabelSelect">
            <summary>
            データベース上の項目名ファイルのレコードを読み込んで、項目名設定を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.LabelSelect.TABLE_NAME">
            <summary>
            項目名ファイルのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.LabelSelect.USER_ID_COLUMN">
            <summary>
            項目名ファイルのユーザーIDの列名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.LabelSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.LabelDictionary)">
            <summary>
            指定したデータベース接続で項目名ファイルを読み込み、対象の管理オブジェクトに設定を追加する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.LabelSelect"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <param name="dict">項目名ラベルの設定情報の管理オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.LabelSelect.COLUMNS">
            <summary>
            データベース上のテーブルから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.LabelSelect.GetQuery">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.LabelSelect.GetCommand">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.LabelSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.LabelSelect.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.LabelSelect.Columns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.LabelSelect.Items">
            <summary>
            項目名ラベルの設定情報を管理するオブジェクトを取得、設定します。
            </summary>
            <value>項目名ラベルの設定情報の管理オブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.LabelSelect.UserId">
            <summary>
            ユーザーIDを取得、設定します。
            </summary>
            <value>ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ListTypeSelect">
            <summary>
            データベース上の入力タイプファイル、及び、入力タイプ詳細ファイルのレコードを読み込んで、区分項目設定を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ListTypeSelect.TABLE_NAME">
            <summary>
            入力タイプファイルのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ListTypeSelect.SUB_TABLE">
            <summary>
            入力タイプ詳細ファイルのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ListTypeSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ListTypeDictionary)">
            <summary>
            指定したデータベース接続で入力タイプファイル、及び、入力タイプ詳細ファイルを読み込み、対象の管理オブジェクトに
            設定を追加する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ListTypeSelect"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="dict">区分項目の設定情報の管理オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ListTypeSelect.COLUMNS">
            <summary>
            データベース上の入力タイプファイルから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ListTypeSelect.SUB_COLUMNS">
            <summary>
            データベース上の入力タイプ詳細ファイルから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ListTypeSelect.GetQuery">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ListTypeSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ListTypeSelect.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ListTypeSelect.Columns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.ListTypeSelect.Items">
            <summary>
            区分項目の設定情報を管理するオブジェクトを取得、設定します。
            </summary>
            <value>区分項目の設定情報の管理オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect">
            <summary>
            データベース上のメニューマスタのレコードを読み込んで、メニュー階層設定を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.TABLE_NAME">
            <summary>
            メニューマスタのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.SEQ_TABLE">
            <summary>
            セキュリティマスタのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.LGN_TABLE">
            <summary>
            担当者マスタのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.LOGIN">
            <summary>
            クエリでログインIDを指定するためのデータベースパラメータ名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItemDictionary)">
            <summary>
            指定したデータベース接続で検索画面ファイルを読み込み、対象の管理オブジェクトに設定を追加する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="login">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="user">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <param name="dict">メニュー項目の階層情報の管理オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.COLUMNS">
            <summary>
            データベース上のメニューマスタから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.SEQ_COLUMNS">
            <summary>
            データベース上のセキュリティマスタから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.GetQuery">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.GetCommand">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.AddMenu(System.Int32[],Ill.Incorporated.Aladdinoffice.Framework.MenuItems.Interfaces.IParentMenuNode)">
            <summary>
            対象のメニュー項目情報を、指定した階層に追加します。
            </summary>
            <param name="tree">ツリーの各階層を示す番号の一覧</param>
            <param name="node">追加するメニュー項目情報</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.GetVisibility(System.Int32)">
            <summary>
            指定した可視区分値を対応する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItemVisibility"/> に変換します。
            </summary>
            <param name="value">可視区分値</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.MenuItems.MenuItemVisibility"/>への変換値</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.Columns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.Items">
            <summary>
            メニュー項目の階層情報を管理するオブジェクトを取得、設定します。
            </summary>
            <value>メニュー項目の階層情報の管理オブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.UserId">
            <summary>
            ユーザーIDを取得、設定します。
            </summary>
            <value>ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MenuSelect.LoginId">
            <summary>
            ログインIDを取得、設定します。
            </summary>
            <value>ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MessageSelect">
            <summary>
            データベース上のメッセージファイルのレコードを読み込んで、メッセージ設定を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MessageSelect.TABLE_NAME">
            <summary>
            メッセージファイルのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MessageSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.MessagesDictionary)">
            <summary>
            指定したデータベース接続でメッセージファイルを読み込み、対象の管理オブジェクトに設定を追加する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MessageSelect"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="dict">メッセージの設定情報の管理オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MessageSelect.COLUMNS">
            <summary>
            データベース上のテーブルから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MessageSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MessageSelect.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MessageSelect.Columns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.MessageSelect.Items">
            <summary>
            メッセージの設定情報を管理するオブジェクトを取得、設定します。
            </summary>
            <value>メッセージの設定情報の管理オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.PerlessAttributeSelect">
            <summary>
            データベース上のPerlessマスタのレコードを読み込んで、Perless設定を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.PerlessAttributeSelect.TABLE_NAME">
            <summary>
            Perlessマスタのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.PerlessAttributeSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.PerlessAttributeDictionary)">
            <summary>
            指定したデータベース接続でPerlessマスタを読み込み、対象の管理オブジェクトに設定を追加する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.PerlessAttributeSelect"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="dict">Perlessの設定情報の管理オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.PerlessAttributeSelect.COLUMNS">
            <summary>
            データベース上のテーブルから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.PerlessAttributeSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.PerlessAttributeSelect.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.PerlessAttributeSelect.Columns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.PerlessAttributeSelect.Items">
            <summary>
            Perlessの設定情報を管理するオブジェクトを取得、設定します。
            </summary>
            <value>Perlessの設定情報の管理オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemMacroSelect">
            <summary>
            データベース上のシステム設定マクロファイルのレコードを読み込んで、システム設定マクロ設定を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemMacroSelect.TABLE_NAME">
            <summary>
            システム設定マクロファイルのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemMacroSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemMacroDictionary)">
            <summary>
            指定したデータベース接続でシステム設定マクロファイルを読み込み、対象の管理オブジェクトに設定を追加する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemMacroSelect"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="dict">システム設定マクロの設定情報の管理オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemMacroSelect.COLUMNS">
            <summary>
            データベース上のテーブルから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemMacroSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemMacroSelect.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemMacroSelect.Columns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemMacroSelect.Items">
            <summary>
            システム設定マクロの設定情報を管理するオブジェクトを取得、設定します。
            </summary>
            <value>システム設定マクロの設定情報の管理オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect">
            <summary>
            データベース上のシステム設定ファイルのレコードを読み込んで、システム設定を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect.TABLE_NAME">
            <summary>
            システム設定ファイルのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary)">
            <summary>
            指定したデータベース接続でシステム設定ファイルを読み込み、対象の管理オブジェクトに設定を追加する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="dict">システム設定ファイルの設定情報の管理オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect.COLUMNS">
            <summary>
            データベース上のテーブルから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect.GetRealTimeValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String)">
            <summary>
            対象のシステム設定項目の最新の値を、データベースから取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="key">システム設定項目</param>
            <returns>最新のシステム設定値</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect.Columns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect.Items">
            <summary>
            システム設定ファイルの設定情報を管理するオブジェクトを取得、設定します。
            </summary>
            <value>システム設定ファイルの設定情報の管理オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect.SystemValueSelectSingle">
            <summary>
            データベース上のシステム設定ファイルから特定のシステム設定項目の最新の値を取得するクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect.SystemValueSelectSingle.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String)">
            <summary>
            指定したデータベース接続でシステム設定ファイルから、対象のシステム設定項目の値を取得する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect.SystemValueSelectSingle"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="key">システム設定項目名</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect.SystemValueSelectSingle.GetQuery">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect.SystemValueSelectSingle.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect.SystemValueSelectSingle.Key">
            <summary>
            システム設定項目名を取得します。
            </summary>
            <value>システム設定項目名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.SystemValueSelect.SystemValueSelectSingle.Value">
            <summary>
            最新のシステム設定値を取得します。
            </summary>
            <value>最新のシステム設定値</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.TagSelect">
            <summary>
            データベース上の付箋マスタのレコードを読み込んで、付箋項目設定を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.TagSelect.TABLE_NAME">
            <summary>
            付箋マスタのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.TagSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.TagDictionary)">
            <summary>
            指定したデータベース接続で付箋マスタを読み込み、対象の管理オブジェクトに設定を追加する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.TagSelect"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="dict">付箋項目の設定情報の管理オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.TagSelect.COLUMNS">
            <summary>
            データベース上のテーブルから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.TagSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.TagSelect.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.TagSelect.Columns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.TagSelect.Items">
            <summary>
            付箋項目の設定情報を管理するオブジェクトを取得、設定します。
            </summary>
            <value>付箋項目の設定情報の管理オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserConfigSelect">
            <summary>
            データベース上のユーザー情報ファイルのレコードを読み込んで、ユーザー情報設定を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserConfigSelect.TABLE_NAME">
            <summary>
            ユーザー情報ファイルのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserConfigSelect.USER_ID_COLUMN">
            <summary>
            ユーザー情報ファイルのユーザーIDの列名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserConfigSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary)">
            <summary>
            指定したデータベース接続でユーザー情報ファイルを読み込み、対象の管理オブジェクトに設定を追加する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserConfigSelect"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <param name="dict">ユーザー情報ファイルの設定情報の管理オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserConfigSelect.COLUMNS">
            <summary>
            データベース上のテーブルから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserConfigSelect.GetQuery">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserConfigSelect.GetCommand">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserConfigSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserConfigSelect.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserConfigSelect.Columns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserConfigSelect.Items">
            <summary>
            ユーザー情報ファイルの設定情報を管理するオブジェクトを取得、設定します。
            </summary>
            <value>ユーザー情報ファイルの設定情報の管理オブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserConfigSelect.UserId">
            <summary>
            ユーザーIDを取得、設定します。
            </summary>
            <value>ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserValueSelect">
            <summary>
            データベース上のユーザー別設定ファイルのレコードを読み込んで、ユーザー別設定を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserValueSelect.TABLE_NAME">
            <summary>
            ユーザー別設定ファイルのテーブル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserValueSelect.PC_COLUMN">
            <summary>
            ユーザー別設定ファイルの端末名の列名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserValueSelect.ACCOUNT_COLUMN">
            <summary>
            ユーザー別設定ファイルのWindowsアカウントの列名を表す定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserValueSelect.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.UserValueDictionary)">
            <summary>
            指定したデータベース接続でユーザー別設定ファイルを読み込み、対象の管理オブジェクトに設定を追加する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserValueSelect"/> クラスの
            新しいインスタンスを初期化します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="dict">ユーザー別設定情報の管理オブジェクト</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserValueSelect.COLUMNS">
            <summary>
            データベース上のテーブルから読み込む必要のある列名の一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserValueSelect.GetQuery">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserValueSelect.GetCommand">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserValueSelect.SetValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseResultSet)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserValueSelect.TableName">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserValueSelect.Columns">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Database.UserValueSelect.Items">
            <summary>
            ユーザー別設定情報を管理するオブジェクトを取得、設定します。
            </summary>
            <value>ユーザー別設定情報の管理オブジェクト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.FindDictionary">
            <summary>
            検索画面の設定情報を管理するクラスです。
            </summary>
            <remarks>
            key   : 検索画面名<br />
            value : 検索画面設定
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.FindDictionary.LoadMain(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.FindDictionary.Item(System.String)">
            <summary>
            指定した名前の検索画面設定を取得、設定します。
            </summary>
            <param name="key">検索画面名</param>
            <value>検索画面設定</value>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="key"/>で指定された検索画面設定が存在しない場合にスローします。</exception>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.GetNameDictionary">
            <summary>
            名称表示項目の設定情報を管理するクラスです。
            </summary>
            <remarks>
            key   : 名称表示項目名<br />
            value : 名称表示項目設定
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.GetNameDictionary.LoadMain(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.GetNameDictionary.Item(System.String)">
            <summary>
            指定した名前の名称表示項目設定を取得、設定します。
            </summary>
            <param name="key">名称表示項目名</param>
            <value>名称表示項目設定</value>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="key"/>で指定された名称表示項目設定が存在しない場合にスローします。</exception>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.JumpDictionary">
            <summary>
            ジャンプ先画面の設定情報を管理するクラスです。
            </summary>
            <remarks>
            key   : ジャンプ先画面名<br />
            value : ジャンプ先画面設定
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.JumpDictionary.LoadMain(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.JumpDictionary.Item(System.String)">
            <summary>
            指定した名前のジャンプ先画面設定を取得、設定します。
            </summary>
            <param name="key">ジャンプ先画面名</param>
            <value>ジャンプ先画面設定</value>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="key"/>で指定されたジャンプ先画面設定が存在しない場合にスローします。</exception>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.LabelDictionary">
            <summary>
            項目名ラベルの設定情報を管理するクラスです。
            </summary>
            <remarks>
            key   : 項目名<br />
            value : 項目名ラベル値
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.LabelDictionary.SUFFIX">
            <summary>
            項目名ラベルを指定するための接尾辞を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.LabelDictionary.regex">
            <summary>
            項目名ラベルの置換用正規表現です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.LabelDictionary.Format(System.String)">
            <summary>
            対象文字列に含まれる項目名ラベルを置換して返します。
            </summary>
            <param name="format">置換対象文字列</param>
            <returns>項目名ラベルを置換した文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.LabelDictionary.MatchEvaluator(System.Text.RegularExpressions.Match)">
            <summary>
            正規表現で指定された置換箇所を項目名ラベルで置換して返します。
            </summary>
            <param name="match">正規表現で指定された置換箇所</param>
            <returns>項目名ラベルで置換した文字列</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.LabelDictionary.LoadMain(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.LabelDictionary.ContainsKey(System.String)">
            <summary>
            指定した項目名の項目名ラベルが存在するかどうかを返します。
            </summary>
            <param name="key">項目名</param>
            <returns>項目名ラベルが存在する場合は true。しない場合は false。</returns>
            <remarks>
            ディクショナリのキーに <paramref name="key"/> が見つからないとき、<paramref name="key"/> の末尾が <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.LabelDictionary.SUFFIX"/> でない場合は、
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.LabelDictionary.SUFFIX"/> を付与したキーも検索します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.LabelDictionary.Item(System.String)">
            <summary>
            指定した項目名の項目名ラベルを取得、設定します。
            </summary>
            <param name="key">項目名名</param>
            <value>項目名ラベル</value>
            <remarks>
            ディクショナリのキーに <paramref name="key"/> が見つからないとき、<paramref name="key"/> の末尾が <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.LabelDictionary.SUFFIX"/> でない場合は、
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.LabelDictionary.SUFFIX"/> を付与したキーも検索します。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="key"/>で指定された項目名が存在しない場合にスローします。</exception>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ListTypeDictionary">
            <summary>
            区分項目の設定情報を管理するクラスです。
            </summary>
            <remarks>
            key   : 区分項目名(入力タイプ名)<br />
            value : 区分項目設定
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ListTypeDictionary.LoadMain(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ListTypeDictionary.Item(System.String)">
            <summary>
            指定した名前の区分項目設定を取得、設定します。
            </summary>
            <param name="key">区分項目名(入力タイプ名)</param>
            <value>区分項目設定</value>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="key"/>で指定された区分項目設定が存在しない場合にスローします。</exception>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.MessagesDictionary">
            <summary>
            メッセージの設定情報を管理するクラスです。
            </summary>
            <remarks>
            key   : メッセージID<br />
            value : メッセージ
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.MessagesDictionary.LoadMain(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.MessagesDictionary.Format(System.Int32,System.Object[])">
            <summary>
            対象のメッセージを指定した引数でフォーマットして返します。
            </summary>
            <param name="key">メッセージID</param>
            <param name="args">フォーマット用引数</param>
            <returns>フォーマットされたメッセージ</returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="key"/>で指定されたメッセージが存在しない場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.MessagesDictionary.Evaluate(System.Text.RegularExpressions.Match)">
            <summary>
            正規表現で指定された置換箇所を項目名ラベルで置換して返します。
            </summary>
            <param name="match">正規表現で指定された置換箇所</param>
            <returns>項目名ラベルで置換した文字列</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.MessagesDictionary.Item(System.Int32,System.Object[])">
            <summary>
            対象のメッセージを指定した引数でフォーマットしたメッセージを取得します。
            </summary>
            <param name="key">メッセージID</param>
            <param name="args">フォーマット用引数</param>
            <returns>フォーマットされたメッセージ</returns>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.MessagesDictionary.Format(System.Int32,System.Object[])"/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.PerlessAttributeDictionary">
            <summary>
            Perlessの設定情報を管理するクラスです。
            </summary>
            <remarks>
            key   : Perless区分<br />
            value : Perless設定
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.PerlessAttributeDictionary.LoadMain(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.PerlessAttributeDictionary.Item(System.String)">
            <summary>
            指定したPerless区分のPerless設定を取得、設定します。
            </summary>
            <param name="key">Perless区分</param>
            <value>Perless設定</value>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="key"/>で指定されたPerless設定が存在しない場合にスローします。</exception>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile">
            <summary>
            システム設定情報を管理するクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.GetDefaultExecDirectory">
            <summary>
            プログラムの実行ファイルが保存してあるディレクトリへのパスを取得します。
            </summary>
            <returns>実行ファイルが保存してあるディレクトリへのパス</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.GetDefaultSystemDirectory">
            <summary>
            AladdinOffice のシステムディレクトリへのパスを取得します。
            </summary>
            <returns>AladdinOffice のシステムディレクトリへのパス</returns>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile._assemblyLoader">
            <summary>
            AladdinOffice の起動時のアセンブリ読込処理を行うオブジェクトです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile._systemValues">
            <summary>
            システム設定ファイル、及び、ユーザー情報ファイルの設定情報です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile._systemMacros">
            <summary>
            システム設定マクロの設定情報です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile._userValues">
            <summary>
            ユーザー別の設定情報です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile._labels">
            <summary>
            項目名ラベルの設定情報です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile._messages">
            <summary>
            メッセージの設定情報です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile._tags">
            <summary>
            付箋項目の設定情報です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile._findWindows">
            <summary>
            検索画面の設定情報です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile._jumpWindows">
            <summary>
            ジャンプ先画面の設定情報です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile._getNameTypes">
            <summary>
            名称表示項目の設定情報です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile._listTypes">
            <summary>
            区分項目の設定情報です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile._perless">
            <summary>
            Perlessの設定情報です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile._itemAttributes">
            <summary>
            項目属性の設定情報です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile._menuItems">
            <summary>
            メニュー項目の階層情報です。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.FilePath">
            <summary>
            読み込まれたシステムファイルへのパスを取得します。
            </summary>
            <value>システムファイルへのパス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.IgnoreConcurrency">
            <summary>
            同時実行制御を無視するどうかを取得、設定します。
            </summary>
            <value>同時実行制御を無視する場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.ScaleSize">
            <summary>
            画面のスケールサイズを取得、設定します。
            </summary>
            <value>画面のスケールサイズ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.DbCurrentIndex">
            <summary>
            データベース接続設定の候補の内、現在選択されているものの位置を示すインデックスを取得、設定します。
            </summary>
            <value>現在選択されているデータベース接続設定を示すインデックス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.DatabaseStrings">
            <summary>
            データベース接続設定の候補の一覧を取得、設定します。
            </summary>
            <value>データベース接続設定の候補の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.CurrentDatabaseString">
            <summary>
            現在選択されているデータベース接続設定を取得します。
            </summary>
            <value>現在選択されているデータベース接続設定</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex">
            <summary>
            現在選択されているユーザーIDを取得します。
            </summary>
            <value>現在選択されているユーザーID</value>
            <remarks>
            ユーザー情報ファイル.ユーザーID に相当します。<br/>
            ユーザー別設定ファイル(もしくは、INIファイル)で指定されている場合はその値、他の場合は現在選択されているデータベース接続設定のユーザーIDを取得します。
            </remarks>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.ConfigDbString.UserConfigIndex"/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId">
            <summary>
            AladdinOffice を使用しているユーザーのログインIDを取得します。
            </summary>
            <value>ユーザーのログインID</value>
            <remarks>
            このプロパティの値は、通常、以下のようになります。<br/>
            ・システム設定ファイルのセキュリティ管理が採用されている場合は、「担当者マスタ.担当者コード」。<br/>
            ・システム設定ファイルのセキュリティ管理が採用されていない場合は、「<see cref="P:System.Environment.MachineName"/>\<see cref="P:System.Environment.UserName"/>」<br/>
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.MachineName">
            <summary>
            プログラムを実行しているローカルの端末名を取得します。
            </summary>
            <value>ローカルの端末名</value>
            <remarks>
            現在のプロセスがローカルセッションで実行されている場合は、<see cref="P:System.Environment.MachineName"/>。
            現在のプロセスがリモートセッションで実行されている場合は、クライアントの端末名。
            リモートセッション環境でクライアント端末名(DNSホスト名)が取得できない場合は、"UnknownMachine_" + <see cref="P:System.Environment.UserName"/>。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.ExecDirectory">
            <summary>
            プログラムの実行ファイルが保存してあるディレクトリへのパスを取得します。
            </summary>
            <value>実行ファイルが保存してあるディレクトリへのパス</value>
            <remarks>
            このプロパティは起動されたプログラム(通常は AladdinOffice のメニュー)のexe、及び、dllへのパスを指します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.SystemDirectory">
            <summary>
            AladdinOffice のシステムディレクトリへのパスを取得します。
            </summary>
            <value>AladdinOffice のシステムディレクトリへのパス</value>
            <remarks>
            このプロパティは通常、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.ExecDirectory"/> プロパティの返す値と同じものを返しますが、AladdinOffice が
            ローカルコピーモードで起動されている場合はコピー元(通常はAPサーバー上)のexe、及び、dllへのパスを指します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.CommandTimeout">
            <summary>
            SQLのクエリ実行時に指定される、既定のタイムアウト時間(秒)を取得します。
            </summary>
            <value>既定のタイムアウト時間(秒)</value>
            <remarks>
            以下の優先順位で取得します。<br />
            ・ユーザー別設定ファイル(もしくは、INIファイル)の「TIMEOUT」で指定されている値。<br />
            ・システム設定ファイルの「コマンドタイムアウト」で指定されている値。<br />
            ・null
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LockTimeout">
            <summary>
            SQLのクエリ実行時に指定される、既定のロックタイムアウト時間(ミリ秒)を取得します。
            </summary>
            <value>既定のロックタイムアウト時間(ミリ秒)</value>
            <remarks>
            以下の優先順位で取得します。<br />
            ・ユーザー別設定ファイル(もしくは、INIファイル)の「LOCKTIMEOUT」で指定されている値。<br />
            ・システム設定ファイルの「ロックタイムアウト」で指定されている値。<br />
            ・null
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.DbConnectRetryCount">
            <summary>
            データベース接続時の既定のリトライ回数を取得します。
            </summary>
            <value>既定の接続リトライ回数</value>
            <remarks>
            システム設定ファイルの「DB接続リトライ回数」で指定されている値を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.DbUpdateRetryCount">
            <summary>
            データベースへの更新処理の既定のリトライ回数を取得します。
            </summary>
            <value>既定の更新リトライ回数</value>
            <remarks>
            システム設定ファイルの「更新リトライ回数」で指定されている値を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.DbConnectWaitTime">
            <summary>
            データベース接続のリトライを行うときのリトライまでの既定の待機時間(ミリ秒)を取得します。
            </summary>
            <value>リトライまでの既定の待機時間(ミリ秒)</value>
            <remarks>
            システム設定ファイルの「DB再接続待機時間」で指定されている値を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.AssemblyLoader">
            <summary>
            AladdinOffice の起動時のアセンブリ読込処理を行うオブジェクトを取得します。
            </summary>
            <value>AladdinOffice の起動時のアセンブリ読込処理を行うオブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.SystemValues">
            <summary>
            システム設定ファイル、及び、ユーザー情報ファイルの設定情報を取得します。
            </summary>
            <value>システム設定ファイル、及び、ユーザー情報ファイルの設定情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.SystemMacros">
            <summary>
            システム設定マクロの設定情報を取得します。
            </summary>
            <value>システム設定マクロの設定情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserValues">
            <summary>
            ユーザー別の設定情報を取得します。
            </summary>
            <value>ユーザー別の設定情報</value>
            <remarks>
            INIファイルが指定されている場合は、INIファイルの設定値も含みます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.Labels">
            <summary>
            項目名ラベルの設定情報を取得します。
            </summary>
            <value>項目名ラベルの設定情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.Messages">
            <summary>
            メッセージの設定情報を取得します。
            </summary>
            <value>メッセージの設定情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.Tags">
            <summary>
            付箋項目の設定情報を取得します。
            </summary>
            <value>付箋項目の設定情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.FindWindows">
            <summary>
            検索画面の設定情報を取得します。
            </summary>
            <value>検索画面の設定情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.JumpWindows">
            <summary>
            ジャンプ先画面の設定情報を取得します。
            </summary>
            <value>ジャンプ先画面の設定情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.GetNameTypes">
            <summary>
            名称表示項目の設定情報を取得します。
            </summary>
            <value>名称表示項目の設定情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.ListTypes">
            <summary>
            区分項目の設定情報を取得します。
            </summary>
            <value>区分項目の設定情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.PerlessAttributes">
            <summary>
            Perlessの設定情報を取得します。
            </summary>
            <value>Perlessの設定情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.ItemAttributes">
            <summary>
            項目属性の設定情報を取得します。
            </summary>
            <value>項目属性の設定情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.MenuItems">
            <summary>
            メニュー項目の階層情報を取得します。
            </summary>
            <value>メニュー項目の階層情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.SubMenuItems">
            <summary>
            メニュー項目の階層ツリーを取得します。
            </summary>
            <value>メニュー項目の階層ツリー</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings">
            <summary>
            システム設定情報の取得と参照を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.DEFAULT_XML_NAME">
            <summary>
            システムファイルの既定のファイル名を表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.DEFAULT_XML_FILE_RELATIVE_PATH">
            <summary>
            システムファイルが配置されるディレクトリへの、システムディレクトリからの相対パスを表す定数です。
            </summary>
            <seealso cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.SystemDirectory"/>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.SYSTEM_MUTEX_LOCK_ID_FORMAT">
            <summary>
            AladdinOffice の多重起動を禁止するための <see cref="T:System.Threading.Mutex"/> のロック用IDのフォーマットを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings._commandLineArgs">
            <summary>
            AladdinOffice の起動時に指定されたコマンドライン引数情報です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings._ini">
            <summary>
            AladdinOffice の起動時に指定されたINIファイルの解析情報です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadDefaultSystemFile">
            <summary>
            既定の位置に配置されたシステムファイルを読み込んで、システム設定情報を初期化します。
            </summary>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadSystemFile(System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadSystemFileFrom(System.String,System.String)">
            <summary>
            指定した位置に配置されたシステムファイルを読み込んで、システム設定情報を初期化します。
            </summary>
            <param name="dir">システムファイルの配置されたディレクトリパス</param>
            <param name="xml">システムファイル名</param>
            <seealso cref="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadSystemFile(System.String)"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadSystemFile(System.String)">
            <summary>
            指定したシステムファイルを読み込んで、システム設定情報を初期化します。
            </summary>
            <param name="path">システムファイルパス</param>
            <remarks>
            システムファイルの読込後、INIファイルやコマンドライン引数で接続先データベースが指定されている場合は、接続先のデータベースを設定しなおします。<br/>
            さらに、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader"/> によるアセンブリの読込処理も実行します。<br/>
            また、以下のイベントを順に発生させます。<br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.AssemblyLoading"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.AssemblyLoaded"/> <br/>
            ・<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedSystemFile"/> <br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadDatabaseFile(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseConnection,System.String,System.Int32)">
            <summary>
            データベースから各システム設定情報を読み込んで保持します。
            </summary>
            <param name="connection">データベースコネクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <remarks>
            以下を順に読み込みます。<br/>
            ・ユーザー別設定ファイル<br/>
            ・システム設定ファイル、及び、ユーザー情報ファイル<br/>
            ・システム設定マクロファイル<br/>
            ・項目名ファイル<br/>
            ・メッセージファイル<br/>
            ・付箋マスタ<br/>
            ・検索画面ファイル<br/>
            ・ジャンプ画面ファイル<br/>
            ・名称表示項目ファイル<br/>
            ・入力タイプファイル、及び、入力タイプ詳細ファイル<br/>
            ・Perlessマスタ<br/>
            ・項目属性ファイル、及び、項目属性変換ファイル<br/>
            ・メニューマスタ<br/>
            <br/>
            各システム設定情報の読込完了後、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedDatabaseFile"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadSystemValues(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            データベースからシステム設定ファイル、及び、ユーザー情報ファイルの情報を読み込んで保持します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <remarks>
            読込完了後、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedSystemValues"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadSystemMacros(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            データベースからシステム設定マクロファイルの情報を読み込んで保持します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <remarks>
            読込完了後、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedSystemMacros"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadUserValues(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            データベースからユーザー別設定ファイルの情報を読み込んで保持します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <remarks>
            INIファイルが指定されている場合は、必要に応じて設定値を追加、上書きします。<br/>
            読込完了後、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedUserValues"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadLabels(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            データベースから項目名ファイルの情報を読み込んで保持します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <remarks>
            読込完了後、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedLabels"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadMessages(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            データベースからメッセージファイルの情報を読み込んで保持します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <remarks>
            読込完了後、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedMessages"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadTag(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            データベースから付箋マスタの情報を読み込んで保持します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <remarks>
            読込完了後、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedTags"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadFindWindows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            データベースから検索画面ファイルの情報を読み込んで保持します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <remarks>
            読込完了後、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedFindWindows"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadJumpWindows(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            データベースからジャンプ画面ファイルの情報を読み込んで保持します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <remarks>
            読込完了後、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedJumpWindows"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadGetNameTypes(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            データベースから名称表示項目ファイルの情報を読み込んで保持します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <remarks>
            読込完了後、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedGetNameTypes"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadListTypes(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            データベースから入力タイプファイル、及び、入力タイプ詳細ファイルの情報を読み込んで保持します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <remarks>
            読込完了後、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedListTypes"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadPerlessAttributes(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            データベースからPerlessマスタの情報を読み込んで保持します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <remarks>
            読込完了後、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedPerlessAttributes"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadItemAttributes(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            データベースから項目属性ファイル、及び、項目属性変換ファイルの情報を読み込んで保持します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <remarks>
            読込完了後、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedItemAttributes"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadMenuItems(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <summary>
            データベースからメニューマスタの情報を読み込んで保持します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="loginId">ログインID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.LoginId"/>)</param>
            <param name="userId">ユーザーID(<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.UserConfigIndex"/>)</param>
            <remarks>
            読込完了後、<see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedMenuItems"/> イベントを発生させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.ExitSystem">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.ExitingSystem"/> イベントを発生させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.GetSystemMutex(System.String)">
            <summary>
            AladdinOffice の多重起動を禁止するための <see cref="T:System.Threading.Mutex"/> を生成、取得します。
            </summary>
            <param name="databaseName">
            接続先データベース名。
            <br/>複数社管理時に、接続先のデータベースが異なれば多重起動を許容する場合に指定します。
            </param>
            <returns>多重起動を禁止する <see cref="T:System.Threading.Mutex"/></returns>
            <remarks>
            取得した <see cref="T:System.Threading.Mutex"/> は適切なタイミングで解放してください。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.Exceptions.AladdinOfficeAlreadyInUseException"><see cref="T:System.Threading.Mutex"/> 取得できない(AladdinOffice が多重起動された)場合にスローします。</exception>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.IsSystemSettingError">
            <summary>
            システム設定情報の取得過程でエラーが発生しているかどうかを取得、設定します。
            </summary>
            <value>システム設定情報の取得過程でエラーが発生している場合は true。正常に取得できている場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.System">
            <summary>
            システム設定情報を取得します。
            </summary>
            <value>システム設定情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LimitOfFavorites">
            <summary>
            メニューのお気に入り登録数の上限値を取得、設定します。
            </summary>
            <value>お気に入り登録数の上限値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.CommandLineArgs">
            <summary>
            AladdinOffice の起動時に指定されたコマンドライン引数情報を取得します。
            </summary>
            <value>AladdinOffice の起動時に指定されたコマンドライン引数情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.Ini">
            <summary>
            AladdinOffice の起動時に指定されたINIファイルの解析情報を取得します。
            </summary>
            <value>AladdinOffice の起動時に指定されたINIファイルの解析情報</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedSystemFile">
            <summary>
            システムファイルを読み込んで、システム設定情報を初期化し終わった後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.AssemblyLoading">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader"/> によるアセンブリの読込処理が実行される直前に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.AssemblyLoaded">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.AssemblyLoader"/> によるアセンブリの読込処理が実行された直後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedDatabaseFile">
            <summary>
            データベースから各システム設定情報を読み込んだ直後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedSystemValues">
            <summary>
            データベースからシステム設定ファイル、及び、ユーザー情報ファイルの情報を読み込んだ直後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedSystemMacros">
            <summary>
            データベースからシステム設定マクロファイルの情報を読み込んだ直後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedUserValues">
            <summary>
            データベースからユーザー別設定ファイルの情報を読み込んだ直後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedLabels">
            <summary>
            データベースから項目名ファイルの情報を読み込んだ直後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedMessages">
            <summary>
            データベースからメッセージファイルの情報を読み込んだ直後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedTags">
            <summary>
            データベースから付箋マスタの情報を読み込んだ直後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedFindWindows">
            <summary>
            データベースから検索画面ファイルの情報を読み込んだ直後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedJumpWindows">
            <summary>
            データベースからジャンプ画面ファイルの情報を読み込んだ直後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedGetNameTypes">
            <summary>
            データベースから名称表示項目ファイルの情報を読み込んだ直後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedListTypes">
            <summary>
            データベースから入力タイプファイル、及び、入力タイプ詳細ファイルの情報を読み込んだ直後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedPerlessAttributes">
            <summary>
            データベースからPerlessマスタの情報を読み込んだ直後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedItemAttributes">
            <summary>
            データベースから項目属性ファイル、及び、項目属性変換ファイルの情報を読み込んだ直後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedMenuItems">
            <summary>
            データベースからメニューマスタの情報を読み込んだ直後に発生します。
            </summary>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.ExitingSystem">
            <summary>
            AladdinOffice が終了するときに発生します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemMacroDictionary">
            <summary>
            システム設定マクロの設定情報を管理するクラスです。
            </summary>
            <remarks>
            key   : システム設定項目<br />
            value : システム設定判定式
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemMacroDictionary._dic">
            <summary>
            システム設定判定式の評価結果をキャッシュしておくディクショナリです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemMacroDictionary.Get(System.String)">
            <summary>
            指定したシステム設定項目の判定式の評価結果を取得します。
            </summary>
            <param name="key">システム設定項目</param>
            <returns>システム設定判定式を評価した値</returns>
            <remarks>
            対象のシステム判定式を初めて評価したときに評価結果をキャッシュして保持します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemMacroDictionary.BeforeLoading(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemMacroDictionary.LoadMain(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemMacroDictionary.Item(System.String)">
            <summary>
            指定したシステム設定項目の判定式を取得、設定します。
            </summary>
            <param name="key">システム設定項目</param>
            <value>システム設定判定式</value>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="key"/>で指定されたシステム設定判定式が存在しない場合にスローします。</exception>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary">
            <summary>
            システム設定ファイル、及び、ユーザー情報ファイルの設定情報を管理するクラスです。
            </summary>
            <remarks>
            key   : システム設定項目<br />
            value : システム設定値
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.GetValue``1(System.String)">
            <summary>
            対象のシステム設定項目の値を、指定した型に変換して取得します。
            </summary>
            <typeparam name="T">変換する型</typeparam>
            <param name="key">システム設定項目(もしくは、ユーザー情報項目)</param>
            <returns>指定した型に変換したシステム設定値(もしくは、ユーザー情報値)</returns>
            <remarks> 
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.TransactSystemKeys"/> に含まれる項目の場合、取得される値は必ずしもデータベース上の最新の値と一致するとは限りません。<br/>
            最新の値が必要な場合は <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.GetRealTimeValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String)"/> を使用してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.GetRealTimeValue(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String)">
            <summary>
            対象のシステム設定項目の最新の値を、データベースから取得します。
            </summary>
            <param name="section">データベース接続セクション</param>
            <param name="key">システム設定項目</param>
            <returns>最新のシステム設定値</returns>
            <remarks>
            このメソッドはユーザー情報ファイルの項目には対応していません。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            <paramref name="key"/>で指定されたシステム設定項目が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.TransactSystemKeys"/> に含まれていない場合にスローします。
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.AddTransactSystemKeys(System.String[])">
            <summary>
            プログラムの実行中に最新のシステム設定値を更新、参照するシステム設定項目を追加します。
            </summary>
            <param name="keys">最新のシステム設定値を更新、参照するシステム設定項目</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.AddSystemValue(System.String,System.String)">
            <summary>
            指定したシステム設定項目とシステム設定値を管理対象に追加します。
            </summary>
            <param name="key">システム設定項目</param>
            <param name="value">システム設定値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.AddUserConfig(System.String,System.String)">
            <summary>
            指定したユーザー情報項目とユーザー情報値を管理対象に追加します。
            </summary>
            <param name="key">ユーザー情報項目</param>
            <param name="value">ユーザー情報値</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.BeforeLoading(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.LoadMain(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.ContainsKey(System.String)">
            <summary>
            指定したシステム設定項目が存在するかどうかを返します。
            </summary>
            <param name="key">システム設定項目(もしくは、ユーザー情報項目)</param>
            <returns>
            システム設定項目(もしくは、ユーザー情報項目)が存在する場合は true。しない場合は false。<br/>
            ただし、対象のシステム設定項目が <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.TransactSystemKeys"/> に含まれる場合は false を返します。
            </returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.SystemKeys">
            <summary>
            システム設定項目の一覧を取得します。
            </summary>
            <value>システム設定項目の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.UserKeys">
            <summary>
            ユーザー情報項目の一覧を取得します。
            </summary>
            <value>ユーザー情報項目の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.TransactSystemKeys">
            <summary>
            プログラムの実行中に最新のシステム設定値を更新、参照するシステム設定項目の一覧を取得します。
            </summary>
            <value>プログラムの実行中に最新のシステム設定値を更新、参照するシステム設定項目の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemValueDictionary.Item(System.String)">
            <summary>
            指定したシステム設定項目の値を取得、設定します。
            </summary>
            <param name="key">システム設定項目(もしくは、ユーザー情報項目)</param>
            <value>システム設定値(もしくは、ユーザー情報値)</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.TagDictionary">
            <summary>
            付箋項目の設定情報を管理するクラスです。
            </summary>
            <remarks>
            key   : 付箋タイプ<br />
            value : 付箋項目設定
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.TagDictionary.LoadMain(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.TagDictionary.Item(Ill.Incorporated.Aladdinoffice.Framework.Attributes.TagType)">
            <summary>
            指定した付箋タイプの付箋項目設定を取得、設定します。
            </summary>
            <param name="key">付箋タイプ</param>
            <value>付箋項目設定</value>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="key"/>で指定された付箋項目設定が存在しない場合にスローします。</exception>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Attributes.TagType">
            <summary>
            付箋の種類を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.TagType.Uriage">
            <summary>
            売上
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.TagType.Nyukkin">
            <summary>
            入金
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.TagType.Shiire">
            <summary>
            仕入
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.TagType.Syukkin">
            <summary>
            出金
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Attributes.TagType.Zaiko">
            <summary>
            在庫
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.UserValueDictionary">
            <summary>
            ユーザー別設定情報を管理するクラスです。
            </summary>
            <remarks>
            key   : セクション<br />
            value : セクションごとの設定情報の一覧(key → キー、value → 設定値)
            </remarks>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.UserValueDictionary.Application">
            <summary>
            アプリケーション(AladdinOffice)用の設定であることを示すセクションの定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.UserValueDictionary.GetValue(System.String)">
            <summary>
            対象のセクションの設定情報の一覧を取得します。
            </summary>
            <param name="section">セクション</param>
            <returns>対象セクションの設定情報の一覧</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.UserValueDictionary.GetValue``1(System.String)">
            <summary>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.UserValueDictionary.Application"/> セクションの指定したキーの設定値を、指定した型に変換して取得します。
            </summary>
            <typeparam name="T">変換する型</typeparam>
            <param name="key">キー</param>
            <returns>変換された設定値</returns>
            <remarks>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.UserValueDictionary.Application"/> セクションに対象のキーが存在しない場合は、<typeparamref name="T"/> の既定値を取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.UserValueDictionary.GetValue``1(System.String,System.String)">
            <summary>
            対象のセクションの指定したキーの設定値を、指定した型に変換して取得します。
            </summary>
            <typeparam name="T">変換する型</typeparam>
            <param name="section">セクション</param>
            <param name="key">キー</param>
            <returns>変換された設定値</returns>
            <remarks>
            対象のセクションにキーが存在しない場合は、<typeparamref name="T"/> の既定値を取得します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.UserValueDictionary.ContainsKey(System.String,System.String)">
            <summary>
            対象のセクションに、指定したキーの設定項目が存在するかどうかを返します。
            </summary>
            <param name="section">セクション</param>
            <param name="key">キー</param>
            <returns>存在する場合は true。しない場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.UserValueDictionary.LoadMain(Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.UserValueDictionary.Item(System.String,System.String)">
            <summary>
            対象のセクションの指定したキーの設定値を取得、設定します。
            </summary>
            <param name="section">セクション</param>
            <param name="key">キー</param>
            <value>設定値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.UserValueDictionary.Item(System.String)">
            <summary>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.UserValueDictionary.Application"/> セクションの指定したキーの設定値を取得します。
            </summary>
            <param name="key">キー</param>
            <value>設定値</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IContractor">
            <summary>
            サブプログラム(サブ画面)の起動機能を提供するインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IContractor.ShowDialog(Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs)">
            <summary>
            サブプログラム(サブ画面)を起動し、受け取ったプログラム(画面)間引数を処理します。
            </summary>
            <param name="pa">プログラム(画面)間引数</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IContractor.CreatingArgs">
            <summary>
            プログラム(画面)の起動引数を取得、設定します。
            </summary>
            <value>プログラム(画面)の起動引数</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs">
            <summary>
            プログラム(画面)間で受け渡される引数を示すインターフェースです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs.Params">
            <summary>
            プログラム(画面)間で受け渡しを行うデータの一覧を取得します。
            </summary>
            <value>プログラム(画面)間で受け渡しを行うデータの一覧</value>
            <remarks>
            key   : 受け渡しデータ名<br />
            value : 受け渡しデータ値<br />
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer">
            <summary>
            プログラム(画面)の起動や終了の機能を提供するインターフェースです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer.Post(Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs)">
            <summary>
            指定されたプログラム(画面)間引数を受け取って処理します。
            </summary>
            <param name="e">プログラム(画面)間引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer.Show(Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs,Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs)">
            <summary>
            指定された起動引数でプログラム(画面)を起動し、受け取ったプログラム(画面)間引数を処理します。
            </summary>
            <param name="ca">起動引数</param>
            <param name="pa">プログラム(画面)間引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer.Close">
            <summary>
            プログラム(画面)を終了させます。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer.Active">
            <summary>
            画面をアクティブ化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer.GetTitle">
            <summary>
            画面のタイトルを取得します。
            </summary>
            <returns>画面タイトル</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer.CreatingArgs">
            <summary>
            プログラム(画面)の起動引数を取得します。
            </summary>
            <value>プログラム(画面)の起動引数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer.IsBusy">
            <summary>
            プログラム(画面)がビジー状態(何らかの処理中)かどうかを取得します。
            </summary>
            <value>何らかの処理のためビジー状態である場合は true。それ以外の場合は false。</value>
        </member>
        <member name="E:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer.Closed">
            <summary>
            プログラム(画面)が終了したときに発生します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.ProcessStarter">
            <summary>
            プロセス起動用の汎用ヘルパクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.ProcessStarter.Start(System.String,System.Boolean,System.Boolean,System.Boolean,System.EventHandler,System.String[])">
            <summary>
            必要なエスケープ処理の施されたコマンドライン引数を用いて、プロセスを起動します。
            </summary>
            <param name="path">
            起動するEXEのフルパス or URL<br/>
            URL指定の場合、OS既定のプログラムが立ち上がります。
            </param>
            <param name="throwException">起動時に例外が発生した際に無視せず、呼出元でキャッチしたい場合は true。無視したい場合は false。</param>
            <param name="waitIdle">プロセスが起動しきるまで待機する場合は true。しない場合は false。</param>
            <param name="waitExit">プロセスが終了されるまで待機する場合は true。しない場合は false。</param>
            <param name="exitHandler">プロセス終了時のイベントハンドラ</param>
            <param name="parameters">
            コマンドライン引数。<br/>
            必要に応じて <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.ProcessStarter.EscapeForCommandLineArgs(System.String[])"/> などで事前にエスケープ処理を施すか、
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.ProcessStarter.StartWithAutoEscapedParameters(System.String,System.Boolean,System.Boolean,System.Boolean,System.EventHandler,System.String[])"/> メソッドの使用を検討してください。
            </param>
            <returns>起動したプロセス(プロセス起動時に例外が発生した場合は null)</returns>
            <remarks>
            必要に応じて、適切なタイミングで、プロセスのClose、Disposeを行ってください。
            <paramref name="waitExit"/> が true の場合、プロセスが終了されてからこのメソッドを抜けることになるので、このメソッドから返されるプロセスオブジェクトから欲しい情報が得られない可能性があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.ProcessStarter.Start(System.Boolean@,System.String,System.Boolean,System.Boolean,System.Boolean,System.EventHandler,System.String[])">
            <summary>
            必要なエスケープ処理の施されたコマンドライン引数を用いて、プロセスを起動します。
            </summary>
            <param name="started">
            プロセス リソースが起動された場合は true。<br/>
            新しいプロセス リソースが起動されなかった場合は false (既存のプロセスを再利用した場合や起動先のプログラム側でプロセスの立ち上げがキャンセルされた場合など)。
            </param>
            <param name="path">
            起動するEXEのフルパス or URL<br/>
            URL指定の場合、OS既定のプログラムが立ち上がります。
            </param>
            <param name="throwException">起動時に例外が発生した際に無視せず、呼出元でキャッチしたい場合は true。無視したい場合は false。</param>
            <param name="waitIdle">プロセスが起動しきるまで待機する場合は true。しない場合は false。</param>
            <param name="waitExit">プロセスが終了されるまで待機する場合は true。しない場合は false。</param>
            <param name="exitHandler">プロセス終了時のイベントハンドラ</param>
            <param name="parameters">
            コマンドライン引数。<br/>
            必要に応じて <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.ProcessStarter.EscapeForCommandLineArgs(System.String[])"/> などで事前にエスケープ処理を施すか、
            <see cref="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.ProcessStarter.StartWithAutoEscapedParameters(System.Boolean@,System.String,System.Boolean,System.Boolean,System.Boolean,System.EventHandler,System.String[])"/> メソッドの使用を検討してください。
            </param>
            <returns>起動したプロセス(プロセス起動時に例外が発生した場合は null)</returns>
            <remarks>
            必要に応じて、適切なタイミングで、プロセスのClose、Disposeを行ってください。
            <paramref name="waitExit"/> が true の場合、プロセスが終了されてからこのメソッドを抜けることになるので、このメソッドから返されるプロセスオブジェクトから欲しい情報が得られない可能性があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.ProcessStarter.StartWithAutoEscapedParameters(System.String,System.Boolean,System.Boolean,System.Boolean,System.EventHandler,System.String[])">
            <summary>
            指定したコマンドライン引数に対して必要に応じてエスケープ処理を施した上で、プロセスを起動します。
            <c>rev.1063</c>
            </summary>
            <param name="path">
            起動するEXEのフルパス or URL<br />
            URL指定の場合、OS既定のプログラムが立ち上がります。
            </param>
            <param name="throwException">起動時に例外が発生した際に無視せず、呼出元でキャッチしたい場合は true。無視したい場合は false。</param>
            <param name="waitIdle">プロセスが起動しきるまで待機する場合は true。しない場合は false。</param>
            <param name="waitExit">プロセスが終了されるまで待機する場合は true。しない場合は false。</param>
            <param name="exitHandler">プロセス終了時のイベントハンドラ</param>
            <param name="parameters">コマンドライン引数</param>
            <returns>起動したプロセス(プロセス起動時に例外が発生した場合は null)</returns>
            <remarks>
            必要に応じて、適切なタイミングで、プロセスのClose、Disposeを行ってください。
            <paramref name="waitExit"/> が true の場合、プロセスが終了されてからこのメソッドを抜けることになるので、このメソッドから返されるプロセスオブジェクトから欲しい情報が得られない可能性があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.ProcessStarter.StartWithAutoEscapedParameters(System.Boolean@,System.String,System.Boolean,System.Boolean,System.Boolean,System.EventHandler,System.String[])">
            <summary>
            指定したコマンドライン引数に対して必要に応じてエスケープ処理を施した上で、プロセスを起動します。
            <c>rev.1063</c>
            </summary>
            <param name="started">
            プロセス リソースが起動された場合は true。<br />
            新しいプロセス リソースが起動されなかった場合は false (既存のプロセスを再利用した場合や起動先のプログラム側でプロセスの立ち上げがキャンセルされた場合など)。
            </param>
            <param name="path">
            起動するEXEのフルパス or URL<br />
            URL指定の場合、OS既定のプログラムが立ち上がります。
            </param>
            <param name="throwException">起動時に例外が発生した際に無視せず、呼出元でキャッチしたい場合は true。無視したい場合は false。</param>
            <param name="waitIdle">プロセスが起動しきるまで待機する場合は true。しない場合は false。</param>
            <param name="waitExit">プロセスが終了されるまで待機する場合は true。しない場合は false。</param>
            <param name="exitHandler">プロセス終了時のイベントハンドラ</param>
            <param name="parameters">コマンドライン引数</param>
            <returns>起動したプロセス(プロセス起動時に例外が発生した場合は null)</returns>
            <remarks>
            必要に応じて、適切なタイミングで、プロセスのClose、Disposeを行ってください。
            <paramref name="waitExit"/> が true の場合、プロセスが終了されてからこのメソッドを抜けることになるので、このメソッドから返されるプロセスオブジェクトから欲しい情報が得られない可能性があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.ProcessStarter.Start(System.Boolean@,System.Diagnostics.ProcessStartInfo,System.Boolean,System.Boolean,System.Boolean,System.EventHandler)">
            <summary>
            指定した起動情報を用いて、プロセスを起動します。
            <c>rev.1063</c>
            </summary>
            <param name="started">
            プロセス リソースが起動された場合は true。<br />
            新しいプロセス リソースが起動されなかった場合は false (既存のプロセスを再利用した場合や起動先のプログラム側でプロセスの立ち上げがキャンセルされた場合など)。
            </param>
            <param name="info">プロセスの起動情報</param>
            <param name="throwException">起動時に例外が発生した際に無視せず、呼出元でキャッチしたい場合は true。無視したい場合は false。</param>
            <param name="waitIdle">プロセスが起動しきるまで待機する場合は true。しない場合は false。</param>
            <param name="waitExit">プロセスが終了されるまで待機する場合は true。しない場合は false。</param>
            <param name="exitHandler">プロセス終了時のイベントハンドラ</param>
            <returns>起動したプロセス(プロセス起動時に例外が発生した場合は null)</returns>
            <remarks>
            必要に応じて、適切なタイミングで、プロセスのClose、Disposeを行ってください。
            <paramref name="waitExit"/> が true の場合、プロセスが終了されてからこのメソッドを抜けることになるので、このメソッドから返されるプロセスオブジェクトから欲しい情報が得られない可能性があります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.ProcessStarter.CreateProcessStartInfo(System.String,System.Boolean,System.String[])">
            <summary>
            プロセスの起動情報を生成します。
            <c>rev.1063</c>
            </summary>
            <param name="path">
            起動するEXEのフルパス or URL<br />
            URL指定の場合、OS既定のプログラムが立ち上がります。
            </param>
            <param name="escapeParameters">
            <paramref name="parameters"/>に含まれる引数値をコマンドライン引数用にエスケープ処理する場合は true。しない場合は false。<br />
            true を指定した場合、引数値にダブルクォートが含まれればそれをエスケープし、スペースが含まれればダブルクォートで囲みます。
            </param>
            <param name="parameters">起動時引数</param>
            <returns>プロセスの起動情報</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.ProcessStarter.EscapeForCommandLineArgs(System.String[])">
            <summary>
            対象のプロセス起動時引数をコマンドライン引数用にエスケープします。
            <c>rev.1063</c>
            </summary>
            <param name="parameters">プロセス起動時引数</param>
            <returns>コマンドライン引数用にエスケープされた起動時引数</returns>
            <remarks>
            引数値にダブルクォートが含まれればそれをエスケープし、スペースが含まれればダブルクォートで囲みます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.ProcessStarter.EscapeForCommandLineArgs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            対象のプロセス起動時引数をコマンドライン引数用にエスケープします。
            <c>rev.1063</c>
            </summary>
            <param name="parameters">プロセス起動時引数</param>
            <returns>コマンドライン引数用にエスケープされた起動時引数</returns>
            <remarks>
            引数値にダブルクォートが含まれればそれをエスケープし、スペースが含まれればダブルクォートで囲みます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter">
            <summary>
            システム設定値の変更を行うためのクラスです。
            </summary>
            <example>
            以下のようなクラスを作成します。
            <code>
            namespace Ill.Incorporated.Aladdinoffice.BaseLibrary
            {
                public class SystemSetter : SystemValueSetter
                {
                    private static SystemSetter Item { get; set; }
                
                    private SystemSetter() {}
                
                    public static void Load()
                    {
                        Item = new SystemSetter();
                    }
                }
            }
            </code>
            
            Load.xmlに以下の文を追加します。
            <code>
            &lt;LoadType&gt;
                &lt;Assembly&gt;Ill.Incorporated.Aladdinoffice.BaseLibrary.dll&lt;/Assembly&gt;
                &lt;Type&gt;Ill.Incorporated.Aladdinoffice.BaseLibrary.SystemSetter&lt;/Type&gt;
                &lt;StaticMethod&gt;Load&lt;/StaticMethod&gt;
            &lt;/LoadType&gt;
            </code>
            
            SystemSetterクラスで対象のメソッドをオーバーライドして処理を記述します。
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <remarks>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings"/> クラスの各イベントに対してイベントハンドラを登録します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter.Settings_LoadedSystemFile(System.Object,System.EventArgs)">
            <summary>
            AladdinOffice のシステム設定の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedSystemFile"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter.Settings_LoadedDatabaseFile(System.Object,System.EventArgs)">
            <summary>
            AladdinOffice のシステム設定の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedDatabaseFile"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter.Settings_LoadedSystemValues(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs{Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection})">
            <summary>
            AladdinOffice のシステム設定の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedSystemValues"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter.Settings_LoadedUserValues(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs{Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection})">
            <summary>
            AladdinOffice のシステム設定の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedUserValues"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter.Settings_LoadedLabels(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs{Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection})">
            <summary>
            AladdinOffice のシステム設定の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedLabels"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter.Settings_LoadedMessages(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs{Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection})">
            <summary>
            AladdinOffice のシステム設定の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedMessages"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter.Settings_LoadedTags(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs{Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection})">
            <summary>
            AladdinOffice のシステム設定の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedTags"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter.Settings_LoadedFindWindows(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs{Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection})">
            <summary>
            AladdinOffice のシステム設定の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedFindWindows"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter.Settings_LoadedJumpWindows(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs{Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection})">
            <summary>
            AladdinOffice のシステム設定の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedJumpWindows"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter.Settings_LoadedGetNameTypes(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs{Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection})">
            <summary>
            AladdinOffice のシステム設定の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedGetNameTypes"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter.Settings_LoadedListTypes(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs{Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection})">
            <summary>
            AladdinOffice のシステム設定の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedListTypes"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter.Settings_LoadedPerlessAttributes(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs{Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection})">
            <summary>
            AladdinOffice のシステム設定の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedPerlessAttributes"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter.Settings_LoadedItemAttributes(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs{Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection})">
            <summary>
            AladdinOffice のシステム設定の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedItemAttributes"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.SystemValueSetter.Settings_LoadedMenuItems(System.Object,Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.EventArgs{Ill.Incorporated.Aladdinoffice.Framework.Database.Interfaces.IDatabaseSection})">
            <summary>
            AladdinOffice のシステム設定の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.LoadedMenuItems"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction">
            <summary>
            AladdinOffice のプログラム(画面)の管理を行うクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction._item">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction"/> の既定のインスタンスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.Active(Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs)">
            <summary>
            指定した起動引数でプログラム(画面)をアクティブ化します。
            </summary>
            <param name="e">対象のプログラム(画面)の起動引数</param>
            <remarks>
            <paramref name="e"/> で指定された <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs.FormCheck"/> の画面をアクティブ化します。<br/>
            プログラム(画面)が起動されていない場合は起動します。<br/>
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.Active(System.String)">
            <summary>
            指定したFORMCHK文字列に対応するプログラム(画面)をアクティブ化します。
            </summary>
            <param name="formchk">対象のFORMCHK文字列</param>
            <remarks>
            <paramref name="formchk"/> で指定された <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs.FormCheck"/> の画面をアクティブ化します。<br/>
            プログラム(画面)が起動されていない場合は起動します。<br/>
            通常は、AladdinOffice メニューからプログラム(画面)を起動する場合に使用します。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="formchk"/> にメニューマスタに登録されていないFORMCHK文字列が指定された場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.Close(Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs)">
            <summary>
            指定した起動引数で起動されたプログラム(画面)を終了させます。
            </summary>
            <param name="e">対象のプログラム(画面)の起動引数</param>
            <remarks>
            <paramref name="e"/> で指定された <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs.FormCheck"/> のプログラム(画面)を終了させます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.Close(System.String)">
            <summary>
            指定したFORMCHK文字列に対応するプログラム(画面)を終了させます。
            </summary>
            <param name="formchk">対象のFORMCHK文字列</param>
            <remarks>
            <paramref name="formchk"/> で指定された <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs.FormCheck"/> のプログラム(画面)を終了させます。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="formchk"/> にメニューマスタに登録されていないFORMCHK文字列が指定された場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.Post(Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs,Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs)">
            <summary>
            指定した起動引数で起動されたプログラム(画面)に対して、指定したプログラム(画面)間引数を渡して処理させます。
            </summary>
            <param name="ca">対象のプログラム(画面)の起動引数</param>
            <param name="pa">プログラム(画面)間引数</param>
            <remarks>
            <paramref name="ca"/> で指定された <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs.FormCheck"/> のプログラム(画面)に <paramref name="pa"/> を渡して処理させます。<br/>
            プログラム(画面)が起動されていない場合は起動します。<br/>
            通常は、AladdinOffice メニューから起動されたプログラム(画面)から、別のプログラム(画面)を起動する場合に使用します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.Post(System.String,Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs)">
            <summary>
            指定したFORMCHK文字列に対応するプログラム(画面)に対して、指定したプログラム(画面)間引数を渡して処理させます。
            </summary>
            <param name="formchk">対象のFORMCHK文字列</param>
            <param name="pa">画面間引数</param>
            <remarks>
            <paramref name="formchk"/> で指定された <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs.FormCheck"/> のプログラム(画面)に <paramref name="pa"/> を渡して処理させます。<br/>
            プログラム(画面)が起動されていない場合は起動します。<br/>
            通常は、AladdinOffice メニューから起動されたプログラム(画面)から、別のプログラム(画面)を起動する場合に使用します。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="formchk"/> にメニューマスタに登録されていないFORMCHK文字列が指定された場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.Show(Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs,Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs)">
            <summary>
            指定した起動引数でプログラム(画面)を起動します。
            </summary>
            <param name="ca">対象のプログラム(画面)の起動引数</param>
            <param name="pa">プログラム(画面)間引数</param>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">対象プログラム(画面)の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer"/> のインスタンス初期化時に何らかの例外が発生した場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.Producer_Closed(System.Object,System.EventArgs)">
            <summary>
            起動したプログラム(画面)の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer"/> の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer.Closed"/> を処理します。
            </summary>
            <param name="sender">イベント発生元</param>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.GetProducerType(Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs)">
            <summary>
            指定した起動引数のプログラム(画面)のアセンブリに含まれる <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer"/> 実装クラスを取得します。
            </summary>
            <param name="e">対象のプログラム(画面)の起動引数</param>
            <returns><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer"/> 実装クラスの型</returns>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs.ExecName"/> で指定されるアセンブリ内に含まれる <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer"/> 実装クラスの型を抽出します。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.ICreatingArgs.FormCheck"/> が空でない場合は、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.ProducerTypes"/> にキャッシュします。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">対象のアセンブリ内に<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer"/> 実装クラスが存在しないか、複数存在する場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.GetType(System.String,System.Type)">
            <summary>
            対象のアセンブリファイルから、指定したインターフェースを実装しているクラスの型を抽出します。
            </summary>
            <param name="exename">対象ファイル名(拡張子なし)</param>
            <param name="type">インターフェースの型</param>
            <returns><paramref name="type"/>で指定されたインターフェースの実装クラスの型</returns>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException">
            以下のいずれかの場合にスローします。<br/>
            ・対象のファイルが存在しない場合。<br/>
            ・対象のファイルがデバッグモードでビルドされている場合。ただし、AladdinOffice 本体(通常は、メニュー) がデバッグモードでのビルドでない場合。<br/>
            </exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.GetExecPath(System.String)">
            <summary>
            対象のアセンブリファイルの実行ファイルパスを取得します。
            </summary>
            <param name="name">対象ファイル名(拡張子なし)</param>
            <returns>実行ファイルパス</returns>
            <remarks>
            実行ファイルディレクトリ <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.System"/> の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.ExecDirectory"/> 内の対象ファイルへのパスを返します。<br/>
            対象ファイルのカスタマイズ版が存在する場合は、そちらの実行ファイルパスが返されます。<br/>
            例えば、<paramref name="name"/> に「HBUG0010」が指定されている場合、実行ファイルディレクトリ <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.Settings.System"/> の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.SystemSettings.SystemFile.ExecDirectory"/> に
            ファイル名「HBUG1010」(拡張子なし) が存在していれば、「HBUG1010」へのパスが返されます。
            </remarks>
            <exception cref="T:Ill.Incorporated.Aladdinoffice.Framework.Libraries.AladdinSystemException"><paramref name="name"/> が 空 の場合にスローします。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.GetAliveTargets">
            <summary>
            AladdinOffice で現在起動中のプログラム(画面)の起動引数の一覧を取得します。
            </summary>
            <returns>現在起動中のプログラム(画面)の起動引数の一覧</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.GetAliveTargetTitle(System.String)">
            <summary>
            指定したFORMCHK文字列に対応するプログラム(画面)のタイトルを取得します。
            </summary>
            <param name="formchk">対象のFORMCHK文字列</param>
            <returns>対応するプログラム(画面)のタイトル</returns>
            <remarks>
            対応するプログラム(画面)が起動していない場合は null を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.Item">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction"/> の既定のインスタンスを取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction"/> の既定のインスタンス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.Producers">
            <summary>
            AladdinOffice で現在起動中のプログラム(画面)の一覧を取得します。
            </summary>
            <value>現在起動中のプログラム(画面)の一覧</value>
            <remarks>
            key   : FORMCHK
            value : 対象プログラム(画面)の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer"/> オブジェクト
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.ShowingFormCheck">
            <summary>
            AladdinOffice で現在起動中のプログラム(画面)のFORMCHKの一覧を取得します。
            </summary>
            <value>現在起動中のプログラム(画面)のFORMCHKの一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.WindowProduction.ProducerTypes">
            <summary>
            AladdinOffice のプロセス開始後、起動されたプログラム(画面)の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer"/> の型のキャッシュ情報を取得します。
            </summary>
            <value><see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IProducer"/> の型のキャッシュ情報</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CreatingArgsBase">
            <summary>
            画面の起動引数の基本クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CreatingArgsBase.#ctor(System.String[])">
            <summary>
            FORMCHK文字列、EXE名が空の <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CreatingArgsBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="parameters">起動引数</param>
            <remarks>
            主に子画面の起動時などに使用します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.CreatingArgsBase.#ctor(System.String,System.String,System.String[])">
            <summary>
            指定したFORMCHK文字列、EXE名に対応する画面を起動するための、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.CreatingArgsBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="formCheck">FORMCHK文字列</param>
            <param name="execName">実行ファイル名</param>
            <param name="parameters">起動引数</param>
            <remarks>
            主に、メニューマスタに登録されているメイン画面の起動時などに使用します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.CreatingArgsBase.FormCheck">
            <inheritdoc/>
            <remarks>
            通常は、メニューマスタ.FORMCHK に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.CreatingArgsBase.ExecName">
            <inheritdoc/>
            <remarks>
            通常は、メニューマスタ.EXE名 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.CreatingArgsBase.Params">
            <inheritdoc/>
            <remarks>
            通常は、メニューマスタ.引数1～3 に相当します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.CreatingArgsBase.Tag">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter">
            <summary>
            検索画面の挙動を指定するために検索元の親画面から渡す引数クラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.INITIAL_CODE">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs.Params"/> の内、検索対象項目の初期値を取得、設定するためのキーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.FIND_ARG_KEY">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs.Params"/> の内、 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.FindParams"/> を取得、設定するためのキーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.FIND_RESULT_VALUES_KEY">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs.Params"/> の内、 <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.FindResult"/> を取得、設定するためのキーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.FIND_RETURN_KEY">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.Interfaces.IPostArgs.Params"/> の内、検索結果の値を取得、設定するためのキーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter._param">
            <summary>
            検索画面 ←→ 検索元の親画面 の間で受け渡しを行うデータの一覧です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.Ill#Incorporated#Aladdinoffice#Framework#Threading#Interfaces#IPostArgs#Params">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.FindParams">
            <summary>
            検索元の親画面から検索画面に渡す引数の一覧を取得します。
            </summary>
            <value>検索元の親画面から検索画面に渡す引数の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.ReturnKey">
            <summary>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.FindResult"/> に含まれる戻り値のうち、検索対象の項目に対応するキーを取得、設定します。
            </summary>
            <value>検索対象の項目に対応するキー</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.FindResult">
            <summary>
            検索画面から検索元の親画面に返される戻り値の一覧を取得します。
            </summary>
            <value>検索画面から検索元の親画面に返される戻り値の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.SelectableCount">
            <summary>
            取得可能な検索結果の件数を取得、設定します。
            </summary>
            <value>取得可能な検索結果の件数。既定値は 1 です。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.IsMultiSelectMode">
            <summary>
            検索結果の複数取得モードを初期状態で有効にするかどうかを取得、設定します。
            </summary>
            <value>検索結果の複数取得モードを初期状態で有効にする場合は true。それ以外の場合は false。既定値は false です。</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.SelectableCount"/> &lt;= 1 の場合、このプロパティの設定は無効です。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.FindParameter.SelectableCount"/> &gt; 1 の時、 true を指定すると初期状態が複数取得モードになります。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.Attributes.Interfaces.IFindAttribute.MultiSelectPriority"/> と、このプロパティの設定を併せて考慮することで、複数取得モードが有効になります。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.IndividualFindParameter">
            <summary>
            個別検索画面の挙動を指定するために検索元の親画面から渡す引数クラスです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.IndividualFindParameter.IndividualFindItem">
            <summary>
            個別検索コードリストを取得、設定します。
            </summary>
            <value>個別検索コードリスト</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ConfirmationResult">
            <summary>
            確認ダイアログの戻り値を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ConfirmationResult.None">
            <summary>
            なし
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ConfirmationResult.OK">
            <summary>
            OK
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ConfirmationResult.Cancel">
            <summary>
            キャンセル
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ConfirmationResult.Abort">
            <summary>
            中止
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ConfirmationResult.Retry">
            <summary>
            再試行
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ConfirmationResult.Ignore">
            <summary>
            無視
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ConfirmationResult.Yes">
            <summary>
            はい
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ConfirmationResult.No">
            <summary>
            いいえ
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.PostArgsBase">
            <summary>
            画面間の受け渡し引数の基本クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.Threading.PostArgsBase.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Threading.PostArgsBase"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.Threading.PostArgsBase.Params">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.FindResponseNeededEventArgs">
            <summary>
            検索の実行を要求する <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.INotifyResponseNeeded.ResponseNeeded"/> イベントデータを提供します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.ResponseNeededEventArgs">
            <summary>
            <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.INotifyResponseNeeded.ResponseNeeded"/> イベントのデータを提供します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.ResponseNeededEventArgs.#ctor(System.String,Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.IActionArgs)">
            <summary>
            指定したアクションの実行を要求するための <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.ResponseNeededEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="key">アクション指定キー</param>
            <param name="args">アクション実行引数</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.ResponseNeededEventArgs.Key">
            <summary>
            アクション指定キーを取得します。
            </summary>
            <value>アクション指定キー</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.ResponseNeededEventArgs.Args">
            <summary>
            アクション実行引数を取得、設定します。
            </summary>
            <value>アクション実行引数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.ResponseNeededEventArgs.Response">
            <summary>
            アクションの実行結果を表すオブジェクトを取得、設定します。
            </summary>
            <value>
            アクションの実行結果。<br />
            内容(型)は実行されるアクションによって異なります。
            </value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.FindResponseNeededEventArgs.#ctor(System.String,Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule)">
            <summary>
            指定したアクションの実行を要求するための <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.FindResponseNeededEventArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="key">アクション指定キー</param>
            <param name="masterModule">アクション実行要求を行う親モジュール</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.FindResponseNeededEventArgs.MasterModule">
            <summary>
            アクション実行要求を行う親モジュールを取得します。
            </summary>
            <value>アクション実行要求を行う親モジュール</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.FindResponseNeededEventArgs.FindInfo">
            <summary>
            起動する検索画面の設定情報を取得、設定します。
            </summary>
            <value>起動する検索画面の設定情報</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.FindResponseNeededEventArgs.FindParameter">
            <summary>
            検索画面に渡して検索画面の挙動を指定するための引数を取得、設定します。
            </summary>
            <value>検索画面の挙動を指定するための引数</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.GenericCallbackActionArgs">
            <summary>
            コールバック処理を要求する汎用の <see cref="E:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.INotifyResponseNeeded.ResponseNeeded"/> イベントデータを提供します。
            </summary>
            <remarks>
            Ill.Incorporated.Aladdinoffice.Framework.WindowForms.UIControllers.Actions.IAction の実装クラス自体ではなく、
            Ill.Incorporated.Aladdinoffice.Framework.WindowForms.UIControllers.IUIController の実装クラスに用意されているメソッドの実行を要求するため
            に使用します。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.GenericCallbackActionArgs.SubKey"/> に対応する Ill.Incorporated.Aladdinoffice.Framework.WindowForms.UIControllers.Actions.GenericCallbackActionAttribute 
            が付与されたメソッドがIll.Incorporated.Aladdinoffice.Framework.WindowForms.UIControllers.IUIController の実装クラスに用意されている必要が
            あります。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.GenericCallbackActionArgs.#ctor(Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.IActionArgs)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.GenericCallbackActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="args">アクション実行引数</param>
            <remarks>
            アクション指定キーに <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.GENERIC_CALLBACK_ACTION"/> を設定します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.GenericCallbackActionArgs.#ctor(System.Object,System.Object,Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.IActionArgs)">
             <summary>
            指定したコールバック処理の実行を要求するための <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.GenericCallbackActionArgs"/> クラスの新しいインスタンスを初期化します。
             </summary>
             <param name="subKey">コールバック処理指定キー</param>
             <param name="eventArg">コールバック処理実行引数</param>
             <param name="args">アクション実行引数</param>
             <remarks>
             アクション指定キーに <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.GENERIC_CALLBACK_ACTION"/> を設定します。
             </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.GenericCallbackActionArgs.SubKey">
            <summary>
            コールバック処理指定キーを取得、設定します。
            </summary>
            <value>コールバック処理指定キー</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.GenericCallbackActionArgs.EventArg">
            <summary>
            コールバック処理実行引数を取得、設定します。
            </summary>
            <value>コールバック処理実行引数</value>
            <remarks>
            Ill.Incorporated.Aladdinoffice.Framework.WindowForms.UIControllers.IUIController の実装クラスに用意されているメソッドの引数として使用されます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ProgressActionArgs">
            <summary>
            進捗更新アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.IActionArgs">
            <summary>
            ロジック側からUI側へ要求したアクションの実行時に使用する引数を示すインターフェースです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ProgressActionArgs.Maximum">
            <summary>
            進捗の範囲の最大値を取得、設定します。
            </summary>
            <value>進捗の範囲の最大値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ProgressActionArgs.Minimum">
            <summary>
            進捗の範囲の最小値を取得、設定します。
            </summary>
            <value>進捗の範囲の最小値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ProgressActionArgs.Value">
            <summary>
            現在の進捗量を取得、設定します。
            </summary>
            <value>現在の進捗量</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ProgressActionArgs.Comment">
            <summary>
            進捗状況を表すコメントを取得、設定します。
            </summary>
            <value>進捗状況を表すコメント</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs">
            <summary>
            伝票の印刷、及び、プレビューアクションの実行用引数クラスです。
            </summary>
            <remarks>
            プレビューと印刷の場合で発行手順が変わります。<br/>
            印刷の場合は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.Status"/> を <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.Print"/> で実行します。<br/>
            プレビューの場合は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.Status"/> を <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.PreviewInit"/> としてまず最初に実行します。 <br/>
            その後、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.Preview"/> として1回以上実行します。<br/>
            最後に <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.PreviewEnd"/> として実行するとプレビュー画面が表示されます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs._numbers">
            <summary>
            印刷、及び、プレビューする対象伝票NOの一覧です。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.Status">
            <summary>
            アクションの実行状態を取得、設定します。
            </summary>
            <value>アクションの実行状態</value>
            <remarks>
            プレビューと印刷の場合で発行手順が変わります。<br/>
            印刷の場合は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.Status"/> を <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.Print"/> で実行します。<br/>
            プレビューの場合は <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.Status"/> を <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.PreviewInit"/> としてまず最初に実行します。 <br/>
            その後、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.Preview"/> として1回以上実行します。<br/>
            最後に <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.PreviewEnd"/> として実行するとプレビュー画面が表示されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.Success">
            <summary>
            アクションの実行が成功したかどうかを取得、設定します。
            </summary>
            <value>アクションの実行が成功した場合は true。失敗した場合は false。</value>
            <remarks>
            アクションの実行過程で失敗した場合は false を設定してください。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.SelectWhereStatus">
            <summary>
            印刷、及び、プレビューする伝票の絞込方法を取得、設定します。
            </summary>
            <value>印刷、及び、プレビューする伝票の絞込方法</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.DbSection">
            <summary>
            印刷、及び、プレビューする伝票データの取得用データベース接続セクションを取得、設定します。
            </summary>
            <value>伝票データの取得用データベース接続セクション</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.UseTempTeble">
            <summary>
            伝票データを一時テーブルから取得するかどうかを取得、設定します。
            </summary>
            <value>伝票データを一時テーブルから取得する場合は true。それ以外の場合は false。</value>
            <remarks>
            計上画面などから一時テーブル経由でプレビューする場合に true を設定します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.Numbering">
            <summary>
            印刷、及び、プレビューする伝票の採番区分を取得、設定します。
            </summary>
            <value>印刷、及び、プレビューする伝票の採番区分</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.ReportCode">
            <summary>
            印刷、及び、プレビューする伝票の伝票種別を取得、設定します。
            </summary>
            <value>印刷、及び、プレビューする伝票の伝票種別</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.ReportCopyType">
            <summary>
            伝票の控の発行方法を取得、設定します。
            </summary>
            <value>伝票の控の発行方法</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.VoucherNumbers">
            <summary>
            印刷、及び、プレビューの対象伝票NOの一覧を取得、設定します。
            </summary>
            <value>印刷、及び、プレビューの対象伝票NOの一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.FaxMailArgs">
            <summary>
            印刷した伝票のメール、及び、FAX送信の実行用引数を取得、設定します。
            </summary>
            <value>印刷した伝票のメール、及び、FAX送信の実行用引数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.ShowCancelDialog">
            <summary>
            印刷処理中にキャンセルダイアログを表示するかどうかを取得、設定します。
            </summary>
            <value>キャンセルダイアログを表示する場合は true。しない場合は false。</value>
            <remarks>
            リダイレクトプリンタの場合、このプロパティの設定は無視され、強制的に非表示になります。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.UseDefaultPrinterForUnMatchedVersion">
            <summary>
            保存されているプリンタ設定と、実際に印刷するプリンタのドライババージョンが合わない場合に、
            OSのデフォルトプリンタを利用するかどうかを取得、設定します。
            </summary>
            <value>OSのデフォルトプリンタを利用する場合は true。しない場合は false。既定値は false です。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.Ill#Incorporated#Aladdinoffice#Framework#Threading#Interfaces#IPostArgs#Params">
            <inheritdoc/>
            <remarks>
            null を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.Ill#Incorporated#Aladdinoffice#Framework#Threading#Interfaces#ICreatingArgs#FormCheck">
            <inheritdoc/>
            <remarks>
            null を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.Ill#Incorporated#Aladdinoffice#Framework#Threading#Interfaces#ICreatingArgs#ExecName">
            <inheritdoc/>
            <remarks>
            null を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.Ill#Incorporated#Aladdinoffice#Framework#Threading#Interfaces#ICreatingArgs#Params">
            <inheritdoc/>
            <remarks>
            null を返します。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.Tag">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.ReturnValue">
            <summary>
            アクションの実行結果を取得、設定します。
            </summary>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewArgs.Status"/> の設定に応じて内容が変わります。<br/>
            たとえば、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.PrinterSettings"/> が設定されている場合は、<see cref="T:System.Drawing.Printing.PrinterSettings"/> オブジェクトが返されます。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus">
            <summary>
            伝票の印刷、及び、プレビューアクションの実行状態を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.PreviewInit">
            <summary>
            プレビュー時の初期化状態
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.Preview">
            <summary>
            プレビュー処理
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.PreviewEnd">
            <summary>
            プレビュー完了状態
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.PrintInit">
            <summary>
            印刷時の初期化状態
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.Print">
            <summary>
            印刷
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.PrintEnd">
            <summary>
            印刷完了状態
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.Fax">
            <summary>
            ファックス送信
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.Mail">
            <summary>
            メール送信
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.PrinterSettings">
            <summary>
            プリンタ設定要求
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportPrintPreviewStatus.PdfExport">
            <summary>
            PDF出力
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportSelectWhereStatus">
            <summary>
            印刷、及び、プレビューする伝票の絞込方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportSelectWhereStatus.In">
            <summary>
            INを使用して結合
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ReportSelectWhereStatus.TempTable">
            <summary>
            一時テーブルを作成して結合
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.SetFocusActionArgs">
            <summary>
            フォーカス設定アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.SetFocusActionArgs.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.SetFocusActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.SetFocusActionArgs.ItemType">
            <summary>
            フォーカス対象の項目にバインディングされているオブジェクトの型を取得、設定します。
            </summary>
            <value>フォーカス対象の項目にバインディングされているオブジェクトの型</value>
            <remarks>
            通常は、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule"/> や <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetail"/> の実装クラスの型が指定されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.SetFocusActionArgs.ItemName">
            <summary>
            フォーカス対象の項目にバインディングされているオブジェクトの識別名を取得、設定します。
            </summary>
            <value>フォーカス対象の項目にバインディングされているオブジェクトの識別名</value>
            <remarks>
            通常は、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule"/> や <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IDetail"/> の <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.ComponentModel.Interfaces.IBindableObject.Name"/> に対応する値が設定されます。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.SetFocusActionArgs.PropertyName">
            <summary>
            フォーカス対象の項目にバインディングされている公開プロパティ名を取得、設定します。
            </summary>
            <value>フォーカス対象の項目にバインディングされている公開プロパティ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.SetFocusActionArgs.RowIndex">
            <summary>
            フォーカス対象の項目にバインディングされているオブジェクトが明細コレクションの場合に、コレクション内での位置を取得、設定します。
            </summary>
            <value>フォーカス対象の項目にバインディングされているオブジェクトの明細コレクション内での位置</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.SetProgressMarqueeAnimationActionArgs">
            <summary>
            プログレスバーのマーキーアニメーション設定アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.SetProgressMarqueeAnimationActionArgs.#ctor(System.Int32)">
            <summary>
            指定したアニメーションスピードの <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.SetProgressMarqueeAnimationActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="speed">アニメーションスピード(ミリ秒(ms)。負数を指定すると標準の速さが設定されます。)</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.SetProgressMarqueeAnimationActionArgs.#ctor(System.Boolean)">
            <summary>
            アニメーションの表示、もしくは、停止を指定して <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.SetProgressMarqueeAnimationActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="start">アニメーションを表示する場合は true。停止する場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.SetProgressMarqueeAnimationActionArgs.Start">
            <summary>
            マーキーアニメーションが標準の速さで表示されるように設定します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.SetProgressMarqueeAnimationActionArgs.Stop">
            <summary>
            マーキーアニメーションが停止されるように設定します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.SetProgressMarqueeAnimationActionArgs.AnimationSpeed">
            <summary>
            プログレスバーのマーキーアニメーションの速さ(1回のアニメーションにかかる時間) をミリ秒(ms)で取得、設定します。
            </summary>
            <value>マーキーアニメーションの速さ</value>
            <remarks>
            設定値が小さいほど速く、大きいほど遅くなります。<br />
            標準の速さは 100 ms です。<br />
            アニメーションを停止するには 0 をセットします。<br />
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowAutoLayoutSettingDialogActionArgs">
            <summary>
            カスタム抽出条件の設定ダイアログ表示アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowAutoLayoutSettingDialogActionArgs.Items">
            <summary>
            選択可能なすべてのカスタム抽出条件項目の一覧を取得、設定します。
            </summary>
            <value>選択可能なすべてのカスタム抽出条件項目の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowAutoLayoutSettingDialogActionArgs.SelectedItems">
            <summary>
            現在選択されているカスタム抽出条件項目の一覧を取得、設定します。
            </summary>
            <value>現在選択されているカスタム抽出条件項目の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowAutoLayoutSettingDialogActionArgs.Result">
            <summary>
            カスタム抽出条件の変更を確定したかどうかを取得、設定します。
            </summary>
            <value>カスタム抽出条件の変更を確定した場合は true。それ以外の場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowColorDialogActionArgs">
            <summary>
            色選択ダイアログ表示アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowColorDialogActionArgs.#ctor(System.Drawing.Color)">
            <summary>
            初期選択する色を指定して、<see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowColorDialogActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="color">初期選択する色</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowColorDialogActionArgs.InitialColor">
            <summary>
            初期選択する色を取得、設定します。
            </summary>
            <value>初期選択する色</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFolderBrowserDialogActionArgs">
            <summary>
            「フォルダの参照」ダイアログ表示アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFolderBrowserDialogActionArgs.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFolderBrowserDialogActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFolderBrowserDialogActionArgs.Description">
            <summary>
            ダイアログに表示する説明テキスト を取得、設定します。
            </summary>
            <value>ダイアログに表示する説明テキスト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFolderBrowserDialogActionArgs.RootFolder">
            <summary>
            参照の開始位置とするルート フォルダ を取得、設定します。
            </summary>
            <value>参照の開始位置とするルート フォルダ。既定値は <see cref="F:System.Environment.SpecialFolder.Desktop"/> です。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFolderBrowserDialogActionArgs.InitialFolderPath">
            <summary>
            ダイアログ表示時に選択する初期フォルダパス を取得、設定します。
            </summary>
            <value>ダイアログ表示時に選択する初期フォルダパス</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFolderBrowserDialogActionArgs.CanCreate">
            <summary>
            ダイアログの「新しいフォルダの作成」ボタンを表示するかどうか を取得、設定します。
            </summary>
            <value>ダイアログの「新しいフォルダの作成」ボタンを表示する場合は true。しない場合は false。既定値は true です。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFolderBrowserDialogActionArgs.SelectedFolderPath">
            <summary>
            ダイアログで選択されたフォルダパス を取得、設定します。
            </summary>
            <value>ダイアログで選択されたフォルダパス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs">
            <summary>
            メッセージダイアログ表示アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs.#ctor(System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs.IconType)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">ダイアログに表示するメッセージ</param>
            <param name="caption">ダイアログのキャプション</param>
            <param name="icon">ダイアログに表示するアイコンの種類</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs.GetIconImage(Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs.IconType)">
            <summary>
            対象のアイコンの種類に対応するアイコン画像を取得します。
            </summary>
            <param name="icon">アイコンの種類</param>
            <returns>アイコン画像</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs.Message">
            <summary>
            ダイアログに表示するメッセージを取得、設定します。
            </summary>
            <value>ダイアログに表示するメッセージ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs.Caption">
            <summary>
            ダイアログのキャプションを取得、設定します。
            </summary>
            <value>ダイアログのキャプション</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs.Icon">
            <summary>
            ダイアログに表示するアイコンを取得、設定します。
            </summary>
            <value>ダイアログに表示するアイコン</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs.IconType">
            <summary>
            アイコンの種類を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs.IconType.None">
            <summary>
            アイコンを表示しない
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs.IconType.Information">
            <summary>
            情報アイコン
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs.IconType.Error">
            <summary>
            エラーアイコン
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs.IconType.Warning">
            <summary>
            警告アイコン
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs.IconType.Help">
            <summary>
            確認アイコン
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys">
            <summary>
            ロジック側からUI側へ実行要求するアクションを指定するための標準キーを管理するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.GENERIC_CALLBACK_ACTION">
            <summary>
            汎用的なコールバック処理の実行要求キーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.SHOW_INFORMATION_MESSAGE">
            <summary>
            情報ダイアログ表示要求キーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.GET_CONFIRMATION_RESPONSE">
            <summary>
            確認ダイアログ表示要求キーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.SET_PROGRESS_MARQUEE_ANIMATION">
            <summary>
            プログレスバーのマーキーアニメーション設定要求キーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.PROGRESS_COUNT">
            <summary>
            プログレスバーのカウント要求キーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.STATUS_MESSAGE">
            <summary>
            ステータスバーの情報表示要求キーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.GET_FIND_RESULT">
            <summary>
            検索結果取得要求キーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.SHOW_SUB_FORM">
            <summary>
            サブ画面表示要求キーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.SHOW_COLOR_DIALOG">
            <summary>
            色選択ダイアログ表示要求キーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.SHOW_PRINTER_DIALOG">
            <summary>
            プリンタダイアログ表示要求キーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.SHOW_OPEN_FILE_DIALOG">
            <summary>
            「ファイルを開く」ダイアログ表示要求キー
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.SHOW_SAVE_FILE_DIALOG">
            <summary>
            「名前を付けて保存」ダイアログ表示要求キーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.SHOW_FOLDER_BROWSER_DIALOG">
            <summary>
            「フォルダの参照」ダイアログ表示要求キーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.SHOW_MULTI_SELECT_DIALOG">
            <summary>
            処理選択ダイアログ表示要求キーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.SHOW_AUTOLAYOUT_SETTING_DIALOG">
            <summary>
            カスタム抽出条件の設定画面表示要求キーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.SET_FOCUS">
            <summary>
            フォーカスセット要求キーを表す定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ActionKeys.REPORT_PRINT_PREVIEW">
            <summary>
            印刷、プレビュー要求キーを表す定数です。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.GetConfirmationResponseActionArgs">
            <summary>
            確認ダイアログ表示アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.GetConfirmationResponseActionArgs.#ctor(System.String,System.String,Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ConfirmationResult,Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ConfirmationResult,Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowInformationDialogActionArgs.IconType)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.GetConfirmationResponseActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">ダイアログに表示するメッセージ</param>
            <param name="caption">ダイアログのキャプション</param>
            <param name="options">確認の選択肢</param>
            <param name="default">既定の選択結果</param>
            <param name="icon">ダイアログに表示するアイコンの種類</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.GetConfirmationResponseActionArgs.Options">
            <summary>
            確認ダイアログに表示する選択肢を取得、設定します。
            </summary>
            <value>確認ダイアログに表示する選択肢</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.GetConfirmationResponseActionArgs.DefaultResult">
            <summary>
            既定の選択結果を取得、設定します。
            </summary>
            <value>既定の選択結果</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs">
            <summary>
            処理選択ダイアログ表示アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.#ctor(System.String,System.Boolean)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="caption">ダイアログのキャプション</param>
            <param name="notClose">処理を選択後もダイアログを閉じずに表示したままにしておく場合は true。それ以外の場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.AddButton(System.String,System.Action,System.String,System.Boolean)">
            <summary>
            指定した処理名、及び、デリゲートの選択肢をボタンとして追加します。
            </summary>
            <param name="name">処理名</param>
            <param name="func">実行する処理のデリゲート</param>
            <param name="execKey">ショートカットキー</param>
            <param name="enabled">ボタンが有効な場合は true。無効な場合は false。</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.AddButton(System.String,System.String,System.Boolean)">
            <summary>
            指定した処理名の選択肢をボタンとして追加します。
            </summary>
            <param name="name">処理名</param>
            <param name="execKey">ショートカットキー</param>
            <param name="enabled">ボタンが有効な場合は true。無効な場合は false。</param>
            <remarksm>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.UseResultIndex"/> が true の場合のみ有効です。
            </remarksm>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.AddNoKeyButton(System.String,System.Action,System.Boolean)">
            <summary>
            指定した処理名の選択肢をボタンとして追加します。
            </summary>
            <param name="name">ボタンタイトル</param>
            <param name="func">実行する処理のデリゲート</param>
            <param name="enabled">ボタンが有効な場合は true。無効な場合は false。</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.Caption">
            <summary>
            ダイアログのキャプションを取得、設定します。
            </summary>
            <value>ダイアログのキャプション</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.NotCloseAfterExecute">
            <summary>
            処理を選択後もダイアログを閉じずに表示したままにしておくかどうかを取得、設定します。
            </summary>
            <value>処理を選択後もダイアログを閉じずに表示したままにしておく場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.UseResultIndex">
            <summary>
            処理を実行せず、選択された処理ボタンのインデックスのみ返すかどうかを取得、設定します。
            </summary>
            <value>選択された処理ボタンのインデックスのみ返す場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.Buttons">
            <summary>
            処理の選択肢の一覧を取得します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.ShowMultiButtonSelectDialogButtonSetting">
            <summary>
            処理選択ダイアログで表示するボタンの設定情報を保持するクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.ShowMultiButtonSelectDialogButtonSetting.#ctor(System.String,System.String,System.Action,System.Boolean)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.ShowMultiButtonSelectDialogButtonSetting"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="caption">ボタンタイトル</param>
            <param name="keyName">ショートカットキー名</param>
            <param name="func">実行する処理のデリゲート</param>
            <param name="enabled">ボタンが有効な場合は true。無効な場合は false。</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.ShowMultiButtonSelectDialogButtonSetting.ButtonCaption">
            <summary>
            ボタンタイトルを取得、設定します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.ShowMultiButtonSelectDialogButtonSetting.ExecKeyName">
            <summary>
            対応するショートカットキー名を取得、設定します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.ShowMultiButtonSelectDialogButtonSetting.Function">
            <summary>
            選択された際に実行する処理のデリゲートを取得、設定します。
            </summary>
            <value>実行する処理のデリゲート</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultiButtonSelectDialogActionArgs.ShowMultiButtonSelectDialogButtonSetting.Enabled">
            <summary>
            ボタンが有効かどうかを取得、設定します。
            </summary>
            <value>有効な場合は true。無効な場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultipleSubFormActionArgs">
            <summary>
            複数サブ画面表示アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowSubFormActionArgs">
            <summary>
            サブ画面表示アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowSubFormActionArgs.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowSubFormActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="module">起動元画面モジュール</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowSubFormActionArgs.IsCommitted">
            <summary>
            サブ画面が入力内容を確定して終了されたかどうかを取得、設定します。
            </summary>
            <value>サブ画面が入力内容を確定して終了された場合は true。それ以外の場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowSubFormActionArgs.MasterModule">
            <summary>
            起動元画面モジュールを取得します。
            </summary>
            <value>起動元画面モジュール</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowSubFormActionArgs.PostArgs">
            <summary>
            サブ画面に受け渡す引数を取得、設定します。
            </summary>
            <value>サブ画面に受け渡す引数</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowSubFormActionArgs.CreateOnly">
            <summary>
            画面の作成のみを行うかどうかを取得、設定します。
            </summary>
            <value>画面の作成のみを行う場合は true。表示も行う場合は false。</value>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultipleSubFormActionArgs.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultipleSubFormActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="module">起動元画面モジュール</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowMultipleSubFormActionArgs.CreatingArgs">
            <summary>
            サブ画面を作成するための起動引数を取得、設定します。
            </summary>
            <value>サブ画面を作成するための起動引数</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.StatusMessageArgs">
            <summary>
            ステータスメッセージ表示アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.StatusMessageArgs.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.StatusMessageArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.StatusMessageArgs.#ctor(System.String)">
            <summary>
            指定したステータスメッセージを表示する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.StatusMessageArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="message">ステータスメッセージ</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.StatusMessageArgs.Message">
            <summary>
            表示するステータスメッセージを取得、設定します。
            </summary>
            <value>表示するステータスメッセージ</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs">
            <summary>
            ファイルダイアログ表示アクションの実行用引数の基底クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.FileName">
            <summary>
            「ファイル名」の初期値 を取得、設定します。
            </summary>
            <value>「ファイル名」の初期値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.InitialDirectory">
            <summary>
            「ファイルの場所」の初期値 を取得、設定します。
            </summary>
            <value>「ファイルの場所」の初期値</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.Title">
            <summary>
            ダイアログのキャプション を取得、設定します。
            </summary>
            <value>ダイアログのキャプション</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.Filters">
            <summary>
            「ファイルの種類」の選択肢 を取得、設定します。
            </summary>
            <value>「ファイルの種類」の選択肢</value>
            <remarks>
            設定しない場合、すべてのファイルが選択可能になります。<br/>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.FileFileterItem.IsDefault"/> プロパティが true の項目が複数ある場合は、後で追加されたフィルタが有効になります。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.FileFilterList">
            <summary>
            「ファイルの種類」の選択肢指定用リストクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.FileFilterList.Add(System.String,System.String[])">
            <summary>
            「ファイルの種類」の選択肢を追加します。
            </summary>
            <param name="label">
            ファイルダイアログの「ファイルの種類」のドロップダウンリストに表示するラベル
            </param>
            <param name="extensions">
            拡張子。
            . より右側の分だけ指定して下さい。
            </param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.FileFilterList.Add(System.String,System.Boolean,System.String[])">
            <summary>
            「ファイルの種類」の選択肢を追加します。
            </summary>
            <param name="label">
            ファイルダイアログの「ファイルの種類」のドロップダウンリストに表示するラベル
            </param>
            <param name="isDefault">
            ファイルダイアログの「ファイルの種類」の初期値にする場合は true。しない場合は false。
            </param>
            <param name="extensions">
            拡張子。
            . より右側の分だけ指定して下さい。
            </param>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.FileFileterItem">
            <summary>
            「ファイルの種類」の選択肢項目を表すクラスです。
            </summary>
            <example>
            例1)<br />
                Label      : "HTMLファイル"<br />
                Extensions : "html", "htm"<br />
                → HTMLファイル(*.html;*.htm)<br />
            例2)<br />
                Label      : "すべてのファイル"<br />
                Extensions : "*"<br />
                → すべてのファイル(*.*)<br />
            </example>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.FileFileterItem.#ctor(System.String,System.String[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.FileFileterItem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="label">
            ファイルダイアログの「ファイルの種類」のドロップダウンリストに表示するラベル
            </param>
            <param name="extensions">
            拡張子。
            . より右側の分だけ指定して下さい。
            </param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.FileFileterItem.#ctor(System.String,System.Boolean,System.String[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.FileFileterItem"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="label">
            ファイルダイアログの「ファイルの種類」のドロップダウンリストに表示するラベル
            </param>
            <param name="isDefault">
            ファイルダイアログの「ファイルの種類」の初期値にする場合はtrue。しない場合は false。
            </param>
            <param name="extensions">
            拡張子。
            . より右側の分だけ指定して下さい。
            </param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.FileFileterItem.Label">
            <summary>
            ファイルダイアログの「ファイルの種類」のドロップダウンリストに表示するラベル を取得、設定します。
            </summary>
            <value>ファイルダイアログの「ファイルの種類」のドロップダウンリストに表示するラベル</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.FileFileterItem.Extensions">
            <summary>
            拡張子 を取得、設定します。
            </summary>
            <value>
            拡張子。
            . より右側の分だけ指定して下さい。
            </value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowFileDialogActionArgs.FileFileterItem.IsDefault">
            <summary>
            ファイルダイアログの「ファイルの種類」の初期値にするかどうか を取得、設定します。
            </summary>
            <value>ファイルダイアログの「ファイルの種類」の初期値にする場合はtrue。しない場合は false。既定値は false です。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowOpenFileDialogActionArgs">
            <summary>
            「ファイルを開く」ダイアログ表示アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowOpenFileDialogActionArgs.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowOpenFileDialogActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowOpenFileDialogActionArgs.MultiSelect">
            <summary>
            複数のファイルを選択可能かどうか を取得、設定します。
            </summary>
            <value>複数のファイルを選択可能な場合は true。不可能な場合は false。既定値は false です。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowOpenFileDialogActionArgs.IsFullPath">
            <summary>
            ダイアログで選択されたファイル名をフルパスで取得するかどうか を取得、設定します。
            </summary>
            <value>ダイアログで選択されたファイル名をフルパスで取得する場合は true。しない場合は false。既定値は true です。</value>
            <remarks>
            true  の場合、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowOpenFileDialogActionArgs.SelectedFileNames"/> プロパティに含まれるファイル名はフルパスになります。<br/>
            false の場合、<see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowOpenFileDialogActionArgs.SelectedFileNames"/> プロパティに含まれるファイル名は拡張子付きのファイル名のみになります。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowOpenFileDialogActionArgs.SelectedFileNames">
            <summary>
            ダイアログで選択されたファイル名の一覧 を取得、設定します。
            </summary>
            <value>ダイアログで選択されたファイル名の一覧</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowOpenFileDialogActionArgs.CheckExtension">
            <summary>
            ダイアログで選択された場合にフィルターとの一致チェックを行うかどうかを取得、設定します。
            </summary>
            <value>チェックを行う場合は true。行わない場合は false。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowSaveFileDialogActionArgs">
            <summary>
            「名前を付けて保存」ダイアログ表示アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowSaveFileDialogActionArgs.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowSaveFileDialogActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowSaveFileDialogActionArgs.Writer">
            <summary>
            ファイルへの書き込み処理用デリゲート を取得、設定します。
            </summary>
            <value>ファイルへの書き込み処理用デリゲート</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowSaveFileDialogActionArgs.AppendOnWriting">
            <summary>
            既存ファイルへの書き込みを追記処理にするか、上書き処理にするかを取得、設定します。
            </summary>
            <value>追記処理にする場合は true。上書き処理にする場合は false。既定値は false です。</value>
            <remarks>
            <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowSaveFileDialogActionArgs.Writer"/> が null でない場合にのみ有効です。
            </remarks>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowSaveFileDialogActionArgs.SelectedFileName">
            <summary>
            ダイアログで選択されたファイル名(フルパス) を取得、設定します。
            </summary>
            <value>ダイアログで選択されたファイル名(フルパス)</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowPrinterDialogActionArgs">
            <summary>
            プリンタ設定ダイアログ表示アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowPrinterDialogActionArgs.#ctor(System.String,System.Byte[])">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowPrinterDialogActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="printerName">初期選択するプリンタ名</param>
            <param name="devmode">DEVMODE 構造体のバイナリデータ</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowPrinterDialogActionArgs.PrinterName">
            <summary>
            初期選択するプリンタ名を取得、設定します。
            </summary>
            <value>初期選択するプリンタ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowPrinterDialogActionArgs.Devmode">
            <summary>
            DEVMODE 構造体のバイナリデータを取得、設定します。
            </summary>
            <value>DEVMODE 構造体のバイナリデータ</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowPrinterDialogActionArgs.AllowPrintToFile">
            <summary>
            [ファイルへ出力] を有効にするかどうかを取得、設定します。
            </summary>
            <value>[ファイルへ出力] を有効にする場合は true。しない場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowPrinterDialogActionArgs.AllowSelection">
            <summary>
            [選択した部分] オプション を有効にするかどうかを取得、設定します。
            </summary>
            <value>[選択した部分] オプション を有効にする場合は true。しない場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowPrinterDialogActionArgs.AllowSomePages">
            <summary>
            [ページ指定] オプション を有効にするかどうかを取得、設定します。
            </summary>
            <value>[ページ指定] オプション を有効にする場合は true。しない場合は false。</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowPrinterDialogActionArgs.FromPage">
            <summary>
            [ページ指定] オプション を有効にする場合の、既定の開始ページ番号を取得、設定します。
            </summary>
            <value>[ページ指定] オプション を有効にする場合の、既定の開始ページ番号</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowPrinterDialogActionArgs.ToPage">
            <summary>
            [ページ指定] オプション を有効にする場合の、既定の終了ページ番号を取得、設定します。
            </summary>
            <value>[ページ指定] オプション を有効にする場合の、既定の終了ページ番号</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowPrinterDialogActionArgs.MinimumPage">
            <summary>
            [ページ指定] オプション を有効にする場合の、最小ページ番号を取得、設定します。
            </summary>
            <value>[ページ指定] オプション を有効にする場合の、最小ページ番号</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowPrinterDialogActionArgs.MaximumPage">
            <summary>
            [ページ指定] オプション を有効にする場合の、最大ページ番号を取得、設定します。
            </summary>
            <value>[ページ指定] オプション を有効にする場合の、最大ページ番号</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowDetailSubFormActionArgs">
            <summary>
            明細サブ画面表示アクションの実行用引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowDetailSubFormActionArgs.#ctor(Ill.Incorporated.Aladdinoffice.Framework.Modules.Interfaces.IModule,System.String,System.Int32)">
            <summary>
            指定した明細に対応するサブ画面を表示する <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowDetailSubFormActionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="module">起動元画面モジュール</param>
            <param name="detailCollectionName">起動元画面明細コレクション名</param>
            <param name="index">起動元画面明細行インデックス</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowDetailSubFormActionArgs.DetailCollectionName">
            <summary>
            起動元画面明細コレクション名を取得します。
            </summary>
            <value>起動元画面明細コレクション名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.Messaging.Common.ShowDetailSubFormActionArgs.Index">
            <summary>
            起動元画面明細行インデックスを取得します。
            </summary>
            <value>起動元画面明細行インデックス</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentRowIndexArgs">
            <summary>
            UI上でアクティブな項目の、明細コレクション内での位置を受け渡すための引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentRowIndexArgs.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentRowIndexArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentRowIndexArgs.RowIndex">
            <summary>
            UI上でアクティブな項目の、明細コレクション内での位置を表す行インデックスを取得、設定します。
            </summary>
            <value>
            UI上でアクティブな項目の、明細コレクション内での位置を表す行インデックス。<br />
            アクティブな項目が明細コレクション外の場合は 負数 を返します。
            </value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentPositionFunctionArgs">
            <summary>
            ファンクション実行時に、UI上でアクティブな項目にバインディングされているオブジェクト、及び、公開プロパティを指定するための引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentPositionFunctionArgs.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentPositionFunctionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentPositionFunctionArgs.#ctor(System.Object,System.String)">
            <summary>
            指定したバインディングオブジェクト、及び、公開プロパティ名を持つ <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentPositionFunctionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="item">UI上でアクティブな項目にバインディングされているオブジェクト</param>
            <param name="propertyName">UI上でアクティブな項目にバインディングされているオブジェクトの公開プロパティ名</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentPositionFunctionArgs.Item">
            <summary>
            UI上でアクティブな項目にバインディングされているオブジェクトを取得、設定します。
            </summary>
            <value>UI上でアクティブな項目にバインディングされているオブジェクト</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentPositionFunctionArgs.PropertyName">
            <summary>
            UI上でアクティブな項目にバインディングされているオブジェクトの公開プロパティ名を取得、設定します。
            </summary>
            <value>UI上でアクティブな項目にバインディングされているオブジェクトの公開プロパティ名</value>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentPositionFunctionArgs.PropertyValue">
            <summary>
            UI上でアクティブな項目に現在入力されている値を取得、設定します。
            </summary>
            <value>UI上でアクティブな項目に現在入力されている値</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentPositionFindFunctionArgs">
            <summary>
            検索ファンクション実行時に、UI上でアクティブな項目にバインディングされているオブジェクト、及び、公開プロパティを指定するための引数クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentPositionFindFunctionArgs.#ctor">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentPositionFindFunctionArgs"/> クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentPositionFindFunctionArgs.FunctionArgs">
            <summary>
            検索結果の反映先の項目を表す <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentPositionFunctionArgs"/> オブジェクトの一覧を取得、設定します。
            </summary>
            <value>検索結果の反映先の項目を表す <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.NotifyCurrentPositionFunctionArgs"/> オブジェクトの一覧</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.ReportCopyType">
            <summary>
            伝票の控の発行方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.ReportCopyType.Non">
            <summary>
            控なし
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.ReportCopyType.ReportNo">
            <summary>
            伝票NO毎に発行
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.UICoordinations.ReportCopyType.End">
            <summary>
            最終ページに追加
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.comdlg32">
            <summary>
            comdlg32.dllの関数を定義するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.comdlg32.DLL_COMDLG32">
            <summary> comdlg32.dll のDLL名を表す定数です。 </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.comdlg32.PrintDlg(System.IntPtr)">
            <summary>
            ［印刷］ダイアログボックスを作成します。ユーザーは［印刷］ダイアログボックスを使って、印刷ジョブのプロパティを指定します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc410957.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.gdi32">
            <summary>
            gdi32.dllの関数を定義するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.gdi32.DLL_GDI32">
            <summary> gdi32.dll のDLL名を表す定数です。 </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.gdi32.CreateCompatibleDC(System.IntPtr)">
            <summary>
            指定されたデバイスと互換性のあるメモリデバイスコンテキストを作成します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc428328.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.gdi32.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            指定されたデバイスコンテキストで、指定された 1 個のオブジェクトを選択します。新しいオブジェクトは、同じタイプの以前のオブジェクトを置き換えます。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc410576.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.gdi32.DeleteDC(System.IntPtr)">
            <summary>
            指定されたデバイスコンテキストを削除します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc428357.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.gdi32.DeleteObject(System.IntPtr)">
            <summary>
            ペン、ブラシ、フォント、ビットマップ、リージョン、パレットのいずれかの論理オブジェクトを削除し、そのオブジェクトに関連付けられていたすべてのシステムリソースを解放します。オブジェクトを削除した後は、指定されたハンドルは無効になります。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc428362.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.gdi32.GetDeviceCaps(System.IntPtr,System.Int32)">
            <summary>
            指定されたデバイスに関するデバイス固有の情報を取得します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc428670.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.gdi32.GetDeviceCaps(System.Runtime.InteropServices.HandleRef,System.Int32)">
            <summary>
            指定されたデバイスに関するデバイス固有の情報を取得します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc428670.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32">
            <summary>
            imm32.dllの関数を定義するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.DLL_IMM32">
            <summary> imm32.dll のDLL名を表す定数です。 </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.ImmSetCompositionWindow(System.IntPtr,Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.COMPOSITIONFORM@)">
            <summary>
            変換ウィンドウの位置を設定します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc448033.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.ImmGetContext(System.IntPtr)">
            <summary>
            指定されたウィンドウに関連付けられている入力コンテキストを取得します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc447986.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.ImmReleaseContext(System.IntPtr,System.IntPtr)">
            <summary>
            入力コンテキストを解放し、コンテキスト内の関連メモリのロックを解除します。
            アプリケーションで ImmGetContext 関数を呼び出したら、必ず対応する ImmReleaseContext 関数を呼び出さなければなりません。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc448025.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.ImmSetCompositionFontW(System.IntPtr,Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT@)">
            <summary>
            変換ウィンドウに表示する文字に使う論理フォントを設定します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc448029.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.SetImeWindowPos(System.IntPtr,System.IntPtr,Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.POINTAPI)">
            <summary>
            IMEウィンドウの位置を設定します。
            </summary>
            <param name="imContext">IMEコンテキスト</param>
            <param name="window">ウィンドウハンドル</param>
            <param name="screenPos">位置</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.SetImeWindowFont(System.IntPtr,System.Drawing.Font)">
            <summary>
            IMEウィンドウのフォントを設定します。
            </summary>
            <param name="window">ウィンドウハンドル</param>
            <param name="font">フォント</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.CreateLogFont(System.IntPtr,System.Drawing.Font,Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT@)">
            <summary>
            指定のフォントからLOGFONT構造体を生成します。
            </summary>
            <param name="window">ウィンドウハンドル</param>
            <param name="font">フォント</param>
            <param name="lf">生成されたLOGFONT構造体</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.ImmAssociateContext(System.IntPtr,System.IntPtr)">
            <summary>
            指定された入力コンテキストを指定されたウィンドウに関連付けます。
            <paramref name="hIMC"/> パラメータに NULL を指定してこの関数を呼び出すと、ウィンドウと入力コンテキストの関連付けが解除されます（ただし、指定したウィンドウに入力コンテキストが関連付けられていた場合）。
            通常は、どのウィンドウにも、その作成時に既定の入力コンテキストが自動的に関連付けられます。
            ImmAssociateContextEx 関数を使うと、関連付けの種類を指定して関連付けを行うことができます。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc447958.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.ImmSetOpenStatus(System.IntPtr,System.Boolean)">
            <summary>
            IME を開いたり閉じたりします。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc448037.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.COMPOSITIONFORM">
            <summary>
            コンポジションウィンドウの位置情報を含みます。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.COMPOSITIONFORM.style">
            <summary>
            位置スタイルを含む符号なしの長整数値であり、以下のうちどれかの値です。
            <list type="table">
            <listheader> <term>値</term><term>意味</term> </listheader>
            <item>
            <term>CFS_DEFAULT</term>
            <term>既定の位置へコンポジションウィンドウを移動します。IMEウィンドウは、フローティングウィンドウのように、クライアント領域の外側でコンポジションウィンドウを表示できます。</term>
            </item>
            <item>
            <term>CFS_FORCE_POSITION</term>
            <term><see cref="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.COMPOSITIONFORM.currentPos"/>で与えられた正確な位置でコンポジションウィンドウの左上端を表示します。座標は、コンポジションウィンドウを含むウィンドウの左上端から相対的であり、IMEによって補正されません。 </term>
            </item>
            <item>
            <term>CFS_POINT</term>
            <term><see cref="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.COMPOSITIONFORM.currentPos"/>で与えられた位置でコンポジションウィンドウの左上端を表示します。座標は、コンポジションウィンドウを含むウィンドウの左上端から相対的であり、座標はIMEによって補正されます。 </term>
            </item>
            <item>
            <term>CFS_RECT</term>
            <term><see cref="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.COMPOSITIONFORM.area"/>で与えられた位置でコンポジションウィンドウを表示します。座標は、コンポジションウィンドウを含むウィンドウの左上端から相対的です。</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.COMPOSITIONFORM.currentPos">
            <summary>
            コンポジションウィンドウの左上端の座標を含むPOINT構造体です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.imm32.COMPOSITIONFORM.area">
            <summary>
            コンポジションウィンドウの左上端と右下端の座標を含むRECT構造体です。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.AbstractMemoryClear">
            <summary>
            確保したメモリを解放するための基底クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.AbstractMemoryClear.#ctor(System.IntPtr)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.AbstractMemoryClear"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="ptr">メモリが割り当てられているポインタ</param>
            <remarks>
            このオブジェクトが破棄される場合に<paramref name="ptr"/> も同時に破棄します。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.AbstractMemoryClear.Dispose">
            <inheritdoc cref="M:System.IDisposable.Dispose"/>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.AbstractMemoryClear.DisposeForPtr(System.IntPtr)">
            <summary>
            ポインタの解放を行います。
            </summary>
            <param name="ptr">メモリが割り当てられているポインタ</param>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.AbstractMemoryClear.Ptr">
            <summary>
            メモリが割り当てられているポインタを取得します。
            </summary>
            <value>メモリが割り当てられているポインタ</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.GlobalUnlocker">
            <summary>
            ポインタをGlobalUnlockを利用して解放するためのクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.GlobalUnlocker.#ctor(System.IntPtr)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.GlobalUnlocker"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="ptr">メモリが割り当てられているポインタ</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.GlobalUnlocker.DisposeForPtr(System.IntPtr)">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.MarshalClear">
            <summary>
            ポインタをMarshal.FreeHGlobalを利用して解放するためのクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.MarshalClear.#ctor(System.IntPtr)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.MarshalClear"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="ptr">メモリが割り当てられているポインタ</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.MarshalClear.DisposeForPtr(System.IntPtr)">
            <inheritdoc/>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.PrinterOpener">
            <summary>
            プリンタのデバイス接続/切断を自動化するクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.PrinterOpener.#ctor(System.String)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.PrinterOpener"/> クラスの新しいインスタンスを初期化します。
            </summary>
            <param name="name">プリンタ名</param>
            <remarks>
            OpenPrinterメソッドを利用して<paramref name="name"/> のプリンタを開きます。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.PrinterOpener.DisposeForPtr(System.IntPtr)">
            <inheritdoc/>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.PrinterOpener.Name">
            <summary>
            プリンタ名を取得します。
            </summary>
            <value>プリンタ名</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.ScrollInfo">
            <summary>
            スクロールバーをAPIレベルで管理するクラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.ScrollInfo.IsHorizontal(System.IntPtr)">
            <summary>
            横スクロールバーの存在チェックを行います。
            </summary>
            <param name="handle">ハンドル</param>
            <returns>横スクロールバーが存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.ScrollInfo.IsVertical(System.IntPtr)">
            <summary>
            縦スクロールバーの存在チェックを行います。
            </summary>
            <param name="handle">ハンドル</param>
            <returns>縦スクロールバーが存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.ScrollInfo.IsScroll(System.IntPtr,Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ScrollBarDirection)">
            <summary>
            スクロールバーの存在チェックを行います。
            </summary>
            <param name="handle">ハンドル</param>
            <param name="type">タイプ</param>
            <returns>スクロールバーが存在する場合は true。それ以外の場合は false。</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.WtsInformation">
            <summary>
            リモート接続(Windows Terminal Service)情報の管理クラスです。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.WtsInformation.GetSessionInfo(System.IntPtr,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS)">
            <summary>
            指定したリモートサーバ、セッションの情報を取得します。
            </summary>
            <param name="hServer">
            ターミナルサーバーのハンドルを指定します。
            WTSOpenServer 関数で開いたハンドルを使います。
            アプリケーションを実行中のターミナルサーバーを指定するときは、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_CURRENT_SERVER_HANDLE"/> を使います。
            </param>
            <param name="sessionId">
            ターミナルサービスのセッション識別子を指定します。
            現在のセッションを指定するときは、<see cref="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_CURRENT_SESSION"/> を使います。
            WTSEnumerateSessions 関数を使うと、特定のターミナルサーバー上で実行されているすべてのセッションの識別子が取得できます。
            </param>
            <param name="info">
            指定したセッションから取得する情報の種類を指定します。 
            一部の値には未対応、もしくは、非対応です。
            </param>
            <returns>要求した情報の値</returns>
            <exception cref="T:System.NotImplementedException"><paramref name="info"/>に未対応の値が指定された場合に発生します。</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="info"/>に非対応の値が指定された場合に発生します。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.WtsInformation.GetCurrentSessionInfo(Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS)">
            <summary>
            現在のプロセスが接続しているリモートサーバ、セッションの情報を取得します。
            </summary>
            <param name="info">
            取得する情報の種類を指定します。
            一部の値には未対応、もしくは、非対応です。
            </param>
            <returns>要求した情報の値</returns>
            <exception cref="T:System.NotImplementedException"><paramref name="info"/>に未対応の値が指定された場合に発生します。</exception>
            <exception cref="T:System.NotSupportedException"><paramref name="info"/>に非対応の値が指定された場合に発生します。</exception>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.WtsInformation.GetClientMachineName">
            <summary>
            現在のプロセスをリモートから実行しているクライアント端末名を取得します。
            現在のプロセスがローカルセッションで実行されている場合、ブランクが返されます。
            必要に応じて、事前に <see cref="P:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.WtsInformation.IsRemoteSession"/> でリモート接続されているかどうかを確認してください。
            </summary>
            <returns>クライアント端末名</returns>
        </member>
        <member name="P:Ill.Incorporated.Aladdinoffice.Framework.WinApi.InteropServices.WtsInformation.IsRemoteSession">
            <summary>
            呼び出し元のプロセスがターミナル サービスのクライアント セッションに関連付けられているかどうかを示す値を取得します。
            System.Windows.Forms.SystemInformation.TerminalServerSession と等価です。
            </summary>
            <value>呼び出し元のプロセスがターミナル サービスのクライアント セッションに関連付けられている場合、true。それ以外はfalse。</value>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32">
            <summary>
            kernel32.dllの関数を定義するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.DLL_KERNEL32">
            <summary> kernel32.dll のDLL名を表す定数です。 </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.GlobalLock(System.IntPtr)">
            <summary>
            グローバルメモリオブジェクトをロックし、メモリブロックの最初の 1 バイトへのポインタを返します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc430080.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.GlobalUnlock(System.IntPtr)">
            <summary>
            GMEM_MOVEABLE を指定して割り当てたグローバルメモリオブジェクトのロックカウントを減らします。
            この関数は、GMEM_FIXED を指定して割り当てた固定メモリには影響を及ぼしません。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc430100.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.GlobalFree(System.IntPtr)">
            <summary>
            指定されたグローバルメモリオブジェクトを解放し、そのハンドルを無効にします。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc430076.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.GlobalReAlloc(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            グローバルメモリオブジェクトのサイズまたは属性を変更します。サイズは、拡大も縮小もできます。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc430130.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.LoadLibrary(System.String)">
            <summary>
            指定された実行可能モジュールを、呼び出し側プロセスのアドレス空間内にマップします。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc429241.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.GetTickCount">
            <summary>
            システムを起動した後の経過時間を、ミリ秒（ms）単位で取得します。
            この時間は、システムタイマの分解能による制限を受けます。システムタイマの分解能を取得するには、GetSystemTimeAdjustment 関数を使います。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc429827.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.LCMapString(System.Int32,System.UInt32,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            ある文字列に対してロケール依存の変換を実行し、別の文字列にマップします。入力文字列の並び替えキーを生成することもできます。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc448052.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.GlobalAddAtom(System.String)">
            <summary>
            文字列をグローバルアトムテーブルに格納し、その文字列を識別する一意の値（ アトム）を返します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc429867.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.GlobalDeleteAtom(System.Int16)">
            <summary>
            グローバル文字列アトムの参照カウントをデクリメントします。
            参照カウントが 0 になったときは、アトムに関連付けられている文字列を、グローバルアトムテーブルから削除します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc429847.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags">
            <summary>
            マップ変換の種類を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.NORM_IGNORECASE">
            <summary>
            大文字と小文字を区別しません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.NORM_IGNORENONSPACE">
            <summary>
            送りなし文字を無視します。このフラグをセットすると、日本語アクセント文字も削除されます。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.NORM_IGNORESYMBOLS">
            <summary>
            記号を無視します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.LCMAP_LOWERCASE">
            <summary>
            小文字を使います。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.LCMAP_UPPERCASE">
            <summary>
            大文字を使います。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.LCMAP_SORTKEY">
            <summary>
            正規化されたワイド文字並び替えキーを作成します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.LCMAP_BYTEREV">
            <summary>
            Windows NT のみ : バイト順序を反転します。たとえば 0x3450 と 0x4822 を渡すと、結果は 0x5034 と 0x2248 になります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.SORT_STRINGSORT">
            <summary>
            区切り記号を記号と同じものとして扱います。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.NORM_IGNOREKANATYPE">
            <summary>
            ひらがなとカタカナを区別しません。ひらがなとカタカナを同じと見なします。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.NORM_IGNOREWIDTH">
            <summary>
            シングルバイト文字と、ダブルバイトの同じ文字とを区別しません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.LCMAP_HIRAGANA">
            <summary>
            ひらがなにします。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.LCMAP_KATAKANA">
            <summary>
            カタカナにします。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.LCMAP_HALFWIDTH">
            <summary>
            半角文字にします（適用される場合）。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.LCMAP_FULLWIDTH">
            <summary>
            全角文字にします（適用される場合）。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.LCMAP_LINGUISTIC_CASING">
            <summary>
            大文字と小文字の区別に、ファイルシステムの規則（既定値）ではなく、言語上の規則を使います。LCMAP_LOWERCASE、または LCMAP_UPPERCASE とのみ組み合わせて使えます。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.LCMAP_SIMPLIFIED_CHINESE">
            <summary>
            中国語の簡体字を繁体字にマップします。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.kernel32.dwMapFlags.LCMAP_TRADITIONAL_CHINESE">
            <summary>
            中国語の繁体字を簡体字にマップします。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32">
            <summary>
            user32.dllの関数を定義するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.DLL_USER32">
            <summary> user32.dll のDLL名を表す定数です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.WM_PAINT">
            <summary> WM_PAINTメッセージの定数です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.GWL_WNDPROC">
            <summary> GWL_WNDPROCメッセージを表す定数です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.NullHandleRef">
            <summary>
            NULLハンドルを表す<see cref="T:System.Runtime.InteropServices.HandleRef"/>の定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.GetForegroundWindow">
            <summary>
            フォアグラウンドウィンドウ（ 現在ユーザーが作業しているウィンドウ）のハンドルを返します。
            Windows システムは、フォアグラウンドウィンドウを生成したスレッドに対して、他のスレッドよりも若干高い優先順位を割り当てます。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc364732.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.UpdateLayeredWindow(System.IntPtr,System.IntPtr,System.Drawing.Point@,System.Drawing.Size@,System.IntPtr,System.Drawing.Point@,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.BLENDFUNCTION@,System.Int32)">
            <summary>
            レイヤードウィンドウの位置、サイズ、形、内容、透明度を更新します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc364847.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.GetDC(System.IntPtr)">
             <summary>
             指定されたウィンドウのクライアント領域または画面全体を表すディスプレイデバイスコンテキストのハンドルを取得します。
             その後、GDI 関数を使って、返されたデバイスコンテキスト内で描画を行えます。
            
             GetDCEx 関数は GetDC に拡張を加えたものであり、クライアント領域内に新しいリージョンを作成する（クリッピング）方法をアプリケーションから詳細に制御できるようにします。
             </summary>
             <remarks>
             Win32APIのメソッドのインポートです。
             詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc428664.aspx">MSDNライブラリ</a> を参照してください。
             </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.GetDC(System.Runtime.InteropServices.HandleRef)">
             <summary>
             指定されたウィンドウのクライアント領域または画面全体を表すディスプレイデバイスコンテキストのハンドルを取得します。
             その後、GDI 関数を使って、返されたデバイスコンテキスト内で描画を行えます。
            
             GetDCEx 関数は GetDC に拡張を加えたものであり、クライアント領域内に新しいリージョンを作成する（クリッピング）方法をアプリケーションから詳細に制御できるようにします。
             </summary>
             <remarks>
             Win32APIのメソッドのインポートです。
             詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc428664.aspx">MSDNライブラリ</a> を参照してください。
             </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            デバイスコンテキストを解放し、他のアプリケーションからつかえるようにします。
            ReleaseDC 関数の効果は、デバイスコンテキストのタイプによって異なります。
            この関数は、共通デバイスコンテキストとウィンドウデバイスコンテキストだけを解放します。
            クラスデバイスコンテキストやプライベートデバイスコンテキストには効果がありません。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc410542.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ReleaseDC(System.Runtime.InteropServices.HandleRef,System.Runtime.InteropServices.HandleRef)">
            <summary>
            デバイスコンテキストを解放し、他のアプリケーションからつかえるようにします。
            ReleaseDC 関数の効果は、デバイスコンテキストのタイプによって異なります。
            この関数は、共通デバイスコンテキストとウィンドウデバイスコンテキストだけを解放します。
            クラスデバイスコンテキストやプライベートデバイスコンテキストには効果がありません。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc410542.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ShowWindow(System.IntPtr,Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ShowWindowCommands)">
            <summary>
            指定されたウィンドウの表示状態を設定します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc411211.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags)">
            <summary>
            子ウィンドウ、ポップアップウィンドウ、またはトップレベルウィンドウのサイズ、位置、および Z オーダーを変更します。
            これらのウィンドウは、その画面上での表示に従って順序が決められます。
            最前面にあるウィンドウは最も高いランクを与えられ、Z オーダーの先頭に置かれます。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc411206.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.PeekMessage(Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.MSG@,System.Int32,System.Int32,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.PeekMsgOption)">
            <summary>
            着信した送信済みメッセージをディスパッチ（送出）し、スレッドのメッセージキューにポスト済みメッセージが存在するかどうかをチェックし、存在する場合は、指定された構造体にそのメッセージを格納します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc410948.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.TranslateMessage(Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.MSG@)">
            <summary>
            仮想キーメッセージを文字メッセージへ変換します。
            文字メッセージは、呼び出し側スレッドのメッセージキューにポストされ、次にそのスレッドが GetMessage または PeekMessage 関数を呼び出すと、その文字メッセージが読み取られます。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc364841.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.DispatchMessage(Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.MSG@)">
            <summary>
            1 つのウィンドウプロシージャへメッセージをディスパッチ（送出）します。
            一般的に、GetMessage 関数が取得したメッセージをディスパッチするために、この関数を使います。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc410766.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetFocus(System.Runtime.InteropServices.HandleRef)">
            <summary>
            指定されたウィンドウにキーボードフォーカスを設定します。
            このウィンドウは、呼び出し側スレッドのメッセージキューにアタッチされているものでなければなりません。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc411074.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.GetFocus">
            <summary>
            呼び出し側のスレッドに関連付けられているウィンドウの中から、キーボードフォーカスを持つウィンドウのハンドルを取得します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc364641.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SendMessage(System.IntPtr,System.UInt32,System.Int32,System.IntPtr)">
            <summary>
            1 つまたは複数のウィンドウへ、指定されたメッセージを送信します。
            この関数は、指定されたウィンドウのウィンドウプロシージャを呼び出し、そのウィンドウプロシージャがメッセージを処理し終わった後で、制御を返します。
            
            メッセージを送信して即座に制御を返すには、SendMessageCallback または SendNotifyMessage 関数を使ってください。
            メッセージを 1 つのスレッドのメッセージキューにポストして即座に制御を返すには、PostMessage または PostThreadMessage 関数を使ってください。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc411022.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            1 つまたは複数のウィンドウへ、指定されたメッセージを送信します。
            この関数は、指定されたウィンドウのウィンドウプロシージャを呼び出し、そのウィンドウプロシージャがメッセージを処理し終わった後で、制御を返します。
            
            メッセージを送信して即座に制御を返すには、SendMessageCallback または SendNotifyMessage 関数を使ってください。
            メッセージを 1 つのスレッドのメッセージキューにポストして即座に制御を返すには、PostMessage または PostThreadMessage 関数を使ってください。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc411022.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RECT@)">
            <summary>
            1 つまたは複数のウィンドウへ、指定されたメッセージを送信します。
            この関数は、指定されたウィンドウのウィンドウプロシージャを呼び出し、そのウィンドウプロシージャがメッセージを処理し終わった後で、制御を返します。
            
            メッセージを送信して即座に制御を返すには、SendMessageCallback または SendNotifyMessage 関数を使ってください。
            メッセージを 1 つのスレッドのメッセージキューにポストして即座に制御を返すには、PostMessage または PostThreadMessage 関数を使ってください。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc411022.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.GetParent(System.IntPtr)">
            <summary>
            指定された子ウィンドウの親ウィンドウまたはオーナーウィンドウのハンドルを返します。
            指定した祖先のハンドルを取得するには、GetAncestor 関数を使ってください。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc364718.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.MoveWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            指定されたウィンドウの位置とサイズを変更します。
            トップレベルウィンドウ（ 親を持たないウィンドウ）の場合は、画面左上端からの相対位置（ スクリーン座標）で位置とサイズを指定します。
            子ウィンドウの場合は、親ウィンドウのクライアント領域の左上端からの相対位置（ クライアント座標）で指定します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc410924.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindow(System.IntPtr,Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RECT@,System.IntPtr,Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindowFlags)">
            <summary>
            ウィンドウのクライアント領域にある、指定された長方形またはリージョンを更新します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc410559.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindow(System.IntPtr,System.IntPtr,System.IntPtr,Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindowFlags)">
            <summary>
            ウィンドウのクライアント領域にある、指定された長方形またはリージョンを更新します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc410559.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.GetGuiResources(System.IntPtr,System.Int32)">
            <summary>
            指定されたプロセスが使っているグラフィカルユーザーインターフェイス（GUI）オブジェクトのハンドルを返します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc429120.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.GetSystemMetrics(System.Int32)">
            <summary>
            さまざまなシステムメトリックの値（表示要素の幅と高さ）とシステムの現在の構成を取得します。
            表示要素とは、ウィンドウの一部、またはシステムが表示する画面の一部を意味します（詳細については、GetSysColor 関数の説明を参照してください）。
            この関数は、すべてのサイズをピクセル単位で取得します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc429812.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.GetScrollInfo(System.IntPtr,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SCROLLINFO@)">
            <summary>
            スクロール可能な最小位置と最大位置、ページサイズ、スクロールボックス（つまみ）の位置など、スクロールバーのさまざまなパラメータを取得します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc364774.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.PrintWindow(System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
            PrintWindow関数は、ビジュアルウィンドウを指定されたデバイスコンテキスト（DC）、通常はプリンタDCにコピーします。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/windows/desktop/dd162869(v=vs.85).aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RegisterHotKey(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            システムワイド（ システム全体に適用される）のホットキーを定義します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc411006.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.UnregisterHotKey(System.IntPtr,System.Int32)">
            <summary>
            呼び出し側スレッドが既に定義したホットキーを破棄します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc364856.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowLong(System.IntPtr,System.Int32,System.IntPtr)">
            <summary>
            指定されたウィンドウの属性を変更します。拡張ウィンドウメモリ内の指定されたオフセット位置にある long データ（32 ビット値）も設定できます。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc411203.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.CallWindowProc(System.IntPtr,System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            指定されたウィンドウプロシージャに、メッセージ情報を渡します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc410622.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.DefWindowProc(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            既定のウィンドウプロシージャを呼び出して、アプリケーションが処理しないウィンドウメッセージに対して、既定の処理を提供します。
            この関数は、すべてのメッセージが処理されることを保証します。
            DefWindowProc 関数には、既定のウィンドウプロシージャが受け取るのと同じパラメータが渡されます。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc410753.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.GetScrollPos(System.IntPtr,System.Int32)">
            <summary>
            指定したスクロールバーの中のスクロールボックス（つまみ）の現在の位置を取得します。現在の位置とは、現在のスクロール範囲に基づく相対的な値のことです。たとえば、スクロール範囲が 0～100 で、スクロールボックスがスクロールバーの中央に存在する場合、現在の位置は 50 になります。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc364734.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetScrollPos(System.IntPtr,System.Int32,System.Int32,System.Boolean)">
            <summary>
            指定したスクロールバーの中で、スクロールボックス（つまみ）の位置を設定します。
            また、要求に応じて、スクロールボックスの新しい位置を反映するためにスクロールバーを再描画します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc411085.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.MapWindowPoints(System.IntPtr,System.IntPtr,System.Drawing.Point@,System.Int32)">
            <summary>
            複数の点を、あるウィンドウを基準とする座標空間から、他のウィンドウを基準とする座標空間へ変換（マップ）します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc410437.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags">
            <summary>
            ウィンドウのサイズと位置の変更に関するフラグを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags.SWP_ASYNCWINDOWPOS">
            <summary>
            この関数を呼び出したスレッドとウィンドウを所有するスレッドが異なる入力キューに関連付けられている場合、ウィンドウを所有するスレッドへ要求が送られます。
            こうすると、要求を受け取ったスレッドが要求を処理している間も、関数を呼び出したスレッドの実行が止まってしまうことはありません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags.SWP_DEFERERASE">
            <summary>
            WM_SYNCPAINT メッセージが生成されないようにします。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags.SWP_DRAWFRAME">
            <summary>
            ウィンドウを囲む枠（ ウィンドウクラスの記述部分で定義されている）を描画します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags.SWP_FRAMECHANGED">
             <summary>
             SetWindowLong 関数を使って新しいフレームスタイルの設定を適用します。
            
             ウィンドウサイズが変更されない場合にも、ウィンドウに WM_NCCALCSIZE メッセージを送ります。
             このフラグを指定しなかった場合、ウィンドウサイズが変更される場合にしか WM_NCCALCSIZE メッセージは送られません。
             </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags.SWP_HIDEWINDOW">
            <summary>
            ウィンドウを非表示にします。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags.SWP_NOACTIVATE">
            <summary>
            ウィンドウをアクティブ化しません。
            このフラグをセットしなかった場合、ウィンドウはアクティブ化され、最前面ウィンドウまたは非最前面ウィンドウのどちらか（hWndInsertAfter パラメータの設定による）のグループの最上位に移動します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags.SWP_NOCOPYBITS">
            <summary>
            クライアント領域の内容全体を破棄します。
            このフラグをセットしなかった場合は、クライアント領域の有効な内容が保存され、再配置後のウィンドウのクライアント領域にコピーし直されます。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags.SWP_NOMOVE">
            <summary>
            現在の位置を維持します（X パラメータと Y パラメータを無視します）。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags.SWP_NOOWNERZORDER">
            <summary>
            オーナーウィンドウの Z オーダーを変更しません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags.SWP_NOREDRAW">
            <summary>
            変更結果を再描画しません。
            このフラグを指定すると、再描画は一切行われません。このフラグは、クライアント領域、非クライアント領域（ タイトルバーおよびスクロールバーを含む）、および親ウィンドウの、このウィンドウが移動した結果現れた部分のすべてに適用されます。このフラグをセットした場合、ウィンドウや親ウィンドウの再描画の必要な部分は、アプリケーションで明示的に無効化または再描画しなければなりません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags.SWP_NOREPOSITION">
            <summary>
            SWP_NOOWNERZORDER フラグと同じです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags.SWP_NOSENDCHANGING">
            <summary>
            ウィンドウに WM_WINDOWPOSCHANGING メッセージが送られないようにします。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags.SWP_NOSIZE">
            <summary>
            現在のサイズを維持します（cx パラメータと cy パラメータを無視します）。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags.SWP_NOZORDER">
            <summary>
            現在の Z オーダーを維持します（hWndInsertAfter パラメータを無視します）。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SetWindowPosFlags.SWP_SHOWWINDOW">
            <summary>
            ウィンドウを表示します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.BLENDFUNCTION">
            <summary>
            BLENDFUNCTIONの構造は、ソースとデスティネーションビットマップのブレンディング関数を指定することによって、ブレンド制御します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.BLENDFUNCTION.BlendOp">
            <summary>
            ソースブレンド操作。現在、定義されているソースと宛先のブレンド演算は、AC_SRC_OVERのみです。
            詳細については、https://msdn.microsoft.com/ja-jp/library/windows/desktop/dd183393(v=vs.85).aspx の備考を参照してください。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.BLENDFUNCTION.BlendFlags">
            <summary>
            ゼロでなければなりません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.BLENDFUNCTION.SourceConstantAlpha">
            <summary>
            ソースビットマップ全体で使用するアルファ透明度値を指定します。
            SourceConstantAlpha の値は、ソースビットマップ内の任意のピクセル単位のアルファ値と組み合わせられます。
            SourceConstantAlpha を0に設定すると、イメージが透明であるとみなされます。
            ピクセル単位のアルファ値のみを使用する場合は、 SourceConstantAlpha 値を255（不透明）に設定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.BLENDFUNCTION.AlphaFormat">
            <summary>
            このメンバは、ソースビットマップとデスティネーションビットマップの解釈方法を制御します。AlphaFormatの値は次のとおりです。
            <list type="table">
            <listheader> <term>値</term><term>意味</term> </listheader>
            /// <item>
            <term>AC_SRC_ALPHA</term>
            <term>このフラグは、ビットマップにアルファチャンネル（ピクセル単位のアルファ）がある場合に設定されます。
            APIは事前乗算されたアルファを使用します。つまり、ビットマップ内の赤、緑、青のチャンネル値にアルファチャンネルの値を事前に乗算する必要があります。
            たとえば、アルファチャンネルの値がxの場合、赤、緑、青のチャンネルにxを掛けて、コールする前に0xffで割る必要があります。</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ShowWindowCommands">
            <summary>
            ウィンドウの表示方法を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ShowWindowCommands.SW_HIDE">
            <summary>
            ウィンドウを非表示にし、他のウィンドウをアクティブにします。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ShowWindowCommands.SW_SHOWNORMAL">
            <summary>
            ウィンドウをアクティブにして表示します。
            ウィンドウが最小化または最大化されていた場合は、その位置とサイズを元に戻します。初めてウィンドウを表示するときには、このフラグを指定してください。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ShowWindowCommands.SW_NORMAL">
            <summary>
            ウィンドウをアクティブにして表示します。
            ウィンドウが最小化または最大化されていた場合は、その位置とサイズを元に戻します。初めてウィンドウを表示するときには、このフラグを指定してください。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ShowWindowCommands.SW_SHOWMINIMIZED">
            <summary>
            ウィンドウをアクティブにして、最小化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ShowWindowCommands.SW_SHOWMAXIMIZED">
            <summary>
            ウィンドウをアクティブにして、最大化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ShowWindowCommands.SW_MAXIMIZE">
            <summary>
            ウィンドウを最大化します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ShowWindowCommands.SW_SHOWNOACTIVATE">
            <summary>
            ウィンドウを直前の位置とサイズで表示します。
            SW_SHOWNORMAL と似ていますが、この値を指定した場合は、ウィンドウはアクティブ化されません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ShowWindowCommands.SW_SHOW">
            <summary>
            ウィンドウをアクティブにして、現在の位置とサイズで表示します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ShowWindowCommands.SW_MINIMIZE">
            <summary>
            ウィンドウを最小化し、Z オーダーが次のトップレベルウィンドウをアクティブにします。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ShowWindowCommands.SW_SHOWMINNOACTIVE">
            <summary>
            ウィンドウを最小化します。
            SW_SHOWMINIMIZED と似ていますが、この値を指定した場合は、ウィンドウはアクティブ化されません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ShowWindowCommands.SW_SHOWNA">
            <summary>
            ウィンドウを現在のサイズと位置で表示します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ShowWindowCommands.SW_RESTORE">
            <summary>
            ウィンドウをアクティブにして表示します。
            最小化または最大化されていたウィンドウは、元の位置とサイズに戻ります。最小化されているウィンドウを元に戻す場合は、このフラグをセットします。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.WINDOWPOS">
            <summary>
            WINDOWPOS構造体です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.WINDOWPOS.hwnd">
            <summary> ウィンドウを識別します。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.WINDOWPOS.hwndInsertAfter">
            <summary>このウィンドウに配置されるウィンドウを識別します。</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.WINDOWPOS.x">
            <summary> ウィンドウの左端の位置を指定します。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.WINDOWPOS.y">
            <summary> ウィンドウの右端の位置を指定します。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.WINDOWPOS.cx">
            <summary> ピクセルにウィンドウの幅を指定します。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.WINDOWPOS.cy">
            <summary> ピクセルにウィンドウの高さを指定します。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.WINDOWPOS.flags">
            <summary>     オプション ウィンドウを配置することを指定します。このメンバーは、次の値が 1 である可能性があります:
            <list type="table">
            <listheader> <term>値</term><term>意味</term> </listheader>
            <item>
            <term>SWP_DRAWFRAME</term>
            <term>ウィンドウの周囲にフレームを (ウィンドウの説明クラスで定義されている) を描画します。ウィンドウが WM_NCCALCSIZE メッセージを受け取ります。</term>
            </item>
            <item>
            <term>SWP_FRAMECHANGED</term>
            <term>ウィンドウのサイズが変化されていない場合でも、ウィンドウに WM_NCCALCSIZE メッセージを送信します。このフラグが指定されていない場合、WM_NCCALCSIZE メッセージはウィンドウのサイズが実際に変化しているときにだけ送られます。</term>
            </item>
            <item>
            <term>SWP_HIDEWINDOW</term>
            <term>ウィンドウを非表示にします。</term>
            </item>
            <item>
            <term>SWP_NOACTIVATE</term>
            <term>ウィンドウをアクティブにしません。</term>
            </item>
            <item>
            <term>SWP_NOCOPYBITS</term>
            <term>クライアント領域の内容全体を破棄します。このフラグが指定されていない場合、クライアント領域の有効な内容はすべて保存されます。保存された内容は、ウィンドウのサイズや位置が再び変更されたときにクライアント領域に復元されます。</term>
            </item>
            <item>
            <term>SWP_NOMOVE</term>
            <term>現在位置を保持します (x と y のメンバーを無視します)。</term>
            </item>
            <item>
            <term>SWP_NOOWNERZORDER</term>
            <term>オーナー ウィンドウの Z オーダーの位置を変更しません。</term>
            </item>
            <item>
            <term>SWP_NOSIZE</term>
            <term>現在のサイズを保持します (cx と cy のメンバーを無視します)。</term>
            </item>
            <item>
            <term>SWP_NOREDRAW</term>
            <term>変更があっても再描画しません。</term>
            </item>
            <item>
            <term>SWP_NOREPOSITION</term>
            <term>SWP_NOOWNERZORDER と同じです。</term>
            </item>
            <item>
            <term>SWP_NOSENDCHANGING</term>
            <term>ウィンドウが WM_WINDOWPOSCHANGING メッセージを受信しないようにします。</term>
            </item>
            <item>
            <term>SWP_NOZORDER</term>
            <term>現在の順序を保持します (hwndInsertAfter のメンバーを無視します)。</term>
            </item>
            <item>
            <term>SWP_SHOWWINDOW</term>
            <term>ウィンドウを表示します。</term>
            </item>
            </list>
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.PeekMsgOption">
            <summary>
            メッセージの処理方法オプションを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.PeekMsgOption.PM_NOREMOVE">
            <summary>処理後、メッセージをキューから削除しない</summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.PeekMsgOption.PM_REMOVE">
            <summary>処理後、メッセージをキューから削除する</summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.MSG">
            <summary>
            メッセージ構造体です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.MSG.HWnd">
            <summary> ウィンドウハンドルです。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.MSG.Msg">
            <summary> メッセージIDです。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.MSG.WParam">
            <summary> WParamフィールドです。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.MSG.LParam">
            <summary> LParamフィールドです。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.MSG.Time">
            <summary> 時間です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.MSG.Pt">
            <summary> カーソル位置（スクリーン座標）です。 </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.POINTAPI">
            <summary>
            位置情報構造体です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.POINTAPI.#ctor(System.Int32,System.Int32)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.POINTAPI"/>構造体の新しいインスタンスを初期化します。
            </summary>
            <param name="x">x座標</param>
            <param name="y">y座標</param>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.POINTAPI.#ctor(Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.POINTAPI)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.POINTAPI"/>構造体の新しいインスタンスを初期化します。
            </summary>
            <param name="pt">位置情報構造体</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.POINTAPI.x">
            <summary> x座標です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.POINTAPI.y">
            <summary> y座標です。 </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RECT">
            <summary>
            矩形情報構造体です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RECT.#ctor(System.Drawing.Rectangle)">
            <summary>
            <see cref="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RECT"/>構造体の新しいインスタンスを初期化します。
            </summary>
            <param name="rect">矩形情報構造体</param>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RECT.left">
            <summary>
            左位置です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RECT.top">
            <summary>
            上位置です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RECT.right">
            <summary>
            右位置です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RECT.bottom">
            <summary>
            下位置です。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT">
            <summary>
            フォントの属性を定義する構造体です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT.lfHeight">
            <summary>
            文字セルまたは文字の高さです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT.lfWidth">
            <summary>
            平均文字幅です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT.lfEscapement">
            <summary>
            文字送りの方向とX軸との角度です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT.lfOrientation">
            <summary>
            ベースラインとX軸との角度です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT.lfWeight">
            <summary>
            フォントの太さです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT.lfItalic">
            <summary>
            イタリック体指定です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT.lfUnderline">
            <summary>
            下線付き指定です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT.lfStrikeOut">
            <summary>
            打ち消し線付き指定です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT.lfCharSet">
            <summary>
            キャラクタセットです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT.lfOutPrecision">
            <summary>
            出力精度です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT.lfClipPrecision">
            <summary>
            クリッピングの精度です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT.lfQuality">
            <summary>
            出力品質です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT.lfPitchAndFamily">
            <summary>
            ピッチとファミリです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.LOGFONT.lfFaceName">
            <summary>
            フォント名です。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindowFlags">
            <summary>
            再描画フラグを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindowFlags.RDW_INVALIDATE">
            <summary>
            lprcUpdate または hrgnUpdate パラメータで指定した領域を無効化します（NULL 以外の値を指定できるのはどちらか一方だけです）。
            両方とも NULL の場合、クライアント領域全体が無効化されます。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindowFlags.RDW_INTERNALPAINT">
            <summary>
            ウィンドウが無効な領域を持つかどうかにかかわりなく、WM_PAINT メッセージをウィンドウへポストします。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindowFlags.RDW_ERASE">
            <summary>
            ウィンドウの再描画時に、ウィンドウが WM_ERASEBKGND メッセージを受け取ります。RDW_INVALIDATE フラグも同時に指定しなければなりません。
            RDW_INVALIDATE フラグを指定しないと、RDW_ERASE フラグは効果がありません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindowFlags.RDW_VALIDATE">
            <summary>
            lprcUpdate または hrgnUpdate パラメータで指定した長方形またはリージョンを有効化します（NULL 以外の値を指定できるのはどちらか一方だけです）。
            両方とも NULL の場合、ウィンドウ全体が有効になります。
            このフラグは内部の WM_PAINT メッセージに影響を及ぼしません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindowFlags.RDW_NOINTERNALPAINT">
            <summary>
            未処理の内部 WM_PAINT メッセージを抑制します（送信しません）。
            このフラグは、NULL 以外の更新リージョンから送信された WM_PAINT メッセージに影響を及ぼしません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindowFlags.RDW_NOERASE">
            <summary>
            未処理の WM_ERASEBKGND メッセージを抑制します（送信しません）。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindowFlags.RDW_NOCHILDREN">
            <summary>
            子ウィンドウが存在する場合、それらのウィンドウを再描画から除外します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindowFlags.RDW_ALLCHILDREN">
            <summary>
            子ウィンドウが存在する場合、それらのウィンドウを再描画に含めます。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindowFlags.RDW_UPDATENOW">
            <summary>
            必要に応じて、この関数が制御を返す前に、影響を受けたウィンドウ（RDW_ALLCHILDREN フラグまたは RDW_NOCHILDREN フラグを指定されたウィンドウ）へ WM_NCPAINT、WM_ERASEBKGND、WM_PAINT の各メッセージを送信します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindowFlags.RDW_ERASENOW">
            <summary>
            必要に応じて、この関数が制御を返す前に、影響を受けたウィンドウ（RDW_ALLCHILDREN または RDW_NOCHILDREN フラグを指定されたウィンドウ）へ WM_NCPAINT と WM_ERASEBKGND の各メッセージを送信します。
            WM_PAINT メッセージは通常のタイミングで送信されます。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindowFlags.RDW_FRAME">
            <summary>
            更新リージョンと重なる非クライアント領域の各部分が WM_NCPAINT メッセージを受け取ります。RDW_INVALIDATE フラグも同時に指定しなければなりません。RDW_INVALIDATE フラグを指定しないと、RDW_FRAME フラグは効果がありません。
            通常は、RDW_UPDATENOW フラグか RDW_ERASENOW フラグのどちらかを指定しない限り、RedrawWindow を実行する際に WM_NCPAINT メッセージが送信されることはありません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.RedrawWindowFlags.RDW_NOFRAME">
            <summary>
            未処理の WM_NCPAINT メッセージを抑制します（送信しません）。RDW_VALIDATE も同時に指定しなければなりません。
            通常は、RDW_NOCHILDREN と共に使われます。RDW_NOFRAME を使うと、ウィンドウの一部が不適切に描画される可能性があるので、注意が必要です。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics">
            <summary>
            システムメトリックのフラグ定数をまとめたクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXSCREEN">
            <summary>
            プライマリモニタの画面全体の幅を取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYSCREEN">
            <summary>
            プライマリモニタの画面全体の高さを取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXVSCROLL">
            <summary>
            垂直スクロールバーの幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYHSCROLL">
            <summary>
            水平スクロールバーの高さをピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYCAPTION">
            <summary>
            通常のタイトルバーの高さをピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXBORDER">
            <summary>
            立体効果のないウィンドウの境界の幅を取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYBORDER">
            <summary>
            立体効果のないウィンドウの境界の高さを取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXFIXEDFRAME">
            <summary>
            タイトルバーがあり、サイズが変更できないウィンドウの周囲を囲む枠の幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYFIXEDFRAME">
            <summary>
            タイトルバーがあり、サイズが変更できないウィンドウの周囲を囲む枠の高さをピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYVTHUMB">
            <summary>
            垂直スクロールバーのスクロールボックス（つまみ）の高さを取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXHTHUMB">
            <summary>
            水平スクロールバーのスクロールボックス（つまみ）の幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXICON">
            <summary>
            アイコンの既定の幅をピクセル単位で取得します。 
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYICON">
            <summary>
            アイコンの既定の高さをピクセル単位で取得します。 
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXCURSOR">
            <summary>
            カーソル（マウスカーソル）の幅を取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYCURSOR">
            <summary>
            カーソル（マウスカーソル）の高さを取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYMENU">
            <summary>
            1 行分のメニューバーの高さをピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXFULLSCREEN">
            <summary>
            プライマリモニタの最大化ウィンドウのクライアント領域の幅を取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYFULLSCREEN">
            <summary>
            プライマリモニタの最大化ウィンドウのクライアント領域の高さを取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYKANJIWINDOW">
            <summary>
            ダブルバイト文字セット（DBCS）を使うシステムで、画面下の漢字ウィンドウの高さを取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_MOUSEPRESENT">
            <summary>
            マウスが接続されているかどうかを示す値を取得します。
            接続されている場合は 0 以外の値（TRUE）が、接続されていない場合は 0（FALSE）が返ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYVSCROLL">
            <summary>
            垂直スクロールバーの矢印の高さをピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXHSCROLL">
            <summary>
            水平スクロールバーの矢印の幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_DEBUG">
            <summary>
            デバッグ版の User.exe がインストール済みかどうかを示す値を取得します。
            デバッグ版がインストール済みの場合は 0 以外の値（TRUE）が、デバッグ版がインストールされていない場合は 0（FALSE）が返ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_SWAPBUTTON">
            <summary>
            左右のマウスボタンの機能を交換しているかどうかを示す値を取得します。
            交換している場合は 0 以外の値（TRUE）が、交換していない場合は 0（FALSE）が返ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXMIN">
            <summary>
            ウィンドウの最小サイズの幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYMIN">
            <summary>
            ウィンドウの最小サイズの高さをピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXSIZE">
            <summary>
            ウィンドウのタイトルバー内のボタンの幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYSIZE">
            <summary>
            ウィンドウのタイトルバー内のボタンの高さをピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXFRAME">
            <summary>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXSIZEFRAME"/> と同じことを意味します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXSIZEFRAME">
            <summary>
            サイズ変更可能なウィンドウの周囲を囲む枠の幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYFRAME">
            <summary>
            <see cref="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYSIZEFRAME"/> と同じことを意味します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYSIZEFRAME">
            <summary>
            サイズ変更可能なウィンドウの周囲を囲む枠の高さをピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXMINTRACK">
            <summary>
            ウィンドウの最小トラッキングサイズの幅を取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYMINTRACK">
            <summary>
            ウィンドウの最小トラッキングサイズの高さを取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXDOUBLECLK">
            <summary>
            ダブルクリック操作を行う際に、最初のクリックが発生したときのカーソル（マウスカーソル）の位置を基準として、2 回目のクリック位置の許容範囲の幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYDOUBLECLK">
            <summary>
            ダブルクリック操作を行う際に、最初のクリックが発生したときのカーソル（マウスカーソル）の位置を基準として、2 回目のクリック位置の許容範囲の幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXICONSPACING">
            <summary>
            アイコンを整列するときに使われるグリッドのサイズの幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYICONSPACING">
            <summary>
            アイコンを整列するときに使われるグリッドのサイズの高さをピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_MENUDROPALIGNMENT">
            <summary>
            メニューバーの項目に対して、ドロップダウンメニューを右寄せするかどうかを示す値を取得します。
            右寄せする場合は 0 以外の値（TRUE）が、左寄せする場合は 0（FALSE）が返ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_PENWINDOWS">
            <summary>
            Windows for Pen computing extensions がインストールされているかどうかを示す値を取得します。
            インストールされている場合は 0 以外の値（TRUE）が、インストールされていない場合は 0（FALSE）が返ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_DBCSENABLED">
            <summary>
            ダブルバイト文字セット（DBCS）の User.exe がインストール済みかどうかを示す値を取得します。
            インストール済みの場合は 0 以外の値が、インストールされていない場合は 0 が返ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CMOUSEBUTTONS">
            <summary>
            マウスボタンの数（マウスがないときは 0）を取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_SECURE">
            <summary>
            セキュリティが存在するかどうかを示す値を取得します。
            存在する場合は 0 以外の値（TRUE）が、存在しない場合は 0（FALSE）が返ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXEDGE">
            <summary>
            立体効果付きのウィンドウの境界線の幅を取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYEDGE">
            <summary>
            立体効果付きのウィンドウの境界線の高さを取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXMINSPACING">
            <summary>
            最小化ウィンドウの配置に使われるグリッドのサイズの幅を取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYMINSPACING">
            <summary>
            最小化ウィンドウの配置に使われるグリッドのサイズの高さを取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXSMICON">
            <summary>
            小アイコンの推奨サイズの幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYSMICON">
            <summary>
            小アイコンの推奨サイズの高さをピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYSMCAPTION">
            <summary>
            小さなタイトルバーの高さを取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXSMSIZE">
            <summary>
            タイトルバー内の小さいボタンのサイズの幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYSMSIZE">
            <summary>
            タイトルバー内の小さいボタンのサイズの高さをピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXMENUSIZE">
            <summary>
            マルチドキュメントインターフェイス（MDI）の子ウィンドウの「閉じる」ボタンなど、メニューバーに表示されるボタンのサイズの幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYMENUSIZE">
            <summary>
            マルチドキュメントインターフェイス（MDI）の子ウィンドウの「閉じる」ボタンなど、メニューバーに表示されるボタンのサイズの高さをピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_ARRANGE">
            <summary>
            最小化ウィンドウの配置方法を示す値を取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXMINIMIZED">
            <summary>
            最小化ウィンドウの通常のサイズの幅を取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYMINIMIZED">
            <summary>
            最小化ウィンドウの通常のサイズの高さを取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXMAXTRACK">
            <summary>
            タイトルバーがあり、サイズが変更できないウィンドウの既定の最大サイズの幅を取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYMAXTRACK">
            <summary>
            タイトルバーがあり、サイズが変更できないウィンドウの既定の最大サイズの高さを取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXMAXIMIZED">
            <summary>
            プライマリモニタの最大化ウィンドウのサイズの幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYMAXIMIZED">
            <summary>
            プライマリモニタの最大化ウィンドウのサイズの高さをピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_NETWORK">
            <summary>
            ネットワークが存在するかどうかを示す値を取得します。
            存在する場合は最下位ビットが 1 の値が、存在しない場合は最下位ビットが 0 の値が返ります。
            他のビットは将来の使用に備えて予約されています。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CLEANBOOT">
            <summary>
            システムがどのように起動されたかを示す値を取得します。
                0  通常の起動
                1  「Safe モード」での起動
                2  「ネットワークを使った Safe モード」での起動
            
            Safe モードによる起動を行うと、ユーザーのスタートアップファイルは無視されます。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXDRAG">
            <summary>
            ドラッグ操作の開始とは見なされない範囲が既定で設定されていますが、この範囲に相当する長方形の幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYDRAG">
            <summary>
            ドラッグ操作の開始とは見なされない範囲が既定で設定されていますが、この範囲に相当する長方形の高さをピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_SHOWSOUNDS">
            <summary>
            ユーザー補助機能の「サウンド解説を使う」が有効になっているかどうかを調べます。
            有効になっている場合は 0 以外の値（TRUE）が、無効になっている場合は 0 が返ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXMENUCHECK">
            <summary>
            メニューのチェックマークの既定のサイズの幅をピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYMENUCHECK">
            <summary>
            メニューのチェックマークの既定のサイズの高さをピクセル単位で取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_MIDEASTENABLED">
            <summary>
            ヘブライ語やアラビア語（右から左へ表示）が利用可能なシステムかどうかを示す値を取得します。
            利用可能な場合、0 以外の値（TRUE）が返ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_MOUSEWHEELPRESENT">
            <summary>
            ホイール付きのマウスが接続されているかどうかを示す値を取得します。
            接続されている場合は 0 以外の値（TRUE）が、接続されていない場合は 0（FALSE）が返ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_XVIRTUALSCREEN">
            <summary>
            仮想画面の左端の座標を表します。
            仮想画面とは、すべてのモニタを囲む境界長方形のことです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_YVIRTUALSCREEN">
            <summary>
            仮想画面の上端の座標を表します。
            仮想画面とは、すべてのモニタを囲む境界長方形のことです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CXVIRTUALSCREEN">
            <summary>
            仮想画面の幅をピクセル単位で取得します。
            仮想画面とは、すべてのモニタを囲む境界長方形のことです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CYVIRTUALSCREEN">
            <summary>
            仮想画面の高さをピクセル単位で取得します。
            仮想画面とは、すべてのモニタを囲む境界長方形のことです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_CMONITORS">
            <summary>
            デスクトップ上のモニタの数（マルチモニタ）を取得します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_SAMEDISPLAYFORMAT">
            <summary>
            複数のモニタが存在する場合、すべてのモニタが同じカラーフォーマットを使っているかどうかを表す値を取得します。
            すべてのモニタが同じカラーフォーマットを使っている場合、0 以外の値（TRUE）が返ります。
            それ以外の場合、0（FALSE）が返ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SystemMetrics.SM_REMOTESESSION">
            <summary>
            この値は、Terminal Services 環境で使うことを意図しています。
            呼び出し側プロセスが Terminal Services のクライアントセッションに関連付けられている場合は 0 以外の値（TRUE）が返ります。
            呼び出し側プロセスが Terminal Services のコンソールセッションに関連付けられている場合 0（FALSE）が返ります。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SCROLLINFO">
            <summary>
            スクロール情報構造体です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SCROLLINFO.cbSize">
            <summary>
            構造体のサイズです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SCROLLINFO.fMask">
            <summary>
            設定・変更用フラグです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SCROLLINFO.nMin">
            <summary>
            スクロールする最小値です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SCROLLINFO.nMax">
            <summary>
            スクロールする最大値です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SCROLLINFO.nPage">
            <summary>
            ページサイズです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SCROLLINFO.nPos">
            <summary>
            スクロールバーのつまみの現在の位置です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.SCROLLINFO.nTrackPos">
            <summary>
            現在のトラッキング位置です。 SetScrollInfo() は無視します。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ScrollBarDirection">
            <summary>
            スクロールの位置を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ScrollBarDirection.SB_HORZ">
            <summary>
            指定したウィンドウの標準的な水平スクロールバーのパラメータを取得します。hwnd パラメータで、ウィンドウのハンドルを指定しなければなりません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ScrollBarDirection.SB_VERT">
            <summary>
            指定したウィンドウの標準的な垂直スクロールバーのパラメータを取得します。hwnd パラメータで、ウィンドウのハンドルを指定しなければなりません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ScrollBarDirection.SB_CTL">
            <summary>
            スクロールバーコントロールのパラメータを取得します。hwnd パラメータで、スクロールバーコントロールのハンドルを指定しなければなりません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ScrollBarDirection.SB_BOTH">
            <summary>
            SB_VERT と SB_CTLの組み合わせです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ScrollInfoMask">
            <summary>
            スクロール情報の設定・変更用フラグを指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ScrollInfoMask.SIF_RANGE">
            <summary>
            nMin と nMax を設定することを明示します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ScrollInfoMask.SIF_PAGE">
            <summary>
            nPage を設定することを明示します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ScrollInfoMask.SIF_POS">
            <summary>
            nPos を設定することを明示します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ScrollInfoMask.SIF_DISABLENOSCROLL">
            <summary>
            この値はスクロールバーの値をセットする時に限り使われます。
            もし、無効なパラメータが指定されても消去せずに使用不能にします
            SetScrollInfo() 専用です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ScrollInfoMask.SIF_TRACKPOS">
            <summary>
            nTrackPos フィールドにつまみの位置をセットすることを明示します。
            GetScrollInfo() 専用 
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.ScrollInfoMask.SIF_ALL">
            <summary>
            SIF_PAGE、SIF_POS、SIF_RANGE、SIF_TRACKPOS の組み合わせです。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.user32.WndProc">
            <summary>
            ウィンドウプロシージャのデリゲートです。
            </summary>
            <param name="hwnd">ウィンドウハンドル</param>
            <param name="msg">メッセージ</param>
            <param name="wParam">WParam</param>
            <param name="lParam">LParam</param>
            <returns>メッセージ処理結果</returns>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.uxtheme">
            <summary>
            uxtheme.dllの関数を定義するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.uxtheme.DLL_UXTHEME">
            <summary> uxtheme.dll のDLL名を表す定数です。 </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.uxtheme.SetWindowTheme(System.IntPtr,System.String,System.String)">
            <summary>
            ウィンドウに対して、クラスが通常使用するビジュアルスタイル情報とは異なるセットを使用させます。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/windows/desktop/bb759827(v=vs.85).aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.winspool">
            <summary>
            winspool.drvの関数を定義するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.winspool.DRV_WINSPOOL">
            <summary> winspool.drv のDLL名を表す定数です。 </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.winspool.OpenPrinter(System.String,System.IntPtr@,System.IntPtr)">
            <summary>
            指定されたプリンタまたはプリントサーバーを識別するハンドルを取得します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc410486.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.winspool.ClosePrinter(System.IntPtr)">
            <summary>
            特定のプリンタオブジェクトをクローズします。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc428316.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.winspool.DocumentProperties(System.IntPtr,System.IntPtr,System.String,System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            特定のプリンタのプリンタ初期化情報を取得または変更します。また、特定のプリンタのプリンタ設定プロパティシートを表示します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc428447.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg">
            <summary>
            ウインドウメッセージの定数を保持するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_LBUTTONDOWN">
            <summary>
            WM_LBUTTONDOWN メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_LBUTTONUP">
            <summary>
            WM_LBUTTONUP メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_LBUTTONDBLCLK">
            <summary>
            WM_LBUTTONDBLCLK メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_MBUTTONDOWN">
            <summary>
            WM_MBUTTONDOWN メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_RBUTTONDOWN">
            <summary>
            WM_RBUTTONDOWN メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_RBUTTONUP">
            <summary>
            WM_RBUTTONUP メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_RBUTTONDBLCLK">
            <summary>
            WM_RBUTTONDBLCLK メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_MBUTTONDBLCLK">
            <summary>
            WM_MBUTTONDBLCLK メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_MOUSEWHEEL">
            <summary>
            WM_MOUSEWHEEL メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_KEYDOWN">
            <summary>
            WM_KEYDOWN メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_IME_STARTCOMPOSITION">
            <summary>
            WM_IME_STARTCOMPOSITION メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_IME_ENDCOMPOSITION">
            <summary>
            WM_IME_ENDCOMPOSITION メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_IME_COMPOSITION">
            <summary>
            WM_IME_COMPOSITION メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_IME_NOTIFY">
            <summary>
            WM_IME_NOTIFY メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_IME_CHAR">
            <summary>
            WM_IME_CHAR メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_IME_REQUEST">
            <summary>
            WM_IME_REQUEST メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_NOTIFY">
            <summary>
            WM_NOTIFY メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_WINDOWPOSCHANGING">
            <summary>
            WM_WINDOWPOSCHANGING メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_WINDOWPOSCHANGED">
            <summary>
            WM_WINDOWPOSCHANGED メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_NCACTIVATE">
            <summary>
            WM_NCACTIVATE メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_ACTIVATE">
            <summary>
            WM_ACTIVATE メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_NCLBUTTONDOWN">
            <summary>
            WM_NCLBUTTONDOWN メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_NCRBUTTONDOWN">
            <summary>
            WM_NCRBUTTONDOWN メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_SYSKEYDOWN">
            <summary>
            WM_SYSKEYDOWN メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_SETREDRAW">
            <summary>
            WM_SETREDRAW メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.GMEM_ZEROINIT">
            <summary>
            GMEM_ZEROINIT の定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_SYSCOMMAND">
            <summary>
            WM_SYSCOMMAND メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.SC_MOVE">
            <summary>
            SC_MOVE の定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.SC_MASK">
            <summary>
            SC_MASK の定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_HSCROLL">
            <summary>
            WM_HSCROLL メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_VSCROLL">
            <summary>
            WM_VSCROLL メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_USER">
            <summary>
            WM_USER メッセージの定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.WndMsg.WM_REFLECT">
            <summary>
            WM_REFLECT メッセージの定数です。
            </summary>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32">
            <summary>
            wtsapi32.dllの関数を定義するクラスです。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.DLL_WTSAPI32">
            <summary> wtsapi32.dll のDLL名を表す定数です。 </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_CURRENT_SESSION">
            <summary>
            現在のリモート接続セッションを指定する為の定数です。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_CURRENT_SERVER_HANDLE">
            <summary>
            現在のリモートサーバのハンドルを指定する為の定数です。
            </summary>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTSQuerySessionInformation(System.IntPtr,System.Int32,Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS,System.IntPtr@,System.Int32@)">
            <summary>
            指定したターミナルサーバー上の、指定したセッションの情報を取得します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc429625.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="M:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTSFreeMemory(System.IntPtr)">
            <summary>
            ターミナルサービス関数で確保したメモリを解放します。
            </summary>
            <remarks>
            Win32APIのメソッドのインポートです。
            詳細は <a href="https://msdn.microsoft.com/ja-jp/library/cc429617.aspx">MSDNライブラリ</a> を参照してください。
            </remarks>
        </member>
        <member name="T:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS">
            <summary>
            WTSQuerySessionInformation 関数の呼出によってセッションから取得する情報の種類を指定します。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSInitialProgram">
            <summary>
            ユーザーのログオン時にターミナルサービスが実行する初期プログラムの名前を表す、null で終わる文字列へのポインタを受け取ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSApplicationName">
            <summary>
            セッションが実行しているアプリケーションの公開名を表す、null で終わる文字列へのポインタを受け取ります。
            関数をターミナルサービスコンソールから呼び出すと、null ポインタを受け取ります。
            
            Windowsの一部のVersionでは、この値はサポートされていません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSWorkingDirectory">
            <summary>
            初期プログラムの起動時に使う既定のディレクトリを表す、null で終わる文字列へのポインタを受け取ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSOEMId">
            <summary>
            この値は使用されません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSSessionId">
            <summary>
            セッション識別子が入った ulong へのポインタを受け取ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSUserName">
            <summary>
            セッションに関連付けられたユーザーの名前を表す null で終わる文字列へのポインタを受け取ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSWinStationName">
            <summary>
            指定したセッションの名前を表す null で終わる文字列へのポインタを受け取ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSDomainName">
            <summary>
            ログオンしたユーザーのドメイン名を表す null で終わる文字列へのポインタを受け取ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSConnectState">
            <summary>
            セッションの現在の接続状態を示す 列挙型の値が入った int へのポインタを受け取ります。
            
            WTS_CONNECTSTATE_CLASS で検索！
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSClientBuildNumber">
            <summary>
            ushort へのポインタを受け取ります。
            関数をターミナルサービスコンソールから呼び出すと、null ポインタを受け取ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSClientName">
            <summary>
            クライアントの名前を表す null で終わる文字列へのポインタを受け取ります。
            関数をターミナルサービスコンソールから呼び出すと、null ポインタを受け取ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSClientDirectory">
            <summary>
            クライアントがインストールされているディレクトリを表す null で終わる文字列へのポインタを受け取ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSClientProductId">
            <summary>
            クライアント独自の製品識別子が入った ushort へのポインタを受け取ります。
            関数をターミナルサービスコンソールから呼び出すと、null ポインタを受け取ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSClientHardwareId">
            <summary>
            クライアント独自のハードウェア識別子が入った ushort へのポインタを受け取ります。
            関数をターミナルサービスコンソールから呼び出すと、null ポインタを受け取ります。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSClientAddress">
            <summary>
            クライアントのネットワークの種類とネットワークアドレスが入った 構造体へのポインタを受け取ります。
            関数をターミナルサービスコンソールから呼び出すと、null ポインタを受け取ります。
            
            WTS_CLIENT_ADDRESS で検索！
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSClientDisplay">
            <summary>
            クライアントのディスプレイに関する情報が入った 構造体へのポインタを受け取ります。
            関数をターミナルサービスコンソールから呼び出すと、null ポインタを受け取ります。
            
            WTS_CLIENT_DISPLAY で検索！
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSClientProtocolType">
            <summary>
            セッションのプロトコルタイプの識別子が入った ushort へのポインタを受け取ります。
            
            0:コンソールセッション
            1:互換性保持のための値
            2:RDPプロトコル
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSIdleTime">
            <summary>
            この値は使用できません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSLogonTime">
            <summary>
            この値は使用できません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSIncomingBytes">
            <summary>
            この値は使用できません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSOutgoingBytes">
            <summary>
            この値は使用できません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSIncomingFrames">
            <summary>
            この値は使用できません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSOutgoingFrames">
            <summary>
            この値は使用できません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSClientInfo">
            <summary>
            Remote Desktop Connection (RDC) クライアントについての情報が入った 構造体へのポインタを受け取ります。
            
            WTSCLIENT で検索！
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSSessionInfo">
            <summary>
            RD セッションホストサーバ上でのクライアントセッション についての情報が入った 構造体へのポインタを受け取ります。
            
            WTSINFO で検索！
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSSessionInfoEx">
            <summary>
            RD セッションホストサーバ上でのクライアントセッション についての拡張情報が入った 構造体へのポインタを受け取ります。
            
            Windowsの一部のVersionでは、この値はサポートされていません。
            WTSINFOEX で検索！
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSConfigInfo">
            <summary>
            RD セッションホストサーバの設定情報が入った 構造体へのポインタを受け取ります。
            
            Windowsの一部のVersionでは、この値はサポートされていません。
            WTSCONFIGINFO で検索！
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSValidationInfo">
            <summary>
            この値はサポートされていません。
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSSessionAddressV4">
            <summary>
            セッションに関連付けられた IPv4 アドレスが入った 構造体へのポインタを受け取ります。
            
            Windowsの一部のVersionでは、この値はサポートされていません。
            WTS_SESSION_ADDRESS で検索！
            </summary>
        </member>
        <member name="F:Ill.Incorporated.Aladdinoffice.Framework.WinApi.wtsapi32.WTS_INFO_CLASS.WTSIsRemoteSession">
            <summary>
            現在のセッションがリモートセッションかどうかを返します。
            現在のセッションがリモートセッションの場合、WTSQuerySessionInformation 関数は true を、ローカルセッションの場合は false を返します。
            
            Windowsの一部のVersionでは、この値はサポートされていません。
            </summary>
        </member>
    </members>
</doc>
