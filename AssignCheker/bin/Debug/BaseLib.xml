<?xml version="1.0"?>
<doc>
<assembly>
<name>
BaseLib
</name>
</assembly>
<members>
<member name="P:ILL.ERF.BaseLib.IExport.AsmName">
	<summary>アセンブリ名</summary> ''' 

</member><member name="P:ILL.ERF.BaseLib.IExport.FormCheck">
	<summary>FormCheck</summary> ''' 

</member><member name="P:ILL.ERF.BaseLib.IExport.ViewNo">
	<summary>ビューNO</summary> ''' 

</member><member name="P:ILL.ERF.BaseLib.IExport.ViewName">
	<summary>ビュー名称</summary> ''' 

</member><member name="P:ILL.ERF.BaseLib.IExport.DefineID">
	<summary>定義ID</summary> ''' 

</member><member name="P:ILL.ERF.BaseLib.IExport.DefineName">
	<summary>定義名</summary> ''' 

</member><member name="P:ILL.ERF.BaseLib.IExport.FormTitle">
	<summary>フォームタイトル</summary> ''' 

</member><member name="M:ILL.ERF.BaseLib.IExport.GetViewName">
	<summary>ビュー名称の取得</summary> ''' 

</member><member name="M:ILL.ERF.BaseLib.IExport.GetSqlData">
	<summary>ビュー情報の取得</summary>
</member><member name="M:ILL.ERF.BaseLib.IExport.GetTableFieldes(System.String)">
	<summary>ビューの各フィールドの構造を取得</summary>
</member><member name="M:ILL.ERF.BaseLib.IExport.GetInputType(ILL.ERF.BaseLib.EXPMGR.ViewInfo)">
	<summary>フィールドのタイプから入力タイプを取得</summary>
</member><member name="M:ILL.ERF.BaseLib.IExport.GetInputType(System.String)">
	<summary>項目名で入力タイプを取得</summary>
</member><member name="M:ILL.ERF.BaseLib.IExport.GetUserType(System.String)">
	<summary>項目名でユーザタイプを取得</summary>
</member><member name="M:ILL.ERF.BaseLib.IExport.GetImeMode(ILL.ERF.BaseLib.EXPMGR.ViewInfo)">
	<summary>フィールドのタイプからIMEの設定を取得</summary>
</member><member name="M:ILL.ERF.BaseLib.IExport.GetImeMode(System.String)">
	<summary>項目名でIMEの設定を取得</summary>
</member><member name="M:ILL.ERF.BaseLib.IExport.GetViewInfo(System.String)">
	<summary>項目名でビュー情報を取得</summary>
</member><member name="M:ILL.ERF.BaseLib.IExport.GetFormTitle">
	<summary>メニューマスタからフォームタイトルを取得</summary>
</member><member name="P:ILL.ERF.BaseLib.IExport.Data">
	<summary>データベースマネージャ</summary> ''' 

</member><member name="P:ILL.ERF.BaseLib.IExport.Query">
	<summary>SQL</summary>
</member><member name="P:ILL.ERF.BaseLib.IExport.QuerySelect">
	<summary>SELECT句</summary>
</member><member name="P:ILL.ERF.BaseLib.IExport.QueryFrom">
	<summary>FROM句</summary>
</member><member name="P:ILL.ERF.BaseLib.IExport.QueryWhere">
	<summary>WHERE句</summary>
</member><member name="P:ILL.ERF.BaseLib.IExport.QueryOrder">
	<summary>ORDER句</summary>
</member><member name="P:ILL.ERF.BaseLib.IExport.Result">
	<summary>取得結果</summary>
</member><member name="P:ILL.ERF.BaseLib.IExport.FieldNames">
	<summary>フィールド情報オブジェクト</summary>
</member><member name="P:ILL.ERF.BaseLib.IExport.ErrorString">
	<summary>エラーメッセージ</summary>
</member><member name="P:ILL.ERF.BaseLib.IExport.Sort">
	<summary>ソート情報</summary>
</member><member name="M:ILL.ERF.BaseLib.IExport.BuildQueryParts">
	<summary>SQLの各句の作成</summary>
</member><member name="M:ILL.ERF.BaseLib.IExport.BuildSQL">
	<summary>SQL文の作成</summary>
</member><member name="M:ILL.ERF.BaseLib.IExport.GetData">
	<summary>ビューデータの取得</summary>
</member><member name="P:ILL.ERF.BaseLib.IFDBDY.Sort">
	<summary>ソート情報</summary>
</member><member name="P:ILL.ERF.BaseLib.IFDBDY.ReturnColumnName">
	<summary>検索の戻り値の列名</summary>
</member><member name="P:ILL.ERF.BaseLib.IFDBDY.ReturnColumnNames">
	<summary>検索の戻り値の列名(コレクション)</summary>
</member><member name="P:ILL.ERF.BaseLib.IFDBDY.RowCount">
	<summary>グリッドに表示する行数</summary>
</member><member name="P:ILL.ERF.BaseLib.IFDBDY.GridInfo">
	<summary>グリッドに列順・列幅を格納したテーブル</summary>
</member><member name="P:ILL.ERF.BaseLib.IFDBDY.RememberArrangement">
	<summary>配置を保存するかどうか</summary>
</member><member name="M:ILL.ERF.BaseLib.IFDBDY.ShowData(System.Object,System.String@)">
	<summary>グリッドにデータを表示する</summary>
	<param name="obj">表示するデータのオブジェクト</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.IFDBDY.SetUpsideDown(System.Object)">
	<summary>前頁の時にデータを逆順にセットしなおす</summary>
	<param name="obj">グリッドに関連付けられたデータオブジェクト</param>
</member><member name="M:ILL.ERF.BaseLib.IFDBDY.PrevPage">
	<summary>前頁</summary>
</member><member name="M:ILL.ERF.BaseLib.IFDBDY.NextPage">
	<summary>次頁</summary>
</member><member name="M:ILL.ERF.BaseLib.IFDBDY.SetFocus">
	<summary>フォーカスを当てる</summary>
</member><member name="M:ILL.ERF.BaseLib.IFDBDY.SetFocus_LastRow">
	<summary>フォーカスを当てる（最終行指定）</summary>
</member><member name="M:ILL.ERF.BaseLib.IFDBDY.ReturnValue">
	<summary>値を戻す</summary>
</member><member name="E:ILL.ERF.BaseLib.IFDBDY.GetResult">
	<summary>データ取得イベント</summary>
</member><member name="E:ILL.ERF.BaseLib.IFDBDY.ReGetData_ChangeSort">
	<summary>ソート変更イベント</summary>
</member><member name="E:ILL.ERF.BaseLib.IFDBDY.ReGetData_NextPage">
	<summary>次頁イベント</summary>
</member><member name="E:ILL.ERF.BaseLib.IFDBDY.ReGetData_PrevPage">
	<summary>前頁イベント</summary>
</member><member name="E:ILL.ERF.BaseLib.IFDBDY.Focus">
	<summary>フォーカスイベント</summary>
</member><member name="T:ILL.ERF.BaseLib.IFDBDY">
	<summary>検索ボディ用インターフェイス</summary>
</member><member name="P:ILL.ERF.BaseLib.INIMGR.IniData">
	<summary>
 INIデータを格納しているDictionary
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.INIMGR.LoadIniFile">
	<summary>
 Iniファイルの読み込み
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.INIMGR.LoadIniFile(System.String)">
	<summary>
 ファイルのPathを指定してのINIファイル読み込み
 </summary>
	<param name="FileName">Path</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.INIMGR.GetIniValue(System.String,System.String)">
	<summary>
 INIデータの取得
 </summary>
	<param name="Section">セクション</param>
	<param name="Key">キー</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.INIMGR.SetIniValue(System.String,System.String,System.String)">
	<summary>
 INIデータの置き換え
 </summary>
	<param name="Section">セクション</param>
	<param name="Key">キー</param>
	<param name="Value">値</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.INIMGR.GetIniValue(System.Collections.Specialized.ListDictionary,System.String,System.String)">
	<summary>
 INIデータの取得
 </summary>
	<param name="ini">INIオブジェクト</param>
	<param name="Key">キー</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.INIMGR.IsExistsSection(System.String)">
	<summary>
 Sectionの存在確認
 </summary>
	<param name="SectionName">セクション名</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.INIMGR.SetLastYENMark(System.String)">
	<summary>
 フォルダ名など最後の\がついてるついてないを吸収する用
 </summary>
	<param name="Path">パス</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.INIMGR">
	<summary>
 INI情報管理クラス
 </summary>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.TAGMGR.TAGItem">
	<summary>付箋設定の単位</summary>
</member><member name="M:ILL.ERF.BaseLib.TAGMGR.LoadTAGMT(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.BIZMST.ManagementType,System.String@)">
	<summary>付箋区分マスタの読み込み</summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="Type">販売/購買</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.TAGMGR.GetText(System.Int32)">
	<summary>付箋区分名の取得</summary>
	<param name="Index">付箋区分</param>
</member><member name="M:ILL.ERF.BaseLib.TAGMGR.GetColor(System.Int32)">
	<summary>付箋色の取得</summary>
	<param name="Index">付箋区分</param>
</member><member name="P:ILL.ERF.BaseLib.TAGMGR.Type">
	<summary>販売/購買</summary>
</member><member name="P:ILL.ERF.BaseLib.TAGMGR.Colors">
	<summary>付箋設定のコレクション</summary>
</member><member name="T:ILL.ERF.BaseLib.TAGMGR">
	<summary>付箋情報管理クラス</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.MenuType.Hanbai">
	<summary>販売</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.MenuType.Koubai">
	<summary>購買</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.MenuType.Zaiko">
	<summary>在庫</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.MenuType.Master">
	<summary>マスタ</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.MenuType.System">
	<summary>システム</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.MenuType.Kensaku">
	<summary>検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.MenuType.CRM">
	<summary>対応履歴</summary>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.MenuType">
	<summary>Menu第1階層</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.MenuTypeInfo.GetLabelBackColor(ILL.ERF.BaseLib.TYPMGR.MenuType)">
	<summary>項目ラベル背景色の取得</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.MenuTypeInfo.GetLabelForeColor(ILL.ERF.BaseLib.TYPMGR.MenuType)">
	<summary>項目ラベル文字色の取得</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.HINType.SHOHIN">
	<summary>商品</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.HINType.SEIHIN">
	<summary>製品</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.HINType.SHOHIN_BUHIN">
	<summary>商品・部品</summary>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.HINType">
	<summary>商品のタイプ</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.CodeType.TOKUISAKI">
	<summary>得意先コード</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.CodeType.SIIRESAKI">
	<summary>仕入先コード</summary>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.CodeType">
	<summary>絞込みフィールド設定</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.DoujiType.On">
	<summary>同時のみ</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.DoujiType.Off">
	<summary>同時なし</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.DoujiType.None">
	<summary>制限なし</summary>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.DoujiType">
	<summary>伝票明細検索(同時区分種別)</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.PageType.PrevPage">
	<summary>前頁</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.PageType.CurrentPage">
	<summary>通常</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.PageType.NextPage">
	<summary>次頁</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.PageType.OnLoad">
	<summary>起動時</summary>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.PageType">
	<summary>通常/前頁/次頁のフラグ</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.CheckDenType.Delete">
	<summary>削除、CheckDenでは使用されない</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.CheckDenType.DeleteInTransaction">
	<summary>削除のトランザクション開始時（CheckDenでは使用されない）</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.CheckDenType.GetDen">
	<summary>呼出</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.CheckDenType.UpdateDen">
	<summary>登録</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.CheckDenType.UpdateDenInTransaction">
	<summary>登録のトランザクション開始時（CheckDenでは使用されない）</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.CheckDenType.GetDenHik">
	<summary>引当</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.CheckDenType.GetDenHikAfter">
	<summary>引当後再計算など（CheckDenでは使用されない）</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.CheckDenType.RepeatDen">
	<summary>リピート</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.CheckDenType.RepeatDenAfter">
	<summary>リピート後再計算など（CheckDenでは使用されない）</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.CheckDenType.MasterChange">
	<summary>マスタ変更チェック後</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.CheckDenType.CustomDen1">
	<summary>カスタム1</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.CheckDenType.CustomDen2">
	<summary>カスタム2</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindGen.InitialCode">
	<summary>コード初期値</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindGen.#ctor(System.String)">
	<summary>インスタンス作成</summary>
	<param name="lInitialCode">コード初期値</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindGen">
	<summary>汎用検索</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindKana.#ctor(System.String)">
	<summary>インスタンス作成</summary>
	<param name="lInitialCode">コード初期値</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindKana">
	<summary>汎用検索カナ</summary>
	<remarks>内容はtypeBasicFormFindGenと同じ</remarks>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.DENDT">
	<summary>伝票日付</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.DENNO">
	<summary>伝票No</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.TANCD">
	<summary>担当者コード</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.TRICD">
	<summary>取引先コード</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.AiteNo">
	<summary>相手先NO</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.DoujiKbn">
	<summary>同時区分</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.DigitSu">
	<summary>数量小数桁</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.GdsKanKbn">
	<summary>入出荷完了区分（モノ）</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.MnyKanKbn">
	<summary>売上仕入完了区分（カネ）</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.SubCode">
	<summary>特殊条件コード</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.KeijoKbn">
	<summary>計上区分</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.Sort">
	<summary>初期ソート</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.DenType">
	<summary>伝票種別</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.Pattern">
	<summary>その他条件を設定する際に使用する</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,System.String,System.String)">
	<summary>
 インスタンス作成(引当受注伝票検索用）
 </summary>
	<param name="lDENDT">伝票日付</param>
	<param name="lDENNO">伝票No</param>
	<param name="lTANCD">担当者コード</param>
	<param name="lTRICD">取引先コード</param>
	<param name="lAiteNo">相手先NO</param>
	<param name="lDoujiKbn">同時計上を使用しているか</param>
	<param name="lDigitSu">合計数量の小数桁数</param>
	<param name="lGdsKanKbn">
 入出荷完了伝票を表示する（受注：出荷完了伝票、発注：入荷完了伝票、見積：見積完了伝票 その他伝票は必ずtrue）
 引当時の検索ではここに完了区分を設定してください。
 </param>
	<param name="lMnyKanKbn">売仕完了伝票を表示する（受注：売上完了伝票、発注：仕入完了伝票 その他伝票は必ずtrue）</param>
	<param name="lSubCode">特殊条件（値）</param>
	<param name="lKeijoKbn">計上区分</param>
	<param name="lSort">初期ソート（True:昇順）</param>
	<param name="lDenType">伝票種別（売上:SAIKB.URI, 売掛/出荷:SAIKB.DLV）</param>
	<param name="lPattern">その他条件を設定する際に使用する</param>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,System.String)">
	<summary>
 インスタンス作成(引当受注伝票検索用）
 </summary>
	<param name="lDENDT">伝票日付</param>
	<param name="lDENNO">伝票No</param>
	<param name="lTANCD">担当者コード</param>
	<param name="lTRICD">取引先コード</param>
	<param name="lAiteNo">相手先NO</param>
	<param name="lDoujiKbn">同時計上を使用しているか</param>
	<param name="lDigitSu">合計数量の小数桁数</param>
	<param name="lGdsKanKbn">
 入出荷完了伝票を表示する（受注：出荷完了伝票、発注：入荷完了伝票、見積：見積完了伝票 その他伝票は必ずtrue）
 引当時の検索ではここに完了区分を設定してください。
 </param>
	<param name="lMnyKanKbn">売仕完了伝票を表示する（受注：売上完了伝票、発注：仕入完了伝票 その他伝票は必ずtrue）</param>
	<param name="lSubCode">特殊条件（値）</param>
	<param name="lKeijoKbn">計上区分</param>
	<param name="lSort">初期ソート（True:昇順）</param>
	<param name="lDenType">伝票種別（売上:SAIKB.URI, 売掛/出荷:SAIKB.DLV）</param>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.String,System.String,System.Boolean)">
	<summary>
 インスタンス作成
 </summary>
	<param name="lDENDT">伝票日付</param>
	<param name="lDENNO">伝票No</param>
	<param name="lTANCD">担当者コード</param>
	<param name="lTRICD">取引先コード</param>
	<param name="lAiteNo">相手先NO</param>
	<param name="lDoujiKbn">同時計上を使用しているか</param>
	<param name="lDigitSu">合計数量の小数桁数</param>
	<param name="lGdsKanKbn">
 入出荷完了伝票を表示する（受注：出荷完了伝票、発注：入荷完了伝票、見積：見積完了伝票 その他伝票は必ずtrue）
 引当時の検索ではここに完了区分を設定してください。
 </param>
	<param name="lMnyKanKbn">売仕完了伝票を表示する（受注：売上完了伝票、発注：仕入完了伝票 その他伝票は必ずtrue）</param>
	<param name="lSubCode">特殊条件（値）</param>
	<param name="lKeijoKbn">計上区分</param>
	<param name="lSort">初期ソート（True:昇順）</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindDen">
	<summary>伝票検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDHN0010.MenuType">
	<summary>販売/購買(単価取得用)</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDHN0010.InitialCode">
	<summary>コード初期値(商品コード)</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDHN0010.TRICD">
	<summary>得意先/仕入先コード(単価取得用)</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDHN0010.HinType">
	<summary>商品/製品/部品</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDHN0010.DelKbn">
	<summary>True:削除区分を採用</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDHN0010.ZaikoKbn">
	<summary>在庫管理区分=0で絞り込むかどうか</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDHN0010.ExcludeDefaultHincd">
	<summary>デフォルト商品コードを除外するかどうか</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDHN0010.#ctor(ILL.ERF.BaseLib.TYPMGR.MenuType,System.String,System.String,ILL.ERF.BaseLib.TYPMGR.HINType,System.Boolean,System.Boolean,System.Boolean)">
	<summary>インスタンス作成</summary>
	<param name="ArgMenuType">販売/購買(単価取得用)</param>
	<param name="ArgHINCD">コード初期値(商品コード)</param>
	<param name="ArgTRICD">得意先/仕入先コード(単価取得用)</param>
	<param name="ArgHinType">商品/製品/部品</param>
	<param name="ArgDelKbn">True:削除区分を有効にする</param>
	<param name="ArgZaiKbn">在庫管理区分=0で絞り込むかどうか</param>
	<param name="ArgExcludeDefHincd">デフォルト商品コードを除外するかどうか</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeFDHN0010">
	<summary>商品マスタ検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDTR0010.MasterName">
	<summary>得意先/仕入先</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDTR0010.DelKbn">
	<summary>True:削除区分を採用</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDTR0010.SeikyuOnly">
	<summary>True:請求先のみ</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDTR0010.ShiharaiOnly">
	<summary>True:支払先のみ</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDTR0010.HikiateOnly">
	<summary>True:入金引当採用のコードのみ（得意先のみ)</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDTR0010.InitialCode">
	<summary>コード初期値</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDTR0010.#ctor(System.Boolean,System.Boolean,System.Boolean,System.String)">
	<summary>インスタンス作成（得意先用）</summary>
	<param name="ArgDelKbn">True:削除区分を有効にする</param>
	<param name="ArgSeikyuOnly">True:請求先のみ</param>
	<param name="ArgHikiateOnly">True:入金引当採用のコードのみ（得意先のみ)</param>
	<param name="ArgInitialCode">コード初期値</param>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDTR0010.#ctor(System.Boolean,System.Boolean,System.String)">
	<summary>インスタンス作成（仕入先用）</summary>
	<param name="ArgDelKbn">True:削除区分を有効にする</param>
	<param name="ArgShiharaiOnly">True:支払先のみ</param>
	<param name="ArgInitialCode">コード初期値</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeFDTR0010">
	<summary>得意先/仕入先検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDNH0010.DelKbn">
	<summary>True:削除区分を採用</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDNH0010.InitialCode">
	<summary>納品先コード初期値</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDNH0010.TRICD">
	<summary>取引先コード絞込み</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDNH0010.CodeType">
	<summary>コード種別</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDNH0010.#ctor(System.Boolean,System.String)">
	<summary>インスタンス作成</summary>
	<param name="ArgDelKbn">True:削除区分を採用</param>
	<param name="ArgInitialCode">納品先コード初期値</param>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDNH0010.#ctor(System.Boolean,System.String,System.String,ILL.ERF.BaseLib.TYPMGR.CodeType)">
	<summary>インスタンス作成</summary>
	<param name="ArgDelKbn">True:削除区分を採用</param>
	<param name="ArgInitialCode">納品先コード引数</param>
	<param name="ArgTRICD">取引先コード絞込み</param>
	<param name="ArgCodeType">コード種別</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeFDNH0010">
	<summary>納品先マスタ検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDTK0010.KbnName">
	<summary>区分ファイル名</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDTK0010.KeiKbn">
	<summary>計上区分</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDTK0010.InitialCode">
	<summary>コード初期値</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDTK0010.#ctor(System.String,System.String)">
	<summary>入金・支払区分用</summary>
	<param name="ArgKbnName">区分名</param>
	<param name="ArgInitialCode">コード引数</param>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDTK0010.#ctor(System.String,System.String,System.String)">
	<summary>売上・仕入・入出庫区分用</summary>
	<param name="ArgKbnName">区分ファイル名</param>
	<param name="ArgInitialCode">コード引数</param>
	<param name="ArgKeiKbn">計上区分 "0"か"1"を指定する</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeFDTK0010">
	<summary>区分ファイル検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDDS0010.DenSbKbn">
	<summary>伝票種別区分</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDDS0010.InitialCode">
	<summary>コード初期値</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDDS0010.#ctor(System.String,System.String)">
	<summary>インスタンス作成</summary>
	<param name="ArgDenSbKbn">伝票種別区分</param>
	<param name="ArgInitialCode">コード引数</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeFDDS0010">
	<summary>伝票種別検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDJD0010.DenType">
	<summary>伝票の種類 受注出荷/受注売上/受注売掛</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDJD0010.DoujiType">
	<summary>同時区分</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDJD0010.JDNNO">
	<summary>受注NO</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDJD0010.TOKCD">
	<summary>得意先コード</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDJD0010.NHSCD">
	<summary>納品先コード</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDJD0010.HINCD">
	<summary>商品コード</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDJD0010.SOUCD">
	<summary>倉庫コード</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDJD0010.Incomplete">
	<summary>未完分出力</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDJD0010.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
	<summary>インスタンス作成</summary>
	<param name="ArgDenType">伝票の種類 受注出荷/受注売上/受注売掛</param>
	<param name="ArgJDNNO">受注NO</param>
	<param name="ArgTOKCD">得意先コード</param>
	<param name="ArgNHSCD">納品先コード</param>
	<param name="ArgHINCD">商品コード</param>
	<param name="ArgIncomplete">True:未完分出力, False:制限なし</param>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDJD0010.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,ILL.ERF.BaseLib.TYPMGR.DoujiType)">
	<summary>インスタンス作成</summary>
	<param name="ArgDenType">伝票の種類 受注出荷/受注売上/受注売掛</param>
	<param name="ArgJDNNO">受注NO</param>
	<param name="ArgTOKCD">得意先コード</param>
	<param name="ArgNHSCD">納品先コード</param>
	<param name="ArgHINCD">商品コード</param>
	<param name="ArgIncomplete">True:未完分出力, False:制限なし</param>
	<param name="ArgDoujiType">同時区分,On:同時のみ,Off:同時なし,None:制限なし</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDJD0010.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,ILL.ERF.BaseLib.TYPMGR.DoujiType)">
	<summary>インスタンス作成</summary>
	<param name="ArgDenType">伝票の種類 受注出荷/受注売上/受注売掛</param>
	<param name="ArgJDNNO">受注NO</param>
	<param name="ArgTOKCD">得意先コード</param>
	<param name="ArgNHSCD">納品先コード</param>
	<param name="ArgHINCD">商品コード</param>
	<param name="ArgSOUCD">倉庫コード</param>
	<param name="ArgIncomplete">True:未完分出力, False:制限なし</param>
	<param name="ArgDoujiType">同時区分,On:同時のみ,Off:同時なし,None:制限なし</param>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeFDJD0010">
	<summary>受注明細検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDHD0010.DenType">
	<summary>伝票の種類 発注出荷/発注売上</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDHD0010.DoujiType">
	<summary>同時区分</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDHD0010.HDNNO">
	<summary>発注NO</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDHD0010.SIRCD">
	<summary>仕入先コード</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDHD0010.NHSCD">
	<summary>納品先コード</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDHD0010.HINCD">
	<summary>商品コード</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDHD0010.Incomplete">
	<summary>未完分出力</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDHD0010.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
	<summary>インスタンス作成</summary>
	<param name="ArgDenType">伝票の種類 発注入荷/発注仕入</param>
	<param name="ArgHDNNO">発注NO</param>
	<param name="ArgSIRCD">仕入先コード</param>
	<param name="ArgNHSCD">納品先コード</param>
	<param name="ArgHINCD">商品コード</param>
	<param name="ArgIncomplete">True:未完分出力, False:制限なし</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDHD0010.#ctor(System.String,System.String,System.String,System.String,System.String,System.Boolean,ILL.ERF.BaseLib.TYPMGR.DoujiType)">
	<summary>インスタンス作成</summary>
	<param name="ArgDenType">伝票の種類 発注入荷/発注仕入</param>
	<param name="ArgHDNNO">発注NO</param>
	<param name="ArgSIRCD">仕入先コード</param>
	<param name="ArgNHSCD">納品先コード</param>
	<param name="ArgHINCD">商品コード</param>
	<param name="ArgIncomplete">True:未完分出力, False:制限なし</param>
	<param name="ArgDoujiType">同時区分,On:同時のみ,Off:同時なし,None:制限なし</param>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDTH0010.MenuType">
	<summary>販売/購買(単価取得用)</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDTH0010.TRICD">
	<summary>得意/仕入先コード</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDTH0010.HINCD">
	<summary>商品コード</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDTH0010.#ctor(ILL.ERF.BaseLib.TYPMGR.MenuType,System.String,System.String)">
	<summary>インスタンス作成</summary>
	<param name="ArgMenuType">販売/購買</param>
	<param name="ArgTRICD">得意/仕入先コード</param>
	<param name="ArgHINCD">商品コード</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeFDTH0010">
	<summary>単価履歴検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDBL.Type">
	<summary>販売/購買</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDBL.TAICode">
	<summary>対象コード</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDBL.TAIDT">
	<summary>対象日付</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDBL.#ctor(ILL.ERF.BaseLib.BIZMST.ManagementType,System.String,System.String)">
	<summary>インスタンス作成</summary>
	<param name="lType">販売/購買</param>
	<param name="lTAICode">対象コード</param>
	<param name="lTAIDT">対象日付</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeFDBL">
	<summary>残金額検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDRK0010.HinCode">
	<summary>商品コード</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDRK0010.#ctor(System.String)">
	<summary>インスタンス作成</summary>
	<param name="lHinCode">商品コード</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeFDRK0010">
	<summary>ランク単価検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDZS0010.HinCode">
	<summary>商品コード</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDZS0010.SouCode">
	<summary>倉庫コード</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDZS0010.#ctor(System.String,System.String)">
	<summary>インスタンス作成</summary>
	<param name="hinCode">商品コード</param>
	<param name="souCode">倉庫コード</param>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDZS0010.#ctor(System.String)">
	<summary>インスタンス作成</summary>
	<param name="hinCode">商品コード</param>
	<remarks>倉庫コード非採用時用（倉庫コードがNothingで入ります）</remarks>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeFDZS0010">
	<summary>在庫数量検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDRP0010.Rptkb">
	<summary>"0":販売 "1":購買</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDRP0010.Rptcd">
	<summary>帳票コード</summary>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeFDRP0010">
	<summary>汎用実績表の帳票コード検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindGenOut.ViewNo">
	<summary>ビュー番号</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindGenOut.InitialCode">
	<summary>コード初期値</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindGenOut.#ctor(System.String,System.String)">
	<summary>インスタンス作成</summary>
	<param name="lViewNo">ビュー番号</param>
	<param name="lInitialCode">コード初期値</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeBasicFormFindGenOut">
	<summary>汎用検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDUG0050.OKJCode">
	<summary>送り状コード</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDUG0050.#ctor(System.String)">
	<summary>インスタンス作成</summary>
	<param name="OKJCode">送り状コード</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeFDUG0050">
	<summary>送り状検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFLKEI010.CallAsmName">
	<summary>呼出元のアセンブリ名</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFLKEI010.FormTitle">
	<summary>呼出元のフォームタイトル</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFLKEI010.SettingItemsHeader">
	<summary>カーソル飛び設定項目　見出</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFLKEI010.SettingItemsDetail">
	<summary>カーソル飛び設定項目　明細</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFLKEI010.#ctor(System.String,System.String,System.Collections.ObjectModel.Collection{ILL.ERF.BaseLib.BIZTRN.SettingItem},System.Collections.ObjectModel.Collection{ILL.ERF.BaseLib.BIZTRN.SettingItem})">
	<summary>インスタンス作成</summary>
	<param name="lCallAsmName">呼出元のアセンブリ名</param>
	<param name="lSettingItemsHeader">カーソル飛び設定項目　見出</param>
	<param name="lSettingItemsDetail">カーソル飛び設定項目　明細</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeFLKEI010">
	<summary>計上設定</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeTranLoad.Type">
	<summary>呼出/引当のタイプ</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeTranLoad.LoadValue">
	<summary>呼出/引当する値</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeTranLoad.#ctor(System.String,System.String)">
	<summary>インスタンス作成</summary>
	<param name="lType">呼出/引当のタイプ</param>
	<param name="lLoadValue">呼出/引当する値</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeTranLoad">
	<summary>計上を呼出/引当</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeMasterLoad.InitialCode">
	<summary>初期表示コード</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeMasterLoad.#ctor(System.String)">
	<summary>インスタンス作成</summary>
	<param name="lInitialCode">初期表示コード</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeMasterLoad">
	<summary>マスタを呼出</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicGridViewer.Reference">
	<summary>クエリ作成用ヘッダ</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicGridViewer.HeaderTranslations">
	<summary>列ヘッダ文字列の変換定義</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeBasicGridViewer.EnableJump">
	<summary>ジャンプ使用可否</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeBasicGridViewer.#ctor(ILL.ERF.BaseLib.IReference)">
	<summary>インスタンス作成</summary>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeBasicGridViewer">
	<summary>参照系プログラム用のグリッドビューワ</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeEXPO0010.ViewNo">
	<summary>ビューNO</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeEXPO0010.DefineID">
	<summary>定義ID</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeEXPO0010.#ctor(System.String,System.String)">
	<summary>インスタンス作成</summary>
	<param name="lViewNo">ビューNO</param>
	<param name="lDefineID">定義ID</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeEXPO0010">
	<summary>汎用データ出力</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeGREX0010.ViewNo">
	<summary>ビューNO</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeGREX0010.DefineID">
	<summary>定義ID</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeGREX0010.Query">
	<summary>クエリ</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeGREX0010.Count">
	<summary>無題実行数</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeGREX0010.#ctor(System.String,System.String,System.String,System.Int32)">
	<summary>インスタンス作成</summary>
	<param name="lQuery">クエリ</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeGREX0010">
	<summary>汎用データ出力・グリッド表示</summary>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.JumpEventArgs">
	<summary>ジャンプ時のイベント引数</summary>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.FromToType">
	<summary>テキストボックス範囲指定タイプ</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeSendMail.MenuType">
	<summary>販売/購買</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeSendMail.TRICD">
	<summary>得意/仕入先コード</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeSendMail.SubName">
	<summary>件名</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeSendMail.AttachFilePath">
	<summary>添付ファイルパス</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeSendMail.FromAddress">
	<summary>送信元メールアドレス</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeSendMail.#ctor(ILL.ERF.BaseLib.TYPMGR.MenuType,System.String,System.String,System.String,System.String)">
	<summary>インスタンス作成</summary>
	<param name="MenuType">販売/購買</param>
	<param name="TRICD">得意/仕入先コード</param>
	<param name="SubName">件名</param>
	<param name="AttacheFilePath">添付ファイルのパス(無い場合はNothing)</param>
	<param name="FromAddress">送信元メールアドレス</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeSendMail">
	<summary>メール送信</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDAC0010.InitialCode">
	<summary>勘定科目コード初期値</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDAC0010.Delkbn">
	<summary>削除区分</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDAC0010.#ctor(System.String,System.String)">
	<summary>インスタンス作成</summary>
	<param name="ArgDelkbn">削除区分</param>
	<param name="ArgInitialCode">勘定科目コード初期値</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeFDAC0010">
	<summary>勘定科目マスタ検索</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDAC0020.InitialCode">
	<summary>補助科目コード初期値</summary>
</member><member name="F:ILL.ERF.BaseLib.TYPMGR.typeFDAC0020.KKMCD">
	<summary>勘定科目コード</summary>
</member><member name="M:ILL.ERF.BaseLib.TYPMGR.typeFDAC0020.#ctor(System.String,System.String)">
	<summary>インスタンス作成</summary>
	<param name="ArgKKMCD">勘定科目コード</param>
	<param name="ArgInitialCode">補助科目コード初期値</param>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR.typeFDAC0020">
	<summary>補助科目マスタ検索</summary>
</member><member name="T:ILL.ERF.BaseLib.TYPMGR">
	<summary>
 フォーム間でやり取りする値を規定するクラス
 </summary>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.BIZMSTObject">
	<summary>マスタGet項目情報格納クラス(コントロール、データベースでの列取得式を格納)</summary>
</member><member name="T:ILL.ERF.BaseLib.BIZMST.ManagementType">
	<summary>
 管理タイプ　販売/購買/在庫/マスタ/システム
 メニューの第一階層に対応
 </summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.SEICD">
	<summary>請求先コード</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKKEIKB">
	<summary>得意先敬称区分</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TSBCDA">
	<summary>得意先分類1コード</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TSBCDB">
	<summary>得意先分類2コード</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TSBCDC">
	<summary>得意先分類3コード</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKKRNKB">
	<summary>金額端数処理区分</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKTRNKB">
	<summary>単価端数処理区分</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKZCLKB">
	<summary>消費税算出処理区分</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKRPSKB">
	<summary>消費税端数処理桁数区分</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKZRNKB">
	<summary>消費税端数処理区分</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.KAKRT">
	<summary>掛率</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TNKRK">
	<summary>単価ランク</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKCMA">
	<summary>備考1</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKCMB">
	<summary>備考2</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKCMC">
	<summary>備考3</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.HIKUSEKB">
	<summary>入金引当使用区分</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKNAMEA">
	<summary>マスタ名称1</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKNAMEB">
	<summary>マスタ名称2</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKZIP">
	<summary>郵便番号</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKADDA">
	<summary>住所1</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKADDB">
	<summary>住所2</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKADDC">
	<summary>住所3</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKTEL">
	<summary>電話番号</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKFAX">
	<summary>FAX番号</summary>
</member><member name="E:ILL.ERF.BaseLib.BIZMST.TOKMT.ChangeTOKZEIKB">
	<summary>
 消費税区分変更イベント
 </summary>
</member><member name="P:ILL.ERF.BaseLib.BIZMST.TOKMT.TOKZEIKB">
	<summary>消費税区分</summary>
</member><member name="T:ILL.ERF.BaseLib.BIZMST.TOKMT">
	<summary>
 得意先マスタデータ格納用クラス
 </summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SHACD">
	<summary>
 支払先コード
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRKEIKB">
	<summary>
 仕入先敬称区分
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SSBCDB">
	<summary>
 仕入先分類2コード
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SSBCDC">
	<summary>
 仕入先分類3コード
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRKRNKB">
	<summary>
 金額端数処理区分
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRTRNKB">
	<summary>
 単価端数処理区分
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRZCLKB">
	<summary>
 消費税算出処理区分
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRRPSKB">
	<summary>
 消費税端数処理桁数区分
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRZRNKB">
	<summary>
 消費税端数処理区分
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRCMA">
	<summary>
 備考1
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRCMB">
	<summary>
 備考2
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRCMC">
	<summary>
 備考3
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRNAMEA">
	<summary>
 マスタ名称1
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRNAMEB">
	<summary>
 マスタ名称2
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRZIP">
	<summary>
 郵便番号
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRADDA">
	<summary>
 住所1
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRADDB">
	<summary>
 住所2
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRADDC">
	<summary>
 住所3
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRTEL">
	<summary>
 電話番号
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRFAX">
	<summary>
 FAX番号
 </summary>
	<remarks></remarks>
</member><member name="E:ILL.ERF.BaseLib.BIZMST.SIRMT.ChangeSIRNMMKB">
	<summary>
 仕入先名称入力区分変更イベント
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="E:ILL.ERF.BaseLib.BIZMST.SIRMT.ChangeSIRZEIKB">
	<summary>
 消費税区分変更イベント
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRNMMKB">
	<summary>
 仕入先名称入力区分
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.BIZMST.SIRMT.SIRZEIKB">
	<summary>
 消費税区分
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.BIZMST.SIRMT">
	<summary>
 仕入先マスタデータ格納用クラス
 </summary>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.NHSMT.NHSKEIKB">
	<summary>
 敬称区分
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.NHSMT.NHSCMA">
	<summary>
 備考1
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.NHSMT.NHSCMB">
	<summary>
 備考2
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.NHSMT.NHSCMC">
	<summary>
 備考3
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.NHSMT.NHSNAMEA">
	<summary>
 マスタ名称1
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.NHSMT.NHSNAMEB">
	<summary>
 マスタ名称2
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.NHSMT.NHSZIP">
	<summary>
 郵便番号
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.NHSMT.NHSADDA">
	<summary>
 住所1
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.NHSMT.NHSADDB">
	<summary>
 住所2
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.NHSMT.NHSADDC">
	<summary>
 住所3
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.NHSMT.NHSTEL">
	<summary>
 電話番号
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.BIZMST.NHSMT.NHSFAX">
	<summary>
 FAX番号
 </summary>
	<remarks></remarks>
</member><member name="E:ILL.ERF.BaseLib.BIZMST.NHSMT.ChangeNHSNMMKB">
	<summary>
 納品先名称入力区分変更イベント
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.BIZMST.NHSMT.NHSNMMKB">
	<summary>
 納品先名称入力区分
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.BIZMST.NHSMT">
	<summary>
 納品先マスタデータ格納用クラス
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.IsExistsMaster(ILL.ERF.BaseLib.IDTMGR,System.String,System.String,System.String@)">
	<summary>
 マスタの存在チェック
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="Code">マスタのコード</param>
	<param name="MasterName">マスタ名</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.IsExistsMaster(ILL.ERF.BaseLib.IDTMGR,System.String,System.String,System.String@,System.Boolean,System.String)">
	<summary>
 マスタの存在チェック
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="Code">マスタのコード</param>
	<param name="MasterName">マスタ名</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
	<param name="IsFile">～マスタではなく～ファイルとして処理する場合はTrue 省略時False</param>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.IsExistsMaster(ILL.ERF.BaseLib.IDTMGR,System.String,System.String,System.String@,System.Boolean)">
	<summary>
 マスタの存在チェック
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="Code">マスタのコード</param>
	<param name="MasterName">マスタ名</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
	<param name="IsFile">～マスタではなく～ファイルとして処理する場合はTrue 省略時False</param>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.IsExistsMaster(ILL.ERF.BaseLib.IDTMGR,System.Collections.ObjectModel.Collection{ILL.ERF.BaseLib.BIZMSTObject},System.String,System.String@)">
	<summary>
 マスタの存在チェック
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="BizMasterObjectCollection">マスタのフィールド名とコードのCollection</param>
	<param name="MasterName">マスタ名</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.IsExistsMaster(ILL.ERF.BaseLib.IDTMGR,System.Collections.ObjectModel.Collection{ILL.ERF.BaseLib.BIZMSTObject},System.String,System.String@,System.Boolean)">
	<summary>
 マスタの存在チェック
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="BizMasterObjectCollection">マスタのフィールド名とコードのCollection</param>
	<param name="MasterName">マスタ名</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
	<param name="IsFile">～マスタではなく～ファイルとして処理する場合はTrue 省略時False</param>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.IsExistsMasterInternal(ILL.ERF.BaseLib.IDTMGR,System.String,System.String,System.String@,System.Boolean,System.Boolean,System.String)">
	<summary>IsExistsMaster関係の本体（従来I/F）</summary>
	<param name="Data"></param>
	<param name="Code"></param>
	<param name="MasterName"></param>
	<param name="Err"></param>
	<param name="IsFile"></param>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.IsExistsMasterInternal(ILL.ERF.BaseLib.IDTMGR,System.Collections.ObjectModel.Collection{ILL.ERF.BaseLib.BIZMSTObject},System.String,System.String@,System.Boolean,System.Boolean)">
	<summary>IsExistsMaster関係の本体</summary>
	<param name="Data"></param>
	<param name="BizMasterObjectCollection"></param>
	<param name="MasterName"></param>
	<param name="Err"></param>
	<param name="IsFile"></param>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.CheckDelMaster(ILL.ERF.BaseLib.IDTMGR,System.String,System.String,System.String@)">
	<summary>
 マスタ削除チェック
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="Mstcd">コード</param>
	<param name="MasterName">マスタ名</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.CheckDelMaster(ILL.ERF.BaseLib.IDTMGR,System.Collections.ObjectModel.Collection{ILL.ERF.BaseLib.BIZMSTObject},System.String,System.String@)">
	<summary>
 マスタ削除チェック
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="BizMasterObjectCollection">コード</param>
	<param name="MasterName">マスタ名</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.DeleteMST(ILL.ERF.BaseLib.IDTMGR,System.String,System.String,System.String@)">
	<summary>
 マスタ削除処理
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="Mstcd">コード</param>
	<param name="MasterName">マスタ名</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.DeleteMST(ILL.ERF.BaseLib.IDTMGR,System.Collections.ObjectModel.Collection{ILL.ERF.BaseLib.BIZMSTObject},System.String,System.String@)">
	<summary>
 マスタ削除処理
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="BizMasterObjectCollection">コード</param>
	<param name="MasterName">マスタ名</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.CallDeleteProcedure(ILL.ERF.BaseLib.IDTMGR,System.String,System.Collections.ObjectModel.Collection{ILL.ERF.BaseLib.BIZMSTObject},System.String@)">
	<summary>削除関連ストアドプロシージャ実行処理</summary>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.GetFormName(ILL.ERF.BaseLib.IDTMGR,System.String)">
	<summary>
 メニューマスタからフォーム名の取得
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="EXEName">EXE名</param>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.CheckFormVisible(ILL.ERF.BaseLib.IDTMGR,System.String)">
	<summary>
 メニューマスタの可視区分チェック
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="EXEName">EXE名</param>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.UpdateTHTMT(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.INIMGR,System.String,System.String,System.String,System.String,System.String,System.String,System.String@)">
	<summary>
 得商単価の更新
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="INI">INIオブジェクト</param>
	<param name="Tokcd">得意先コード</param>
	<param name="Hincd">商品コード</param>
	<param name="Taidt">対象日付</param>
	<param name="Tkbcd">取引区分コード（ない場合は空白）</param>
	<param name="Tritk">取引単価</param>
	<param name="Trisu">取引数量</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
 Rev.111&gt;&gt;&gt;
 Rev.837&gt;&gt;&gt;

</member><member name="M:ILL.ERF.BaseLib.BIZMST.UpdateSHTMT(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.INIMGR,System.String,System.String,System.String,System.String,System.String,System.String,System.String@)">
	<summary>
 仕商単価の更新
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="INI">INIオブジェクト</param>
	<param name="Sircd">仕入先コード</param>
	<param name="Hincd">商品コード</param>
	<param name="Taidt">対象日付</param>
	<param name="Tkbcd">取引区分コード（ない場合は空白）</param>
	<param name="Tritk">取引単価</param>
	<param name="Trisu">取引数量</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
 Rev.111&gt;&gt;&gt;
 Rev.837&gt;&gt;&gt;

</member><member name="M:ILL.ERF.BaseLib.BIZMST.UpdateSOHMT(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.INIMGR,System.String,System.String,System.String)">
	<summary>
 倉庫別商品マスタの更新
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="INI">INIオブジェクト</param>
	<param name="SOUCD">倉庫コード</param>
	<param name="HINCD">商品コード</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
	<remarks>受注・発注からマスタを作成するときだけ使用（現在庫数量は更新しない）</remarks>
</member><member name="M:ILL.ERF.BaseLib.BIZMST.UpdateSOHMT(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.INIMGR,System.Data.DataRow,System.String,System.String@)">
	<summary>
 倉庫別商品マスタの更新
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="INI">INIオブジェクト</param>
	<param name="HANTR">販売トランデータ</param>
	<param name="MoveFlag">"出庫"/"入庫"</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.BIZMST">
	<summary>マスタ取得用Bizlogic</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.ImmGetContext(System.IntPtr)">
	<summary>ImmGetContext</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.ImmReleaseContext(System.IntPtr,System.Int32)">
	<summary>ImmGetContext</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.ImmGetCompositionStringA(System.Int32,System.Int32,System.Byte[],System.Int32)">
	<summary>ImmGetCompositionString</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.Servant">
	<summary>自分のサーバント</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.Label">
	<summary>関連付けるLabel</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.BackColorReadOnly">
	<summary>読み取り専用の時の背景色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.ForeColorReadOnly">
	<summary>読み取り専用の時の文字色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.BackColorInactive">
	<summary>カーソルが当たって無い場合の背景色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.ForeColorInactive">
	<summary>
 カーソルが当たって無い場合の文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.BackColorNecessary">
	<summary>必須項目の時でかつカーソルが当たった場合の背景色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.ForeColorNecessary">
	<summary>必須項目でかつカーソルが当たった場合の文字</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.BackColorNormal">
	<summary>必須項目で無くかつカーソルが当たった場合の背景色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.ForeColorNormal">
	<summary>必須項目で無くかつカーソルが当たった場合の文字色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.Necessary">
	<summary>必須項目か</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.OldText">
	<summary>OldText</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.FindItem">
	<summary>検索可能項目か</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.InputType">
	<summary>テキストの入力タイプ</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.InputCandidate">
	<summary>InputTypeがKBNの時に使用する、入力文字候補</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.DigitIntegral">
	<summary>InputTypeがNumericの時に使用する、整数桁数</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.DigitDecimal">
	<summary>InputTypeがNumericの時に使用する、小数桁数</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.UseCheckDigit">
	<summary>InputTypeがJANコードの時にチェックデジットを使用するか</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.ImeModeDefault">
	<summary>既定のIMEMode</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.TextAsDecimal">
	<summary>テキストの数値</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.AutoSizeX">
	<summary>自動サイズ設定</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTXT.NotFocused">
	<summary>フォーカス取得設定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.CTLTXT_BeforeEnter(System.Object,ILL.ERF.BaseLib.MOVMGR.MOVMGREventArgs)">
	<summary>フォーカスが当たる前の処理</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.CTLTXT_Enter(System.Object,System.EventArgs)">
	<summary>カーソルが当たった時のイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.CTLTXT_Leave(System.Object,System.EventArgs)">
	<summary>カーソルが外れたときのイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.OnClick(System.EventArgs)">
	<summary>クリックされたときのイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.CTLTXT_ReadOnlyChanged(System.Object,System.EventArgs)">
	<summary>ReadOnly変更時のイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.EnterSub">
	<summary>
 Enterイベント（MOVMGRから呼ばれる）
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.ChangeForeColor(System.Boolean)">
	<summary>
 文字色変更
 </summary>
	<param name="Active"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.ChangeBackColor(System.Boolean)">
	<summary>
 背景色変更
 </summary>
	<param name="Active"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
	<summary>キー押下時イベント  入力文字種制限</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
	<summary>KeyDownイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.OnTextChanged(System.EventArgs)">
	<summary>テキスト変更時イベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.WndProc(System.Windows.Forms.Message@)">
	<summary>
 WindowMessage処理
 </summary>
	<param name="m"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.P_ContextMenu_Popup(System.Object,System.EventArgs)">
	<summary>
 コンテキストメニューポップアップ時
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.P_ContextMenu_Collapse(System.Object,System.EventArgs)">
	<summary>
 コンテキストメニュー折り畳み時
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLTXT.L_MenuItem_Click(System.Object,System.EventArgs)">
	<summary>
 コンテキストメニュー項目選択時
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.CTLTXT.CTLTXTDesigner">
	<summary>
 デザイナークラス
 </summary>
	<remarks>VisualStdio上でコントロールの幅を自動的に調整するためだけに存在する。</remarks>
</member><member name="T:ILL.ERF.BaseLib.CTLTXT">
	<summary>
 カスタムテキストボックスコントロール
 </summary>
</member><member name="T:ILL.ERF.BaseLib.CTLTXTEX">
	<summary>
 テキストボックス内の上下矢印を
 完全に無効にしたテキストボックス
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.BasicFormApproval_EVTMGR.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.Int32@)">
	<summary>SendMessage</summary>
</member><member name="M:ILL.ERF.BaseLib.BasicFormApproval_EVTMGR.KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 登録された項目上でKeyが押された場合の処理
 </summary>
</member><member name="P:ILL.ERF.BaseLib.DT2MGR.Connection">
	<summary>サーバへのConnection</summary>
</member><member name="P:ILL.ERF.BaseLib.DT2MGR.ConnectionString">
	<summary>サーバへのConnection文字列</summary>
</member><member name="P:ILL.ERF.BaseLib.DT2MGR.DataSet">
	<summary>データセット</summary>
</member><member name="P:ILL.ERF.BaseLib.DT2MGR.Transaction">
	<summary>トランザクション</summary>
</member><member name="M:ILL.ERF.BaseLib.DT2MGR.SettleException(System.Exception)">
	<summary>例外の後始末をする</summary>
	<param name="ex">Exception</param>
</member><member name="M:ILL.ERF.BaseLib.DT2MGR.BeginTransaction">
	<summary>トランザクション開始</summary>
</member><member name="M:ILL.ERF.BaseLib.DT2MGR.CommitTransaction">
	<summary>トランザクションコミット</summary>
</member><member name="M:ILL.ERF.BaseLib.DT2MGR.RollBackTransaction">
	<summary>トランザクションロールバック</summary>
</member><member name="M:ILL.ERF.BaseLib.DT2MGR.Dispose">
	<summary>オブジェクトの破棄</summary>
</member><member name="M:ILL.ERF.BaseLib.DT2MGR.ExecCommand(System.String)">
	<summary>クエリの実行</summary>
	<param name="SQL">クエリ</param>
</member><member name="M:ILL.ERF.BaseLib.DT2MGR.ExecStoredProcedure(System.String,System.Collections.ObjectModel.Collection{System.Data.SqlClient.SqlParameter})">
	<summary>ストアドプロシージャの実行</summary>
	<param name="Name">ストアド名</param>
	<param name="Params">パラメータのコレクション</param>
</member><member name="M:ILL.ERF.BaseLib.DT2MGR.GetErrorMessage">
	<summary>最後に起こったエラーメッセージの取得</summary>
</member><member name="M:ILL.ERF.BaseLib.DT2MGR.GetErrorIndex">
	<summary>最後に起こったSQLExceptionの番号を取得</summary>
</member><member name="M:ILL.ERF.BaseLib.DT2MGR.GetTable(System.String,System.String)">
	<summary>DataTableの取得</summary>
	<param name="TableName">一時テーブル名</param>
	<param name="SQL">クエリ</param>
</member><member name="M:ILL.ERF.BaseLib.DT2MGR.Register(System.String,System.Collections.Specialized.ListDictionary)">
	<summary>初期化</summary>
	<param name="ini">INIオブジェクト</param>
</member><member name="M:ILL.ERF.BaseLib.DT2MGR.UpdateTable(System.String,System.Data.DataTable)">
	<summary>Tableの更新</summary>
	<param name="SQL">クエリ（取得した時と同じクエリを渡す必要有り）</param>
	<param name="Table">テーブル</param>
</member><member name="M:ILL.ERF.BaseLib.DT2MGR.GetCurrentTime">
	<summary>保持しているサーバー時刻を取得</summary>
</member><member name="M:ILL.ERF.BaseLib.DT2MGR.SetCurrentTime">
	<summary>サーバーの時刻を取得し、クラスで保持</summary>
</member><member name="T:ILL.ERF.BaseLib.DT2MGR">
	<summary>2階層用DB接続クラス</summary>
</member><member name="M:ILL.ERF.BaseLib.IDTMGR.Register(System.String,System.Collections.Specialized.ListDictionary)">
	<summary>初期化</summary>
	<param name="ini">INIオブジェクト</param>
</member><member name="M:ILL.ERF.BaseLib.IDTMGR.GetErrorIndex">
	<summary>最後に起こったSQLExceptionの番号を取得</summary>
</member><member name="M:ILL.ERF.BaseLib.IDTMGR.GetErrorMessage">
	<summary>最後に起こったエラーメッセージの取得</summary>
</member><member name="M:ILL.ERF.BaseLib.IDTMGR.GetTable(System.String,System.String)">
	<summary>DataTableの取得</summary>
	<param name="TableName">一時テーブル名</param>
	<param name="SQL">クエリ</param>
</member><member name="M:ILL.ERF.BaseLib.IDTMGR.UpdateTable(System.String,System.Data.DataTable)">
	<summary>Tableの更新</summary>
	<param name="SQL">クエリ（取得した時と同じクエリを渡す必要有り）</param>
	<param name="Table">テーブル</param>
</member><member name="M:ILL.ERF.BaseLib.IDTMGR.ExecStoredProcedure(System.String,System.Collections.ObjectModel.Collection{System.Data.SqlClient.SqlParameter})">
	<summary>ストアドプロシージャの実行</summary>
	<param name="Name">ストアド名</param>
	<param name="Params">パラメータのコレクション</param>
</member><member name="M:ILL.ERF.BaseLib.IDTMGR.ExecCommand(System.String)">
	<summary>クエリの実行</summary>
	<param name="SQL">クエリ</param>
	<returns>影響をうけた行数</returns>
</member><member name="M:ILL.ERF.BaseLib.IDTMGR.BeginTransaction">
	<summary>トランザクション開始</summary>
</member><member name="M:ILL.ERF.BaseLib.IDTMGR.CommitTransaction">
	<summary>トランザクションコミット</summary>
</member><member name="M:ILL.ERF.BaseLib.IDTMGR.RollBackTransaction">
	<summary>トランザクションロールバック</summary>
</member><member name="M:ILL.ERF.BaseLib.IDTMGR.GetCurrentTime">
	<summary>保持しているサーバー時刻を取得</summary>
</member><member name="M:ILL.ERF.BaseLib.IDTMGR.SetCurrentTime">
	<summary>サーバーの時刻を取得し、クラスで保持</summary>
</member><member name="P:ILL.ERF.BaseLib.IDTMGR.DataSet">
	<summary>データセット</summary>
</member><member name="P:ILL.ERF.BaseLib.IDTMGR.Connection">
	<summary>コネクション</summary>
</member><member name="P:ILL.ERF.BaseLib.IDTMGR.ConnectionString">
	<summary>コネクション文字列</summary>
</member><member name="P:ILL.ERF.BaseLib.IDTMGR.Transaction">
	<summary>トランザクション</summary>
</member><member name="T:ILL.ERF.BaseLib.IDTMGR">
	<summary>DB接続インターフェイス</summary>
	<remarks>DisposeメソッドはIDisposableより継承</remarks>
</member><member name="T:ILL.ERF.BaseLib.MSGMGR.DialogTitle">
	<summary>ダイアログタイトル用</summary>
</member><member name="T:ILL.ERF.BaseLib.MSGMGR.Common">
	<summary>共通使用</summary>
</member><member name="T:ILL.ERF.BaseLib.MSGMGR.Den">
	<summary>計上系</summary>
</member><member name="T:ILL.ERF.BaseLib.MSGMGR.RegLines">
	<summary>一覧入力・詳細入力系</summary>
</member><member name="T:ILL.ERF.BaseLib.MSGMGR.Referrence">
	<summary>参照系</summary>
</member><member name="T:ILL.ERF.BaseLib.MSGMGR.BatchUpdate">
	<summary>バッチ更新系</summary>
</member><member name="T:ILL.ERF.BaseLib.MSGMGR.Seless">
	<summary>Seless系</summary>
</member><member name="M:ILL.ERF.BaseLib.MSGMGR.MakeMessage(System.String,System.String[])">
	<summary>メッセージ作成</summary>
</member><member name="M:ILL.ERF.BaseLib.MSGMGR.MikeMyers(System.String,System.String[])">
	<summary>メッセージ作成（本体）</summary>
</member><member name="T:ILL.ERF.BaseLib.MSGMGR">
	<summary>
 各画面で使用するメッセージ格納クラス
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.PRFMGR.PrintForm(System.Windows.Forms.Form,System.Drawing.Printing.PrinterSettings)">
	<summary>画コピー</summary>
	<param name="frm">対象の画面</param>
	<param name="ps">印刷を実行する際の設定</param>
</member><member name="M:ILL.ERF.BaseLib.PRFMGR.CaptureControl(System.Windows.Forms.Control)">
	<summary>フォームのイメージを取得する</summary>
	<param name="ctrl">印刷するForm</param>
</member><member name="M:ILL.ERF.BaseLib.PRFMGR.P_PrintDocument_EndPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
	<summary>終了処理</summary>
</member><member name="M:ILL.ERF.BaseLib.PRFMGR.P_PrintDocument_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
	<summary>印刷実行</summary>
</member><member name="T:ILL.ERF.BaseLib.PRFMGR">
	<summary>画コピー専用クラス</summary>
</member><member name="M:ILL.ERF.BaseLib.REGMGR.GetReg(System.String,System.String,System.String)">
	<summary>レジストリから情報取得</summary>
	<param name="FormName">画面名</param>
	<param name="ValueType">タイプ</param>
	<param name="Item">項目名</param>
</member><member name="M:ILL.ERF.BaseLib.REGMGR.SetReg(System.String,System.String,System.String,System.String)">
	<summary>レジストリに情報書き込み</summary>
	<param name="FormName">画面名</param>
	<param name="ValueType">タイプ</param>
	<param name="Item">項目名</param>
	<param name="Value">設定する値</param>
</member><member name="M:ILL.ERF.BaseLib.REGMGR.IsExists(System.String,System.String,System.String)">
	<summary>レジストリに指定した値が設定されているか</summary>
	<param name="FormName">画面名</param>
	<param name="ValueType">タイプ</param>
	<param name="Item">項目名</param>
</member><member name="T:ILL.ERF.BaseLib.REGMGR">
	<summary>レジストリへの書き込み/読み込みクラス</summary>
</member><member name="F:ILL.ERF.BaseLib.BaseRoutine.R1_ChangeCommittedRoutine">
	<summary>ChangeCommittedを行うべきRoutineかどうかを表す</summary>
</member><member name="P:ILL.ERF.BaseLib.BaseRoutine.IsChangeCommittedRoutine">
	<summary>ChangeCommittedを行うべきRoutineかどうかを表す</summary>
</member><member name="P:ILL.ERF.BaseLib.BaseRoutine.EventChangeCommitted">
	<summary>テキスト変更確定時ルーチンを実行するかどうか</summary>
</member><member name="T:ILL.ERF.BaseLib.BaseRoutine">
	<summary>Routineクラスの親分</summary>
</member><member name="T:ILL.ERF.BaseLib.RoutinesCollection">
	<summary>BaseRoutineを格納するコレクションクラス</summary>
</member><member name="F:ILL.ERF.BaseLib.REFMGR.P_Document">
	<summary>XmlDocument</summary>
</member><member name="F:ILL.ERF.BaseLib.REFMGR.P_ReferenceSchema">
	<summary>グリッド列設定</summary>
</member><member name="F:ILL.ERF.BaseLib.REFMGR.P_ColumnID">
	<summary>ColumnSectionID</summary>
</member><member name="F:ILL.ERF.BaseLib.REFMGR.P_OrderID">
	<summary>OrderSectionID</summary>
</member><member name="F:ILL.ERF.BaseLib.REFMGR.P_WhereID">
	<summary>WhereSectionID</summary>
</member><member name="F:ILL.ERF.BaseLib.REFMGR.P_FromID">
	<summary>FromSectionID</summary>
</member><member name="F:ILL.ERF.BaseLib.REFMGR.P_GroupID">
	<summary>GroupSectionID</summary>
</member><member name="F:ILL.ERF.BaseLib.REFMGR.P_Mode">
	<summary>ModeID</summary>
</member><member name="F:ILL.ERF.BaseLib.REFMGR.P_Result">
	<summary>取得データ</summary>
</member><member name="F:ILL.ERF.BaseLib.REFMGR.P_LoadSetting">
	<summary>XML読込ﾌﾗｸﾞ</summary>
</member><member name="F:ILL.ERF.BaseLib.REFMGR.P_XmlFilePath">
	<summary>Xmlファイルパス</summary>
</member><member name="F:ILL.ERF.BaseLib.REFMGR.P_XmlFileName">
	<summary>Xmlファイル名</summary>
</member><member name="F:ILL.ERF.BaseLib.REFMGR.P_ReportFilePath">
	<summary>レポートファイルパス</summary>
</member><member name="F:ILL.ERF.BaseLib.REFMGR.P_ReportFileName">
	<summary>レポートファイル名</summary>
</member><member name="F:ILL.ERF.BaseLib.REFMGR.P_ReportID">
	<summary>レポートID</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.LoadReferenceSettings">
	<summary>グリッド列書式設定用XMLファイルの読込を行います。</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.LoadReferenceSettings(System.String)">
	<summary>XML読込</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.SetReferenceSchema">
	<summary>問合せ用XML設定</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.GetSectionNode(System.String,System.String)">
	<summary>指定したSelectionノードを取得します。</summary>
	<param name="XPath"></param>
	<param name="SectionID"></param>
	<returns>XmlNode</returns>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.GetCurrentModeNode(System.String,System.Xml.XmlNode)">
	<summary>指定したColumnノードを取得します。</summary>
	<param name="node"></param>
	<returns>XmlNode</returns>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.GetUseNode(System.Xml.XmlNode)">
	<summary>指定した用途に合わせてノードを取得</summary>
	<param name="node"></param>
	<returns>XmlNode</returns>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.BuildQueryParts">
	<summary>XMLからクエリーに必要な部品を生成</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.InitQueryParts">
	<summary>クエリー部品初期化</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.FixSelectColumnsForSchema">
	<summary>XMLからSELECT句の情報を設定</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.FixSelectColumnsForReport">
	<summary>帳票発行時、必要なDataFieldと範囲指定分のExColumnを自動作成する</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.FixFromPart">
	<summary>XMLからFROM句の情報を設定</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.FixOrderColumns">
	<summary>XMLからORDER句の情報を設定</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.FixGroupPart">
	<summary>XMLからGROUP句の情報を設定</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.FixWherePart">
	<summary>XMLからWHERE句の情報を設定</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.MakeFixedSentence(System.Xml.XmlNode)">
	<summary>通常のWHERE句追加処理</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.MakeFreeSentence(System.Xml.XmlNode)">
	<summary>設定した文をそのまま追加する</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.MakeLikeSentence(System.Xml.XmlNode)">
	<summary>LIKE文追加処理</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.MakeBetweenSentence(System.Xml.XmlNode)">
	<summary>BETWEEN文追加処理</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.MakeBetween(System.String,ILL.ERF.BaseLib.IServant,ILL.ERF.BaseLib.IServant,System.Boolean)">
	<summary>BETWEEN条件作成処理</summary>
	<param name="ColumnName">列名</param>
	<param name="StartServant">開始範囲サーバント</param>
	<param name="EndServant">終了範囲サーバント</param>
	<param name="Force">True:デフォルトからの変更の有無にかかわらず作成する、False:左記以外</param>
	<returns>空文字列またはWHERE句のBETWEEN条件の文字列</returns>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.CheckDefault(System.String)">
	<summary>入力値の初期値判定</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.CheckConditions(System.Xml.XmlNode)">
	<summary>WHERE句に追加するかを判定する</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.CheckCorrect(System.Xml.XmlNodeList,System.String)">
	<summary>条件に合致するか判定</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.GetOperator(System.String)">
	<summary>演算子</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.CreateColumnNode(System.String,System.String,System.String,System.String)">
	<summary></summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.BuildSQL">
	<summary>クエリ生成</summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.BuildSqlSelect">
	<summary>SELECT句の生成</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.BuildSqlFrom">
	<summary>FROM句の生成</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.BuildSqlWhere">
	<summary>WHERE句の生成</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.BuildSqlOrder">
	<summary>ORDER句の生成</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.CheckContainCurrentSort(System.String)">
	<summary>指定されたソートが同じでないかを確認</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.BuildSqlGroup">
	<summary>WHERE句の生成</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.FN_JumpUI(System.Boolean@)">
	<summary>ジャンプボタンを表示するか否か</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.FN_RemarkUI(System.Boolean@,System.Boolean@)">
	<summary>自動備考表示を使用するか否か</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.DrillDownCallback(System.Object,ILL.ERF.BaseLib.TYPMGR.JumpEventArgs)">
	<summary>ジャンプ処理</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.ButtonClickCallback(System.Object,ILL.ERF.BaseLib.TYPMGR.JumpEventArgs)">
	<summary>ボタンクリック処理</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.ColumnAddedCallback(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
	<summary>列追加処理</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.SetExecParameters">
	<summary>起動パラメータ設定</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.GetAssemName(System.Xml.XmlNode)">
	<summary>起動パラメータアセンブリ名取得</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.GetParam(System.Xml.XmlNode)">
	<summary>起動パラメータParam1,2,3取得</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.GetData">
	<summary>データ取得</summary>
	<returns>Object</returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.GetTableAlias(System.String)">
	<summary>
 エイリアス名だけを取り出す
 ex."JBT.受注日付"→"JBT"
 </summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.RemoveTableAlias(System.String)">
	<summary>
 エイリアスを含む列名から列名だけを取り出す
 ex."JBT.受注日付"→"受注日付"
 </summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.GetColumnNameBySortName(System.String)">
	<summary>ソート情報からグリッドの正しい列名を返す</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.GetOrderBySortName(System.String)">
	<summary>ソート情報からOrder句の正しい列名を返す</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.IsExistsParameter(System.String)">
	<summary>パラメータ存在確認</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.CheckReportExistence">
	<summary>レポート存在確認</summary>
</member><member name="M:ILL.ERF.BaseLib.REFMGR.CheckReportExistence(System.String,System.String)">
	<summary>レポート存在確認</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.Result">
	<summary>取得データ</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.INI">
	<summary>INI情報</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.ITM">
	<summary>ITM情報</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.USJ">
	<summary>USJ情報</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.DATA">
	<summary>データ</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.FormCheck">
	<summary>データ</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.ReferenceDocument">
	<summary>XmlDocument(指定XmlDocument)</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.ReferenceSchema">
	<summary>XmlNode(指定XmlNode)</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.XmlFilePath">
	<summary>列の設定用XMLファイルの読込先のパス</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.XmlFileName">
	<summary>列の設定用XMLファイル名</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.ReportFilePath">
	<summary>読込先Rpxファイルへのパス</summary>
	<remarks>空白でなければ、そのままRPXMGRのRpxFilePathプロパティに渡される。</remarks>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.ReportFileName">
	<summary>読込先レポートファイル名</summary>
	<remarks>空白でなければ、そのままRPXMGRのReportFileNameプロパティに渡される。</remarks>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.ReportID">
	<summary>
 プリンタ設定取得時のRPXファイル名です。帳票発行時に設定します。
 伝票発行時は空文字を設定して下さい。
 </summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.LoadSetting">
	<summary>XMLファイル読み込みフラグ</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.ColumnSection">
	<summary>ColumnSectionID(XML)</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.FromSection">
	<summary>FromSectionID(XML)</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.WhereSection">
	<summary>WhereSectionID(XML)</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.OrderSection">
	<summary>OrderSectionID(XML)</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.GroupSection">
	<summary>GroupSectionID(XML)</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.CurrentMode">
	<summary>ModeID(XML)</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.SelectColumns">
	<summary>SQL SELECT句設定</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.OrderColumns">
	<summary>SQL ORDER句設定</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.WhereParameters">
	<summary>SQL Where句設定</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.DefaultParameters">
	<summary>初期値パラメータ</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.Query">
	<summary>クエリー保存</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.QuerySelect">
	<summary>SQL SELECT保存</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.QueryFrom">
	<summary>SQL FROM保存</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.QueryWhere">
	<summary>SQL WHERE保存</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.QueryOrder">
	<summary>SQL ORDER保存</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.QueryGroup">
	<summary>SQL GROUP保存</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.Sort">
	<summary>現在のソート列</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.DefaultSort">
	<summary>初期値ソート列</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.CurrentReferenceState">
	<summary>現在ActiveReportを使っているのかGridを使用しているのかの状態を持っている</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.FormText">
	<summary>グリッドタイトル設定</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.NameSpc">
	<summary>名前空間</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.AssemblyName">
	<summary>アセンブリ名</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.GridForm">
	<summary>呼出グリッドフォーム名（初期値はBasicFormGridViewer）</summary>
</member><member name="P:ILL.ERF.BaseLib.REFMGR.MyNameSpace">
	<summary>親の名前空間を保持</summary>
</member><member name="T:ILL.ERF.BaseLib.CTLACT.UserPanel">
	<summary>
 継承パネルクラス
 </summary>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLACT.WhereColmn">
	<summary>
 列名設定
 </summary>
	<value>列名</value>
	<returns>列名</returns>
</member><member name="P:ILL.ERF.BaseLib.CTLACT.FormatString">
	<summary>
 フォーマット
 </summary>
	<value>フォーマット</value>
	<returns>フォーマット</returns>
</member><member name="M:ILL.ERF.BaseLib.CTLACT.#ctor">
	<summary>
 コンストラクタ
 </summary>
</member><member name="P:ILL.ERF.BaseLib.CTLACT.IsChecked">
	<summary>
 1つでもチェックがされているかを判断する
 </summary>
	<returns>True:チェックあり/False:チェックなし</returns>
 Rev.728&gt;&gt;&gt;

</member><member name="M:ILL.ERF.BaseLib.CTLACT.GetWhere">
	<summary>
 Where句作成
 </summary>
	<returns>Where句文字列</returns>
	<remarks>すべてにチェックがついていない場合はNOT INになります</remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLACT.GetWhere(System.String)">
	<summary>
 Where句作成
 </summary>
	<param name="WhereColmn">列名</param>
	<returns>Where句文字列</returns>
	<remarks>すべてにチェックがついていない場合はNOT INになります</remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLACT.GetWhere(System.String,System.String)">
	<summary>
 Where句作成
 </summary>
	<param name="WhereColmn">列名</param>
	<param name="Format">各項目に設定するフォーマット</param>
	<returns>Where句文字列</returns>
	<remarks>すべてにチェックがついていない場合はNOT INになります</remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLACT.Length">
	<summary>
 チェックボックスの数を返す
 </summary>
	<returns>チェックボックスの数</returns>
</member><member name="M:ILL.ERF.BaseLib.CTLACT.GetCheckBox(System.Int32)">
	<summary>
 チェックボックス取得処理
 </summary>
	<param name="index">インデックス(1～3)</param>
	<returns>チェックボックス</returns>
	<remarks>チェックボックスを返す</remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLACT.GetCheckBoxIndexFromLocation(System.Drawing.Point)">
	<summary>
 チェックボックスインデックス取得処理
 </summary>
	<param name="pt">ポイント</param>
	<returns>チェックボックス位置(1～3)</returns>
	<remarks>取得できない場合は-1を返す</remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLACT.Panel1_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
	<summary>
 パネル描画時
 </summary>
	<param name="sender">イベント発生コントロール」</param>
	<param name="e">イベント引数</param>
</member><member name="M:ILL.ERF.BaseLib.CTLACT.Panel1_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 パネルマウスボタン押下時
 </summary>
	<param name="sender">イベント発生コントロール」</param>
	<param name="e">イベント引数</param>
</member><member name="M:ILL.ERF.BaseLib.CTLACT.Panel1_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 パネルマウスボタン開放時
 </summary>
	<param name="sender">イベント発生コントロール」</param>
	<param name="e">イベント引数</param>
</member><member name="M:ILL.ERF.BaseLib.CTLACT.Clear">
	<summary>
 すべてクリアする
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLACT.AllChecked">
	<summary>
 すべてチェックする
 </summary>
 Rev.728&gt;&gt;&gt;

</member><member name="F:ILL.ERF.BaseLib.BIZTRN.DENType.HBUG">
	<summary>売上</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZTRN.DENType.HBJC">
	<summary>受注</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZTRN.DENType.HBMT">
	<summary>見積</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZTRN.DENType.HBUK">
	<summary>入金</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZTRN.DENType.HBDL">
	<summary>出荷</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZTRN.DENType.KBSR">
	<summary>仕入</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZTRN.DENType.KBHC">
	<summary>発注</summary>
</member><member name="F:ILL.ERF.BaseLib.BIZTRN.DENType.KBKK">
	<summary>支払</summary>
</member><member name="T:ILL.ERF.BaseLib.BIZTRN.DENType">
	<summary>伝票のタイプ</summary>
</member><member name="T:ILL.ERF.BaseLib.BIZTRN.DetailInfo">
	<summary>明細情報</summary>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.SettingItem.#ctor(System.String,System.String,System.String)">
	<summary>インスタンス作成</summary>
	<param name="lName">項目のオブジェクト名</param>
	<param name="lValue">値</param>
	<param name="lLabel">表示名</param>
</member><member name="T:ILL.ERF.BaseLib.BIZTRN.SettingItem">
	<summary>カーソル設定の項目</summary>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.DeleteTable(ILL.ERF.BaseLib.IDTMGR,System.String,System.String@)">
	<summary>テーブル削除</summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="TableName">テーブル名</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetACEDate(ILL.ERF.BaseLib.IDTMGR,System.String,System.Int32,System.String@)">
	<summary>
 経理締日付の取得
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="TargetDate">対象日付</param>
	<param name="NextFlag">何回先の締か</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetSmeDateBasedOnSummary(ILL.ERF.BaseLib.IDTMGR,System.String,System.String,System.Boolean,ILL.ERF.BaseLib.BIZMST.ManagementType,System.String@)">
	<summary>
 請求締日付の取得(得意先請求サマリor仕入先支払サマリを基に)
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="TargetDate">対象日付</param>
	<param name="TargetCode">対象コード</param>
	<param name="NextFlag">対象日付以降ならばTrue</param>
	<param name="Menutype">請求先か支払先か</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetTNK(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.BIZMST.ManagementType,System.String,System.String,System.String,System.String,System.String@)">
	<summary>
 汎用単価取得
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="TRIKB">販売/購買</param>
	<param name="TOKCD">得意先コード</param>
	<param name="HINCD">商品コード</param>
	<param name="DENDT">伝票日付</param>
	<param name="KAKRT">掛率%(上代の時のみ）</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetTNKJYO(ILL.ERF.BaseLib.IDTMGR,System.String,System.String,System.String@)">
	<summary>上代単価算出</summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="ZEIKB">消費税区分(税抜/税込)</param>
	<param name="HINCD">商品コード</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetTNKRNK(ILL.ERF.BaseLib.IDTMGR,System.String,System.String,System.String,System.String@)">
	<summary>ランク別単価算出</summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="ZEIKB">消費税区分(税抜/税込)</param>
	<param name="TOKRNK">ランク</param>
	<param name="HINCD">商品コード</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetTax(ILL.ERF.BaseLib.IDTMGR,System.Decimal,System.String,System.String,System.String@)">
	<summary>消費税算出</summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="Trikn">課税対象金額</param>
	<param name="ZEIKB">消費税区分(税抜/税込)</param>
	<param name="DENDT">伝票日付</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetTax(ILL.ERF.BaseLib.IDTMGR,System.Decimal,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.String,System.String@)">
	<summary>
 消費税算出
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="KIN">課税対象金額</param>
	<param name="ZEIKB">消費税区分(税抜/税込)</param>
	<param name="DENDT">伝票日付</param>
	<param name="ZCLKB">消費税算出基準</param>
	<param name="KZEKB">非課税区分</param>
	<param name="UZEIT">戻り値の整数桁数</param>
	<param name="UZEDP">戻り値の小数桁数</param>
	<param name="RPSKB">消費税端数処理桁数</param>
	<param name="ZRNKB">消費税端数処理区分</param>
	<param name="UZELEN">戻り値の文字桁数</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetZankn(System.Data.DataRow,System.String,System.String,System.String,System.String)">
	<summary>更新時の残金額の計算</summary>
	<param name="TrnRow">トランのDataRow</param>
	<param name="ZANSU">残数量の列名</param>
	<param name="SURYO">数量の列名</param>
	<param name="ZNKKN">税抜金額の列名</param>
	<param name="RNDKB">金額端数処理区分の列名</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetTritkOnKzekbChange(System.String,System.String,System.String,System.Decimal,System.Decimal,System.Decimal)">
	<summary>
 引当時に非課税区分が変更されていた場合の単価を求める
 </summary>
	<param name="TrnKzekb">トランの非課税区分</param>
	<param name="MstKzekb">マスタの非課税区分</param>
	<param name="TriZeikb">消費税区分</param>
	<param name="TrnTritk">引当元トランの単価</param>
	<param name="MstZkmtk">マスタの税抜単価</param>
	<param name="MstZnktk">マスタの税込単価</param>
	<returns>結果取得すべき単価</returns>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetTritkOnKzekbChange(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.BIZMST.ManagementType,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Decimal,System.Decimal,System.Decimal)">
	<summary>
 引当時に非課税区分が変更されていた場合の単価を求める
 （ランクを持たない、購買側計上用）
 </summary>
	<param name="Data">DBへの接続オブジェク</param>
	<param name="TRIKB">販売/購買</param>
	<param name="KbnUTK">売上単価区分</param>
	<param name="Dendt">伝票日付</param>
	<param name="Tricd">得意先コード</param>
	<param name="Hincd">商品コード</param>
	<param name="TrnKzekb">トランの非課税区分</param>
	<param name="MstKzekb">マスタの非課税区分</param>
	<param name="TriZeikb">消費税区分</param>
	<param name="TrnTritk">引当元トランの単価</param>
	<param name="MstZkmtk">マスタの税抜単価</param>
	<param name="MstZnktk">マスタの税込単価</param>
	<returns>結果取得すべき単価</returns>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetTritkOnKzekbChange(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.BIZMST.ManagementType,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Decimal,System.Decimal,System.Decimal)">
	<summary>
 引当時に非課税区分が変更されていた場合の単価を求める
 </summary>
	<param name="Data">DBへの接続オブジェク</param>
	<param name="TRIKB">販売/購買</param>
	<param name="KbnUTK">売上単価区分</param>
	<param name="Dendt">伝票日付</param>
	<param name="Tricd">得意先コード</param>
	<param name="Tnkrk">単価ランク（販売のみ）</param>
	<param name="Hincd">商品コード</param>
	<param name="TrnKzekb">トランの非課税区分</param>
	<param name="MstKzekb">マスタの非課税区分</param>
	<param name="TriZeikb">消費税区分</param>
	<param name="TrnTritk">引当元トランの単価</param>
	<param name="MstZkmtk">マスタの税抜単価</param>
	<param name="MstZnktk">マスタの税込単価</param>
	<returns>結果取得すべき単価</returns>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetTargetTnkkb(System.String,System.String)">
	<summary>
 非課税区分と消費税区分を加味して、取得するべき単価の税区分を返す
 課税商品かつ税込取引先のみ"2"を返す
 </summary>
	<param name="Kzekb">非課税区分</param>
	<param name="Zeikb">消費税区分</param>
	<returns>取得するのが税抜単価なら"1"、税込単価なら"2"を返す</returns>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetIrisuHik(System.Decimal,System.Decimal,System.Decimal)">
	<summary>
 引当時の入数を求める
 </summary>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetCassuHik(ILL.ERF.BaseLib.USJMGR,System.Decimal,System.Decimal,System.Decimal)">
	<summary>
 引当時のケース数を求める
 </summary>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetUpdateDates(ILL.ERF.BaseLib.IDTMGR,System.String,System.String,System.String,System.String@)">
	<summary>
 計上排他更新チェック用
 トラン明細の更新日付取得
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="DATNM">対象のテーブル名称</param>
	<param name="DENNO">対象の伝票NO</param>
	<param name="DENKB">対象の伝票区分、伝票区分の無いテーブルの場合は空白を指定</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.CheckUpdateDates(ILL.ERF.BaseLib.IDTMGR,System.Collections.ArrayList,System.String,System.String,System.String,System.String@)">
	<summary>
 計上排他更新チェック用
 トラン明細の更新日付のチェック
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="OldDENSL">保存しておいた更新日付セット</param>
	<param name="DATNM">対象のテーブル名称</param>
	<param name="DENNO">対象の伝票NO</param>
	<param name="DENKB">対象の伝票区分、伝票区分の無いテーブルの場合は空白を指定</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetUpdateDatesJDN(ILL.ERF.BaseLib.IDTMGR,System.String,System.String,System.String,System.String@)">
	<summary>
 計上排他更新チェック-伝票引当用
 トラン明細の更新日付取得
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="DATNM">対象のテーブル名称</param>
	<param name="DATNMGEN">引当元テーブル名称</param>
	<param name="DENNO">対象の伝票NO</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.CheckUpdateDatesJDN(ILL.ERF.BaseLib.IDTMGR,System.Collections.ArrayList,System.String,System.String,System.String,System.String@)">
	<summary>
 計上排他更新チェック-伝票引当用
 トラン明細の更新日付のチェック
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="OldDENSL">保存しておいた更新日付セット</param>
	<param name="DATNM">対象のテーブル名称</param>
	<param name="DATNMGEN">引当元テーブル名称</param>
	<param name="DENNO">対象の伝票NO</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.CheckDOUKB(ILL.ERF.BaseLib.IDTMGR,System.String,System.String,System.String,System.String@)">
	<summary>
 対象トランが同時計上明細かどうかチェック
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="TBLNM">対象トランの名前("受注","発注","販売","購買"）</param>
	<param name="FNCNM">処理の名前（"登録","削除"）</param>
	<param name="DENNO">対象の伝票NO</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.CheckYOSHINURI(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.INIMGR,System.String,System.String,System.Decimal,System.String@)">
	<summary>
 与信限度額のチェック
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="INI">INIオブジェクト</param>
	<param name="DENDT">伝票日付</param>
	<param name="TOKCD">得意先コード</param>
	<param name="CheckMoney">チェック対象金額</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.CheckTEKZAISU(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.INIMGR,ILL.ERF.BaseLib.USJMGR,System.String,System.String,System.String,System.Decimal,System.String@)">
	<summary>
 計上の有効在庫チェック
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="INI">INIオブジェクト</param>
	<param name="USJ">ユーザー情報ファイルオブジェクト</param>
	<param name="SOUCD">倉庫コード</param>
	<param name="HINCD">商品コード</param>
	<param name="TAIDT">対象日付</param>
	<param name="TAISU">対象数量</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.CheckUpdatableTOKCD(ILL.ERF.BaseLib.IDTMGR,System.String,System.String,System.String@)">
	<summary>
 更新可能チェック　日付_得意先
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="DENDT">対象の日付</param>
	<param name="TOKCD">得意先コード</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.CheckUpdatableSIRCD(ILL.ERF.BaseLib.IDTMGR,System.String,System.String,System.String@)">
	<summary>
 更新可能チェック　日付_仕入先
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="DENDT">対象の日付</param>
	<param name="SIRCD">仕入先コード</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.CheckUpdatableHINCD(ILL.ERF.BaseLib.IDTMGR,System.String,System.String,System.String,System.String@)">
	<summary>
 更新可能チェック　日付_商品
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="DENDT">対象の日付</param>
	<param name="SOUCD">倉庫コード</param>
	<param name="HINCD">商品コード</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetWAREKI(ILL.ERF.BaseLib.IDTMGR,System.String,System.String@,System.String@,System.String@)">
	<summary>
 和暦の取得
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="TAIDT">対象の日付</param>
	<param name="NENGO">年号（戻り値）</param>
	<param name="Years">年（戻り値）</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.UpdatePrintFlag(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.INIMGR,System.String,System.String,System.String,System.Boolean,System.String@,System.Int32@)">
	<summary>
 伝票発行フラグの更新
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="INI">INIオブジェクト</param>
	<param name="TranName">トラン名
　見積/受注/出荷/売上/入金/発注/入荷/仕入/支払</param>
	<param name="UpdateDate">True:更新者と更新日付を更新する</param>
	<param name="STTDENNO">開始伝票NO</param>
	<param name="ENDDENNO">終了伝票NO</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
	<param name="ErrIndex">エラー番号（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetDataURIDEN(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.USJMGR,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 売上伝票のデータ取得
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="USJ">ユーザー情報格納オブジェクト</param>
	<param name="STTUDNNO">開始伝票NO</param>
	<param name="ENDUDNNO">終了伝票NO</param>
	<param name="DENSB">伝票種別</param>
	<param name="STTUDNDT">[Optional]一括発行時用-開始伝票日付</param>
	<param name="ENDUDNDT">[Optional]一括発行時用-終了伝票日付</param>
	<param name="STTTOKCD">[Optional]一括発行時用-開始得意先コード</param>
	<param name="ENDTOKCD">[Optional]一括発行時用-終了得意先コード</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetDataSREDEN(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.USJMGR,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 仕入伝票のデータ取得
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="USJ">ユーザー情報格納オブジェクト</param>
	<param name="STTUDNNO">開始伝票NO</param>
	<param name="ENDUDNNO">終了伝票NO</param>
	<param name="DENSB">伝票種別</param>
	<param name="STTUDNDT">[Optional]一括発行時用-開始伝票日付</param>
	<param name="ENDUDNDT">[Optional]一括発行時用-終了伝票日付</param>
	<param name="STTTOKCD">[Optional]一括発行時用-開始得意先コード</param>
	<param name="ENDTOKCD">[Optional]一括発行時用-終了得意先コード</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetDataMITDEN(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.USJMGR,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 見積伝票のデータ取得
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="USJ">ユーザー情報格納オブジェクト</param>
	<param name="STTMDNNO">開始伝票NO</param>
	<param name="ENDMDNNO">終了伝票NO</param>
	<param name="DENSB">伝票種別</param>
	<param name="STTMDNDT">[Optional]一括発行時用-開始伝票日付</param>
	<param name="ENDMDNDT">[Optional]一括発行時用-終了伝票日付</param>
	<param name="STTTOKCD">[Optional]一括発行時用-開始得意先コード</param>
	<param name="ENDTOKCD">[Optional]一括発行時用-終了得意先コード</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetDataIOKDEN(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.USJMGR,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 入出庫伝票のデータ取得
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="USJ">ユーザー情報格納オブジェクト</param>
	<param name="STTIDNNO">開始伝票NO</param>
	<param name="ENDIDNNO">終了伝票NO</param>
	<param name="DENSB">伝票種別</param>
	<param name="STTIDNDT">[Optional]一括発行時用-開始伝票日付</param>
	<param name="ENDIDNDT">[Optional]一括発行時用-終了伝票日付</param>
</member><member name="M:ILL.ERF.BaseLib.BIZTRN.GetDataDLVDEN(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.USJMGR,System.String,System.String,System.String,System.String,System.String)">
	<summary>
 出荷伝票のデータ取得
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="USJ">ユーザー情報格納オブジェクト</param>
	<param name="STTDDNNO">開始伝票NO</param>
	<param name="ENDDDNNO">終了伝票NO</param>
	<param name="DENSB">伝票種別</param>
	<param name="STTDDNDT">[Optional]一括発行時用-開始伝票日付</param>
	<param name="ENDDDNDT">[Optional]一括発行時用-終了伝票日付</param>
</member><member name="M:ILL.ERF.BaseLib.CTLDTCEVTMGR.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.Int32@)">
	<summary>SendMessage</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTCEVTMGR.KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 登録された項目上でKeyが押された場合の処理
 </summary>
</member><member name="P:ILL.ERF.BaseLib.CTLSTT.TextInitializeflag">
	<summary>ロード時、テキストの初期化を行わない</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLSTT.BellColor">
	<summary>ベルの色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLSTT.MessageOnly">
	<summary>NumLockやCapsの表示をするか</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLSTT.IsError">
	<summary>エラー状態か</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLSTT.#ctor">
	<summary>コンストラクタ</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLSTT.ShowMessage(System.String)">
	<summary>メッセージの表示</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLSTT.ShowError(System.String,System.Windows.Forms.Control)">
	<summary>エラーメッセージの表示</summary>
	<param name="Message">メッセージ</param>
	<param name="ReturnObject">エラー復帰後の戻り項目</param>
</member><member name="M:ILL.ERF.BaseLib.CTLSTT.ExitError">
	<summary>エラーから抜ける</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLSTT.UpdateKeys">
	<summary>NumLockキー、CapsLockキー押下状態の取得</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLSTT.SetWidth">
	<summary>MessageOnly変更時に表示項目の変更</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLSTT.Form_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>親FormのKeyDownイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLSTT.Txt_Bell_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>ベルのKeyDownイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLSTT.Txt_Bell_Click(System.Object,System.EventArgs)">
	<summary>ベルのClick</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLSTT.CTLSTT_Load(System.Object,System.EventArgs)">
	<summary>Loadイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLSTT.CTLSTT_Resize(System.Object,System.EventArgs)">
	<summary>Resizeイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLSTT.CTLSTTBase_LostFocus(System.Object,System.EventArgs)">
	<summary>
 フォーカス喪失イベント伝播処理
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.CTLSTT">
	<summary>ステータスバーコントロール</summary>
</member><member name="F:ILL.ERF.BaseLib.PRCMGR.M_Cmd">
	<summary>起動コマンド</summary>
</member><member name="M:ILL.ERF.BaseLib.PRCMGR.#ctor(System.String)">
	<summary>コンストラクタ</summary>
	<param name="L_Cmd"></param>
	<remarks>
 このコンストラクタはProtectedのため内部からしか起動できません
 </remarks>
</member><member name="M:ILL.ERF.BaseLib.PRCMGR.Start">
	<summary>
 プロセス起動処理
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.PRCMGR.Start(System.String)">
	<summary>プロセス開始処理</summary>
	<param name="L_Cmd">起動コマンド</param>
	<remarks>
 別スレッドにより起動コマンドを実行します
 </remarks>
</member><member name="M:ILL.ERF.BaseLib.PRCMGR.SendMailTo(System.String)">
	<summary>メール起動コマンド実行</summary>
	<param name="L_Cmd">起動コマンド</param>
	<remarks>
 起動コマンドが長い場合途中で切って起動する
 </remarks>
</member><member name="F:ILL.ERF.BaseLib.PRCMGR.DEFAULT_MAIL_LENGTH">
	<summary>メールを起動する際のコマンドラインの長さ</summary>
</member><member name="M:ILL.ERF.BaseLib.PRCMGR.GetSendMailCmd(System.String,System.String,System.String)">
	<summary>
 メーラー起動コマンド作成
 </summary>
	<param name="L_Sub">件名</param>
	<param name="L_Body">本文</param>
	<param name="L_To">送信先アドレス(カンマ区切りOK)</param>
	<returns>メーラー起動コマンド</returns>
</member><member name="M:ILL.ERF.BaseLib.PRCMGR.GetSendMailCmd(System.String,System.String,System.String,System.String)">
	<summary>
 メーラー起動コマンド作成
 </summary>
	<param name="L_Sub">件名</param>
	<param name="L_Body">本文</param>
	<param name="L_To">送信先アドレス(カンマ区切りOK)</param>
	<param name="L_Cc">CC(カンマ区切りOK)</param>
	<returns>メーラー起動コマンド</returns>
</member><member name="M:ILL.ERF.BaseLib.PRCMGR.GetSendMailCmd(System.String,System.String,System.String,System.String,System.String)">
	<summary>
 メーラー起動コマンド作成
 </summary>
	<param name="L_Sub">件名</param>
	<param name="L_Body">本文</param>
	<param name="L_To">送信先アドレス(カンマ区切りOK)</param>
	<param name="L_Cc">CC(カンマ区切りOK)</param>
	<param name="L_Bcc">BCC(カンマ区切りOK)</param>
	<returns>メーラー起動コマンド</returns>
</member><member name="M:ILL.ERF.BaseLib.PRCMGR.GetBodyString(System.String)">
	<summary>メールの本文に使用できる文字列へ置換する</summary>
	<param name="L_Body">本文</param>
	<returns>本文</returns>
</member><member name="T:ILL.ERF.BaseLib.PRCMGR">
	<summary>
 プロセスマネージャ
 </summary>
	<remarks>
 外部起動のプロセスを実行する
 </remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLDTCMOVMGR.CTLDTC_StepIn(System.Windows.Forms.Control,ILL.ERF.BaseLib.MOVMGR.MoveType)">
	<summary>次の項目に移動</summary>
	<param name="obj">基準の項目</param>
	<param name="Type">キーボードによる移動か、プログラムで命令された移動か</param>
</member><member name="M:ILL.ERF.BaseLib.CTLDTCMOVMGR.CTLDTC_StepInRev(System.Windows.Forms.Control,ILL.ERF.BaseLib.MOVMGR.MoveType)">
	<summary>前の項目に移動する</summary>
	<param name="obj">基準の項目</param>
	<param name="Type">キーボードによる移動か、プログラムで命令された移動か</param>
</member><member name="M:ILL.ERF.BaseLib.CTLDTCMOVMGR.SetFocus(System.Int32,System.Boolean,System.Boolean,ILL.ERF.BaseLib.MOVMGR.MoveType)">
	<summary>カーソルを当てる</summary>
	<param name="ItemIndex">基準の番号</param>
	<param name="EventFlag">MovingNextなどのイベントを起こすか</param>
	<param name="Forward">True:順方向　False:逆方向</param>
	<param name="Type">キーボードによる移動か、プログラムで命令された移動か</param>
</member><member name="P:ILL.ERF.BaseLib.EXPMGR.AsmName">
	<summary>ビューNO</summary> ''' 

</member><member name="P:ILL.ERF.BaseLib.EXPMGR.FormCheck">
	<summary>ビューNO</summary> ''' 

</member><member name="P:ILL.ERF.BaseLib.EXPMGR.ViewNo">
	<summary>ビューNO</summary> ''' 

</member><member name="P:ILL.ERF.BaseLib.EXPMGR.ViewName">
	<summary>ビュー名称</summary> ''' 

</member><member name="P:ILL.ERF.BaseLib.EXPMGR.DefineID">
	<summary>定義ID</summary> ''' 

</member><member name="P:ILL.ERF.BaseLib.EXPMGR.DefineName">
	<summary>定義名</summary> ''' 

</member><member name="P:ILL.ERF.BaseLib.EXPMGR.FormTitle">
	<summary>フォームタイトル</summary> ''' 

</member><member name="P:ILL.ERF.BaseLib.EXPMGR.Result">
	<summary>取得データ</summary>
</member><member name="P:ILL.ERF.BaseLib.EXPMGR.DATA">
	<summary>データ</summary>
</member><member name="P:ILL.ERF.BaseLib.EXPMGR.Query">
	<summary>クエリー保存</summary>
</member><member name="P:ILL.ERF.BaseLib.EXPMGR.QuerySelect">
	<summary>SQL SELECT保存</summary>
</member><member name="P:ILL.ERF.BaseLib.EXPMGR.QueryFrom">
	<summary>SQL FROM保存</summary>
</member><member name="P:ILL.ERF.BaseLib.EXPMGR.QueryWhere">
	<summary>SQL WHERE保存</summary>
</member><member name="P:ILL.ERF.BaseLib.EXPMGR.QueryOrder">
	<summary>SQL ORDER保存</summary>
</member><member name="P:ILL.ERF.BaseLib.EXPMGR.ErrorString">
	<summary>エラーメッセージ</summary>
</member><member name="P:ILL.ERF.BaseLib.EXPMGR.Sort">
	<summary>現在のソート列</summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.BuildSQL">
	<summary>クエリ生成</summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.BuildQueryParts">
	<summary>クエリの各句の作成</summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.BuildSqlSelect">
	<summary> SELECT句を作成 </summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.BuildSqlFrom">
	<summary> FROM句を作成 </summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.BuildSqlWhere">
	<summary> WHERE句を作成 </summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.BuildSqlOrder">
	<summary> ORDER句を作成 </summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.GetSqlData">
	<summary>ビュー情報の取得</summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.GetViewName">
	<summary>ビュー名称の取得</summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.GetDataOutputMaster">
	<summary>出力項目の取得</summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.GetDataOutputConditionMaster">
	<summary>データ出力条件の取得</summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.GetTableFieldes(System.String)">
	<summary>ビューのフィールド名の取得</summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.GetInputType(ILL.ERF.BaseLib.EXPMGR.ViewInfo)">
	<summary>フィールドのタイプから入力タイプを取得</summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.GetInputType(System.String)">
	<summary>項目名で入力タイプを取得</summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.GetUserType(System.String)">
	<summary>項目名でユーザタイプを取得</summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.GetImeMode(ILL.ERF.BaseLib.EXPMGR.ViewInfo)">
	<summary>フィールドのタイプからIMEの設定を取得</summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.GetImeMode(System.String)">
	<summary>項目名でIMEの設定を取得</summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.GetViewInfo(System.String)">
	<summary>項目名でビュー情報を取得</summary>
</member><member name="M:ILL.ERF.BaseLib.EXPMGR.GetFormTitle">
	<summary>メニューマスタからフォームタイトルを取得</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLTAB.TextBox">
	<summary>
 関連付けるテキストボックス
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLTAB.TextBox_TextChanged(System.Object,System.EventArgs)">
	<summary>
 関連付けられたテキストボックスのテキストのTextChanged
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLTAB.TextBox_ReadOnlyChanged(System.Object,System.EventArgs)">
	<summary>
 関連付けられたテキストボックスのテキストのReadOnlyChanged
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLTAB.SetTabPageColor">
	<summary>タブページ背景色設定処理</summary>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.Round(System.Decimal,System.Int32,System.String)">
	<summary>
 端数処理
 </summary>
	<param name="Val">対象の値</param>
	<param name="Digit">小数桁数( -1の時一の位、-2の時百の位、-3の時千の位、-4の時万の位、05以降は使用不可）</param>
	<param name="RNDKB">端数処理区分 '0'切捨て '5'四捨五入 '9'切り上げ</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.Multiply(System.String,System.String,System.String,ILL.ERF.BaseLib.CTLTXT)">
	<summary>
 掛け算
 </summary>
	<param name="VAL1">数値項目1</param>
	<param name="VAL2">数値項目2</param>
	<param name="RNDKB">端数処理区分 '0'切捨て '5'四捨五入 '9'切り上げ</param>
	<param name="Result">値の格納を行うテキストボックス</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.Multiply(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
	<summary>
 掛け算
 </summary>
	<param name="VAL1">数値項目1</param>
	<param name="VAL2">数値項目2</param>
	<param name="RNDKB">端数処理区分 '0'切捨て '5'四捨五入 '9'切り上げ</param>
	<param name="ITLEN">整数桁数</param>
	<param name="DPLEN">小数桁数</param>
	<param name="MAXLEN">テキストの桁数</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.Multiply(System.Decimal,System.Decimal,System.String,ILL.ERF.BaseLib.CTLTXT)">
	<summary>
 掛け算
 </summary>
	<param name="VAL1">数値項目1</param>
	<param name="VAL2">数値項目2</param>
	<param name="RNDKB">端数処理区分 '0'切捨て '5'四捨五入 '9'切り上げ</param>
	<param name="Result">値の格納を行うテキストボックス</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.Multiply(System.Decimal,System.Decimal,System.String,System.Int32,System.Int32,System.Int32)">
	<summary>
 掛け算
 </summary>
	<param name="VAL1">数値項目1</param>
	<param name="VAL2">数値項目2</param>
	<param name="RNDKB">端数処理区分 '0'切捨て '5'四捨五入 '9'切り上げ</param>
	<param name="ITLEN">整数桁数</param>
	<param name="DPLEN">小数桁数</param>
	<param name="MAXLEN">テキストの桁数</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.Multiply(System.Decimal,System.Decimal,System.String,System.Int32)">
	<summary>
 掛け算
 </summary>
	<param name="VAL1">数値項目1</param>
	<param name="VAL2">数値項目2</param>
	<param name="RNDKB">端数処理区分 '0'切捨て '5'四捨五入 '9'切り上げ</param>
	<param name="DPLEN">小数桁数</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.FormatNumeric(System.Decimal,System.Windows.Forms.Control)">
	<summary>
 数値を指定した桁数で整形し、
 コントロールに値を入れ込む
 </summary>
	<param name="VAL">数値</param>
	<param name="Ctl">値の格納を行うコントロール</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.FormatNumeric(System.Decimal,System.Windows.Forms.Control,System.Int32)">
	<summary>
 数値を指定した桁数で整形し、
 コントロールに値を入れ込む 
 </summary>
	<param name="VAL">数値</param>
	<param name="Ctl">値の格納を行うコントロール</param>
	<param name="DPLEN">小数桁数</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.FormatNumeric(System.Decimal,ILL.ERF.BaseLib.CTLTXT)">
	<summary>
 数値を指定した桁数で整形し、
 指定したMaxLengthまで空白を左に詰め、
 テキストボックスに値を入れ込む
 </summary>
	<param name="VAL">数値</param>
	<param name="TextBox">値の格納を行うテキストボックス</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.FormatNumeric(System.Decimal,System.Int32,System.Int32,System.Int32)">
	<summary>
 数値を指定した桁数で整形し、
 指定したMaxLengthまで空白を左に詰める
 </summary>
	<param name="VAL">数値</param>
	<param name="ITLEN">整数桁数</param>
	<param name="DPLEN">小数桁数</param>
	<param name="MAXLEN">テキストの桁数</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.FormatNumeric(System.Decimal,System.Int32,System.Int32)">
	<summary>
 数値を指定した桁数で整形
 </summary>
	<param name="VAL">数値</param>
	<param name="ITLEN">整数桁数</param>
	<param name="DPLEN">小数桁数</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.ToInt(System.Object)">
	<summary>
 オブジェクトを数値に変換。
 オブジェクトが数値にできない文字の場合は0を返す
 </summary>
	<param name="Obj">対象オブジェクト</param>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.ToLong(System.Object)">
	<summary>
 オブジェクトを数値に変換。
 オブジェクトが数値にできない文字の場合は0を返す
 </summary>
	<param name="Obj">対象オブジェクト</param>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.ToDecimal(System.Object)">
	<summary>
 オブジェクトを数値に変換。
 オブジェクトが数値にできない文字の場合は0を返す
 </summary>
	<param name="Obj">対象オブジェクト</param>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.AddSlashToDate(System.String)">
	<summary>
 yyyymmddの日付にスラッシュを加える
 </summary>
	<param name="Text">対象の文字列</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.IsIntegral(System.Decimal)">
	<summary>整数かどうか</summary>
	<param name="value">対象の数値</param>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.CalculateRate(System.Decimal,System.Decimal,System.Int32,System.String,System.Boolean)">
	<summary>
 率計算
 </summary>
	<param name="Dividend">被除数</param>
	<param name="Divisor">除数</param>
	<param name="Digit">小数桁数( -1の時一の位、-2の時百の位、-3の時千の位、-4の時万の位、05以降は使用不可）</param>
	<param name="RNDKB">端数処理区分 '0'切捨て '5'四捨五入 '9'切り上げ 'X'端数処理しない</param>
	<param name="Multiplication">×100する場合、True</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.CalculateProfit(System.Decimal,System.Decimal,System.Boolean,System.Int32,System.String)">
	<summary>
 粗利率計算
 </summary>
	<param name="Profit">粗利金額</param>
	<param name="Total">純売上金額</param>
	<param name="Multiplication">×100する場合、True</param>
	<param name="Digit">小数桁数( -1の時一の位、-2の時百の位、-3の時千の位、-4の時万の位、05以降は使用不可）</param>
	<param name="RNDKB">端数処理区分 '0'切捨て '5'四捨五入 '9'切り上げ</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.CalculateProfit(System.Decimal,System.Decimal,System.Boolean)">
	<summary>
 粗利率計算
 </summary>
	<param name="Profit">粗利金額</param>
	<param name="Total">純売上金額</param>
	<param name="Multiplication">×100する場合、True</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.CalculateProfit(System.Decimal,System.Decimal)">
	<summary>
 粗利率計算
 </summary>
	<param name="Profit">粗利金額</param>
	<param name="Total">純売上金額</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.CalculateRepayment(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Boolean,System.Int32,System.String)">
	<summary>
 返品率計算
 </summary>
	<param name="Repayment">返品金額</param>
	<param name="TargetMoney">対象金額</param>
	<param name="Fare">運賃金額</param>
	<param name="Others">その他金額</param>
	<param name="Multiplication">×100する場合、True</param>
	<param name="Digit">小数桁数( -1の時一の位、-2の時百の位、-3の時千の位、-4の時万の位、05以降は使用不可）</param>
	<param name="RNDKB">端数処理区分 '0'切捨て '5'四捨五入 '9'切り上げ</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.CalculateRepayment(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Boolean)">
	<summary>
 返品率計算
 </summary>
	<param name="Repayment">返品金額</param>
	<param name="TargetMoney">対象金額</param>
	<param name="Fare">運賃金額</param>
	<param name="Others">その他金額</param>
	<param name="Multiplication">×100する場合、True</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.CalculateRepayment(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
	<summary>
 返品率計算
 </summary>
	<param name="Repayment">返品金額</param>
	<param name="TargetMoney">対象金額</param>
	<param name="Fare">運賃金額</param>
	<param name="Others">その他金額</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.CalculateDiscount(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Boolean,System.Int32,System.String)">
	<summary>
 値引率計算
 </summary>
	<param name="Discount">値引金額</param>
	<param name="TargetMoney">対象金額</param>
	<param name="Fare">運賃金額</param>
	<param name="Others">その他金額</param>
	<param name="Multiplication">×100する場合、True</param>
	<param name="Digit">小数桁数( -1の時一の位、-2の時百の位、-3の時千の位、-4の時万の位、05以降は使用不可）</param>
	<param name="RNDKB">端数処理区分 '0'切捨て '5'四捨五入 '9'切り上げ</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.CalculateDiscount(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Boolean)">
	<summary>
 値引率計算
 </summary>
	<param name="Discount">値引金額</param>
	<param name="TargetMoney">対象金額</param>
	<param name="Fare">運賃金額</param>
	<param name="Others">その他金額</param>
	<param name="Multiplication">×100する場合、True</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.NUMMGR.CalculateDiscount(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
	<summary>
 値引率計算
 </summary>
	<param name="Discount">値引金額</param>
	<param name="TargetMoney">対象金額</param>
	<param name="Fare">運賃金額</param>
	<param name="Others">その他金額</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.NUMMGR">
	<summary>
 数値計算・数値のチェック・フォーマット用クラス
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.IsThemeActive">
Private Declare Function IsThemeActive Lib "uxtheme.dll" () As Boolean

</member><member name="F:ILL.ERF.BaseLib.CTLDTC.P_EVENT">
	<summary>イベント管理オブジェクト</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLDTC.FocusPos.None">
	<summary>
 なし
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.CTLDTC.FocusPos.Year">
	<summary>
 年
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.CTLDTC.FocusPos.Month">
	<summary>
 月
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.CTLDTC.FocusPos.Day">
	<summary>
 日
 </summary>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.CTLDTC.FocusPos">
	<summary>
 項目の入力タイプ
 </summary>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.Servant">
	<summary>自分のサーバント</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.BackColorReadOnly">
	<summary>
 読み取り専用の時の背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.ForeColorReadOnly">
	<summary>
 読み取り専用の時の文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.BackColorInactive">
	<summary>
 カーソルが当たって無い場合の背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.ForeColorInactive">
	<summary>
 カーソルが当たって無い場合の文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.BackColorNecessary">
	<summary>
 必須項目の時でかつカーソルが当たった場合の背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.ForeColorNecessary">
	<summary>
 必須項目でかつカーソルが当たった場合の文字
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.BackColorNormal">
	<summary>
 必須項目で無くかつカーソルが当たった場合の背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.ForeColorNormal">
	<summary>
 必須項目で無くかつカーソルが当たった場合の文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.ReadOnly">
	<summary>
 読み取り専用
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.Necessary">
	<summary>
 必須かどうか
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.DateType">
	<summary>
 日付のタイプ
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.UseCalendar">
	<summary>
 カレンダー表示用のボタンを使用するか
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.Label">
	<summary>
 カーソルが当たった場合に色を変えるラベル
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.Text">
	<summary>
 日付文字列
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.Text99">
	<summary>
 日付文字列(Type99)
 </summary>
	<value></value>
	<returns></returns>
	<remarks>末日の場合はYYYYMM99で返します</remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.OldText">
	<summary>
 OldText
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.TextBox_Year">
	<summary>年テキストボックス</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.TextBox_Month">
	<summary>
 月テキストボックス
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.TextBox_Day">
	<summary>
 日テキストボックス
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.Calendar">
	<summary>
 カレンダーボタン
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.DefaultFocus">
	<summary>
 デフォルトフォーカス
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.NotFocused">
	<summary>フォーカス取得設定</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.NotShowLabel">
	<summary>"年月日"or"/"表示設定</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.DateFormat">
	<summary>年月日ラベルの設定</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.IsFocused">
	<summary>フォーカスを持つコントロールの取得</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLDTC.DateFont">
	<summary> フォントの設定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.YearReadOnly(System.Boolean)">
	<summary>年コントロール読み取り専用設定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.MonthReadOnly(System.Boolean)">
	<summary>月コントロール読み取り専用設定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.DayReadOnly(System.Boolean)">
	<summary>日コントロール読み取り専用設定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.ClearReadOnly">
	<summary>日コントロール読み取り専用設定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.SetText(System.String)">
	<summary>
 Textプロパティが設定された際、各テキストボックスに値を振り分ける処理
 </summary>
	<param name="Text"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.ChangeCalendarEnabled">
	<summary>
 カレンダーボタンのEnabled設定
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.FindControl(System.Windows.Forms.Control,System.IntPtr)">
	<summary>指定したコントロール内に含まれるコントロールを指定した名前で検索します。</summary>
	<param name="hParent">検索対象となる親コントロール。</param>
	<param name="Handle">検索するコントロールのハンドル。</param>
	<returns>取得したコントロールのインスタンス。取得できなかった場合は Nothing。</returns>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.SetFocusAndSelectAll(ILL.ERF.BaseLib.CTLTXT,System.Boolean)">
	<summary>
 フォーカスの設定とテキストの選択
 </summary>
	<param name="obj"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.CTLDTC_EnabledChanged(System.Object,System.EventArgs)">
	<summary>
 Enabled変更時、子コントロールに反映
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.CTLDTC_SizeChanged(System.Object,System.EventArgs)">
	<summary>
 コントロールサイズ変更時の処理
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.GetStringSize(System.String,System.Drawing.Font)">
	<summary> 機能説明:表示文字のサイズ取得</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.txt_Year_TextChanged(System.Object,System.EventArgs)">
	<summary>年コントロール テキスト変更</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.txt_Year_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>年コントロール キーダウン</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.txt_Month_TextChanged(System.Object,System.EventArgs)">
	<summary>月コントロール テキスト変更</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.txt_Month_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>月コントロール キーダウン</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.txt_Day_TextChanged(System.Object,System.EventArgs)">
	<summary>日コントロール テキスト変更</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.txt_Day_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>日コントロール キーダウン</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.CTLDTC_TextChanged(System.Object,System.EventArgs)">
	<summary>テキスト変更</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.CTLDTC_BeforeEnter(System.Object,ILL.ERF.BaseLib.MOVMGR.MOVMGREventArgs)">
	<summary>カーソル項目BeforeEnter</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.P_EVENT_DisplayError(System.Object,System.EventArgs,System.String)">
	<summary>エラーを表示</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.P_EVENT_DisplayMessage(System.Object,System.EventArgs)">
	<summary>メッセージを表示</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.dtp_Calendar_CloseUp(System.Object,System.EventArgs)">
	<summary>
 カレンダーが閉じたれた時の処理
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.dtp_Calendar_GotFocus(System.Object,System.EventArgs)">
	<summary>
 カレンダーが開くときの処理
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.GetFirstDate">
	<summary>今日の月の最初の日付</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLDTC.GetLastDate">
	<summary>今日の月の最後の日付</summary>
</member><member name="T:ILL.ERF.BaseLib.CTLDTC">
	<summary>
 日付コントロール
 </summary>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLKBL.BackColorActive">
	<summary>
 アクティブなときの背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLKBL.BackColorInactive">
	<summary>
 アクティブでないときの背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLKBL.BackColorReadOnlyActive">
	<summary>
 関連付けられているテキストボックスがReadOnly=Trueで
 かつアクティブなときの背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLKBL.BackColorReadOnlyInactive">
	<summary>
 関連付けられているテキストボックスがReadOnly=Trueで
 かつアクティブでないときの背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLKBL.ForeColorActive">
	<summary>
 アクティブなときの文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLKBL.ForeColorInactive">
	<summary>
 関連付けられているテキストボックスがReadOnly=Trueで
 かつアクティブでないときの文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLKBL.ForeColorReadOnlyInactive">
	<summary>
 アクティブでないときの文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLKBL.ForeColorReadOnlyActive">
	<summary>
 関連付けられているテキストボックスがReadOnly=Trueで
 かつアクティブなときの文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLKBL.TextClick">
	<summary>
 クリックされたときに関連付けられたテキストボックスに渡すテキスト
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLKBL.TextMatch">
	<summary>
 関連付けられたテキストボックスのテキストと比較して
 アクティブな状態にするかどうか判別する文字列（正規表現）
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLKBL.TextBox">
	<summary>
 関連付けるテキストボックス
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLKBL.SetColor">
	<summary>
 色の変更
 </summary>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLKBL.IsActive">
	<summary>
 アクティブかどうか
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLKBL.TextBox_TextChanged(System.Object,System.EventArgs)">
	<summary>
 関連付けられたテキストボックスのテキストのTextChanged
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLKBL.TextBox_ReadOnlyChanged(System.Object,System.EventArgs)">
	<summary>
 関連付けられたテキストボックスのテキストのReadOnlyChanged
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLKBL.Label_Click(System.Object,System.EventArgs)">
	<summary>
 クリックイベント
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.CTLKBL">
	<summary>
 区分用ラベルコントロール
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLKBLEX.Label_Click(System.Object,System.EventArgs)">
	<summary>
 クリックイベント
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.CTLKBLEX">
	<summary>
 クリック時の動作を変更した区分ラベル
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.LOGMGR.WriteLogFile(System.Collections.Specialized.ListDictionary,System.String,System.String)">
	<summary>
 ログ書き出し
 </summary>
	<param name="ini">INIオブジェクト</param>
	<param name="ProgramName">プログラム名</param>
	<param name="message">内容</param>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.LOGMGR">
	<summary>
 ログの書き出しクラス
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.NumCode">
	<summary>数字コード</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.NumCode0">
	<summary>数字コード(0許容)</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.CharCode">
	<summary>文字コード</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.CharCodeBlank">
	<summary>文字コード(空白許容)</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.Numeric">
	<summary>数値</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.Text">
	<summary>テキスト（シングルクオーテーションのみ入力不可）</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.Kubun">
	<summary>区分</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.Kana">
	<summary>半角ｶﾅ</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.TEL_ZIP">
	<summary>電話番号、郵便番号など（数字とハイフン）</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.JAN">
	<summary>JANコード チェックデジット付</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.URL">
	<summary>URL</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.NumericBlank">
	<summary>数値(空白許容)</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.KanaBlank">
	<summary>半角ｶﾅ(空白許容)</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.NumericText">
	<summary>数値テキスト</summary>
	<remarks>自動フォーマットしない数値入力</remarks>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.NonnegativeNumeric">
	<summary>非負数値</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.Year">
	<summary>年</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.Month">
	<summary>月</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.Day">
	<summary>日</summary>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.TextType.Day99">
	<summary>日（99許容）</summary>
</member><member name="T:ILL.ERF.BaseLib.CHKTXT.TextType">
	<summary>
 項目の入力タイプ
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.DateType.YM">
	<summary>
 年・月
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.DateType.YMD">
	<summary>
 年・月・日
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.DateType.YMD99">
	<summary>
 年・月・日（99許容）
 </summary>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.CHKTXT.DateType">
	<summary>
 日付項目のタイプ
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.DateFormat.Format_Long">
	<summary>
 xxxx年xx月xx日
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.CHKTXT.DateFormat.Format_Short">
	<summary>
 xxxx/xx/xx
 </summary>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.CHKTXT.DateFormat">
	<summary>
 日付の表示形式
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckTextItem(ILL.ERF.BaseLib.CTLTXT,System.Boolean,System.String@)">
	<summary>
 テキストボックスのチェック関数
 </summary>
	<param name="TextBox">対象のテキストボックス</param>
	<param name="AlwaysCheck">ReadOnly等のプロパティに関わらず常にチェックするかどうか</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckTextItem(ILL.ERF.BaseLib.CTLTXT,System.String@)">
	<summary>
 テキストボックスのチェック関数(AlwaysCheck省略版)
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckDateItem(ILL.ERF.BaseLib.CTLDTC,System.String@)">
	<summary>
 日付項目のチェック関数
 </summary>
	<param name="DateBox">対象の日付項目</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckKeyChar(System.Char,ILL.ERF.BaseLib.CTLTXT)">
	<summary>
 入力されたCharを受け取って良いかどうかチェック
 （テキストボックスのKeyPressから呼ばれる）
 </summary>
	<param name="KeyChar">対象のChar</param>
	<param name="TextBox">入力対象のTextBox</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckNumCode(System.String@,ILL.ERF.BaseLib.CHKTXT.TextType,System.Int32,System.String@)">
	<summary>
 数字コードチェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Type">タイプ</param>
	<param name="Digit">桁数</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckCharCode(System.String@,ILL.ERF.BaseLib.CHKTXT.TextType,System.Int32,System.String@)">
	<summary>
 文字コードチェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Type">タイプ</param>
	<param name="Digit">桁数</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckNumeric(System.String@,System.Int32,System.Int32,System.Int32,System.Boolean,System.String@)">
	<summary>
 数値チェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="DigitInt">整数桁数</param>
	<param name="DigitDec">小数桁数</param>
	<param name="TextMaxLength">テキストボックスの最大桁数</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckNumeric(System.String@,System.Int32,System.Int32,System.Int32,System.String@)">
	<summary>
 数値チェック
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckText(System.String@,System.Int32,System.String@)">
	<summary>
 テキストチェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Digit">桁数</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckNumericText(System.String@,System.Int32,System.String@)">
	<summary>
 数字テキストチェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Digit">桁数</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckTelZip(System.String@,System.Int32,System.String@)">
	<summary>
 電話番号/郵便番号などチェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Digit">桁数</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckJAN(System.String@,System.Boolean,System.String@)">
	<summary>
 JANコードのチェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="UseCheckDigit">チェックデジットを使用するか</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckKubun(System.String@,System.String,System.String@)">
	<summary>
 区分のチェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Candidate">入力文字候補</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckKana(System.String@,System.Int32,System.String@)">
	<summary>
 カナチェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Digit">桁数</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckDateYM(System.String@,System.String@)">
	<summary>
 年・月チェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckDateYMD(System.String@,System.String@,System.Boolean)">
	<summary>
 年・月・日チェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckYear(System.String@,System.String@)">
	<summary>
 年チェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckMonth(System.String@,System.String@)">
	<summary>
 月チェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckDay(System.String@,System.String@)">
	<summary>
 日チェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckDay99(System.String@,System.String@)">
	<summary>
 日チェック(99許容)
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckChar_NumCode(System.String,System.String@)">
	<summary>
 数字コードの文字チェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckChar_CharCode(System.String,System.String@)">
	<summary>
 文字コードの文字チェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckChar_Single(System.String,System.String@)">
	<summary>
 テキストの文字チェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckChar_TelZip(System.String,System.String@)">
	<summary>
 電話・郵便番号などの文字チェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckChar_Kubun(System.String,System.String,System.String@)">
	<summary>
 区分の文字チェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Candidate">入力文字候補</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckChar_Kana(System.String,System.String@)">
	<summary>
 カナの文字チェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckChar_Numeric(System.String,System.String@)">
	<summary>
 数値の文字チェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.CheckChar_NonnegativeNumeric(System.String,System.String@)">
	<summary>
 非負数値の文字チェック
 </summary>
	<param name="Text">対象のテキスト</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.InputNumeric(ILL.ERF.BaseLib.CTLTXT@,System.Decimal,System.String@)">
	<summary>
 テキストボックスに数値を入力（フォーマット処理付
 </summary>
	<param name="TextBox">対象のテキストボックス</param>
	<param name="Value">代入する値</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.LenB(System.String)">
	<summary>
 Shift-Jisでの文字長取得
 </summary>
	<param name="str"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.PadLeft(System.String,System.Int32)">
	<summary>
 PadLeftをShift-Jisでの文字長で行います。
 （空白で埋める）
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.PadRight(System.String,System.Int32)">
	<summary>
 PadRightをShift-Jisでの文字長で行います。
 （空白で埋める）
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.PadLeft(System.String,System.Int32,System.Char)">
	<summary>
 PadLeftをShift-Jisでの文字長で行います。
 （指定した文字で埋める）
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CHKTXT.PadRight(System.String,System.Int32,System.Char)">
	<summary>
 PadRightをShift-Jisでの文字長で行います。
 （指定した文字で埋める）
 </summary>
</member><member name="T:ILL.ERF.BaseLib.CHKTXT">
	<summary>
 テキストチェック用クラス
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.ExecParameter.#ctor(System.String)">
	<summary>コンスラクタ</summary>
</member><member name="M:ILL.ERF.BaseLib.ExecParameter.#ctor(System.String,System.String,System.String,System.String,System.String)">
	<summary>コンスラクタ</summary>
</member><member name="M:ILL.ERF.BaseLib.ExecParameterCollection.Add(System.String,System.String,System.String,System.String,System.String)">
	<summary>コンスラクタ</summary>
</member><member name="M:ILL.ERF.BaseLib.DBMapping.#ctor(System.String,System.Windows.Forms.Control,System.String,System.String)">
	<summary>
 通常の使用時
 </summary>
	<param name="Column">DBの列名</param>
	<param name="Control">コントロール</param>
	<param name="NothingDefValue">DBの値がブランクの場合に設定するデフォルト値</param>
	<param name="NotNothingDefValue">DBの値がブランクではない場合に設定するデフォルト値</param>
</member><member name="M:ILL.ERF.BaseLib.DBMapping.#ctor(System.String,ILL.ERF.BaseLib.CTLBDY,System.Int32@,System.String,System.String,System.String)">
	<summary>
 ShelfとDBの列名とをマッピングします
 </summary>
	<param name="Column">DBの列名</param>
	<param name="RowIndex">DataRow</param>
	<param name="PTBLColName">P_TBLでの列名</param>
	<param name="NothingDefValue">DBの値がブランクの場合に設定するデフォルト値</param>
	<param name="NotNothingDefValue">DBの値がブランクではない場合に設定するデフォルト値</param>
</member><member name="M:ILL.ERF.BaseLib.DBMapping.#ctor(System.String,System.Windows.Forms.Control)">
	<summary>
 通常の使用時
 </summary>
	<param name="Column">DBの列名</param>
	<param name="Control">コントロール</param>
</member><member name="M:ILL.ERF.BaseLib.DBMapping.#ctor(System.String,ILL.ERF.BaseLib.CTLBDY,System.Int32@,System.String)">
	<summary>
 ShelfとDBの列名とをマッピングします
 </summary>
	<param name="Column">DBの列名</param>
	<param name="RowIndex">DataRow</param>
	<param name="PTBLColName">P_TBLでの列名</param>
</member><member name="T:ILL.ERF.BaseLib.DBMapping">
	<summary>
 DBの列名と画面項目を対応付けたクラス
 RoutineGetMasterAllなどのときは
 このクラスのコレクションを作成して使用してください。
 </summary>
</member><member name="T:ILL.ERF.BaseLib.DBMappingCollection">
	<summary>
 DBの列名と画面項目を対応付けたオブジェクトのコレクション
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.KeyColumnPair.#ctor(System.String,ILL.ERF.BaseLib.CTLTXT)">
	<summary>
 キー値にIErfControlの値を使います。
 </summary>
	<param name="Name">キー列名</param>
	<param name="ValueText">キー値</param>
</member><member name="M:ILL.ERF.BaseLib.KeyColumnPair.#ctor(System.String,System.String)">
	<summary>
 キー値に固定文字列を使います。
 </summary>
	<param name="Name">キー列名</param>
	<param name="Value">キー値</param>
</member><member name="M:ILL.ERF.BaseLib.KeyColumnPair.#ctor(System.String,ILL.ERF.BaseLib.CTLBDY,System.Int32,System.String)">
	<summary>
 キー値にShelf内の文字列を使います。
 </summary>
	<param name="Name">キー列名</param>
	<param name="Body">対象のボディ</param>
	<param name="RowIndex">Shelfの何行目か</param>
	<param name="ConditionText">対象のShelfの列名</param>
</member><member name="P:ILL.ERF.BaseLib.KeyColumnPair.KeyPrefix">
	<summary>
 テーブル取得を行う際の、キー項目の値の前に必ず設定される固定の文字列です。
 </summary>
</member><member name="T:ILL.ERF.BaseLib.KeyColumnPair">
	<summary>
 DB取得時のキーのペア
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.DataGetFlag.Normal">
	<summary>全て</summary>
</member><member name="F:ILL.ERF.BaseLib.DataGetFlag.OnLoadHANTR">
	<summary>
 過去伝票呼出時
 名称を検索
 </summary>
</member><member name="F:ILL.ERF.BaseLib.DataGetFlag.OnLoadMTMTR">
	<summary>
 見積トラン引当時
 名称のみ
 </summary>
</member><member name="F:ILL.ERF.BaseLib.DataGetFlag.OnLoadJTYTR">
	<summary>
 受注トラン引当時
 受注見出トランに存在する項目は検索しない
 </summary>
</member><member name="F:ILL.ERF.BaseLib.DataGetFlag.OnRepeat">
	<summary>
 リピート時用
 略称、伝票種別以外読み直し
 </summary>
</member><member name="T:ILL.ERF.BaseLib.DataGetFlag">
	<summary>
 データ取得時のフラグ
 </summary>
</member><member name="M:ILL.ERF.BaseLib.GetTableSub.ReturnTableItem(System.String,ILL.ERF.BaseLib.KeyColumnPair,System.String,ILL.ERF.BaseLib.IDTMGR,System.String@)">
	<summary>
 DBから項目を文字列として取得（キー1つ）
 </summary>
	<param name="TableName"></param>
	<param name="KeyColumnPair">キー名とキー値のペアのリスト</param>
	<param name="ResultColumnName">取得する列名</param>
</member><member name="M:ILL.ERF.BaseLib.GetTableSub.ReturnTableItem(System.String,System.Collections.ObjectModel.Collection{ILL.ERF.BaseLib.KeyColumnPair},System.String,ILL.ERF.BaseLib.IDTMGR,System.String@)">
	<summary>
 DBから項目を文字列として取得（キー複数）    
 </summary>
	<param name="TableName"></param>
	<param name="KeyColumnPairs">キー名とキー値のペアのリスト</param>
	<param name="ResultColumnName">取得する列名</param>
</member><member name="M:ILL.ERF.BaseLib.GetTableSub.GetTableInternal(System.String,ILL.ERF.BaseLib.KeyColumnPair,ILL.ERF.BaseLib.IDTMGR,System.String@)">
	<summary>
 DBから指定したテーブルをDataTableで返します。（キー1つ）
 </summary>
	<param name="TableName">テーブル名</param>
	<param name="KeyColumnPair">キー名とキー値のペア</param>
	<param name="Data">IDTMGR</param>
</member><member name="M:ILL.ERF.BaseLib.GetTableSub.GetTableInternal(System.String,System.Collections.ObjectModel.Collection{ILL.ERF.BaseLib.KeyColumnPair},ILL.ERF.BaseLib.IDTMGR,System.String@)">
	<summary>
 DBから指定したテーブルをDataTableで返します。（キー複数）
 </summary>
	<param name="TableName">テーブル名</param>
	<param name="KeyColumnPairs">キー名とキー値のペアのリスト</param>
	<param name="Data">IDTMGR</param>
</member><member name="M:ILL.ERF.BaseLib.GetTableSub.GetTableInternal(System.String,System.Collections.ObjectModel.Collection{ILL.ERF.BaseLib.KeyColumnPair},System.Boolean,ILL.ERF.BaseLib.IDTMGR,System.String@)">
	<summary>
 DBから指定したテーブルをDataTableで返します。（キー複数）
 </summary>
	<param name="TableName">テーブル名</param>
	<param name="KeyColumnPairs">キー名とキー値のペアのリスト</param>
	<param name="Data">IDTMGR</param>
	<param name="GetAll">列をすべて取得するか</param>
</member><member name="M:ILL.ERF.BaseLib.EXDTP.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.Int32@)">
	<summary>SendMessage</summary>
</member><member name="M:ILL.ERF.BaseLib.EXDTP.SetForegroundWindow(System.IntPtr)">
	<summary>SetForegroundWindow</summary>
</member><member name="M:ILL.ERF.BaseLib.EXDTP.FindControl(System.Windows.Forms.Control,System.String)">
	<summary>指定したコントロール内に含まれるコントロールを指定した名前で検索します。</summary>
	<param name="hParent">検索対象となる親コントロール。</param>
	<param name="stName">検索するコントロールの名前。</param>
	<returns>取得したコントロールのインスタンス。取得できなかった場合は Nothing。</returns>
 ---------------------------------------------------------------------------------------

</member><member name="M:ILL.ERF.BaseLib.EXDTP.FindBrotherControl(System.Windows.Forms.Control,System.Windows.Forms.Control)">
	<summary>指定したコントロール内に含まれる兄弟コントロールを検索します。</summary>
	<param name="hParent">検索対象となる親コントロール。</param>
	<param name="hStart">検索する元のコントロール。</param>
	<returns>取得したコントロールのインスタンス。取得できなかった場合は Nothing。</returns>
 ---------------------------------------------------------------------------------------

</member><member name="M:ILL.ERF.BaseLib.CTLLBL.#ctor">
	<summary>コンストラクタ</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLLBL.InitializeColor">
	<summary>非アクティブ色初期化処理</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLLBL.OnPaint(System.Windows.Forms.PaintEventArgs)">
	<summary>描画時</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLLBL.Activate">
	<summary>
 アクティブにする
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLLBL.Inactivate">
	<summary>
 アクティブでなくす
 </summary>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLLBL.InactiveColor">
	<summary>
 アクティブでないときの背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLLBL.ActiveColor">
	<summary>
 アクティブなときの背景色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.CTLLBL">
	<summary>
 ラベルコントロール
 </summary>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.CTLBDYVScrollBar.SCEventArgs.Cancel">
	<summary>キャンセル</summary>
</member><member name="T:ILL.ERF.BaseLib.CTLBDY.CTLBDYVScrollBar.SCEventArgs">
	<summary>イベント引数型</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.CTLBDYVScrollBar.#ctor">
	<summary>コンストラクタ</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.CTLBDYVScrollBar.WndProc(System.Windows.Forms.Message@)">
	<summary>ウィンドウプロシージャ</summary>
</member><member name="T:ILL.ERF.BaseLib.CTLBDY.CTLBDYVScrollBar">
	<summary>BODY用縦スクロールバーClass</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.CTLBDYEventArgs.Cancel">
	<summary>キャンセル</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.CTLBDYEventArgs.CurrentStartLine">
	<summary>現在の表示開始行</summary>
</member><member name="T:ILL.ERF.BaseLib.CTLBDY.CTLBDYEventArgs">
	<summary>イベント引数型</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.Details">
	<summary>明細行のオブジェクト</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.Shelf">
	<summary>内部で保持しているデータ</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.Lines_Screen">
	<summary>画面上の行数</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.Lines_Shelf">
	<summary>内部での行数</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.DetailClass">
	<summary>明細行として複製するクラス名</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.BackColorOddRow">
	<summary>奇数行の背景色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.BackColorEvenRow">
	<summary>偶数行の背景色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.SelfCreateDetail">
	<summary>CreateInctanceメソッドを用いて明細行を生成するか否か</summary>
	<value>True:CreateInctance、False:(デフォルト)DetailClassクラス名を用いる</value>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.VerticalScrollBar">
	<summary>スクロールバーを使うかどうか</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.HasMoreNextLine">
	<summary>スクロールする際、それ以上スクロールする余地があるか</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.HasMorePreviousLine">
	<summary>
 スクロールで戻る際、それ以上スクロールする余地があるか
 </summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.KeyColumn">
	<summary>キーとなる列名</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.StartLine">
	<summary>
 現在表示している一行目が
 内部テーブルにおいて何行目か
 </summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.Label">
	<summary>関連付けるLabel</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLBDY.AutoSendShelfToScreen">
	<summary>
 Shelfの内容の変更を即座に画面に転送するかどうか
 初期値はTrue（転送する）
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.GetMustInputLine_Screen">
	<summary>
 次に入力しなければならない行
 キー列が始めに空になる行（画面上
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.GetMaxInputedLine_Screen">
	<summary>
 入力済みの行（画面上
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.IsInputedLine_Screen(System.Int32)">
	<summary>
 入力済みの行（画面上
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.GetInputLastLine_Shelf">
	<summary>
 入力されている中で最後の行
 キー列が入力されている最後の行（内部
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.GetInputLastLine_Screen">
	<summary>
 入力されている中で最後の行
 キー列が入力されている最後の行（画面上
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.GetKeyValue_Next">
	<summary>
 Key列の最後に入力されている値を取得　次頁用
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.GetKeyValue_Previous">
	<summary>
 Key列の最初に入力されている値を取得　前頁用
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.CreateDetails">
	<summary>
 BODY内に明細を自動作成
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.IsAvailableClass(System.String)">
	<summary>
 指定されたクラスが有効かどうか
 </summary>
	<param name="obj">対象のクラス名</param>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.GetInstance">
	<summary>インスタンス取得オーバーライド</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.InitializeShelf">
	<summary>P_Shelfに列と行を自動作成</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.SetLines">
	<summary>行のセット</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.SetLines_Shelf">
	<summary>行のセット</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.SetLines_DataRow(System.Int32)">
	<summary>各明細にDataRowをセット</summary>
	<param name="StartLine">開始行</param>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.SetLines_Enabled">
	<summary>行数に応じてEnabledなどをセット</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.SetTemporaryStartLine(System.Int32)">
	<summary>StartLineを一時的にセット</summary>
	<remarks>ReDrawが呼ばれる前に必ずResetTemporaryStartLineを呼ぶ必要があります。</remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.ResetTemporaryStartLine">
	<summary>StartLineを元に戻す</summary>
	<remarks>必ずSetTemporaryStartLineとセットで使用します。</remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.GetItem(System.Int32,System.String)">
	<summary>明細の項目を取得</summary>
	<param name="RowNumber">行番号</param>
	<param name="ColumnName">列名（項目名）</param>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.GetItemAsCTLDTC(System.Int32,System.String)">
	<summary>明細の項目を取得(CTLTXT)</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.GetItemAsCTLTXT(System.Int32,System.String)">
	<summary>明細の項目を取得(CTLTXT)</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.GetRowNumber(System.Windows.Forms.Control)">
	<summary>
 対象のコントロールが何行目の明細に所属しているのか取得
 </summary>
	<param name="obj">対象のコントロール</param>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.Shelf_To_Screen(System.Int32,System.String)">
	<summary>
 内部データから表示項目にデータを移行（指定行、指定項目のみ）
 </summary>
	<param name="RowNumber">行番号（画面上）</param>
	<param name="ColumnName">列名（項目名）</param>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.Shelf_To_Screen(System.Int32)">
	<summary>
 内部データから表示項目にデータを移行（指定行のみ）
 </summary>
	<param name="RowNumber">行番号（画面上）</param>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.Shelf_To_Screen">
	<summary>
 内部データから表示項目にデータを移行（全行）
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.Shelf_To_Screen_OnScroll(System.Int32)">
	<summary>
 内部データから表示項目にデータを移行（指定行のみ）
 </summary>
	<param name="RowNumber">行番号（画面上）</param>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.Shelf_To_Screen_OnScroll">
	<summary>
 内部データから表示項目にデータを移行（全行）
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.Screen_To_Shelf(System.Int32,System.String)">
	<summary>
 表示項目から内部データにデータを移行（指定行、指定項目のみ）
 </summary>
	<param name="RowNumber">行番号（画面上）</param>
	<param name="ColumnName">列名（項目名）</param>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.Screen_To_Shelf(System.Int32)">
	<summary>
 表示項目から内部データにデータを移行（指定行のみ）
 </summary>
	<param name="RowNumber">行番号（画面上）</param>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.Screen_To_Shelf">
	<summary>
 表示項目から内部データにデータを移行（全行）
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.ReDraw(System.Int32)">
	<summary>
 スクロール処理
 開始行数を指定して再表示
 </summary>
	<param name="StartLine">開始行</param>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.SetSize">
	<summary>コントロールのサイズを変更</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.WndProc(System.Windows.Forms.Message@)">
	<summary>ウィンドウプロシージャ</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.VScrollBar_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
	<summary>スクロール</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.CTLBDY_MouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>マウスホイールでのスクロール</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.BODY_Load(System.Object,System.EventArgs)">
	<summary>コントロールのロード時イベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.BODY_Resize(System.Object,System.EventArgs)">
	<summary>リサイズ時の処理</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.InitializeRow(System.Int32,System.Data.DataRow)">
	<summary>
 指定した行の画面とShelfの初期化を行います。    
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.InitializeRow(System.Int32)">
	<summary>
 指定した行の画面とShelfの初期化を行います。    
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.P_Shelf_ColumnChanged(System.Object,System.Data.DataColumnChangeEventArgs)">
	<summary>
 Shelfの中身が画面と異なっている場合は画面に転送する
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.ResetNoInputLine">
	<summary>
 未入力行の数値項目の0などが表示されてしまうのを防ぎます。
 </summary>
</member><member name="M:ILL.ERF.BaseLib.CTLBDY.IsInputedLine_Screen(System.Windows.Forms.Control)">
	<summary>
 入力済みの行(キー項目以外の数値項目もチェックする)
 キー項目以外の文字列項目は行NO等の常に入力されている項目が存在するためチェックできない
 </summary>
</member><member name="T:ILL.ERF.BaseLib.CTLBDY">
	<summary>ボディ用コントロール</summary>
</member><member name="M:ILL.ERF.BaseLib.DTLBAS.GetItem(System.String)">
	<summary>
 明細行内のコントロールを取得
 </summary>
	<param name="ControlName">コントロール名</param>
</member><member name="M:ILL.ERF.BaseLib.DTLBAS.GetItemAsCTLTXT(System.String)">
	<summary>
 明細行内のコントロールを取得(CTLTXT)
 </summary>
	<param name="ColumnName">項目名</param>
</member><member name="M:ILL.ERF.BaseLib.DTLBAS.GetItemAsCTLDTC(System.String)">
	<summary>
 明細行内のコントロールを取得(CTLDTC)
 </summary>
	<param name="ColumnName">項目名</param>
</member><member name="M:ILL.ERF.BaseLib.DTLBAS.Screen_To_Shelf(System.String)">
	<summary>
 表示項目からデータオブジェクトへデータ移行
 </summary>
	<param name="ColumnName">項目名</param>
</member><member name="M:ILL.ERF.BaseLib.DTLBAS.ClearText(System.Windows.Forms.Control)">
	<summary>
 カーソル項目の一括初期化処理
 指定したコントロールの子項目のText, OldTextがクリアされる
 </summary>
	<param name="obj">対象のコントロール
 Nothingを指定した場合は全てのコントロール</param>
</member><member name="M:ILL.ERF.BaseLib.DTLBAS.Shelf_To_Screen(System.String)">
	<summary>
 データオブジェクトから表示項目へデータ移行
 </summary>
	<param name="ColumnName">項目名</param>
</member><member name="M:ILL.ERF.BaseLib.DTLBAS.Shelf_To_Screen_OnScroll(System.String)">
	<summary>
 データオブジェクトから表示項目へデータ移行
 （スクロール時には不要なマスタ取得などを走らせないため
 　OldTextを先にセットする）
 </summary>
	<param name="ColumnName">項目名</param>
</member><member name="M:ILL.ERF.BaseLib.DTLBAS.EVTMGR_ChangeCommitted(System.Object,ILL.ERF.BaseLib.MOVMGR.MOVMGREventArgs)">
	<summary>
 明細項目の値が変化すると、自動的に内部Shelfに転送します。
 </summary>
</member><member name="M:ILL.ERF.BaseLib.DTLBAS.SetPreferedWidth">
	<summary>最適横幅設定処理</summary>
	<remarks>可視コントロールがすべて表示される横幅を計算して設定する。</remarks>
</member><member name="M:ILL.ERF.BaseLib.DTLBAS.GetDataCheckControls">
	<summary>データチェックコントロール取得処理</summary>
</member><member name="P:ILL.ERF.BaseLib.DTLBAS.Row">
	<summary>
 明細行に対応するデータオブジェクト
 </summary>
</member><member name="P:ILL.ERF.BaseLib.DTLBAS.Index">
	<summary>この明細の行番</summary>
</member><member name="P:ILL.ERF.BaseLib.DTLBAS.This">
	<summary>このインスタンスを返す</summary>
</member><member name="P:ILL.ERF.BaseLib.DTLBAS.DataCheckControls">
	<summary>
 明細行のデータチェック項目
 </summary>
</member><member name="T:ILL.ERF.BaseLib.DTLBAS">
	<summary>
 BODYの明細用コントロールの基本クラスです。
 </summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.JTY">
	<summary>受注</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.URI">
	<summary>売上</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.NYU">
	<summary>入金</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.HTY">
	<summary>発注</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.SRE">
	<summary>仕入</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.PAY">
	<summary>支払</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.OKR">
	<summary>送り状</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.IOK">
	<summary>入出庫</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.SEI">
	<summary>請求書</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.SHA">
	<summary>支払書</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.ZEI_SEI">
	<summary>請求消費税</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.ZEI_SHA">
	<summary>支払消費税</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.ZEI_URK">
	<summary>売掛消費税</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.ZEI_KAI">
	<summary>買掛消費税</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.MTM">
	<summary>見積</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.DLV">
	<summary>出荷</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.ARV">
	<summary>入荷</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.NFD">
	<summary>荷札</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.ZEITYO_URK">
	<summary>売掛税調整</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.ZEITYO_KAI">
	<summary>買掛税調整</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.KNR_JTY">
	<summary>受注管理NO</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.KNR_URI">
	<summary>販売管理NO</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.KNR_HTY">
	<summary>発注管理NO</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.KNR_SRE">
	<summary>購買管理NO</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.KNR_IOK">
	<summary>入出庫管理NO</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.KNR_MTM">
	<summary>見積管理NO</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.KNR_DLV">
	<summary>出荷管理NO</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.KNR_ARV">
	<summary>入荷管理NO</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.CRM">
	<summary>対応NO</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.AKN">
	<summary>案件</summary>
</member><member name="F:ILL.ERF.BaseLib.SAIBAS.SAIKB.WRK">
	<summary>作業</summary>
</member><member name="M:ILL.ERF.BaseLib.SAIBAS.GetLatestSAINO(ILL.ERF.BaseLib.IDTMGR,System.String@,System.Boolean)">
	<summary>
 採番ファイルから最新の採番を取得
 </summary>
	<param name="Err">エラーメッセージ（戻り値）</param>
	<returns>8桁の伝票番号を文字列で返す（エラー時は空文字）</returns>
</member><member name="M:ILL.ERF.BaseLib.SAIBAS.GetKNRNO(ILL.ERF.BaseLib.INIMGR,ILL.ERF.BaseLib.IDTMGR,System.String@)">
	<summary>管理NOの取得</summary>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.SAIBAS.UpdateSAIFL(ILL.ERF.BaseLib.INIMGR,ILL.ERF.BaseLib.IDTMGR,System.String@)">
	<summary>
 最新の採番を取得し、
 採番ファイルも更新する    
 </summary>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="P:ILL.ERF.BaseLib.SAIBAS.CurrentSAIKB">
	<summary>
 その計上で使う伝票NOの採番区分
 </summary>
</member><member name="P:ILL.ERF.BaseLib.SAIBAS.CurrentKNRKB">
	<summary>
 その計上で使う管理NOの採番区分
 </summary>
</member><member name="T:ILL.ERF.BaseLib.SAIBAS">
	<summary>
 採番ファイルの情報格納クラス
 計上での伝票NOの採番に関する処理を担当するクラス
 </summary>
</member><member name="P:ILL.ERF.BaseLib.PRTMGR.DENKB">
	<summary>
 プリンタ設定取得時の伝票種別区分です。例えば、売上関係ならば"02"です。
 </summary>
</member><member name="P:ILL.ERF.BaseLib.PRTMGR.DENSB">
	<summary>プリンタ設定取得時の伝票種別です。</summary>
</member><member name="P:ILL.ERF.BaseLib.PRTMGR.ReportID">
	<summary>
 プリンタ設定取得時のRPXファイル名です。帳票発行時に設定します。
 伝票発行時は空文字を設定して下さい。
 </summary>
</member><member name="M:ILL.ERF.BaseLib.PRTMGR.ShowPrinterDialog(System.Windows.Forms.PrintDialog,ILL.ERF.BaseLib.INIMGR,ILL.ERF.BaseLib.IDTMGR)">
	<summary>
 プリンタダイアログの表示　DBにプリンタ設定を読込・保存する
 </summary>
</member><member name="M:ILL.ERF.BaseLib.PRTMGR.GetUserPrinterSetting(System.String,System.String,System.String,System.String,ILL.ERF.BaseLib.IDTMGR,System.Drawing.Printing.PrinterSettings)">
	<summary>
 個別のプリンタ設定を取得します。
 </summary>
	<param name="DENKB">伝票種別区分</param>
	<param name="DENSB">伝票種別</param>
	<param name="LoginID">ログイン名</param>
	<param name="ReportID">Reportファイル名 帳票の場合入力します。伝票ならば空文字を渡して下さい。</param>
	<param name="DATA">IDTMGR</param>
	<param name="ps">変更する対象のPriterSettings</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.PRTMGR.SetUserPrinterSetting(System.String,System.String,System.String,System.String,ILL.ERF.BaseLib.IDTMGR,System.Drawing.Printing.PrinterSettings@)">
	<summary>
 プリンタダイアログで選んだプリンタ設定をデータベースに保存します。
 </summary>
</member><member name="T:ILL.ERF.BaseLib.PRTMGR">
	<summary>
 印刷関連の処理を行います。具体的には、プリンタ設定の取得・保存、もしくはActiveReports関連の設定用の処理が含まれます。
 </summary>
</member><member name="F:ILL.ERF.BaseLib.SECMGR.SecurityType.Use">
	<summary>使用</summary>
</member><member name="F:ILL.ERF.BaseLib.SECMGR.SecurityType.Update">
	<summary>更新</summary>
</member><member name="F:ILL.ERF.BaseLib.SECMGR.SecurityType.Delete">
	<summary>削除</summary>
</member><member name="F:ILL.ERF.BaseLib.SECMGR.SecurityType.Print">
	<summary>印刷</summary>
</member><member name="T:ILL.ERF.BaseLib.SECMGR.SecurityType">
	<summary>権限タイプ</summary>
</member><member name="M:ILL.ERF.BaseLib.SECMGR.CheckSecurity(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.INIMGR,ILL.ERF.BaseLib.USJMGR,System.String,System.String,ILL.ERF.BaseLib.SECMGR.SecurityType,System.Boolean,System.String)">
	<summary>
 セキュリティチェック
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="ini">INI情報オブジェクト</param>
	<param name="USJ">ユーザー情報オブジェクト</param>
	<param name="EXEName">プログラム名</param>
	<param name="Type">権限タイプ</param>
	<param name="ErrorRaiseFlag">権限が無い場合にメッセージボックスで警告を出すかどうかのフラグ</param>
</member><member name="T:ILL.ERF.BaseLib.SECMGR">
	<summary>セキュリティ情報管理クラス</summary>
</member><member name="E:ILL.ERF.BaseLib.CTLFBD.GetResult">
	<summary>データ取得イベント</summary>
</member><member name="E:ILL.ERF.BaseLib.CTLFBD.ReGetData_ChangeSort">
	<summary>ソート変更イベント</summary>
</member><member name="E:ILL.ERF.BaseLib.CTLFBD.ReGetData_NextPage">
	<summary>次頁イベント</summary>
</member><member name="E:ILL.ERF.BaseLib.CTLFBD.ReGetData_PrevPage">
	<summary>前頁イベント</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLFBD.ReturnColumnName">
	<summary>検索の戻り値の列名</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLFBD.ReturnColumnNames">
	<summary>検索の戻り値の列名(コレクション)</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLFBD.SortProperty">
	<summary>ソート情報</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLFBD.DefaultRowCount">
	<summary>グリッドに表示する行数</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLFBD.GridInfo">
	<summary>グリッドに列順・列幅を格納したテーブル</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLFBD.RememberArrangement">
	<summary>
 グリッドの各列の列幅・列順を
 グリッド情報マスタに記憶させる機能を使用するか
 </summary>
</member><member name="P:ILL.ERF.BaseLib.CTLFBD.ReturnData">
	<summary>
 グリッドをダブルクリックしたときにデータを返すかどうか
 </summary>
	<remarks>通常はTrue（検索）で、特別な用途でFalseにします</remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.#ctor">
	<summary>コンストラクタ</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.ShowData(System.Object,System.String@)">
	<summary>グリッドにデータを表示する</summary>
	<param name="obj">表示するデータのオブジェクト</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.SetUpsideDown(System.Object)">
	<summary>前頁の時にデータを逆順にセットしなおす</summary>
	<param name="obj">グリッドに関連付けられたデータオブジェクト</param>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.ReturnValue">
	<summary>値を戻す</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.OnGetResult(System.Object)">
	<summary>GetResultイベントのイベントサブ</summary>
	<param name="obj">戻す値</param>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.ReturnValues">
	<summary>複数の値を戻す</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.SetSortMark">
	<summary>ソート記号の設定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.SetFocus">
	<summary>フォーカスを当てる</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.SetFocus_LastRow">
	<summary>
 フォーカスを当てる（最終行指定）
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.IsEmptyRow(System.Int32)">
	<summary>その行が空白行かどうか</summary>
	<param name="RowIndex">行番号</param>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.GetLastRowNumber">
	<summary>空白で無い最終行を取得</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.SetDisplayIndex">
	<summary>列順の指定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.SetDisplayIndexGridInfo">
	<summary>表示位置からのグリッド情報(列順)設定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.PrevPage">
	<summary>前頁</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.NextPage">
	<summary>次頁</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.Body_ColumnAdded(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
	<summary>グリッドの列追加イベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.Body_Disposed(System.Object,System.EventArgs)">
	<summary>検索破棄時にリソースも破棄</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.Body_Click(System.Object,System.EventArgs)">
	<summary>クリックイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.Body_DoubleClick(System.Object,System.EventArgs)">
	<summary>ダブルクリックイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.Body_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>キーダウンイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
	<summary>キーダウンイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.Body_Leave(System.Object,System.EventArgs)">
	<summary>Leaveイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.Body_Enter(System.Object,System.EventArgs)">
	<summary>Enterイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.Body_SelectionChanged(System.Object,System.EventArgs)">
	<summary>選択行変更イベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.Body_ColumnWidthChanged(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
	<summary>列幅変更イベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.Body_ColumnDisplayIndexChanged(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
	<summary>列順変更イベント</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLFBD.CheckExistColumn(System.String)">
	<summary>列の存在確認</summary>
</member><member name="T:ILL.ERF.BaseLib.CTLFBD">
	<summary>グリッドコントロール</summary>
</member><member name="M:ILL.ERF.BaseLib.IRFHDR.SetParameters(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)">
	<summary>入力値パラメータ設定</summary>
</member><member name="P:ILL.ERF.BaseLib.IRFHDR.ReportFilePath">
	<summary>レポートファイルパス設定</summary>
</member><member name="P:ILL.ERF.BaseLib.IRFHDR.ReportFileName">
	<summary>レポートファイル名設定</summary>
</member><member name="E:ILL.ERF.BaseLib.IRFHDR.Focus">
	<summary>フォーカスイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.IRFHDR.OnRaiseFocus(System.Object,System.EventArgs)">
	<summary>フォーカスイベント発生処理</summary>
</member><member name="P:ILL.ERF.BaseLib.FNDMGR.SortInfo.SortName">
	<summary>
 ソート列名
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.FNDMGR.SortInfo.SortASC">
	<summary>
 昇順か
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.FNDMGR.SortInfo">
	<summary>
 ソート情報クラス
 </summary>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.FNDMGR.Fields.FieldName">
	<summary>
 項目名
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.FNDMGR.Fields.FieldValue">
	<summary>
 項目の値
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.FNDMGR.Fields">
	<summary>
 項目クラス
 </summary>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.My.Resources.Resources.ResourceManager">
	<summary>
  このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
</summary>
</member><member name="P:ILL.ERF.BaseLib.My.Resources.Resources.Culture">
	<summary>
  厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
  現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
</summary>
</member><member name="T:ILL.ERF.BaseLib.My.Resources.Resources">
	<summary>
  ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLCMB.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.Int32@)">
	<summary>SendMessage</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLCMB.Servant">
	<summary>自分のサーバント</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLCMB.Label">
	<summary>関連付けるLabel</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLCMB.BackColorReadOnly">
	<summary>読み取り専用の時の背景色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLCMB.ForeColorReadOnly">
	<summary>読み取り専用の時の文字色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLCMB.BackColorInactive">
	<summary>カーソルが当たって無い場合の背景色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLCMB.ForeColorInactive">
	<summary>
 カーソルが当たって無い場合の文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLCMB.BackColorNecessary">
	<summary>必須項目の時でかつカーソルが当たった場合の背景色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLCMB.ForeColorNecessary">
	<summary>必須項目でかつカーソルが当たった場合の文字</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLCMB.BackColorNormal">
	<summary>必須項目で無くかつカーソルが当たった場合の背景色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLCMB.ForeColorNormal">
	<summary>必須項目で無くかつカーソルが当たった場合の文字色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLCMB.NotFocused">
	<summary>フォーカス取得設定</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLCMB.ReadOnly">
	<summary>
 読み取り専用
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLCMB.Necessary">
	<summary>必須項目か</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLCMB.OldText">
	<summary>OldText</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLCMB.ChangeForeColor(System.Boolean)">
	<summary>
 文字色変更
 </summary>
	<param name="Active"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLCMB.ChangeBackColor(System.Boolean)">
	<summary>
 背景色変更
 </summary>
	<param name="Active"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLCMB.WndProc(System.Windows.Forms.Message@)">
	<summary>
 WindowMessage処理
 </summary>
	<param name="m"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLTAG.SetTAG(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.BIZMST.ManagementType,ILL.ERF.BaseLib.IRFHDR)">
	<summary>
 付箋初期化
 </summary>
	<param name="data"></param>
	<param name="mode"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLTAG.GetCheckBox(System.Int32)">
	<summary>
 チェックボックス取得処理
 </summary>
	<param name="index">インデックス(１～5)</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.IReference.ReferenceState">
	<summary>現在ActiveReportを使っているのかGridを使用しているのかの状態を持っている</summary>
</member><member name="T:ILL.ERF.BaseLib.IReference.CurrentTranState">
	<summary>伝票発行モード</summary>
</member><member name="T:ILL.ERF.BaseLib.IReference.Check">
	<summary>Seless判定するかしないか</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.Owner">
	<summary>親画面</summary>
</member><member name="T:ILL.ERF.BaseLib.IReference.DiffType">
	<summary>差分処理(するなら比較先)</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.DefaultSort">
	<summary>初期ソート情報</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.Sort">
	<summary>ソート情報</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.SelectColumns">
	<summary>SELECT句パラメータ</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.WhereParameters">
	<summary>入力値パラメータ</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.DefaultParameters">
	<summary>初期値パラメータ</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.OrderColumns">
	<summary>ORDER句パラメータ</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.Query">
	<summary>SQL</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.QuerySelect">
	<summary>SELECT句</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.QueryFrom">
	<summary>FROM句</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.QueryWhere">
	<summary>WHERE句</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.QueryOrder">
	<summary>ORDER句</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.QueryGroup">
	<summary>GROUP句</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.Result">
	<summary>取得結果</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.CurrentReferenceState">
	<summary>現在ActiveReportを使っているのかGridを使用しているのかの状態を持っている</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.ColumnSection">
	<summary>ColumnSectionID</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.FromSection">
	<summary>FromSectionID</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.WhereSection">
	<summary>WhereSectionID</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.OrderSection">
	<summary>OrderSectionID</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.GroupSection">
	<summary>GroupSectionID</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.CurrentMode">
	<summary>CurrentModeID</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.FormText">
	<summary>問合せ画面タイトル</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.ReferenceDocument">
	<summary>指定されたXMLDocument</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.ReferenceSchema">
	<summary>XMLNode(グリッド、帳票共通)</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.LoadSetting">
	<summary>列の設定をXMLから読み込むか設定</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.XmlFilePath">
	<summary>XMLファイルパス</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.XmlFileName">
	<summary>XMLファイル名</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.NameSpc">
	<summary>名前空間</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.AssemblyName">
	<summary>アセンブリ名</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.GridForm">
	<summary>クラス名</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.MyNameSpace">
	<summary>親の名前空間保持</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.ExecParameters">
	<summary>起動時パラメータ</summary>
</member><member name="M:ILL.ERF.BaseLib.IReference.SetExecParameters">
	<summary>起動パラメーター設定</summary>
</member><member name="M:ILL.ERF.BaseLib.IReference.FN_JumpUI(System.Boolean@)">
	<summary>ジャンプボタンを表示するか否か</summary>
</member><member name="M:ILL.ERF.BaseLib.IReference.DrillDownCallback(System.Object,ILL.ERF.BaseLib.TYPMGR.JumpEventArgs)">
	<summary>ジャンプ処理</summary>
</member><member name="M:ILL.ERF.BaseLib.IReference.ButtonClickCallback(System.Object,ILL.ERF.BaseLib.TYPMGR.JumpEventArgs)">
	<summary>ボタンクリック処理</summary>
</member><member name="M:ILL.ERF.BaseLib.IReference.ColumnAddedCallback(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
	<summary>列追加処理</summary>
</member><member name="M:ILL.ERF.BaseLib.IReference.FN_RemarkUI(System.Boolean@,System.Boolean@)">
	<summary>自動備考表示を使用するか否か</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.ReportFilePath">
	<summary>レポートファイルパス</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.ReportFileName">
	<summary>レポートファイル名</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.ReportID">
	<summary>プリンタ設定取得時のRPXファイル名です。帳票発行時に設定します。伝票発行時は空文字を設定して下さい</summary>
</member><member name="P:ILL.ERF.BaseLib.IReference.EnabledConditionSection">
	<summary>抽出条件採用区分の設定を反映するかどうか</summary>
</member><member name="M:ILL.ERF.BaseLib.IReference.CheckReportExistence">
	<summary>レポートの存在確認</summary>
</member><member name="P:ILL.ERF.BaseLib.IMasterServant.Row">
	<summary>そのServantで保持しているマスタ情報</summary>
</member><member name="T:ILL.ERF.BaseLib.IMasterServant">
	<summary>マスタ用のInterface</summary>
</member><member name="P:ILL.ERF.BaseLib.IRFBDY.LoadSetting">
	<summary>列の設定をXMLから読み込むか設定</summary>
</member><member name="P:ILL.ERF.BaseLib.IRFBDY.ColumnSettings">
	<summary>列の設定を保存</summary>
</member><member name="P:ILL.ERF.BaseLib.IRFBDY.CurrentMode">
	<summary>CurrentModeID</summary>
</member><member name="P:ILL.ERF.BaseLib.IRFBDY.GridInfo">
	<summary>グリッドの列順、列幅の情報を保存</summary>
</member><member name="P:ILL.ERF.BaseLib.IRFBDY.INI">
	<summary>INI情報管理クラス</summary>
</member><member name="P:ILL.ERF.BaseLib.IRFBDY.ITM">
	<summary>項目名ファイル管理クラス</summary>
</member><member name="P:ILL.ERF.BaseLib.IRFBDY.USJ">
	<summary>ユーザー情報ファイル管理クラス</summary>
</member><member name="P:ILL.ERF.BaseLib.IRFBDY.Sort">
	<summary>ソート情報</summary>
</member><member name="P:ILL.ERF.BaseLib.IRFBDY.ReturnColumnName">
	<summary>戻り値の列名</summary>
</member><member name="E:ILL.ERF.BaseLib.IRFBDY.ClickButtonColumn">
	<summary>ボタン列クリック</summary>
</member><member name="E:ILL.ERF.BaseLib.IRFBDY.GetResult">
	<summary>データ取得</summary>
</member><member name="E:ILL.ERF.BaseLib.IRFBDY.RetryGetData_ChangeSort">
	<summary>ソート処理イベント</summary>
</member><member name="E:ILL.ERF.BaseLib.IRFBDY.RetryGetData_NextPage">
	<summary>前頁イベント</summary>
</member><member name="E:ILL.ERF.BaseLib.IRFBDY.RetryGetData_PrevPage">
	<summary>次頁イベント</summary>
</member><member name="M:ILL.ERF.BaseLib.USJMGR.LoadUSJFL(ILL.ERF.BaseLib.IDTMGR,System.String,System.String@)">
	<summary>
 ユーザー情報ファイルの読み込み
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="USRID">ユーザーID</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.USJMGR.GetUSJFLValue(System.String,System.String@)">
	<summary>
 ユーザー情報ファイルの値取得
 </summary>
	<param name="Key">取得する項目名</param>
	<param name="Err">取得失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.USJMGR.GetUSJFLValueAsString(System.String,System.String@)">
	<summary>ユーザー情報ファイルの値取得(文字列)</summary>
</member><member name="M:ILL.ERF.BaseLib.USJMGR.GetUSJFLValueAsInteger(System.String,System.String@)">
	<summary>ユーザー情報ファイルの値取得(整数)</summary>
</member><member name="M:ILL.ERF.BaseLib.USJMGR.Dispose">
	<summary>
 リソースの破棄
 </summary>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.USJMGR">
	<summary>
 ユーザー情報ファイル管理クラス
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.LMPMGR.#ctor(System.String,System.String,System.Int32,System.String[])">
	<summary>
 固定明細行数設定つきコンストラクタ
 </summary>
	<param name="SaiKbn">採番区分</param>
	<param name="voucherKey">伝票NOの列名</param>
	<param name="requireDetailCount">明細行数</param>
	<param name="copyFields">空行にコピーする列の名前</param>
	<remarks>1ページの明細行数が固定の場合に用いる。</remarks>
</member><member name="M:ILL.ERF.BaseLib.LMPMGR.FixSelectColumnsForSchema">
	<summary>SELECT句生成(一括伝票発行)</summary>
</member><member name="M:ILL.ERF.BaseLib.LMPMGR.FixSelectColumnsForReport">
	<summary>レポートを読み込みSELECT句生成(一括伝票発行)</summary>
</member><member name="M:ILL.ERF.BaseLib.LMPMGR.FixFromPart">
	<summary>FROM句生成</summary>
</member><member name="M:ILL.ERF.BaseLib.LMPMGR.FixWherePart">
	<summary>WHERE句生成</summary>
</member><member name="M:ILL.ERF.BaseLib.LMPMGR.FixOrderColumns">
	<summary>ORDER句生成</summary>
</member><member name="M:ILL.ERF.BaseLib.LMPMGR.InitializeTranData(System.String@,System.Boolean)">
	<summary>
 伝票トランデータ作成
 計上からの即伝の場合はFromWrktblをTrueにする
 </summary>
	<param name="FromWrktbl">計上で即伝ならばTrue、それ以外はFalse</param>
</member><member name="M:ILL.ERF.BaseLib.LMPMGR.InitializeTranData(System.String@)">
	<summary>
 伝票トランデータ作成
 一括発行画面から使用するならばこちらを使う    
 </summary>
	<param name="Err">エラーメッセージ</param>
</member><member name="M:ILL.ERF.BaseLib.LMPMGR.GetTranData">
	<summary>伝票トランデータ取得</summary>
</member><member name="M:ILL.ERF.BaseLib.LMPMGR.ConstantDetailCountManeuver">
	<summary>明細固定行数伝票処理</summary>
	<remarks>空行の追加およびページ番号の付与を行う。</remarks>
</member><member name="M:ILL.ERF.BaseLib.LMPMGR.UpdatePrintFlag(System.String@)">
	<summary>伝票発行フラグ更新</summary>
</member><member name="M:ILL.ERF.BaseLib.LMPMGR.SetTranState(ILL.ERF.BaseLib.IReference.CurrentTranState)">
	<summary>トランの状態を設定</summary>
</member><member name="M:ILL.ERF.BaseLib.LMPMGR.SetInsertFields">
	<summary>追加列を設定</summary>
</member><member name="M:ILL.ERF.BaseLib.LMPMGR.FixClientName">
	<summary>取引先名のレイアウト処理</summary>
</member><member name="M:ILL.ERF.BaseLib.LMPMGR.GetQueryFromWkTbl">
	<summary>
 QueryFromを即伝用に変更します。
 </summary>
</member><member name="P:ILL.ERF.BaseLib.LMPMGR.UseFix">
	<summary>取引先名のレイアウト処理仕様フラグ</summary>
</member><member name="T:ILL.ERF.BaseLib.LMPMGR">
	<summary>一括伝票発行クラス</summary>
</member><member name="M:ILL.ERF.BaseLib.ITMMGR.LoadITMFL(ILL.ERF.BaseLib.IDTMGR,System.String,System.String@)">
	<summary>
 項目名ファイルの読み込み
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="USRID">ユーザーID</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.ITMMGR.GetITMFLValue(System.String,System.String@)">
	<summary>
 項目名ファイルの値取得
 </summary>
	<param name="Key">取得する項目名</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns>値</returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.ITMMGR.GetITMFLValue(System.String,System.String@,System.Boolean)">
	<summary>
 項目名ファイルの値取得
 </summary>
	<param name="Key">取得する項目名</param>
	<param name="Err">失敗した場合のエラーメッセージ（戻り値）</param>
	<returns>値</returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.ITMMGR.GetITMFLValueAsString(System.String,System.String@)">
	<summary>項目名ファイルの値取得(文字列)</summary>
</member><member name="M:ILL.ERF.BaseLib.ITMMGR.GetITMFLValueAsInteger(System.String,System.String@)">
	<summary>項目名ファイルの値取得(整数)</summary>
</member><member name="M:ILL.ERF.BaseLib.ITMMGR.Dispose">
	<summary>
 リソースの破棄
 </summary>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.ITMMGR">
	<summary>
 項目名ファイル管理クラス
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.SPWMGR.SPParam.ParameterName">
	<summary>パラメータ名</summary>
</member><member name="F:ILL.ERF.BaseLib.SPWMGR.SPParam.Value">
	<summary>パラメータの値</summary>
</member><member name="F:ILL.ERF.BaseLib.SPWMGR.SPParam.Direction">
	<summary>パラメータの方向</summary>
</member><member name="M:ILL.ERF.BaseLib.SPWMGR.SPParam.#ctor(System.String,System.Object)">
	<summary>Directionを指定しないコンストラクタ(Inputになる)</summary>
	<param name="ParameterName"></param>
	<param name="Value"></param>
</member><member name="T:ILL.ERF.BaseLib.SPWMGR.SPParam">
	<summary>
 SPに渡すパラメータクラス
 </summary>
</member><member name="M:ILL.ERF.BaseLib.SPWMGR.CallStoredProcedure(ILL.ERF.BaseLib.IDTMGR,System.String,System.Collections.ObjectModel.Collection{ILL.ERF.BaseLib.SPWMGR.SPParam})">
	<summary>エラーを返さないSP実行メソッド</summary>
</member><member name="M:ILL.ERF.BaseLib.SPWMGR.CallStoredProcedure(ILL.ERF.BaseLib.IDTMGR,System.String,System.Collections.ObjectModel.Collection{ILL.ERF.BaseLib.SPWMGR.SPParam},System.String@)">
	<summary>
 SPを実行するメソッド
 </summary>
	<param name="Data"></param>
	<param name="SPName">SP名</param>
	<param name="Params">パラメータ達</param>
	<param name="Err">エラーを返すバッファ、返さない時はNothingを設定</param>
	<returns>エラーなく帰ってきた時はTrue</returns>
</member><member name="M:ILL.ERF.BaseLib.SPWMGR.UpdateURSUM(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.INIMGR,System.DateTime,System.Int32,System.String,System.String@)">
	<summary>
 売上サマリ更新
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="ini">iniオブジェクト</param>
	<param name="UPDDT">更新日付</param>
	<param name="UPDMODE">更新モード -1:削除更新 +1:登録更新</param>
	<param name="UDNNO">対象の伝票NO</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.SPWMGR.UpdateNKSUM(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.INIMGR,System.DateTime,System.Int32,System.String,System.String@)">
	<summary>
 入金サマリ更新
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="ini">iniオブジェクト</param>
	<param name="UPDDT">更新日付</param>
	<param name="UPDMODE">更新モード -1:削除更新 +1:登録更新</param>
	<param name="NDNNO">対象の伝票NO</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.SPWMGR.UpdatePYSUM(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.INIMGR,System.DateTime,System.Int32,System.String,System.String@)">
	<summary>
 支払サマリ更新
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="ini">iniオブジェクト</param>
	<param name="UPDDT">更新日付</param>
	<param name="UPDMODE">更新モード -1:削除更新 +1:登録更新</param>
	<param name="PDNNO">対象の伝票NO</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.SPWMGR.UpdateSRSUM(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.INIMGR,System.DateTime,System.Int32,System.String,System.String@)">
	<summary>
 仕入サマリ更新
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="ini">iniオブジェクト</param>
	<param name="UPDDT">更新日付</param>
	<param name="UPDMODE">更新モード -1:削除更新 +1:登録更新</param>
	<param name="UDNNO">対象の伝票NO</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.SPWMGR.UpdateDLSUM(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.INIMGR,System.DateTime,System.Int32,System.String,System.String@)">
	<summary>出荷サマリ更新</summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="ini">iniオブジェクト</param>
	<param name="UPDDT">更新日付</param>
	<param name="UPDMODE">更新モード -1:削除更新 +1:登録更新</param>
	<param name="DDNNO">対象の伝票NO</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.SPWMGR.UpdateIOSUM(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.INIMGR,System.DateTime,System.Int32,System.String,System.String@)">
	<summary>
 入出庫サマリ更新
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="ini">iniオブジェクト</param>
	<param name="UPDDT">更新日付</param>
	<param name="UPDMODE">更新モード -1:削除更新 +1:登録更新</param>
	<param name="IDNNO">対象の伝票NO</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
</member><member name="M:ILL.ERF.BaseLib.SPWMGR.GetTEKZAISU(ILL.ERF.BaseLib.IDTMGR,ILL.ERF.BaseLib.INIMGR,ILL.ERF.BaseLib.USJMGR,System.String,System.String,System.String,System.String@)">
	<summary>
 有効在庫算出
 </summary>
	<param name="Data">DBへの接続オブジェクト</param>
	<param name="INI">INIオブジェクト</param>
	<param name="USJ">ユーザー情報ファイルオブジェクト</param>
	<param name="SOUCD">倉庫コード</param>
	<param name="HINCD">商品コード</param>
	<param name="TAIDT">対象日付</param>
	<param name="Err">エラーメッセージ（戻り値）</param>
	<returns></returns>
	<remarks>有効在庫算出SPが存在しません。使ってはダメです!!!!!!</remarks>
</member><member name="T:ILL.ERF.BaseLib.SPWMGR">
	<summary>
 ストアドプロシージャ実行用クラス
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.DADMGR.M_Control">
	<summary>ドラッグアンドドロップを行うコントロール</summary>
</member><member name="F:ILL.ERF.BaseLib.DADMGR.M_Formats">
	<summary>ドラッグアンドドロップを許可するフォーマット</summary>
</member><member name="P:ILL.ERF.BaseLib.DADMGR.Control">
	<summary>ドラッグアンドドロップを行うコントロール</summary>
	<returns>コントロール</returns>
	<remarks>コンストラクタで確定後変更を許さない</remarks>
</member><member name="M:ILL.ERF.BaseLib.DADMGR.#ctor(System.Windows.Forms.Control,System.String[])">
	<summary>コンストラクタ</summary>
	<param name="L_Control">ドラッグアンドドロップを行うコントロール</param>
	<param name="L_Formats">ドラッグアンドドロップを許可するフォーマット</param>
</member><member name="T:ILL.ERF.BaseLib.DADMGR.EventDragDrop">
	<summary>ドラッグアンドドロップデリゲート</summary>
	<param name="L_Sender">送信オブジェクト</param>
	<param name="L_Object">ドロップされたオブジェクト</param>
</member><member name="E:ILL.ERF.BaseLib.DADMGR.DragDrop">
	<summary>ドラッグアンドドロップイベント</summary>
</member><member name="M:ILL.ERF.BaseLib.DADMGR.Control_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
	<summary>ドラッグアンドドロップイベント</summary>
	<param name="sender">コントロール</param>
	<param name="e">イベント引数</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.DADMGR.OnDragDrop(System.Object)">
	<summary>ドラッグアンドドロップの実行</summary>
	<param name="L_Object">ドロップされたオブジェクト</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.DADMGR.Control_DragEnter(System.Object,System.Windows.Forms.DragEventArgs)">
	<summary>ドラッグエンターイベント</summary>
	<param name="sender">コントロール</param>
	<param name="e">イベント引数</param>
	<remarks>ドラッグアンドドロップで処理するタイプ確認する</remarks>
</member><member name="T:ILL.ERF.BaseLib.DADMGR.GetDropObject">
	<summary>ドロップオブジェクトを作成するデリゲート</summary>
	<param name="L_Object">ドロップするオブジェクト</param>
	<param name="L_Effects">エフェクト</param>
</member><member name="E:ILL.ERF.BaseLib.DADMGR.DropObject">
	<summary>ドロップオブジェクトを作成するイベント</summary>
</member><member name="T:ILL.ERF.BaseLib.DADMGR.MouseEvent">
	<summary>マウスのイベントを表す状態</summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.DADMGR.M_MouseEvent">
	<summary>マウスイベントフラグ</summary>
</member><member name="M:ILL.ERF.BaseLib.DADMGR.Control_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>マウスエンターイベント</summary>
	<param name="sender">コントロール</param>
	<param name="e">イベント引数</param>
	<remarks>
 ここでドラッグアンドドロップの設定もできるが、MouseDoubleClickイベントが発生しなくなるため
 MouseMoveで処理を行う
 </remarks>
</member><member name="M:ILL.ERF.BaseLib.DADMGR.Control_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>マウス移動イベント</summary>
	<param name="sender">コントロール</param>
	<param name="e">イベント引数</param>
	<remarks>
 ドロップイベントを開始する
 </remarks>
</member><member name="M:ILL.ERF.BaseLib.DADMGR.Control_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>マウスアップイベント</summary>
	<param name="sender">コントロール</param>
	<param name="e">イベント引数</param>
</member><member name="M:ILL.ERF.BaseLib.DADMGR.OnDrop">
	<summary>ドロップ開始イベント</summary>
	<remarks>
 コントロールのマウスダウンイベントでドロップイベントを開始する
 </remarks>
</member><member name="T:ILL.ERF.BaseLib.DADMGR">
	<summary>
 ドラッグアンドドロップマネージャ
 </summary>
	<remarks>
 ドラッグアンドドロップを管理します
 </remarks>
</member><member name="T:ILL.ERF.BaseLib.CTLFNC.ExecType">
	<summary>
 実行されたのがClickかKeyDownか
 </summary>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLFNC.CTLFNCEventArgs.Cancel">
	<summary>
 キャンセルフラグ
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLFNC.CTLFNCEventArgs.Type">
	<summary>
 タイプ
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.CTLFNC.CTLFNCEventArgs">
	<summary>
 ファンクションボタンのEventArgs
 </summary>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLFNC.ExecFunction">
	<summary>
 実行するプロシージャ
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLFNC.ExecKey">
	<summary>
 KeyDownで対応するキー
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLFNC.TextButton">
	<summary>
 ボタン上で表示するテキスト
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLFNC.TextLabel">
	<summary>
 ボタンの下に表示するテキスト
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLFNC.ImageButton">
	<summary>
 ボタン上で表示する画像
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLFNC.AutoPosition">
	<summary>
 位置設定を自動で調節するか
 （Trueの時は、Formの上部のファンクションのボタン幅の倍数位置に勝手に移動する）
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLFNC.Clear">
	<summary>ボタンを利用できない状態にし、ImageButton、TextLabel、TextButtonをクリア</summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLFNC.Vanish">
	<summary>ボタンのVisible=False</summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLFNC.OnResize(System.EventArgs)">
	<summary>
 サイズ変更時
 </summary>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLFNC.Index">
	<summary>
 インデックスプロパティ
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLFNC.FunctionButton_Click(System.Object,System.EventArgs)">
	<summary>
 ボタンをクリックした時の処理
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLFNC.FunctionButton_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 親フォーム上でKeyを押されたときの処理
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLFNC.WndProc(System.Windows.Forms.Message@)">
	<summary>
 Windowプロシージャ
 </summary>
	<param name="m"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLFNC.ParentForm_Load(System.Object,System.EventArgs)">
	<summary>
 親フォームがLoadされたときの処理
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLFNC.IconName">
	<summary>
 アイコン名
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLFNC.GetIconBitmap(System.String)">
	<summary>アイコン取得処理</summary>
	<remarks>リソース内のアイコンをビットマップとして取得する</remarks>
</member><member name="T:ILL.ERF.BaseLib.CTLFNC">
	<summary>
 ファンクションボタンコントロール
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.FKYMGR.P_IsRightDoc">
	<summary>右側にドッキングするか否か</summary>
</member><member name="F:ILL.ERF.BaseLib.FKYMGR.P_FunctionKeys">
	<summary>Fキーのリスト</summary>
</member><member name="F:ILL.ERF.BaseLib.FKYMGR.P_HideDesignFunction">
	<summary>デザイン時に非表示にするか否か</summary>
</member><member name="F:ILL.ERF.BaseLib.FKYMGR.P_Visible">
	<summary>Fキーそのものを表示するか否か</summary>
</member><member name="M:ILL.ERF.BaseLib.FKYMGR.#ctor(System.Boolean)">
	<summary>コンストラクタ</summary>
</member><member name="M:ILL.ERF.BaseLib.FKYMGR.Add(ILL.ERF.BaseLib.CTLFNC)">
	<summary>ファンクションキー追加処理</summary>
</member><member name="M:ILL.ERF.BaseLib.FKYMGR.CTLFNC_Move(System.Object,System.EventArgs)">
	<summary>ファンクションキー移動時</summary>
</member><member name="M:ILL.ERF.BaseLib.FKYMGR.CTLFNC_SizeChanged(System.Object,System.EventArgs)">
	<summary>ファンクションキーサイズ変更後</summary>
</member><member name="M:ILL.ERF.BaseLib.FKYMGR.ArrangeFunctionKeys">
	<summary>ファンクションキーアレンジ処理</summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.FKYMGR.HideOverF12">
	<summary>F12キー以降非表示処理</summary>
	<remarks>左上用</remarks>
</member><member name="M:ILL.ERF.BaseLib.FKYMGR.HideNonExecFunction">
	<summary>機能未割当キー非表示処理</summary>
	<remarks>右上用</remarks>
</member><member name="M:ILL.ERF.BaseLib.FKYMGR.FindKey(System.Windows.Forms.Keys)">
	<summary>ファンクションキー検索処理</summary>
</member><member name="M:ILL.ERF.BaseLib.FKYMGR.SetProcedure(System.Windows.Forms.Keys,ILL.ERF.BaseLib.CTLFNC.ExecFunctionDelegate)">
	<summary>プロシージャ設定処理</summary>
</member><member name="P:ILL.ERF.BaseLib.FKYMGR.HideDesignFunction">
	<summary>実行時に非表示になるFキーをデザイン時に非表示にする</summary>
</member><member name="P:ILL.ERF.BaseLib.FKYMGR.Visible">
	<summary>管理下にあるファンクションキー全体の表示非表示制御</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.CheckCountDiff">
	<summary>比較先のデータ件数取得</summary>
	<returns>Boolean</returns>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.GetDataDiff">
	<summary>差分データ取得</summary>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.DiffSettings">
	<summary>差分データ取得前処理</summary>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.AddRowChangeConditions">
	<summary>行背景変更条件追加</summary>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.AddNotRowChangeConditions">
	<summary>行背景無変更条件</summary>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.AddNotChangeColumns">
	<summary>背景無変更列</summary>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.AddRowChangeCondition(System.String,System.String)">
	<summary>行背景変更条件追加</summary>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.AddNotRowChangeCondition(System.String,System.String)">
	<summary>行背景無変更条件</summary>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.AddNotChangeColumn(System.String)">
	<summary>背景無変更列</summary>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.GetRowChangeConditions">
	<summary>行背景変更条件取得</summary>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.GetNotRowChangeConditions">
	<summary>行背景無変更条件取得</summary>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.GetNotChangeColumns">
	<summary>背景無変更取得</summary>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.BuildSqlDiff">
	<summary>比較クエリ生成</summary>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.BuildQuerySelectDiff">
	<summary>差分データ取得クエリ生成(SELECT句)</summary>
	<returns>String</returns>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.BuildQueryFromDiff">
	<summary>差分データ取得クエリ生成(FROM句)</summary>
	<returns>String</returns>
</member><member name="M:ILL.ERF.BaseLib.REFDIF.BuildQueryWhereDiff">
	<summary>差分データ取得クエリ生成(WHERE句)</summary>
	<returns>String</returns>
</member><member name="P:ILL.ERF.BaseLib.REFDIF.DiffState">
	<summary>比較データ</summary>
	<returns>DiffType</returns>
</member><member name="P:ILL.ERF.BaseLib.REFDIF.TestCondition">
	<summary>比較するための条件</summary>
	<returns>String</returns>
	<remarks>別テーブル結合時</remarks>
</member><member name="P:ILL.ERF.BaseLib.REFDIF.TestChangedKeyName">
	<summary>変更したセルのキー列</summary>
	<returns>String</returns>
</member><member name="P:ILL.ERF.BaseLib.REFDIF.TestChangedCells">
	<summary>変更したセルの位置記憶</summary>
</member><member name="F:ILL.ERF.BaseLib.ChangedCell.KeyValue">
	<summary></summary>
</member><member name="F:ILL.ERF.BaseLib.ChangedCell.ColumnValue">
	<summary></summary>
</member><member name="M:ILL.ERF.BaseLib.ChangedCell.#ctor(System.String,System.String)">
	<summary>背景色を変更したセルを記憶する</summary>
	<param name="Key">キーとして記憶しておく値</param>
	<param name="Column">キーとして設定した値のある行の列名</param>
</member><member name="P:ILL.ERF.BaseLib.CTLLST.Servant">
	<summary>自分のサーバント</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLLST.Label">
	<summary>関連付けるLabel</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLLST.OldIndex">
	<summary>OldIndex</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLLST.BackColorReadOnly">
	<summary>読み取り専用の時の背景色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLLST.ForeColorReadOnly">
	<summary>読み取り専用の時の文字色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLLST.BackColorInactive">
	<summary>カーソルが当たって無い場合の背景色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLLST.ForeColorInactive">
	<summary>
 カーソルが当たって無い場合の文字色
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.CTLLST.BackColorNecessary">
	<summary>必須項目の時でかつカーソルが当たった場合の背景色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLLST.ForeColorNecessary">
	<summary>必須項目でかつカーソルが当たった場合の文字</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLLST.BackColorNormal">
	<summary>必須項目で無くかつカーソルが当たった場合の背景色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLLST.ForeColorNormal">
	<summary>必須項目で無くかつカーソルが当たった場合の文字色</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLLST.Necessary">
	<summary>必須項目か</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLLST.OldText">
	<summary>OldText</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLLST.ChangeForeColor(System.Boolean)">
	<summary>
 文字色変更
 </summary>
	<param name="Active"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLLST.ChangeBackColor(System.Boolean)">
	<summary>
 背景色変更
 </summary>
	<param name="Active"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLLST.WndProc(System.Windows.Forms.Message@)">
	<summary> WindowMessage処理 </summary>
</member><member name="P:ILL.ERF.BaseLib.EVTMGR.CurrentControl">
	<summary>
 現在カーソルのあるコントロール
 </summary>
</member><member name="P:ILL.ERF.BaseLib.EVTMGR.IsBeginChange">
	<summary>
 コントロールの初期化処理中
 </summary>
</member><member name="F:ILL.ERF.BaseLib.EVTMGR.P_ExecChangeCommittedRoutine">
	<summary>ChangeCommittedが一時停止されているか</summary>
</member><member name="P:ILL.ERF.BaseLib.EVTMGR.IsSuspendChangeCommitted">
	<summary>ChangeCommittedが一時停止されているか</summary>
	<returns>True:一時停止中/False:実行中</returns>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.SuspendChangeCommittedRoutine">
	<summary>特定のChangeCommittedRoutineを一時的に実行しないようにする</summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.ResumeChangeCommittedRoutine">
	<summary>一時止めていたChangeCommitedRoutineを再び実行するように変更する</summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.AddMember(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Boolean,System.Boolean)">
	<summary>
 カーソル飛び項目の追加（コントロールフルバージョン）
 </summary>
	<param name="obj">対象のコントロール</param>
	<param name="Parent">親項目</param>
	<param name="IsFocus_Next">順方向の移動の時にカーソルを止めるか</param>
	<param name="IsFocus_Previous">逆方向の移動の時にカーソルを止めるか</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.AddMember(ILL.ERF.BaseLib.CTLDTC,System.Windows.Forms.Control,System.Boolean,System.Boolean)">
	<summary>
 カーソル飛び項目の追加（日付コントロールフルバージョン）
 </summary>
	<param name="obj">対象の日付コントロール</param>
	<param name="Parent">親項目</param>
	<param name="IsFocus_Next">順方向の移動の時にカーソルを止めるか</param>
	<param name="IsFocus_Previous">逆方向の移動の時にカーソルを止めるか</param>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.AddMember(ILL.ERF.BaseLib.CTLDTC,System.Windows.Forms.Control)">
	<summary>
 カーソル飛び項目の追加（日付コントロール親あり）
 </summary>
	<param name="obj">対象の日付コントロール</param>
	<param name="Parent">親項目</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.AddMember(ILL.ERF.BaseLib.CTLDTC)">
	<summary>
 カーソル飛び項目の追加（日付コントロール親なし）
 </summary>
	<param name="obj">対象の日付コントロール</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.AddMember(System.Windows.Forms.Control,System.Windows.Forms.Control)">
	<summary>
 カーソル飛び項目の追加（親つき）
 </summary>
	<param name="obj">対象のコントロール</param>
	<param name="Parent">親項目</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.AddMember(System.Windows.Forms.Control)">
	<summary>
 カーソル飛び項目の追加（親なし）
 </summary>
	<param name="obj">対象のコントロール</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.RemoveMember(System.Windows.Forms.Control)">
	<summary>
 カーソルの飛び項目の登録解除
 </summary>
	<param name="obj">対象のコントロール</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.ClearText(System.Windows.Forms.Control)">
	<summary>
 カーソル項目の一括クリア処理
 指定したコントロールの子項目のText, OldTextがクリアされる
 </summary>
	<param name="obj">対象のコントロール
 Nothingを指定した場合は全てのコントロール</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.InitializeText(System.Windows.Forms.Control)">
	<summary>
 カーソル項目の一括初期化処理
 指定したコントロールの子項目のText, OldTextがDefaultに初期化される
 </summary>
	<param name="obj">対象のコントロール
 Nothingを指定した場合は全てのコントロール</param>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.InitializeText(System.Windows.Forms.Control,System.Windows.Forms.Control)">
	<summary>
 カーソル項目の一括初期化処理
 指定したコントロールの子項目のText, OldTextがDefaultに初期化される
 また、初期化をしたくない項目を設定可能です。
 </summary>
	<param name="obj">対象のコントロール
 Nothingを指定した場合は全てのコントロール</param>
	<param name="NoInitItem">初期化をしたくない項目</param>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.GetHandledMember(System.Windows.Forms.Control)">
	<summary>
 面倒見られるメンバーの取得
 </summary>
	<param name="obj">対象のコントロール</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.GetHandledMember(System.Int32)">
	<summary>
 面倒見られるメンバーの取得 by Index
 </summary>
	<param name="Index">対象のIndex</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.GetHandledMemberIndex(System.Windows.Forms.Control)">
	<summary>
 メンバーのインデックスを取得
 </summary>
	<param name="obj">対象のコントロール</param>
	<returns>メンバーのIndex、見つからないときは -1、Nothingに対しては -2</returns>
	<remarks>Removeされることがあるため、HandledMembersのIndexとは異なる</remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.IsBelonged(System.Windows.Forms.Control,System.Windows.Forms.Control)">
	<summary>
 objがParentに所属しているか
 </summary>
	<param name="obj">対象のコントロール</param>
	<param name="Parent">親コントロール</param>
	<returns>所属していればTrue、それ以外はFalse</returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.IsBelonged(ILL.ERF.BaseLib.HandledMember,ILL.ERF.BaseLib.HandledMember)">
	<summary>
 objがParentに所属しているか
 </summary>
	<param name="obj">対象のHandledMember</param>
	<param name="Parent">親HandledMember</param>
	<returns>所属していればTrue、それ以外はFalse</returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.IsParent(System.Windows.Forms.Control,System.Windows.Forms.Control)">
	<summary>
 Parentがobjの親かどうか
 </summary>
	<param name="obj">対象のコントロール</param>
	<param name="Parent">親コントロール</param>
	<returns>親ならTrue、それ以外はFalse</returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.IsParent(ILL.ERF.BaseLib.HandledMember,ILL.ERF.BaseLib.HandledMember)">
	<summary>
 Parentがobjの親かどうか
 </summary>
	<param name="obj">対象のHandledMember</param>
	<param name="Parent">親HandledMember</param>
	<returns>親ならTrue、それ以外はFalse</returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.IsElder(System.Windows.Forms.Control,System.Windows.Forms.Control)">
	<summary>
 objがElderより先に登録されているか
 </summary>
	<param name="obj">対象のコントロール</param>
	<param name="Elder">対象のコントロール</param>
	<returns>先に登録されていたらTrue、以外はFalse</returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 登録された項目上でKeyが押された場合の処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_BeforeEnter(System.Object,ILL.ERF.BaseLib.MOVMGR.MOVMGREventArgs)">
	<summary>
 登録された項目にカーソルが当たる前の処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_BeforeLeave(System.Object,ILL.ERF.BaseLib.MOVMGR.MOVMGREventArgs)">
	<summary>
 登録された項目からカーソルが外れる前の処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_Click(System.Object,System.EventArgs)">
	<summary>
 登録された項目がクリックされたときの処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_DoubleClick(System.Object,System.EventArgs)">
	<summary>
 登録された項目がダブルクリックされたときの処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 登録された項目上でマウスが押されたときの処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 登録された項目上でマウスが離されたときの処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_MouseHover(System.Object,System.EventArgs)">
	<summary>
 登録された項目上にマウスがあるときの処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 登録された項目上でマウスが移動されたときの処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 登録された項目がマウスでクリックされたときの処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 登録された項目がマウスでダブルクリックされたときの処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
	<summary>
 登録された項目でキーが押されたときの処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 登録された項目でキーが押されたときの処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_TextChanged(System.Object,System.EventArgs)">
	<summary>
 登録された項目が変更されたときの処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_MouseEnter(System.Object,System.EventArgs)">
	<summary>
 登録された項目にマウスポインタが当たったときの処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_MouseLeave(System.Object,System.EventArgs)">
	<summary>
 登録された項目からマウスポインタが外れたときの処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_Enter(System.Object,System.EventArgs)">
	<summary>
 登録された項目にカーソルが当たった時の処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_ChangeCommitted(System.Object,ILL.ERF.BaseLib.MOVMGR.MOVMGREventArgs)">
	<summary>
 入力が確定orソースコード上からTextプロパティが変更されたときの処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_Leave(System.Object,System.EventArgs)">
	<summary>
 登録された項目からカーソルが外れた時の処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.Item_LostFocus(System.Object,System.EventArgs)">
	<summary>
 登録された項目からカーソルが外れた後の処理
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.BeginChange">
	<summary>
 ChangeCommittedイベントの発生の順番を制御します。
 CommitChangeメソッド呼出までChangeCommittedイベントを発生させないようにします。
 必ずCommitChangeメソッドをこのメソッドの後の適切なタイミングで呼び出して下さい。
 このメソッドは必要な初期化処理を行います。    
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.CommitChange">
	<summary>
 ChangeCommittedイベントの発生の順番を制御します。
 CommitChangeメソッド呼出までChangeCommittedイベントを発生させないようにします。
 必ずCommitBeginメソッドをこのメソッドの前の適切なタイミングで呼び出して下さい。
 このメソッドは実際にChangeCommittedイベントを発生させます。
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.RollBackChange">
	<summary>
 ChangeCommittedイベントの発生の順番を制御します。
 BeginChangeメソッド以降に起こったChangeCommittedイベントを全て無効化します。
 必ずCommitBeginメソッドをこのメソッドの前の適切なタイミングで呼び出して下さい。    
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.EVTMGR_ChangeCommitted(System.Object,ILL.ERF.BaseLib.MOVMGR.MOVMGREventArgs)">
	<summary>
 明細項目ならば、自動的にScreen_To_Shelfを行うようにします。
 </summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.RaiseDisplayError(System.Object,System.EventArgs,System.String)">
	<summary>エラーを表示</summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.RaiseDisplayMessage(System.Object,System.EventArgs)">
	<summary>メッセージを表示</summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.SetSender(System.Object)">
	<summary>イベントの送信元を設定</summary>
</member><member name="M:ILL.ERF.BaseLib.EVTMGR.SetCalledByKeyDown">
	<summary>キーダウンを設定</summary>
</member><member name="T:ILL.ERF.BaseLib.EVTMGR">
	<summary>イベント制御クラス</summary>
</member><member name="F:ILL.ERF.BaseLib.HandledMember.Name">
	<summary>オブジェクト名</summary>
</member><member name="F:ILL.ERF.BaseLib.HandledMember.Index">
	<summary>オブジェクトのインデックス</summary>
</member><member name="F:ILL.ERF.BaseLib.HandledMember.Item">
	<summary>登録されたコントロール</summary>
</member><member name="F:ILL.ERF.BaseLib.HandledMember.ItemParent">
	<summary>親コントロール</summary>
</member><member name="F:ILL.ERF.BaseLib.HandledMember.ItemTarget_Next">
	<summary>順方向時のジャンプ先</summary>
</member><member name="F:ILL.ERF.BaseLib.HandledMember.ItemTarget_Previous">
	<summary>逆方法時のジャンプ先</summary>
</member><member name="F:ILL.ERF.BaseLib.HandledMember.IsFocus_Next">
	<summary>順方向時カーソルを当てるか</summary>
</member><member name="F:ILL.ERF.BaseLib.HandledMember.IsFocus_Previous">
	<summary>逆方向時カーソルを当てるか</summary>
</member><member name="F:ILL.ERF.BaseLib.HandledMember.InChanging">
	<summary>
 BeginChange/CommitChangeの最中かどうか
 BeginChange/CommitChangeメソッドで使用
 </summary>
</member><member name="F:ILL.ERF.BaseLib.HandledMember.Changing">
	<summary>
 Textの値が変化したかどうか
 BeginChange/CommitChangeメソッドで使用
 </summary>
</member><member name="P:ILL.ERF.BaseLib.HandledMember.ItemServant">
	<summary>ItemのServantを返す</summary>
	<remarks>使うときは必ずNothingかどうかをチェックするように</remarks>
</member><member name="T:ILL.ERF.BaseLib.HandledMember">
	<summary>カーソルの飛び項目クラス</summary>
</member><member name="T:ILL.ERF.BaseLib.IERFControl">
	<summary>標準ERFコントロールインターフェイス</summary>
</member><member name="T:ILL.ERF.BaseLib.IERFEditControl">
	<summary>標準ERF編集コントロールインターフェイス</summary>
</member><member name="T:ILL.ERF.BaseLib.CTLBTN">
	<summary>
 カスタムボタンコントロール
 </summary>
	<remarks></remarks>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_INI">
	<summary>Ini情報</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_USJ">
	<summary>ユーザー情報ファイル、システム設定ファイル情報</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_ITM">
	<summary>項目名ファイル情報</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_ColumnSettings">
	<summary>列の設定</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_DataTable">
	<summary>表示中のDataTable</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_Dataview">
	<summary>表示中のDataView</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_Mode">
	<summary>CurrentMode</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_ReturnColumnName">
	<summary>戻り値取得列名の設定</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_SortInfo">
	<summary>グリッド用のSortInfo</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_GridInfo">
	<summary>ユーザー別グリッド情報のDataTable</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_HorizontalScrollBarValue">
	<summary>スクロールバーの現在位置</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_HitMouseDown">
	<summary>マウスダウン時の位置</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_DuringShowData">
	<summary>データ取得中フラグ</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_LoadSetting">
	<summary>XML読込みフラグ</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_ResetColumn">
	<summary>列情報初期化フラグ</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_FrozenPosition">
	<summary>固定列の位置</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_FrozenColumnNames">
	<summary>固定列、列幅の列名</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_LostFocusRowSelected">
	<summary>ロストフォーカス時の行選択状態</summary>
</member><member name="F:ILL.ERF.BaseLib.CTLRFB.P_Menu">
	<summary>列表示固定コンテキストメニュー</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.#ctor">
	<summary>コンストラクタ　プロパティの初期値のみ設定します。</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.ShowData(System.Object,System.String@)">
	<summary>データ表示処理</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.SetDisplayIndex">
	<summary>グリッド情報から表示位置の設定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.SetDisplayIndexGridInfo">
	<summary>表示位置からのグリッド情報(列順)設定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.SetSortMark">
	<summary>SortInfoの情報に基づき、ソート記号の設定を行います。</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.SetFormat(System.Xml.XmlNode,System.Windows.Forms.DataGridViewCellStyle@,System.Object@)">
	<summary>表示文字列の書式設定のメイン処理</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.SetFormatString(System.Object,System.String)">
	<summary>書式設定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.SetDigitString(System.Int32)">
	<summary>小数点桁数設定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CTLRFB_CellFormatting(System.Object,System.Windows.Forms.DataGridViewCellFormattingEventArgs)">
	<summary>
 表示文字列の書式設定を行います。
 CellFormattingイベントは
 セルの内容を表示に合わせて変換する必要がある場合に発生します。 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CTLRFB_Resize(System.Object,System.EventArgs)">
	<summary>列幅の状態を記憶させます。</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CTLRFB_ColumnWidthChanged(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
	<summary>列幅の状態を記憶させます。</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CTLRFB_ColumnDisplayIndexChanged(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
	<summary>ソート順の変更を記憶させます。</summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CTLRFB_Click(System.Object,System.EventArgs)">
	<summary>ソート処理を行います。</summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CTLRFB_ColumnAdded(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
	<summary>列が新しく追加された時の処理を行います。</summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CTLRFB_Leave(System.Object,System.EventArgs)">
	<summary>フォーカスを失った時は選択状態を解除するようにします。</summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CTLRFB_Enter(System.Object,System.EventArgs)">
	<summary>フォーカスが当たった時は選択状態にします。</summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CTLRFB_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>Enterした場所の値を返す</summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CTLRFB_Disposed(System.Object,System.EventArgs)">
	<summary>グリッド破棄時にリソースも破棄</summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CTLRFB_ColumnHeaderMouseClick(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)">
	<summary>ヘッダー部分をクリック</summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CTLRFB_DataError(System.Object,System.Windows.Forms.DataGridViewDataErrorEventArgs)">
	<summary>エラー発生時は何もしない</summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CTLRFB_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>MouseDownイベント</summary>
	<param name="sender"></param>
	<param name="e"></param>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
	<summary>改頁時は必要なイベントを発生させてからKeyDownイベントを発生させます。</summary>
	<param name="e"></param>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.SetFrozenColumns(System.Object,System.EventArgs)">
	<summary>クリックされた列までを固定にする</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CancellationFrozenColumn(System.Object,System.EventArgs)">
	<summary>列固定解除</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.SetColumnSettings">
	<summary>
 Columnタグ内の設定に従い、グリッドの各列に書式設定を行います。
 </summary>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.SetColumn(System.Xml.XmlNode)">
	<summary>
 グリッド１列分の書式設定を行います。
 </summary>
	<param name="node"></param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.GetColumnType(System.Int32)">
	<summary>
 列タイプ取得処理
 </summary>
	<param name="index"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CreateInstance(System.String)">
	<summary>
 指定したクラス名のインスタンスを生成します。
 </summary>
	<param name="strClassName"></param>
	<returns>Object</returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.SetColumnProperties(System.Windows.Forms.DataGridViewColumn,System.Type,System.Xml.XmlNode)">
	<summary>
 各列共通の書式設定を行います。
 </summary>
	<param name="objColumn"></param>
	<param name="typeColumn"></param>
	<param name="nodColumn"></param>
	<returns>Object</returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.SetProperty(System.Xml.XmlNode,System.Object,System.Type)">
	<summary>プロパティ設定を行います。</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.GetCharacterWidth(System.Int32)">
	<summary>列幅の設定</summary>
	<param name="value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.GetColumnNode(System.String)">
	<summary>指定したColumnノードを取得します。</summary>
	<param name="field"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.GetInnerText(System.Xml.XmlNode,System.String)">
	<summary>Value値取得</summary>
	<param name="node"></param>
	<param name="NodeName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.GetAttribute(System.Xml.XmlNode,System.String,System.String)">
	<summary>ノード値取得</summary>
	<param name="node"></param>
	<param name="NodeName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.ResetFrozenColumns">
	<summary>初期固定列再設定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.ClearFrozenColumns">
	<summary>固定列全解除</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.SetFocus">
	<summary>フォーカスを当てる</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.PreferedColumnWidth">
	<summary>最適幅設定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.GetPrefferedColumnWidth(System.String)">
	<summary>指定列最適幅取得</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.ResetColumnsWidth">
	<summary>列幅初期設定</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CheckColumnWidth(System.Windows.Forms.DataGridViewColumn)">
	<summary>列の幅を確認(最大幅を制限)</summary>
</member><member name="M:ILL.ERF.BaseLib.CTLRFB.CheckExistColumn(System.String)">
	<summary>列の存在確認</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLRFB.ColumnSettings">
	<summary>XML</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLRFB.LoadSetting">
	<summary>XMLファイル読み込みフラグ</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLRFB.CurrentMode">
	<summary>Mode指定</summary>
</member><member name="P:ILL.ERF.BaseLib.CTLRFB.ReturnColumnName">
	<summary>戻り値の列名</summary>
</member><member name="M:ILL.ERF.BaseLib.ERFDate.Now8">
	<summary>現在日付をyyyyMMdd型の文字列で取得する</summary>
	<returns>yyyyMMdd型の文字列</returns>
</member><member name="M:ILL.ERF.BaseLib.ERFDate.Now10">
	<summary>現在日付をyyyy/MM/dd型の文字列で取得する</summary>
	<returns>yyyy/MM/dd型の文字列</returns>
</member><member name="M:ILL.ERF.BaseLib.IFDHDR.GetData">
	<summary>
 データ取得
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.IFDHDR.GetDataCount">
	<summary>
 データ取得（カウント行算出用）
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.IFDHDR.CreateQuery(System.Boolean,System.Boolean)">
	<summary>
 クエリ作成
 </summary>
	<param name="Forward">True:昇順 / False:降順</param>
	<param name="IncludeBoundary">Where句でイコールのデータを含むか</param>
	<remarks></remarks>
</member><member name="M:ILL.ERF.BaseLib.IFDHDR.CreateQueryCount(System.Boolean,System.Boolean)">
	<summary>
 クエリ作成（カレント行算出用）
 </summary>
	<param name="Forward">True:昇順 / False:降順</param>
	<param name="IncludeBoundary">Where句でイコールのデータを含むか</param>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.IFDHDR.INI">
	<summary>
 INI情報
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.IFDHDR.Data">
	<summary>
 DB接続情報
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.IFDHDR.Sort">
	<summary>
 ソート情報
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.IFDHDR.DefaultSort">
	<summary>
 初期ソート
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.IFDHDR.InitialValues">
	<summary>
 初期値
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.IFDHDR.RowCount">
	<summary>
 取得する行数
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.IFDHDR.KeyColumns">
	<summary>
 キー列
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.IFDHDR.ExColumns">
	<summary>
 キー以外の列
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.IFDHDR.QueryFROM">
	<summary>
 クエリのFROM句
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.IFDHDR.QueryWHERE">
	<summary>
 クエリのWHERE句
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.IFDHDR.Query">
	<summary>
 データ取得に使用するクエリ
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:ILL.ERF.BaseLib.IFDHDR.Distinct">
	<summary>
 重複する値をまとめるか
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="E:ILL.ERF.BaseLib.IFDHDR.Focus">
	<summary>
 フォーカスイベント
 </summary>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.Int32@)">
	<summary>SendMessage</summary>
</member><member name="T:ILL.ERF.BaseLib.MOVMGR.MoveFlagType">
	<summary>順方向か逆方向かのフラグ</summary>
</member><member name="F:ILL.ERF.BaseLib.MOVMGR.MoveType.Normal">
	<summary>通常のカーソル移動</summary>
</member><member name="F:ILL.ERF.BaseLib.MOVMGR.MoveType.Programmatic">
	<summary>Step～系メソッド、CheckTextメソッド</summary>
</member><member name="T:ILL.ERF.BaseLib.MOVMGR.MoveType">
	<summary>Move系イベントがどこから呼ばれたか</summary>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.SetMoveEx(System.String,ILL.ERF.BaseLib.IDTMGR,System.Windows.Forms.Panel,ILL.ERF.BaseLib.CTLBDY)">
	<summary>計上設定に従ってカーソル設定を行う</summary>
	<param name="AsmName">対象のアセンブリ名</param>
	<param name="Data">IDTMGR</param>
	<param name="Header">計上のヘッダコントロール（パネル）</param>
	<param name="Body">計上のボディコントロール</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.GetCursolControlFile(System.String,ILL.ERF.BaseLib.IDTMGR)">
	<summary>
 カーソル制御ファイル取得
 CursolControlFileプロパティに値をセットします。
 </summary>
	<param name="AsmName">アセンブリ名</param>
	<param name="Data">IDTMGR</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.SetMoveExFlag(System.String,ILL.ERF.BaseLib.HandledMember)">
	<summary>
 カーソル制御に従ってHandledMemberのプロパティを制御する
 </summary>
	<param name="FocusFlag">カーソル制御ファイル：停止回避区分</param>
	<param name="TargetMember">対象のHandledMember</param>
</member><member name="P:ILL.ERF.BaseLib.MOVMGR.MOVMGREventArgs.Cancel">
	<summary>キャンセルフラグ</summary>
</member><member name="P:ILL.ERF.BaseLib.MOVMGR.MOVMGREventArgs.Type">
	<summary>Move系イベントがどこから呼ばれたか</summary>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.MOVMGREventArgs.#ctor">
	<summary>コンストラクタ</summary>
</member><member name="P:ILL.ERF.BaseLib.MOVMGR.MOVMGREventArgs.ExecRoutineOnRaiseEvent">
	<summary>
 RaiseEvent ChangeCommittedの際、
 ChangeCommitted時に動作するRoutinesを動作させるかどうか
 初期値はTrue
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:ILL.ERF.BaseLib.MOVMGR.MOVMGREventArgs">
	<summary>
 カーソル飛び系イベントの引数
 </summary>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.SetTarget_Next(System.Windows.Forms.Control,System.Windows.Forms.Control)">
	<summary>ジャンプ設定（順方向）</summary>
	<param name="obj">対象の項目</param>
	<param name="target_next">飛び先の項目</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.SetTarget_Previous(System.Windows.Forms.Control,System.Windows.Forms.Control)">
	<summary>ジャンプ設定（逆方向）</summary>
	<param name="obj">対象の項目</param>
	<param name="Target_Previous">飛び先の項目</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.SetTarget(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Boolean)">
	<summary>ジャンプ設定の中身</summary>
	<param name="obj">対象の項目</param>
	<param name="Target">飛び先の項目</param>
	<param name="IsNext">NextならTrue、PreviousならFalse</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.StepIn(System.Windows.Forms.Control,ILL.ERF.BaseLib.MOVMGR.MoveType)">
	<summary>次の項目に移動</summary>
	<param name="obj">基準の項目</param>
	<param name="Type">キーボードによる移動か、プログラムで命令された移動か</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.StepOver(System.Windows.Forms.Control)">
	<summary>同じ階層内で次の項目に移動</summary>
	<param name="obj">基準の項目</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.StepOut(System.Windows.Forms.Control)">
	<summary>同じ階層内から抜け出る</summary>
	<param name="obj">対象の項目</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.StepChildEnd(System.Windows.Forms.Control)">
	<summary>子項目の中の最終項目に移動する</summary>
	<param name="obj">基準の項目</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.StepHome(System.Boolean)">
	<summary>Homeキーで先頭項目に移動する</summary>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.BasePosition">
	<summary>先頭項目に移動する</summary>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.BasePosition(System.Windows.Forms.Form)">
	<summary>先頭項目に移送する（フォーム起動時用）</summary>
	<param name="frm">起動中のフォーム</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.StepEnd">
	<summary>最終項目に移動する</summary>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.StepInRev(System.Windows.Forms.Control,ILL.ERF.BaseLib.MOVMGR.MoveType)">
	<summary>前の項目に移動する</summary>
	<param name="obj">基準の項目</param>
	<param name="Type">キーボードによる移動か、プログラムで命令された移動か</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.StepParent(System.Windows.Forms.Control)">
	<summary>親項目に移動する</summary>
	<param name="obj">基準の項目</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.StepPageDown(System.Windows.Forms.Control)">
	<summary>PageDown時、下の行の同項目に移動する</summary>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.StepPageUp(System.Windows.Forms.Control)">
	<summary>PageUp時、上の行の同項目に移動する</summary>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.SetFocus(System.Int32,System.Boolean,System.Boolean,ILL.ERF.BaseLib.MOVMGR.MoveType)">
	<summary>カーソルを当てる</summary>
	<param name="ItemIndex">基準の番号</param>
	<param name="EventFlag">MovingNextなどのイベントを起こすか</param>
	<param name="Forward">True:順方向　False:逆方向</param>
	<param name="Type">キーボードによる移動か、プログラムで命令された移動か</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.SetFocusToHome(System.Int32)">
	<summary>ホームポジションにカーソルを当てる</summary>
	<param name="ItemIndex">基準の番号</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.SetFocus(System.Windows.Forms.Control)">
	<summary>カーソルを当てる</summary>
	<param name="obj">対象のコントロール</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.GetTopIndex">
	<summary>先頭項目の番号を取得</summary>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.GetNextIndex(System.Int32)">
	<summary>次の項目の番号を取得</summary>
	<param name="ThisIndex">基準の番号</param>
	<returns>次の番号、取得できないときは-1</returns>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.GetPreviousIndex(System.Int32)">
	<summary>前の項目の番号を取得</summary>
	<param name="ThisIndex">基準の番号</param>
	<returns>前の番号、取得できないときは-1</returns>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.GetRootItem(ILL.ERF.BaseLib.HandledMember)">
	<summary>ルート項目の取得</summary>
	<param name="obj">基準の項目</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.IsSetFocus(System.Int32)">
	<summary>カーソルを当てる事ができるか</summary>
	<param name="ItemIndex">項目の番号</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.IsSetFocus_Next(System.Int32)">
	<summary>カーソルを当てる事ができるか（順方向移動時）</summary>
	<param name="ItemIndex">項目の番号</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.IsSetFocus_Previous(System.Int32)">
	<summary>カーソルを当てる事ができるか（逆方向移動時）</summary>
	<param name="ItemIndex">項目の番号</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.SetSel(System.Object)">
	<summary>フォーカス時にテキストボックスをセット</summary>
	<param name="obj">対象のコントロール</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.RaiseEnter(System.Int32)">
	<summary>
 Enterイベント発生Sub
 移動元と移動先の登録上の相対関係から、
 起こすEnterイベントを決定する
 </summary>
	<param name="ItemIndex">項目の番号</param>
</member><member name="M:ILL.ERF.BaseLib.MOVMGR.RaiseMove(System.Int32,ILL.ERF.BaseLib.MOVMGR.MoveFlagType,ILL.ERF.BaseLib.MOVMGR.MOVMGREventArgs)">
	<summary>
 MoveNextイベント発生Sub
 移動元と移動先の登録上の相対関係から、
 起こすMoveNextイベントを決定する
 </summary>
	<param name="ItemIndex">項目の番号</param>
	<param name="EventFlag">順方向か逆方向か</param>
	<param name="e">EventArgue</param>
</member><member name="T:ILL.ERF.BaseLib.MOVMGR">
	<summary>カーソルの飛び制御クラス</summary>
</member>
</members>
</doc>